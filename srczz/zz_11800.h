#ifdef ZZ_INCLUDE_CODE
ZZ_11800:
	SP -= 224;
	EMU_Write32(SP + 200,S0); //+ 0xC8
	S0 = A0;
	EMU_Write32(SP + 220,RA); //+ 0xDC
	EMU_Write32(SP + 216,S4); //+ 0xD8
	EMU_Write32(SP + 212,S3); //+ 0xD4
	EMU_Write32(SP + 208,S2); //+ 0xD0
	RA = 0x80011824; //ZZ_11800_24
	EMU_Write32(SP + 204,S1); //+ 0xCC
	ZZ_CLOCKCYCLES(9,0x8002F2F8);
	goto ZZ_2F2F8;
ZZ_11800_24:
	A0 = 0x80060000;
	A0 += 30752;
	RA = 0x80011834; //ZZ_11800_34
	A1 = S0;
	ZZ_CLOCKCYCLES(4,0x80014D6C);
	goto ZZ_14D6C;
ZZ_11800_34:
	RA = 0x8001183C; //ZZ_11800_3C
	S3 = -1;
	ZZ_CLOCKCYCLES(2,0x8002F15C);
	goto ZZ_2F15C;
ZZ_11800_3C:
	S2 = 0x80070000;
	S2 -= 12372;
	S4 = 0x2;
	ZZ_CLOCKCYCLES(3,0x80011848);
ZZ_11800_48:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 25636); //+ 0xFFFF9BDC
	V0 &= 0x800;
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(6,0x80011884);
		goto ZZ_11800_84;
	}
	V0 = 0x1;
	V1 = EMU_ReadU32(GP + 4); //+ 0x4
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(10,0x8001199C);
		goto ZZ_11800_19C;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12744); //+ 0xFFFFCE38
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x8001199C);
		goto ZZ_11800_19C;
	}
	ZZ_CLOCKCYCLES(15,0x80011884);
ZZ_11800_84:
	V0 = EMU_ReadU32(S2);
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001199C);
		goto ZZ_11800_19C;
	}
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001199C);
		goto ZZ_11800_19C;
	}
	V0 = EMU_ReadU32(S2 - 124); //+ 0xFFFFFF84
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001199C);
		goto ZZ_11800_19C;
	}
	V0 = EMU_ReadU32(GP + 4); //+ 0x4
	V0 = V0 < 1;
	EMU_Write32(GP + 4,V0); //+ 0x4
	if (!V0)
	{
		ZZ_CLOCKCYCLES(18,0x8001193C);
		goto ZZ_11800_13C;
	}
	V0 = EMU_ReadU32(S2 - 372); //+ 0xFFFFFE8C
	if (V0)
	{
		A0 = S2 - 452;
		ZZ_CLOCKCYCLES(22,0x800119A0);
		goto ZZ_11800_1A0;
	}
	A0 = S2 - 452;
	A1 = 0x4;
	A2 = 0x4;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x800118F4; //ZZ_11800_F4
	EMU_Write32(SP + 20,R0); //+ 0x14
	ZZ_CLOCKCYCLES(28,0x80019928);
	goto ZZ_19928;
ZZ_11800_F4:
	EMU_Write32(S2 - 372,V0); //+ 0xFFFFFE8C
	V0 = (int32_t)V0 < -254;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80011910);
		goto ZZ_11800_110;
	}
	EMU_Write32(GP + 4,R0); //+ 0x4
	EMU_Write32(S2 - 372,R0); //+ 0xFFFFFE8C
	ZZ_CLOCKCYCLES(7,0x8001199C);
	goto ZZ_11800_19C;
ZZ_11800_110:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14060); //+ 0x36EC
	V1 = 0x80040000;
	V1 = EMU_ReadU32(V1 - 16068); //+ 0xFFFFC13C
	A0 = EMU_ReadU32(V0 + 12); //+ 0xC
	V0 = 0x1;
	EMU_Write32(GP + 16,V0); //+ 0x10
	EMU_Write32(GP + 328,V1); //+ 0x148
	EMU_Write32(GP + 332,A0); //+ 0x14C
	ZZ_CLOCKCYCLES(11,0x800119A0);
	goto ZZ_11800_1A0;
ZZ_11800_13C:
	V0 = EMU_ReadU32(S2 - 372); //+ 0xFFFFFE8C
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(4,0x80011978);
		goto ZZ_11800_178;
	}
	A0 = R0;
	A1 = EMU_ReadU32(S2 - 372); //+ 0xFFFFFE8C
	A2 = 0xC00;
	A3 = 0x1;
	V0 = SP + 192;
	EMU_Write32(SP + 192,R0); //+ 0xC0
	RA = 0x80011968; //ZZ_11800_168
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(11,0x8001CD48);
	goto ZZ_1CD48;
ZZ_11800_168:
	V0 = 0x1;
	EMU_Write32(GP + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x800119A0);
	goto ZZ_11800_1A0;
ZZ_11800_178:
	V0 = EMU_ReadU32(GP + 328); //+ 0x148
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14060); //+ 0x36EC
	V1 = EMU_ReadU32(GP + 332); //+ 0x14C
	EMU_Write32(GP + 16,S3); //+ 0x10
	AT = 0x80040000;
	EMU_Write32(AT - 16068,V0); //+ 0xFFFFC13C
	EMU_Write32(A0 + 12,V1); //+ 0xC
	ZZ_CLOCKCYCLES(9,0x800119A0);
	goto ZZ_11800_1A0;
ZZ_11800_19C:
	EMU_Write32(GP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(1,0x800119A0);
ZZ_11800_1A0:
	RA = 0x800119A8; //ZZ_11800_1A8
	ZZ_CLOCKCYCLES(2,0x80011E80);
	goto ZZ_11E80;
ZZ_11800_1A8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	if (!V0)
	{
		V0 = 0x63960000;
		ZZ_CLOCKCYCLES(5,0x800119E0);
		goto ZZ_11800_1E0;
	}
	V0 = 0x63960000;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2528); //+ 0xFFFFF620
	V0 |= 0x347F;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(10,0x800119E0);
		goto ZZ_11800_1E0;
	}
	A0 = 0x80060000;
	A0 -= 2528;
	RA = 0x800119E0; //ZZ_11800_1E0
	ZZ_CLOCKCYCLES(14,0x800300D8);
	goto ZZ_300D8;
ZZ_11800_1E0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2424); //+ 0xFFFFF688
	if (V0 != S3)
	{
		ZZ_CLOCKCYCLES(5,0x80011A6C);
		goto ZZ_11800_26C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30772); //+ 0x7834
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	if (V0 == S4)
	{
		V0 = 0x200;
		ZZ_CLOCKCYCLES(12,0x80011A58);
		goto ZZ_11800_258;
	}
	V0 = 0x200;
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12724); //+ 0xFFFFCE4C
	if (V1 == V0)
	{
		V0 = 0x300;
		ZZ_CLOCKCYCLES(17,0x80011A34);
		goto ZZ_11800_234;
	}
	V0 = 0x300;
	if (V1 == V0)
	{
		V0 = 0x400;
		ZZ_CLOCKCYCLES(19,0x80011A34);
		goto ZZ_11800_234;
	}
	V0 = 0x400;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(21,0x80011A58);
		goto ZZ_11800_258;
	}
	ZZ_CLOCKCYCLES(21,0x80011A34);
ZZ_11800_234:
	A0 = 0x80060000;
	A0 -= 3032;
	RA = 0x80011A44; //ZZ_11800_244
	ZZ_CLOCKCYCLES(4,0x800494DC);
	goto ZZ_494DC;
ZZ_11800_244:
	V0 = 0x3B;
	AT = 0x80060000;
	EMU_Write32(AT - 2424,V0); //+ 0xFFFFF688
	AT = 0x80070000;
	EMU_Write32(AT - 12268,R0); //+ 0xFFFFD014
	ZZ_CLOCKCYCLES(5,0x80011A58);
ZZ_11800_258:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2424); //+ 0xFFFFF688
	if (V0 == S3)
	{
		ZZ_CLOCKCYCLES(5,0x80011B48);
		goto ZZ_11800_348;
	}
	ZZ_CLOCKCYCLES(5,0x80011A6C);
ZZ_11800_26C:
	S1 = 0x80060000;
	S1 = EMU_ReadU32(S1 - 2424); //+ 0xFFFFF688
	A0 = R0;
	A1 = 0x2900;
	A2 = R0;
	A3 = R0;
	RA = 0x80011A8C; //ZZ_11800_28C
	EMU_Write32(SP + 16,R0); //+ 0x10
	ZZ_CLOCKCYCLES(8,0x8001D360);
	goto ZZ_1D360;
ZZ_11800_28C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2424); //+ 0xFFFFF688
	V0 = -2;
	if (V1 != V0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(5,0x80011ABC);
		goto ZZ_11800_2BC;
	}
	S0 = R0;
	S1 = 0x80060000;
	S1 = EMU_ReadU32(S1 + 3104); //+ 0xC20
	S0 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT - 2932,S0); //+ 0xFFFFF48C
	ZZ_CLOCKCYCLES(12,0x80011AC4);
	goto ZZ_11800_2C4;
ZZ_11800_2BC:
	AT = 0x80060000;
	EMU_Write32(AT - 2932,R0); //+ 0xFFFFF48C
	ZZ_CLOCKCYCLES(2,0x80011AC4);
ZZ_11800_2C4:
	V0 = 0x80060000;
	V0 += 30788;
	A0 = V0 - 36;
	RA = 0x80011AD8; //ZZ_11800_2D8
	EMU_Write32(V0,S4);
	ZZ_CLOCKCYCLES(5,0x80015340);
	goto ZZ_15340;
ZZ_11800_2D8:
	EMU_Write32(GP + 4,R0); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT - 2480,R0); //+ 0xFFFFF650
	if (S1 == S4)
	{
		V0 = S1 - 59;
		ZZ_CLOCKCYCLES(5,0x80011AF8);
		goto ZZ_11800_2F8;
	}
	V0 = S1 - 59;
	V0 = V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80011B08);
		goto ZZ_11800_308;
	}
	ZZ_CLOCKCYCLES(8,0x80011AF8);
ZZ_11800_2F8:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12724); //+ 0xFFFFCE4C
	AT = 0x80070000;
	EMU_Write32(AT - 12752,V0); //+ 0xFFFFCE30
	ZZ_CLOCKCYCLES(4,0x80011B08);
ZZ_11800_308:
	A0 = 0x80060000;
	A0 += 30752;
	RA = 0x80011B18; //ZZ_11800_318
	A1 = S1;
	ZZ_CLOCKCYCLES(4,0x80014D6C);
	goto ZZ_14D6C;
ZZ_11800_318:
	RA = 0x80011B20; //ZZ_11800_320
	ZZ_CLOCKCYCLES(2,0x8002F15C);
	goto ZZ_2F15C;
ZZ_11800_320:
	if (!S0)
	{
		ZZ_CLOCKCYCLES(2,0x80011B40);
		goto ZZ_11800_340;
	}
	AT = 0x80060000;
	EMU_Write32(AT - 2424,S3); //+ 0xFFFFF688
	A0 = 0x80060000;
	A0 += 3056;
	RA = 0x80011B40; //ZZ_11800_340
	ZZ_CLOCKCYCLES(8,0x8002F9D4);
	goto ZZ_2F9D4;
ZZ_11800_340:
	AT = 0x80060000;
	EMU_Write32(AT - 2932,R0); //+ 0xFFFFF48C
	ZZ_CLOCKCYCLES(2,0x80011B48);
ZZ_11800_348:
	RA = 0x80011B50; //ZZ_11800_350
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x80012C88);
	goto ZZ_12C88;
ZZ_11800_350:
	V0 = EMU_ReadU32(GP + 4); //+ 0x4
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80011B68);
		goto ZZ_11800_368;
	}
	RA = 0x80011B68; //ZZ_11800_368
	ZZ_CLOCKCYCLES(6,0x80026F14);
	goto ZZ_26F14;
ZZ_11800_368:
	RA = 0x80011B70; //ZZ_11800_370
	ZZ_CLOCKCYCLES(2,0x80017CE8);
	goto ZZ_17CE8;
ZZ_11800_370:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80011CC8);
		goto ZZ_11800_4C8;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(15,0x80011CC8);
		goto ZZ_11800_4C8;
	}
	A0 = 0x80060000;
	A0 += 2572;
	RA = 0x80011BBC; //ZZ_11800_3BC
	ZZ_CLOCKCYCLES(19,0x8004F1C0);
	goto ZZ_4F1C0;
ZZ_11800_3BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A2 = EMU_ReadU32(V0);
	A0 = 0x1F800000;
	if (!A2)
	{
		A0 |= 0x280;
		ZZ_CLOCKCYCLES(9,0x80011C88);
		goto ZZ_11800_488;
	}
	A0 |= 0x280;
	A1 = V0 + 44;
	ZZ_CLOCKCYCLES(10,0x80011BE4);
ZZ_11800_3E4:
	V0 = EMU_ReadU32(A1 - 32); //+ 0xFFFFFFE0
	V1 = EMU_ReadU16(A1 - 36); //+ 0xFFFFFFDC
	V0 &= 0xFFFE;
	V0 <<= 16;
	V0 |= V1;
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(A1 - 28); //+ 0xFFFFFFE4
	A0 += 4;
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(A1 - 24); //+ 0xFFFFFFE8
	V0 = EMU_ReadU32(V0 + 20); //+ 0x14
	V1 = EMU_ReadU32(A1 - 20); //+ 0xFFFFFFEC
	A0 += 4;
	V0 <<= 2;
	V1 += V0;
	EMU_Write32(A0,V1);
	V0 = EMU_ReadU32(A1 - 16); //+ 0xFFFFFFF0
	A0 += 4;
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(A1 - 24); //+ 0xFFFFFFE8
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(A1 - 12); //+ 0xFFFFFFF4
	A0 += 4;
	V0 <<= 2;
	V1 += V0;
	EMU_Write32(A0,V1);
	V0 = EMU_ReadU32(A1 - 8); //+ 0xFFFFFFF8
	A0 += 4;
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(A1 - 4); //+ 0xFFFFFFFC
	A0 += 4;
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(A1);
	A2 -= 1;
	A0 += 4;
	A1 += 48;
	EMU_Write32(A0,V0);
	if (A2)
	{
		A0 += 4;
		ZZ_CLOCKCYCLES(41,0x80011BE4);
		goto ZZ_11800_3E4;
	}
	A0 += 4;
	ZZ_CLOCKCYCLES(41,0x80011C88);
ZZ_11800_488:
	RA = 0x80011C90; //ZZ_11800_490
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8002FE90);
	goto ZZ_2FE90;
ZZ_11800_490:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 2520); //+ 0xFFFFF628
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 14064); //+ 0x36F0
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 + 3036); //+ 0xBDC
	A2 = 0x80060000;
	A2 += 11440;
	RA = 0x80011CB8; //ZZ_11800_4B8
	ZZ_CLOCKCYCLES(10,0x800420F4);
	goto ZZ_420F4;
ZZ_11800_4B8:
	AT = 0x80070000;
	EMU_Write32(AT - 12464,V0); //+ 0xFFFFCF50
	ZZ_CLOCKCYCLES(4,0x80011CDC);
	goto ZZ_11800_4DC;
ZZ_11800_4C8:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14064); //+ 0x36F0
	A1 = 0x800;
	RA = 0x80011CDC; //ZZ_11800_4DC
	A0 += 24;
	ZZ_CLOCKCYCLES(5,0x8003BEF4);
	goto ZZ_3BEF4;
ZZ_11800_4DC:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = 0x20000000;
	V1 |= 0x1;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80011D80);
		goto ZZ_11800_580;
	}
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 11560); //+ 0x2D28
	if (!A0)
	{
		ZZ_CLOCKCYCLES(12,0x80011D3C);
		goto ZZ_11800_53C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(18,0x80011D3C);
		goto ZZ_11800_53C;
	}
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 14064); //+ 0x36F0
	A2 = 0x80060000;
	A2 += 11440;
	RA = 0x80011D3C; //ZZ_11800_53C
	ZZ_CLOCKCYCLES(24,0x800451EC);
	goto ZZ_451EC;
ZZ_11800_53C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 11576); //+ 0x2D38
	if (!A0)
	{
		V1 = 0x400000;
		ZZ_CLOCKCYCLES(5,0x80011D80);
		goto ZZ_11800_580;
	}
	V1 = 0x400000;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x80011D80);
		goto ZZ_11800_580;
	}
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 14064); //+ 0x36F0
	A2 = 0x80060000;
	A2 += 11440;
	RA = 0x80011D80; //ZZ_11800_580
	ZZ_CLOCKCYCLES(17,0x800454B0);
	goto ZZ_454B0;
ZZ_11800_580:
	A0 = EMU_ReadU32(GP + 4); //+ 0x4
	RA = 0x80011D8C; //ZZ_11800_58C
	A0 = A0 < 1;
	ZZ_CLOCKCYCLES(3,0x8001C3D4);
	goto ZZ_1C3D4;
ZZ_11800_58C:
	RA = 0x80011D94; //ZZ_11800_594
	ZZ_CLOCKCYCLES(2,0x80011E88);
	goto ZZ_11E88;
ZZ_11800_594:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 14064); //+ 0x36F0
	A0 = EMU_ReadU32(A1 + 8328); //+ 0x2088
	A2 = 0x80060000;
	A2 += 11440;
	RA = 0x80011DB4; //ZZ_11800_5B4
	ZZ_CLOCKCYCLES(8,0x8003DE2C);
	goto ZZ_3DE2C;
ZZ_11800_5B4:
	RA = 0x80011DBC; //ZZ_11800_5BC
	ZZ_CLOCKCYCLES(2,0x8001658C);
	goto ZZ_1658C;
ZZ_11800_5BC:
	RA = 0x80011DC4; //ZZ_11800_5C4
	ZZ_CLOCKCYCLES(2,0x80011E90);
	goto ZZ_11E90;
ZZ_11800_5C4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2968); //+ 0xFFFFF468
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80011848);
		goto ZZ_11800_48;
	}
	AT = 0x80070000;
	EMU_Write32(AT - 12756,R0); //+ 0xFFFFCE2C
	RA = 0x80011DE8; //ZZ_11800_5E8
	ZZ_CLOCKCYCLES(9,0x8001658C);
	goto ZZ_1658C;
ZZ_11800_5E8:
	RA = 0x80011DF0; //ZZ_11800_5F0
	ZZ_CLOCKCYCLES(2,0x8001658C);
	goto ZZ_1658C;
ZZ_11800_5F0:
	A0 = 0x80060000;
	A0 += 30752;
	RA = 0x80011E00; //ZZ_11800_600
	ZZ_CLOCKCYCLES(4,0x80015340);
	goto ZZ_15340;
ZZ_11800_600:
	RA = EMU_ReadU32(SP + 220); //+ 0xDC
	S4 = EMU_ReadU32(SP + 216); //+ 0xD8
	S3 = EMU_ReadU32(SP + 212); //+ 0xD4
	S2 = EMU_ReadU32(SP + 208); //+ 0xD0
	S1 = EMU_ReadU32(SP + 204); //+ 0xCC
	S0 = EMU_ReadU32(SP + 200); //+ 0xC8
	SP += 224;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80011800,0x80011824,ZZ_11800);
ZZ_MARK_TARGET(0x80011824,0x80011834,ZZ_11800_24);
ZZ_MARK_TARGET(0x80011834,0x8001183C,ZZ_11800_34);
ZZ_MARK_TARGET(0x8001183C,0x80011848,ZZ_11800_3C);
ZZ_MARK_TARGET(0x80011848,0x80011884,ZZ_11800_48);
ZZ_MARK_TARGET(0x80011884,0x800118F4,ZZ_11800_84);
ZZ_MARK_TARGET(0x800118F4,0x80011910,ZZ_11800_F4);
ZZ_MARK_TARGET(0x80011910,0x8001193C,ZZ_11800_110);
ZZ_MARK_TARGET(0x8001193C,0x80011968,ZZ_11800_13C);
ZZ_MARK_TARGET(0x80011968,0x80011978,ZZ_11800_168);
ZZ_MARK_TARGET(0x80011978,0x8001199C,ZZ_11800_178);
ZZ_MARK_TARGET(0x8001199C,0x800119A0,ZZ_11800_19C);
ZZ_MARK_TARGET(0x800119A0,0x800119A8,ZZ_11800_1A0);
ZZ_MARK_TARGET(0x800119A8,0x800119E0,ZZ_11800_1A8);
ZZ_MARK_TARGET(0x800119E0,0x80011A34,ZZ_11800_1E0);
ZZ_MARK_TARGET(0x80011A34,0x80011A44,ZZ_11800_234);
ZZ_MARK_TARGET(0x80011A44,0x80011A58,ZZ_11800_244);
ZZ_MARK_TARGET(0x80011A58,0x80011A6C,ZZ_11800_258);
ZZ_MARK_TARGET(0x80011A6C,0x80011A8C,ZZ_11800_26C);
ZZ_MARK_TARGET(0x80011A8C,0x80011ABC,ZZ_11800_28C);
ZZ_MARK_TARGET(0x80011ABC,0x80011AC4,ZZ_11800_2BC);
ZZ_MARK_TARGET(0x80011AC4,0x80011AD8,ZZ_11800_2C4);
ZZ_MARK_TARGET(0x80011AD8,0x80011AF8,ZZ_11800_2D8);
ZZ_MARK_TARGET(0x80011AF8,0x80011B08,ZZ_11800_2F8);
ZZ_MARK_TARGET(0x80011B08,0x80011B18,ZZ_11800_308);
ZZ_MARK_TARGET(0x80011B18,0x80011B20,ZZ_11800_318);
ZZ_MARK_TARGET(0x80011B20,0x80011B40,ZZ_11800_320);
ZZ_MARK_TARGET(0x80011B40,0x80011B48,ZZ_11800_340);
ZZ_MARK_TARGET(0x80011B48,0x80011B50,ZZ_11800_348);
ZZ_MARK_TARGET(0x80011B50,0x80011B68,ZZ_11800_350);
ZZ_MARK_TARGET(0x80011B68,0x80011B70,ZZ_11800_368);
ZZ_MARK_TARGET(0x80011B70,0x80011BBC,ZZ_11800_370);
ZZ_MARK_TARGET(0x80011BBC,0x80011BE4,ZZ_11800_3BC);
ZZ_MARK_TARGET(0x80011BE4,0x80011C88,ZZ_11800_3E4);
ZZ_MARK_TARGET(0x80011C88,0x80011C90,ZZ_11800_488);
ZZ_MARK_TARGET(0x80011C90,0x80011CB8,ZZ_11800_490);
ZZ_MARK_TARGET(0x80011CB8,0x80011CC8,ZZ_11800_4B8);
ZZ_MARK_TARGET(0x80011CC8,0x80011CDC,ZZ_11800_4C8);
ZZ_MARK_TARGET(0x80011CDC,0x80011D3C,ZZ_11800_4DC);
ZZ_MARK_TARGET(0x80011D3C,0x80011D80,ZZ_11800_53C);
ZZ_MARK_TARGET(0x80011D80,0x80011D8C,ZZ_11800_580);
ZZ_MARK_TARGET(0x80011D8C,0x80011D94,ZZ_11800_58C);
ZZ_MARK_TARGET(0x80011D94,0x80011DB4,ZZ_11800_594);
ZZ_MARK_TARGET(0x80011DB4,0x80011DBC,ZZ_11800_5B4);
ZZ_MARK_TARGET(0x80011DBC,0x80011DC4,ZZ_11800_5BC);
ZZ_MARK_TARGET(0x80011DC4,0x80011DE8,ZZ_11800_5C4);
ZZ_MARK_TARGET(0x80011DE8,0x80011DF0,ZZ_11800_5E8);
ZZ_MARK_TARGET(0x80011DF0,0x80011E00,ZZ_11800_5F0);
ZZ_MARK_TARGET(0x80011E00,0x80011E24,ZZ_11800_600);
