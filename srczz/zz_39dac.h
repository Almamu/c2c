#ifdef ZZ_INCLUDE_CODE
ZZ_39DAC:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A1;
	A0 = S2 >> 12;
	A1 = A0 & 0xFFF;
	A2 = A1;
	V1 = A0 & 0xE00;
	V0 = 0xE00;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	if (V1 != V0)
	{
		EMU_Write32(SP + 20,S1); //+ 0x14
		ZZ_CLOCKCYCLES(13,0x80039E14);
		goto ZZ_39DAC_68;
	}
	EMU_Write32(SP + 20,S1); //+ 0x14
	V0 = 0xE1F;
	if (A1 != V0)
	{
		V0 = A0 & 0x1FF;
		ZZ_CLOCKCYCLES(16,0x80039E04);
		goto ZZ_39DAC_58;
	}
	V0 = A0 & 0x1FF;
	V0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 -= 4;
	S1 = V0;
	EMU_Write32(S0 + 188,S1); //+ 0xBC
	ZZ_CLOCKCYCLES(22,0x80039E24);
	goto ZZ_39DAC_78;
ZZ_39DAC_58:
	V0 <<= 2;
	V0 += 64;
	S1 = S0 + V0;
	ZZ_CLOCKCYCLES(4,0x80039E24);
	goto ZZ_39DAC_78;
ZZ_39DAC_68:
	A0 = S0;
	RA = 0x80039E20; //ZZ_39DAC_74
	A1 = A2;
	ZZ_CLOCKCYCLES(3,0x80036FA4);
	goto ZZ_36FA4;
ZZ_39DAC_74:
	S1 = V0;
	ZZ_CLOCKCYCLES(1,0x80039E24);
ZZ_39DAC_78:
	A0 = S2 & 0xFFF;
	V1 = S2 & 0xE00;
	V0 = 0xE00;
	if (V1 != V0)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(5,0x80039E68);
		goto ZZ_39DAC_BC;
	}
	A1 = A0;
	V0 = 0xE1F;
	if (A0 != V0)
	{
		V0 = S2 & 0x1FF;
		ZZ_CLOCKCYCLES(8,0x80039E58);
		goto ZZ_39DAC_AC;
	}
	V0 = S2 & 0x1FF;
	V0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 -= 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(13,0x80039E70);
	goto ZZ_39DAC_C4;
ZZ_39DAC_AC:
	V0 <<= 2;
	V0 += 64;
	V0 += S0;
	ZZ_CLOCKCYCLES(4,0x80039E70);
	goto ZZ_39DAC_C4;
ZZ_39DAC_BC:
	RA = 0x80039E70; //ZZ_39DAC_C4
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80036FA4);
	goto ZZ_36FA4;
ZZ_39DAC_C4:
	A0 = EMU_ReadU32(V0);
	A1 = EMU_ReadU32(S1);
	RA = 0x80039E80; //ZZ_39DAC_D4
	ZZ_CLOCKCYCLES(4,0x80027338);
	goto ZZ_27338;
ZZ_39DAC_D4:
	EMU_Write32(S0 + 212,V0); //+ 0xD4
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8003A26C,ZZ_3A234_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80039DAC,ZZ_39DAC);
ZZ_MARK(0x80039DB0);
ZZ_MARK(0x80039DB4);
ZZ_MARK(0x80039DB8);
ZZ_MARK(0x80039DBC);
ZZ_MARK(0x80039DC0);
ZZ_MARK(0x80039DC4);
ZZ_MARK(0x80039DC8);
ZZ_MARK(0x80039DCC);
ZZ_MARK(0x80039DD0);
ZZ_MARK(0x80039DD4);
ZZ_MARK(0x80039DD8);
ZZ_MARK(0x80039DDC);
ZZ_MARK(0x80039DE0);
ZZ_MARK(0x80039DE4);
ZZ_MARK(0x80039DE8);
ZZ_MARK(0x80039DEC);
ZZ_MARK(0x80039DF0);
ZZ_MARK(0x80039DF4);
ZZ_MARK(0x80039DF8);
ZZ_MARK(0x80039DFC);
ZZ_MARK(0x80039E00);
ZZ_MARK_TARGET(0x80039E04,ZZ_39DAC_58);
ZZ_MARK(0x80039E08);
ZZ_MARK(0x80039E0C);
ZZ_MARK(0x80039E10);
ZZ_MARK_TARGET(0x80039E14,ZZ_39DAC_68);
ZZ_MARK(0x80039E18);
ZZ_MARK(0x80039E1C);
ZZ_MARK_TARGET(0x80039E20,ZZ_39DAC_74);
ZZ_MARK_TARGET(0x80039E24,ZZ_39DAC_78);
ZZ_MARK(0x80039E28);
ZZ_MARK(0x80039E2C);
ZZ_MARK(0x80039E30);
ZZ_MARK(0x80039E34);
ZZ_MARK(0x80039E38);
ZZ_MARK(0x80039E3C);
ZZ_MARK(0x80039E40);
ZZ_MARK(0x80039E44);
ZZ_MARK(0x80039E48);
ZZ_MARK(0x80039E4C);
ZZ_MARK(0x80039E50);
ZZ_MARK(0x80039E54);
ZZ_MARK_TARGET(0x80039E58,ZZ_39DAC_AC);
ZZ_MARK(0x80039E5C);
ZZ_MARK(0x80039E60);
ZZ_MARK(0x80039E64);
ZZ_MARK_TARGET(0x80039E68,ZZ_39DAC_BC);
ZZ_MARK(0x80039E6C);
ZZ_MARK_TARGET(0x80039E70,ZZ_39DAC_C4);
ZZ_MARK(0x80039E74);
ZZ_MARK(0x80039E78);
ZZ_MARK(0x80039E7C);
ZZ_MARK_TARGET(0x80039E80,ZZ_39DAC_D4);
ZZ_MARK(0x80039E84);
ZZ_MARK(0x80039E88);
ZZ_MARK(0x80039E8C);
ZZ_MARK(0x80039E90);
ZZ_MARK(0x80039E94);
ZZ_MARK(0x80039E98);
ZZ_MARK(0x80039E9C);
