#ifdef ZZ_INCLUDE_CODE
ZZ_3C140:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003C14C);
		goto ZZ_3C140_C;
	}
	A0 = -A0;
	ZZ_CLOCKCYCLES(3,0x8003C14C);
ZZ_3C140_C:
	if ((int32_t)A1 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003C158);
		goto ZZ_3C140_18;
	}
	A1 = -A1;
	ZZ_CLOCKCYCLES(3,0x8003C158);
ZZ_3C140_18:
	EMU_SMultiply(A0,A0);
	A2 = LO;
	A3 = HI;
	EMU_SMultiply(A1,A1);
	T0 = LO;
	T1 = HI;
	V0 = A2 + T0;
	V1 = V0 < A2;
	V1 += A3;
	V1 += T1;
	V0 >>= 13;
	V1 <<= 19;
	ZZ_JUMPREGISTER_BEGIN(RA);
	V0 |= V1;
	ZZ_CLOCKCYCLES_JR(16);
	ZZ_JUMPREGISTER(0x800329B4,ZZ_32958_5C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003C140,ZZ_3C140);
ZZ_MARK(0x8003C144);
ZZ_MARK(0x8003C148);
ZZ_MARK_TARGET(0x8003C14C,ZZ_3C140_C);
ZZ_MARK(0x8003C150);
ZZ_MARK(0x8003C154);
ZZ_MARK_TARGET(0x8003C158,ZZ_3C140_18);
ZZ_MARK(0x8003C15C);
ZZ_MARK(0x8003C160);
ZZ_MARK(0x8003C164);
ZZ_MARK(0x8003C168);
ZZ_MARK(0x8003C16C);
ZZ_MARK(0x8003C170);
ZZ_MARK(0x8003C174);
ZZ_MARK(0x8003C178);
ZZ_MARK(0x8003C17C);
ZZ_MARK(0x8003C180);
ZZ_MARK(0x8003C184);
ZZ_MARK(0x8003C188);
ZZ_MARK(0x8003C18C);
ZZ_MARK(0x8003C190);
ZZ_MARK(0x8003C194);
