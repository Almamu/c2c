#ifdef ZZ_INCLUDE_CODE
ZZ_451EC:
	SP -= 64;
	EMU_Write32(SP + 16,S0); //+ 0x10
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 36,S5); //+ 0x24
	EMU_Write32(SP + 40,S6); //+ 0x28
	EMU_Write32(SP + 44,S7); //+ 0x2C
	EMU_Write32(SP + 48,T8); //+ 0x30
	EMU_Write32(SP + 52,T9); //+ 0x34
	EMU_Write32(SP + 56,GP); //+ 0x38
	EMU_Write32(SP + 60,FP); //+ 0x3C
	V1 = 0x1F800000;
	EMU_Write32(V1,SP);
	SP = A0;
	FP = A1;
	GTE_SetControlRegister(5,R0);
	GTE_SetControlRegister(6,R0);
	GTE_SetControlRegister(7,R0);
	GTE_SetDataRegister(4,R0);
	T8 = 256;
	GTE_SetDataRegister(5,R0);
	S7 = EMU_ReadU32(FP + 8); //+ 0x8
	A0 = EMU_ReadU32(A2 + 12); //+ 0xC
	T0 = EMU_ReadU32(A2 + 84); //+ 0x54
	T1 = EMU_ReadU32(A2 + 88); //+ 0x58
	T2 = EMU_ReadU32(A2 + 92); //+ 0x5C
	T3 = EMU_ReadU32(A2 + 96); //+ 0x60
	T4 = EMU_ReadU32(A2 + 100); //+ 0x64
	T5 = EMU_ReadU32(A2 + 104); //+ 0x68
	S5 = EMU_ReadU32(A2 + 108); //+ 0x6C
	S3 = EMU_ReadU32(A2 + 112); //+ 0x70
	T8 = EMU_ReadU32(A2 + 116); //+ 0x74
	S1 = 0xFFFE0000;
	S1 |= 0xFFFF;
	S2 = 0xFFF0000;
	S2 |= 0x1FFF;
	S3 = EMU_CheckedAdd(S3,2048);
	S3 <<= 16;
	S3 |= 0x1000;
	T8 <<= 2;
	S4 = FP + T8;
	T0 &= S1;
	T2 &= S1;
	T8 = EMU_ReadU32(A0 + 20); //+ 0x14
	T9 = EMU_ReadU32(A0 + 24); //+ 0x18
	A0 = EMU_ReadU32(A0 + 28); //+ 0x1C
	T8 &= 0xFFFF;
	T9 <<= 16;
	T8 |= T9;
	T8 &= S1;
	T0 = T0 - T8;
	T1 = T1 - A0;
	T2 = T2 - T8;
	T3 = T3 - A0;
	T0 &= S1;
	T2 &= S1;
	T7 = T0 - T2;
	S0 = T1 - T3;
	AT = 0x30120000;
	AT |= 0x5400;
	S6 = 0x49350000;
	S6 |= 0x83FE;
	T8 = 0x52000000;
	T4 |= T8;
	ZZ_CLOCKCYCLES(67,0x80045440);
	goto ZZ_451EC_254;
ZZ_451EC_10C:
	T9 = S6 << 24;
	S6 >>= 8;
	A3 = AT + S6;
	AT >>= 8;
	AT |= T9;
	T9 = AT >> 8;
	A3 += T9;
	A3 <<= 24;
	S6 |= A3;
	T9 = S6 << 24;
	S6 >>= 8;
	V0 = AT + S6;
	AT >>= 8;
	AT |= T9;
	T9 = AT >> 8;
	V0 += T9;
	V0 <<= 24;
	S6 |= V0;
	T9 = S6 << 24;
	S6 >>= 8;
	T8 = AT + S6;
	AT >>= 8;
	AT |= T9;
	T9 = AT >> 8;
	T8 += T9;
	T8 <<= 24;
	S6 |= T8;
	A3 >>= 19;
	V0 >>= 4;
	A3 |= V0;
	A2 = A3 + T0;
	A3 += T2;
	A2 &= S2;
	A3 &= S2;
	T9 = A2 - A3;
	if (T9 != T7)
	{
		A2 = A2 - S3;
		ZZ_CLOCKCYCLES(37,0x80045440);
		goto ZZ_451EC_254;
	}
	A2 = A2 - S3;
	A3 = A3 - S3;
	A2 &= S1;
	A3 &= S1;
	GTE_SetDataRegister(0,A2);
	GTE_SetDataRegister(2,A3);
	T8 >>= 18;
	A0 = T8 + T1;
	A1 = T8 + T3;
	A0 &= 0x1FFF;
	A1 &= 0x1FFF;
	T8 = A0 - A1;
	if (T8 != S0)
	{
		A0 = EMU_CheckedAdd(A0,-7168);
		ZZ_CLOCKCYCLES(50,0x80045440);
		goto ZZ_451EC_254;
	}
	A0 = EMU_CheckedAdd(A0,-7168);
	A1 = EMU_CheckedAdd(A1,-7168);
	GTE_SetDataRegister(1,A0);
	GTE_SetDataRegister(3,A1);
	A2 = S7 << 8;
	A2 >>= 8;
	GTE_Execute(2621488);
	T8 = EMU_ReadU32(S4 + 24); //+ 0x18
	EMU_Write32(S7 + 4,T4); //+ 0x4
	T9 = 0x4000000;
	T8 |= T9;
	EMU_Write32(S7,T8);
	A3 = 0x1010000;
	A3 |= 0x200;
	T8 = GTE_GetControlRegister(31);
	T9 = GTE_GetDataRegister(12);
	A0 = GTE_GetDataRegister(13);
	T8 <<= 13;
	if ((int32_t)T8 < 0)
	{
		A1 = T9 & A0;
		ZZ_CLOCKCYCLES(69,0x80045440);
		goto ZZ_451EC_254;
	}
	A1 = T9 & A0;
	T9 = T9 - A3;
	A0 = A0 - A3;
	T8 = ~(T9 | A0);
	T8 |= A1;
	if ((int32_t)T8 < 0)
	{
		T8 <<= 16;
		ZZ_CLOCKCYCLES(75,0x80045440);
		goto ZZ_451EC_254;
	}
	T8 <<= 16;
	if ((int32_t)T8 < 0)
	{
		ZZ_CLOCKCYCLES(77,0x80045440);
		goto ZZ_451EC_254;
	}
	EMU_Write32(S7 + 12,T5); //+ 0xC
	EMU_Write32(S7 + 8,GTE_GetDataRegister(12)); //+ 0x8
	EMU_Write32(S7 + 16,GTE_GetDataRegister(13)); //+ 0x10
	EMU_Write32(S4 + 24,A2); //+ 0x18
	S7 = EMU_CheckedAdd(S7,20);
	ZZ_CLOCKCYCLES(82,0x80045440);
ZZ_451EC_254:
	if ((int32_t)SP >= 0)
	{
		SP = EMU_CheckedAdd(SP,-1);
		ZZ_CLOCKCYCLES(2,0x800452F8);
		goto ZZ_451EC_10C;
	}
	SP = EMU_CheckedAdd(SP,-1);
	T9 = 0x2000000;
	EMU_Write32(S7 + 4,S5); //+ 0x4
	EMU_Write32(S7 + 8,R0); //+ 0x8
	T8 = EMU_ReadU32(S4 + 24); //+ 0x18
	A1 = S7 << 8;
	T8 |= T9;
	EMU_Write32(S7,T8);
	A1 >>= 8;
	EMU_Write32(S4 + 24,A1); //+ 0x18
	S7 = EMU_CheckedAdd(S7,12);
	SP = EMU_ReadU32(V1);
	EMU_Write32(FP + 8,S7); //+ 0x8
	FP = EMU_ReadU32(SP + 60); //+ 0x3C
	GP = EMU_ReadU32(SP + 56); //+ 0x38
	T9 = EMU_ReadU32(SP + 52); //+ 0x34
	T8 = EMU_ReadU32(SP + 48); //+ 0x30
	S7 = EMU_ReadU32(SP + 44); //+ 0x2C
	S6 = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 64;
	ZZ_CLOCKCYCLES_JR(28);
	ZZ_JUMPREGISTER(0x80011D3C,ZZ_11800_53C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800451EC,ZZ_451EC);
ZZ_MARK(0x800451F0);
ZZ_MARK(0x800451F4);
ZZ_MARK(0x800451F8);
ZZ_MARK(0x800451FC);
ZZ_MARK(0x80045200);
ZZ_MARK(0x80045204);
ZZ_MARK(0x80045208);
ZZ_MARK(0x8004520C);
ZZ_MARK(0x80045210);
ZZ_MARK(0x80045214);
ZZ_MARK(0x80045218);
ZZ_MARK(0x8004521C);
ZZ_MARK(0x80045220);
ZZ_MARK(0x80045224);
ZZ_MARK(0x80045228);
ZZ_MARK(0x8004522C);
ZZ_MARK(0x80045230);
ZZ_MARK(0x80045234);
ZZ_MARK(0x80045238);
ZZ_MARK(0x8004523C);
ZZ_MARK(0x80045240);
ZZ_MARK(0x80045244);
ZZ_MARK(0x80045248);
ZZ_MARK(0x8004524C);
ZZ_MARK(0x80045250);
ZZ_MARK(0x80045254);
ZZ_MARK(0x80045258);
ZZ_MARK(0x8004525C);
ZZ_MARK(0x80045260);
ZZ_MARK(0x80045264);
ZZ_MARK(0x80045268);
ZZ_MARK(0x8004526C);
ZZ_MARK(0x80045270);
ZZ_MARK(0x80045274);
ZZ_MARK(0x80045278);
ZZ_MARK(0x8004527C);
ZZ_MARK(0x80045280);
ZZ_MARK(0x80045284);
ZZ_MARK(0x80045288);
ZZ_MARK(0x8004528C);
ZZ_MARK(0x80045290);
ZZ_MARK(0x80045294);
ZZ_MARK(0x80045298);
ZZ_MARK(0x8004529C);
ZZ_MARK(0x800452A0);
ZZ_MARK(0x800452A4);
ZZ_MARK(0x800452A8);
ZZ_MARK(0x800452AC);
ZZ_MARK(0x800452B0);
ZZ_MARK(0x800452B4);
ZZ_MARK(0x800452B8);
ZZ_MARK(0x800452BC);
ZZ_MARK(0x800452C0);
ZZ_MARK(0x800452C4);
ZZ_MARK(0x800452C8);
ZZ_MARK(0x800452CC);
ZZ_MARK(0x800452D0);
ZZ_MARK(0x800452D4);
ZZ_MARK(0x800452D8);
ZZ_MARK(0x800452DC);
ZZ_MARK(0x800452E0);
ZZ_MARK(0x800452E4);
ZZ_MARK(0x800452E8);
ZZ_MARK(0x800452EC);
ZZ_MARK(0x800452F0);
ZZ_MARK(0x800452F4);
ZZ_MARK_TARGET(0x800452F8,ZZ_451EC_10C);
ZZ_MARK(0x800452FC);
ZZ_MARK(0x80045300);
ZZ_MARK(0x80045304);
ZZ_MARK(0x80045308);
ZZ_MARK(0x8004530C);
ZZ_MARK(0x80045310);
ZZ_MARK(0x80045314);
ZZ_MARK(0x80045318);
ZZ_MARK(0x8004531C);
ZZ_MARK(0x80045320);
ZZ_MARK(0x80045324);
ZZ_MARK(0x80045328);
ZZ_MARK(0x8004532C);
ZZ_MARK(0x80045330);
ZZ_MARK(0x80045334);
ZZ_MARK(0x80045338);
ZZ_MARK(0x8004533C);
ZZ_MARK(0x80045340);
ZZ_MARK(0x80045344);
ZZ_MARK(0x80045348);
ZZ_MARK(0x8004534C);
ZZ_MARK(0x80045350);
ZZ_MARK(0x80045354);
ZZ_MARK(0x80045358);
ZZ_MARK(0x8004535C);
ZZ_MARK(0x80045360);
ZZ_MARK(0x80045364);
ZZ_MARK(0x80045368);
ZZ_MARK(0x8004536C);
ZZ_MARK(0x80045370);
ZZ_MARK(0x80045374);
ZZ_MARK(0x80045378);
ZZ_MARK(0x8004537C);
ZZ_MARK(0x80045380);
ZZ_MARK(0x80045384);
ZZ_MARK(0x80045388);
ZZ_MARK(0x8004538C);
ZZ_MARK(0x80045390);
ZZ_MARK(0x80045394);
ZZ_MARK(0x80045398);
ZZ_MARK(0x8004539C);
ZZ_MARK(0x800453A0);
ZZ_MARK(0x800453A4);
ZZ_MARK(0x800453A8);
ZZ_MARK(0x800453AC);
ZZ_MARK(0x800453B0);
ZZ_MARK(0x800453B4);
ZZ_MARK(0x800453B8);
ZZ_MARK(0x800453BC);
ZZ_MARK(0x800453C0);
ZZ_MARK(0x800453C4);
ZZ_MARK(0x800453C8);
ZZ_MARK(0x800453CC);
ZZ_MARK(0x800453D0);
ZZ_MARK(0x800453D4);
ZZ_MARK(0x800453D8);
ZZ_MARK(0x800453DC);
ZZ_MARK(0x800453E0);
ZZ_MARK(0x800453E4);
ZZ_MARK(0x800453E8);
ZZ_MARK(0x800453EC);
ZZ_MARK(0x800453F0);
ZZ_MARK(0x800453F4);
ZZ_MARK(0x800453F8);
ZZ_MARK(0x800453FC);
ZZ_MARK(0x80045400);
ZZ_MARK(0x80045404);
ZZ_MARK(0x80045408);
ZZ_MARK(0x8004540C);
ZZ_MARK(0x80045410);
ZZ_MARK(0x80045414);
ZZ_MARK(0x80045418);
ZZ_MARK(0x8004541C);
ZZ_MARK(0x80045420);
ZZ_MARK(0x80045424);
ZZ_MARK(0x80045428);
ZZ_MARK(0x8004542C);
ZZ_MARK(0x80045430);
ZZ_MARK(0x80045434);
ZZ_MARK(0x80045438);
ZZ_MARK(0x8004543C);
ZZ_MARK_TARGET(0x80045440,ZZ_451EC_254);
ZZ_MARK(0x80045444);
ZZ_MARK(0x80045448);
ZZ_MARK(0x8004544C);
ZZ_MARK(0x80045450);
ZZ_MARK(0x80045454);
ZZ_MARK(0x80045458);
ZZ_MARK(0x8004545C);
ZZ_MARK(0x80045460);
ZZ_MARK(0x80045464);
ZZ_MARK(0x80045468);
ZZ_MARK(0x8004546C);
ZZ_MARK(0x80045470);
ZZ_MARK(0x80045474);
ZZ_MARK(0x80045478);
ZZ_MARK(0x8004547C);
ZZ_MARK(0x80045480);
ZZ_MARK(0x80045484);
ZZ_MARK(0x80045488);
ZZ_MARK(0x8004548C);
ZZ_MARK(0x80045490);
ZZ_MARK(0x80045494);
ZZ_MARK(0x80045498);
ZZ_MARK(0x8004549C);
ZZ_MARK(0x800454A0);
ZZ_MARK(0x800454A4);
ZZ_MARK(0x800454A8);
ZZ_MARK(0x800454AC);
