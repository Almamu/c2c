#ifdef ZZ_INCLUDE_CODE
ZZ_337BC:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12656); //+ 0xFFFFCE90
	V0 = EMU_ReadU32(GP + 224); //+ 0xE0
	SP -= 272;
	EMU_Write32(SP + 264,FP); //+ 0x108
	FP = R0;
	EMU_Write32(SP + 268,RA); //+ 0x10C
	EMU_Write32(SP + 260,S7); //+ 0x104
	EMU_Write32(SP + 256,S6); //+ 0x100
	EMU_Write32(SP + 252,S5); //+ 0xFC
	EMU_Write32(SP + 248,S4); //+ 0xF8
	EMU_Write32(SP + 244,S3); //+ 0xF4
	EMU_Write32(SP + 240,S2); //+ 0xF0
	EMU_Write32(SP + 236,S1); //+ 0xEC
	if (V1 == V0)
	{
		EMU_Write32(SP + 232,S0); //+ 0xE8
		ZZ_CLOCKCYCLES(16,0x80033814);
		goto ZZ_337BC_58;
	}
	EMU_Write32(SP + 232,S0); //+ 0xE8
	EMU_Write32(GP + 224,V1); //+ 0xE0
	A0 = V1 << 14;
	A0 = A0 - V1;
	A0 <<= 8;
	RA = 0x80033814; //ZZ_337BC_58
	A0 = (int32_t)A0 >> 16;
	ZZ_CLOCKCYCLES(22,0x800328DC);
	goto ZZ_328DC;
ZZ_337BC_58:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12652); //+ 0xFFFFCE94
	V0 = EMU_ReadU32(GP + 220); //+ 0xDC
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(6,0x80033844);
		goto ZZ_337BC_88;
	}
	EMU_Write32(GP + 220,V1); //+ 0xDC
	A0 = V1 << 14;
	A0 = A0 - V1;
	A0 <<= 8;
	RA = 0x80033844; //ZZ_337BC_88
	A0 = (int32_t)A0 >> 16;
	ZZ_CLOCKCYCLES(12,0x80033FA8);
	goto ZZ_33FA8;
ZZ_337BC_88:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80033864);
		goto ZZ_337BC_A8;
	}
	A0 = EMU_ReadU32(V0 + 16); //+ 0x10
	RA = 0x80033864; //ZZ_337BC_A8
	A0 += 676;
	ZZ_CLOCKCYCLES(8,0x80034578);
	goto ZZ_34578;
ZZ_337BC_A8:
	V1 = EMU_ReadS16(GP + 388); //+ 0x184
	if (!V1)
	{
		ZZ_CLOCKCYCLES(4,0x800338EC);
		goto ZZ_337BC_130;
	}
	if ((int32_t)V1 >= 0)
	{
		V1 = -V1;
		ZZ_CLOCKCYCLES(6,0x80033898);
		goto ZZ_337BC_DC;
	}
	V1 = -V1;
	V0 = EMU_ReadS16(GP + 384); //+ 0x180
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x80033898);
		goto ZZ_337BC_DC;
	}
	EMU_Write16(GP + 384,R0); //+ 0x180
	EMU_Write16(GP + 388,R0); //+ 0x184
	ZZ_CLOCKCYCLES(13,0x80033898);
ZZ_337BC_DC:
	A0 = EMU_ReadS16(GP + 388); //+ 0x184
	if ((int32_t)A0 <= 0)
	{
		V0 = 0x3FFF;
		ZZ_CLOCKCYCLES(4,0x800338C8);
		goto ZZ_337BC_10C;
	}
	V0 = 0x3FFF;
	V1 = EMU_ReadS16(GP + 384); //+ 0x180
	V0 = V0 - V1;
	V0 = (int32_t)V0 < (int32_t)A0;
	if (!V0)
	{
		V0 = 0x3FFF;
		ZZ_CLOCKCYCLES(10,0x800338C8);
		goto ZZ_337BC_10C;
	}
	V0 = 0x3FFF;
	EMU_Write16(GP + 384,V0); //+ 0x180
	EMU_Write16(GP + 388,R0); //+ 0x184
	ZZ_CLOCKCYCLES(12,0x800338C8);
ZZ_337BC_10C:
	V1 = EMU_ReadU16(GP + 384); //+ 0x180
	V0 = EMU_ReadU16(GP + 388); //+ 0x184
	V1 += V0;
	A0 = V1 << 16;
	A0 = (int32_t)A0 >> 23;
	EMU_Write16(GP + 384,V1); //+ 0x180
	RA = 0x800338EC; //ZZ_337BC_130
	A1 = A0;
	ZZ_CLOCKCYCLES(9,0x80054E14);
	goto ZZ_54E14;
ZZ_337BC_130:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 3036); //+ 0xFFFFF424
	V0 = 0x1;
	if (V1 != V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(5,0x80033954);
		goto ZZ_337BC_198;
	}
	V0 = -1;
	V1 = EMU_ReadU32(GP + 396); //+ 0x18C
	V0 = -655;
	EMU_Write16(GP + 388,V0); //+ 0x184
	if (!V1)
	{
		ZZ_CLOCKCYCLES(10,0x80033948);
		goto ZZ_337BC_18C;
	}
	V0 = EMU_ReadS16(GP + 380); //+ 0x17C
	V0 = (int32_t)V0 < 2;
	if (V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(15,0x80033948);
		goto ZZ_337BC_18C;
	}
	V0 = 0x3;
	V1 = EMU_ReadU32(GP + 544); //+ 0x220
	if (V1 != V0)
	{
		A1 = 0x2;
		ZZ_CLOCKCYCLES(19,0x80033948);
		goto ZZ_337BC_18C;
	}
	A1 = 0x2;
	A0 = 0x80060000;
	A0 -= 132;
	RA = 0x80033948; //ZZ_337BC_18C
	A2 = R0;
	ZZ_CLOCKCYCLES(23,0x800347D4);
	goto ZZ_347D4;
ZZ_337BC_18C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 3036); //+ 0xFFFFF424
	V0 = -1;
	ZZ_CLOCKCYCLES(3,0x80033954);
ZZ_337BC_198:
	if (V1 != V0)
	{
		V0 = 0x7AF;
		ZZ_CLOCKCYCLES(2,0x800339A0);
		goto ZZ_337BC_1E4;
	}
	V0 = 0x7AF;
	V1 = EMU_ReadU32(GP + 396); //+ 0x18C
	EMU_Write16(GP + 388,V0); //+ 0x184
	if (!V1)
	{
		ZZ_CLOCKCYCLES(6,0x800339A0);
		goto ZZ_337BC_1E4;
	}
	V0 = EMU_ReadS16(GP + 380); //+ 0x17C
	V0 = (int32_t)V0 < 2;
	if (V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(11,0x800339A0);
		goto ZZ_337BC_1E4;
	}
	V0 = 0x3;
	V1 = EMU_ReadU32(GP + 544); //+ 0x220
	if (V1 != V0)
	{
		A1 = 0x3;
		ZZ_CLOCKCYCLES(15,0x800339A0);
		goto ZZ_337BC_1E4;
	}
	A1 = 0x3;
	A0 = 0x80060000;
	A0 -= 132;
	RA = 0x800339A0; //ZZ_337BC_1E4
	A2 = R0;
	ZZ_CLOCKCYCLES(19,0x800347D4);
	goto ZZ_347D4;
ZZ_337BC_1E4:
	S0 = 0x80060000;
	S0 -= 252;
	RA = 0x800339B0; //ZZ_337BC_1F4
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80051AC4);
	goto ZZ_51AC4;
ZZ_337BC_1F4:
	S2 = EMU_ReadU32(GP + 392); //+ 0x188
	V1 = 0x80060000;
	V1 -= 2172;
	V0 = S2 << 2;
	V0 += S2;
	V0 <<= 4;
	S4 = V0 + V1;
	V0 = (int32_t)S2 < 24;
	if (!V0)
	{
		S3 = 0x1;
		ZZ_CLOCKCYCLES(10,0x80033F74);
		goto ZZ_337BC_7B8;
	}
	S3 = 0x1;
	A3 = 0x63960000;
	A3 |= 0x347F;
	EMU_Write32(SP + 216,A3); //+ 0xD8
	S1 = S4 + 4;
	S7 = S4 + 36;
	S6 = S4 + 16;
	S5 = S2 + S0;
	ZZ_CLOCKCYCLES(17,0x800339F4);
ZZ_337BC_238:
	V0 = EMU_ReadU32(S1);
	V0 &= 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80033F54);
		goto ZZ_337BC_798;
	}
	ZZ_CLOCKCYCLES(5,0x80033A08);
ZZ_337BC_24C:
	V0 = EMU_ReadU32(S1);
	V0 >>= 12;
	V1 = V0 & 0x7;
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 3;
		ZZ_CLOCKCYCLES(7,0x80033AB4);
		goto ZZ_337BC_2F8;
	}
	V0 = (int32_t)V1 < 3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80033A3C);
		goto ZZ_337BC_280;
	}
	if (V1 == S3)
	{
		A0 = S6;
		ZZ_CLOCKCYCLES(11,0x80033A5C);
		goto ZZ_337BC_2A0;
	}
	A0 = S6;
	ZZ_CLOCKCYCLES(13,0x80033BFC);
	goto ZZ_337BC_440;
ZZ_337BC_280:
	V0 = 0x3;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(3,0x80033BFC);
		goto ZZ_337BC_440;
	}
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	V0 = EMU_ReadU32(V0 + 28); //+ 0x1C
	EMU_Write32(SP + 108,V0); //+ 0x6C
	ZZ_CLOCKCYCLES(8,0x80033BA4);
	goto ZZ_337BC_3E8;
ZZ_337BC_2A0:
	RA = 0x80033A64; //ZZ_337BC_2A8
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x800144C4);
	goto ZZ_144C4;
ZZ_337BC_2A8:
	if (!V0)
	{
		A0 = S6;
		ZZ_CLOCKCYCLES(2,0x80033BFC);
		goto ZZ_337BC_440;
	}
	A0 = S6;
	A1 = 0x1;
	RA = 0x80033A78; //ZZ_337BC_2BC
	A2 = R0;
	ZZ_CLOCKCYCLES(5,0x80014364);
	goto ZZ_14364;
ZZ_337BC_2BC:
	V1 = 0xC0000000;
	V1 |= 0x2;
	A0 = V0;
	V0 = A0 & V1;
	if (V0 != V1)
	{
		V1 = -28673;
		ZZ_CLOCKCYCLES(6,0x80033AA0);
		goto ZZ_337BC_2E4;
	}
	V1 = -28673;
	V0 = A0 << 2;
	V0 >>= 4;
	EMU_Write32(SP + 108,V0); //+ 0x6C
	ZZ_CLOCKCYCLES(10,0x80033BA4);
	goto ZZ_337BC_3E8;
ZZ_337BC_2E4:
	V0 = EMU_ReadU32(S1);
	V0 &= V1;
	V0 |= 0x2000;
	EMU_Write32(S1,V0);
	ZZ_CLOCKCYCLES(5,0x80033AB4);
ZZ_337BC_2F8:
	A0 = S6;
	A1 = 0x1;
	RA = 0x80033AC4; //ZZ_337BC_308
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x80014364);
	goto ZZ_14364;
ZZ_337BC_308:
	S0 = V0;
	A0 = EMU_ReadU32(S0 + 4); //+ 0x4
	RA = 0x80033AD4; //ZZ_337BC_318
	ZZ_CLOCKCYCLES(4,0x800156A0);
	goto ZZ_156A0;
ZZ_337BC_318:
	A1 = V0;
	if (!A1)
	{
		ZZ_CLOCKCYCLES(3,0x80033B44);
		goto ZZ_337BC_388;
	}
	V0 = EMU_ReadS16(A1 + 4); //+ 0x4
	if (V0 != S3)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(7,0x80033AFC);
		goto ZZ_337BC_340;
	}
	V1 = V0;
	V0 = 0x14;
	EMU_Write16(A1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(10,0x80033B10);
	goto ZZ_337BC_354;
ZZ_337BC_340:
	V0 = V1 - 20;
	V0 &= 0xFFFF;
	V0 = V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80033BFC);
		goto ZZ_337BC_440;
	}
	ZZ_CLOCKCYCLES(5,0x80033B10);
ZZ_337BC_354:
	V0 = EMU_ReadU32(A1 + 28); //+ 0x1C
	EMU_Write32(SP + 108,V0); //+ 0x6C
	V0 = EMU_ReadU8(A1 + 15); //+ 0xF
	A0 = S0;
	V0 += 1;
	EMU_Write8(A1 + 15,V0); //+ 0xF
	RA = 0x80033B34; //ZZ_337BC_378
	EMU_Write32(S1 + 20,A1); //+ 0x14
	ZZ_CLOCKCYCLES(9,0x8001424C);
	goto ZZ_1424C;
ZZ_337BC_378:
	RA = 0x80033B3C; //ZZ_337BC_380
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x80013F14);
	goto ZZ_13F14;
ZZ_337BC_380:
	A0 = SP + 80;
	ZZ_CLOCKCYCLES(2,0x80033BA8);
	goto ZZ_337BC_3EC;
ZZ_337BC_388:
	RA = 0x80033B4C; //ZZ_337BC_390
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x8001424C);
	goto ZZ_1424C;
ZZ_337BC_390:
	V1 = V0;
	V0 = EMU_ReadU16(V1 + 4); //+ 0x4
	V0 -= 20;
	V0 = V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80033BFC);
		goto ZZ_337BC_440;
	}
	V0 = EMU_ReadS16(V1 + 6); //+ 0x6
	if (V0 != S3)
	{
		V0 = 0xA;
		ZZ_CLOCKCYCLES(11,0x80033BFC);
		goto ZZ_337BC_440;
	}
	V0 = 0xA;
	EMU_Write16(V1 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	EMU_Write32(V1 + 24,V0); //+ 0x18
	V1 = 0x80070000;
	V1 -= 32184;
	V0 = EMU_ReadU32(V1);
	V0 += 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(22,0x80033BFC);
	goto ZZ_337BC_440;
ZZ_337BC_3E8:
	A0 = SP + 80;
	ZZ_CLOCKCYCLES(1,0x80033BA8);
ZZ_337BC_3EC:
	V0 = 0x80;
	EMU_Write32(SP + 84,V0); //+ 0x54
	V0 = S3 << S2;
	RA = 0x80033BBC; //ZZ_337BC_400
	EMU_Write32(SP + 80,V0); //+ 0x50
	ZZ_CLOCKCYCLES(5,0x80051B50);
	goto ZZ_51B50;
ZZ_337BC_400:
	V1 = EMU_ReadU32(S1);
	A0 = 0xFFFF0000;
	A0 |= 0x7FFF;
	V0 = -28673;
	V1 &= V0;
	A0 &= V1;
	V1 &= 0x10;
	if (!V1)
	{
		EMU_Write32(S1,A0);
		ZZ_CLOCKCYCLES(9,0x80033BF0);
		goto ZZ_337BC_434;
	}
	EMU_Write32(S1,A0);
	V0 = EMU_ReadS16(S1 + 28); //+ 0x1C
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x80033BFC);
		goto ZZ_337BC_440;
	}
	ZZ_CLOCKCYCLES(13,0x80033BF0);
ZZ_337BC_434:
	V0 = A0 | 0x10;
	EMU_Write32(S1,V0);
	EMU_Write16(S1 + 28,S3); //+ 0x1C
	ZZ_CLOCKCYCLES(3,0x80033BFC);
ZZ_337BC_440:
	V1 = EMU_ReadU32(S1);
	V0 = V1 & 0x8000;
	if (V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(5,0x80033F54);
		goto ZZ_337BC_798;
	}
	V0 = V1 & 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80033C50);
		goto ZZ_337BC_494;
	}
	V0 = EMU_ReadU16(S1 + 28); //+ 0x1C
	V0 -= 1;
	EMU_Write16(S1 + 28,V0); //+ 0x1C
	V0 <<= 16;
	if (V0)
	{
		A1 = S3 << S2;
		ZZ_CLOCKCYCLES(14,0x80033F54);
		goto ZZ_337BC_798;
	}
	A1 = S3 << S2;
	V1 = EMU_ReadU32(S1);
	A0 = 0x1;
	V0 = -17;
	V1 &= V0;
	RA = 0x80033C4C; //ZZ_337BC_490
	EMU_Write32(S1,V1);
	ZZ_CLOCKCYCLES(20,0x80051310);
	goto ZZ_51310;
ZZ_337BC_490:
	EMU_Write8(S5,S3);
	ZZ_CLOCKCYCLES(1,0x80033C50);
ZZ_337BC_494:
	V1 = EMU_ReadU8(S5);
	V0 = 0x3;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x80033D14);
		goto ZZ_337BC_558;
	}
	V1 = EMU_ReadU8(S1 + 24); //+ 0x18
	V0 = V1 < 2;
	if (V0)
	{
		V0 = V1 - 1;
		ZZ_CLOCKCYCLES(9,0x80033C8C);
		goto ZZ_337BC_4D0;
	}
	V0 = V1 - 1;
	A0 = 0x1;
	A1 = S3 << S2;
	RA = 0x80033C84; //ZZ_337BC_4C8
	EMU_Write8(S1 + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(13,0x80051310);
	goto ZZ_51310;
ZZ_337BC_4C8:
	EMU_Write8(S5,S3);
	ZZ_CLOCKCYCLES(2,0x80033D14);
	goto ZZ_337BC_558;
ZZ_337BC_4D0:
	V0 = EMU_ReadU32(S1 + 16); //+ 0x10
	A3 = EMU_ReadU32(SP + 216); //+ 0xD8
	if (V0 == A3)
	{
		ZZ_CLOCKCYCLES(5,0x80033D04);
		goto ZZ_337BC_548;
	}
	A0 = EMU_ReadU32(S1 + 20); //+ 0x14
	if (!A0)
	{
		ZZ_CLOCKCYCLES(9,0x80033CB8);
		goto ZZ_337BC_4FC;
	}
	RA = 0x80033CB8; //ZZ_337BC_4FC
	ZZ_CLOCKCYCLES(11,0x80013F14);
	goto ZZ_13F14;
ZZ_337BC_4FC:
	A2 = EMU_ReadU32(S1 + 8); //+ 0x8
	A0 = S1;
	RA = 0x80033CC8; //ZZ_337BC_50C
	A1 = S4 + 20;
	ZZ_CLOCKCYCLES(4,0x80032DA4);
	goto ZZ_32DA4;
ZZ_337BC_50C:
	A3 = EMU_ReadU32(SP + 216); //+ 0xD8
	if (!V0)
	{
		EMU_Write32(S1 + 16,A3); //+ 0x10
		ZZ_CLOCKCYCLES(3,0x80033A08);
		goto ZZ_337BC_24C;
	}
	EMU_Write32(S1 + 16,A3); //+ 0x10
	A0 = SP + 144;
	EMU_Write32(SP + 172,V0); //+ 0xAC
	V0 = 0x80;
	S0 = S3 << S2;
	EMU_Write32(SP + 148,V0); //+ 0x94
	RA = 0x80033CF0; //ZZ_337BC_534
	EMU_Write32(SP + 144,S0); //+ 0x90
	ZZ_CLOCKCYCLES(10,0x80051B50);
	goto ZZ_51B50;
ZZ_337BC_534:
	A0 = 0x1;
	RA = 0x80033CFC; //ZZ_337BC_540
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x80051310);
	goto ZZ_51310;
ZZ_337BC_540:
	EMU_Write8(S5,S3);
	ZZ_CLOCKCYCLES(2,0x80033BFC);
	goto ZZ_337BC_440;
ZZ_337BC_548:
	RA = 0x80033D0C; //ZZ_337BC_550
	A0 = S4;
	ZZ_CLOCKCYCLES(2,0x80033764);
	goto ZZ_33764;
ZZ_337BC_550:
	ZZ_CLOCKCYCLES(2,0x80033F28);
	goto ZZ_337BC_76C;
ZZ_337BC_558:
	EMU_Write32(SP + 84,R0); //+ 0x54
	V0 = EMU_ReadU32(S1);
	V0 &= 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80033DE8);
		goto ZZ_337BC_62C;
	}
	V0 = EMU_ReadU32(S1 + 64); //+ 0x40
	V1 = EMU_ReadU16(S1 + 26); //+ 0x1A
	A0 = EMU_ReadU32(S1 + 60); //+ 0x3C
	V1 += V0;
	A0 -= 1;
	EMU_Write16(S1 + 26,V1); //+ 0x1A
	if ((int32_t)A0 <= 0)
	{
		EMU_Write32(S1 + 60,A0); //+ 0x3C
		ZZ_CLOCKCYCLES(14,0x80033D54);
		goto ZZ_337BC_598;
	}
	EMU_Write32(S1 + 60,A0); //+ 0x3C
	FP = 0x1;
	ZZ_CLOCKCYCLES(16,0x80033D64);
	goto ZZ_337BC_5A8;
ZZ_337BC_598:
	V0 = EMU_ReadU32(S1);
	V1 = -65;
	V0 &= V1;
	EMU_Write32(S1,V0);
	ZZ_CLOCKCYCLES(4,0x80033D64);
ZZ_337BC_5A8:
	V0 = EMU_ReadU32(SP + 84); //+ 0x54
	V0 |= 0x3;
	EMU_Write32(SP + 84,V0); //+ 0x54
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = EMU_ReadU8(V0 + 288); //+ 0x120
	V0 -= 6;
	V0 = V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x80033DC8);
		goto ZZ_337BC_60C;
	}
	A0 = EMU_ReadS16(S1 + 26); //+ 0x1A
	V0 = (int32_t)A0 < 16383;
	if (!V0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(17,0x80033DB8);
		goto ZZ_337BC_5FC;
	}
	V1 = A0;
	if ((int32_t)A0 >= 0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(19,0x80033DBC);
		goto ZZ_337BC_600;
	}
	V0 = V1;
	V0 = R0;
	ZZ_CLOCKCYCLES(21,0x80033DBC);
	goto ZZ_337BC_600;
ZZ_337BC_5FC:
	V0 = 0x3FFF;
	ZZ_CLOCKCYCLES(1,0x80033DBC);
ZZ_337BC_600:
	EMU_Write16(SP + 90,V0); //+ 0x5A
	EMU_Write16(SP + 88,V0); //+ 0x58
	ZZ_CLOCKCYCLES(3,0x80033DE8);
	goto ZZ_337BC_62C;
ZZ_337BC_60C:
	A1 = EMU_ReadS16(S1 + 26); //+ 0x1A
	RA = 0x80033DD4; //ZZ_337BC_618
	A0 = S7;
	ZZ_CLOCKCYCLES(3,0x80032958);
	goto ZZ_32958;
ZZ_337BC_618:
	EMU_ReadLeft(V0 + 3,&V1); //+ 0x3
	EMU_ReadRight(V0,&V1);
	EMU_WriteLeft(SP + 91,V1); //+ 0x5B
	EMU_WriteRight(SP + 88,V1); //+ 0x58
	ZZ_CLOCKCYCLES(5,0x80033DE8);
ZZ_337BC_62C:
	V0 = EMU_ReadU32(S1);
	V0 &= 0x80;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80033E78);
		goto ZZ_337BC_6BC;
	}
	V0 = EMU_ReadU32(S1 + 72); //+ 0x48
	V1 = EMU_ReadU16(S1 + 30); //+ 0x1E
	A0 = EMU_ReadU32(S1 + 68); //+ 0x44
	V1 += V0;
	A0 -= 1;
	EMU_Write16(S1 + 30,V1); //+ 0x1E
	if ((int32_t)A0 <= 0)
	{
		EMU_Write32(S1 + 68,A0); //+ 0x44
		ZZ_CLOCKCYCLES(13,0x80033E24);
		goto ZZ_337BC_668;
	}
	EMU_Write32(S1 + 68,A0); //+ 0x44
	FP = 0x1;
	ZZ_CLOCKCYCLES(15,0x80033E34);
	goto ZZ_337BC_678;
ZZ_337BC_668:
	V0 = EMU_ReadU32(S1);
	V1 = -129;
	V0 &= V1;
	EMU_Write32(S1,V0);
	ZZ_CLOCKCYCLES(4,0x80033E34);
ZZ_337BC_678:
	V0 = EMU_ReadU32(SP + 84); //+ 0x54
	V0 |= 0x10;
	EMU_Write32(SP + 84,V0); //+ 0x54
	V1 = EMU_ReadU16(S1 + 30); //+ 0x1E
	V0 = V1 << 5;
	V0 += V1;
	V0 <<= 3;
	V0 = V0 - V1;
	V0 <<= 4;
	V0 += V1;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(14,0x80033E70);
		goto ZZ_337BC_6B4;
	}
	V0 += 4095;
	ZZ_CLOCKCYCLES(15,0x80033E70);
ZZ_337BC_6B4:
	V0 = (int32_t)V0 >> 12;
	EMU_Write16(SP + 100,V0); //+ 0x64
	ZZ_CLOCKCYCLES(2,0x80033E78);
ZZ_337BC_6BC:
	V0 = EMU_ReadU32(S1);
	V0 &= 0x200;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80033F0C);
		goto ZZ_337BC_750;
	}
	A2 = EMU_ReadU32(S1 + 8); //+ 0x8
	if (!A2)
	{
		ZZ_CLOCKCYCLES(9,0x80033F0C);
		goto ZZ_337BC_750;
	}
	V0 = EMU_ReadU32(A2 + 96); //+ 0x60
	V1 = EMU_ReadU32(A2 + 100); //+ 0x64
	A0 = EMU_ReadU32(A2 + 104); //+ 0x68
	EMU_Write32(S1 + 44,V0); //+ 0x2C
	EMU_Write32(S1 + 48,V1); //+ 0x30
	EMU_Write32(S1 + 52,A0); //+ 0x34
	A0 = A2 + 96;
	A1 = SP + 144;
	RA = 0x80033EC4; //ZZ_337BC_708
	A2 = 0x1;
	ZZ_CLOCKCYCLES(19,0x8001EE74);
	goto ZZ_1EE74;
ZZ_337BC_708:
	V0 = EMU_ReadU32(SP + 144); //+ 0x90
	V1 = EMU_ReadU32(SP + 148); //+ 0x94
	A0 = EMU_ReadU32(SP + 152); //+ 0x98
	EMU_Write32(S1 + 32,V0); //+ 0x20
	EMU_Write32(S1 + 36,V1); //+ 0x24
	EMU_Write32(S1 + 40,A0); //+ 0x28
	V0 = EMU_ReadU32(SP + 84); //+ 0x54
	V0 |= 0x3;
	EMU_Write32(SP + 84,V0); //+ 0x54
	A1 = EMU_ReadS16(S1 + 26); //+ 0x1A
	RA = 0x80033EF8; //ZZ_337BC_73C
	A0 = S7;
	ZZ_CLOCKCYCLES(13,0x80032958);
	goto ZZ_32958;
ZZ_337BC_73C:
	EMU_ReadLeft(V0 + 3,&V1); //+ 0x3
	EMU_ReadRight(V0,&V1);
	EMU_WriteLeft(SP + 91,V1); //+ 0x5B
	EMU_WriteRight(SP + 88,V1); //+ 0x58
	ZZ_CLOCKCYCLES(5,0x80033F0C);
ZZ_337BC_750:
	V0 = EMU_ReadU32(SP + 84); //+ 0x54
	if (!V0)
	{
		V0 = S3 << S2;
		ZZ_CLOCKCYCLES(4,0x80033F28);
		goto ZZ_337BC_76C;
	}
	V0 = S3 << S2;
	EMU_Write32(SP + 80,V0); //+ 0x50
	RA = 0x80033F28; //ZZ_337BC_76C
	A0 = SP + 80;
	ZZ_CLOCKCYCLES(7,0x80051B50);
	goto ZZ_51B50;
ZZ_337BC_76C:
	V1 = EMU_ReadU32(S1);
	V0 = V1 & 0x1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80033F4C);
		goto ZZ_337BC_790;
	}
	if (FP)
	{
		V0 = V1 & 0x2;
		ZZ_CLOCKCYCLES(7,0x80033F54);
		goto ZZ_337BC_798;
	}
	V0 = V1 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80033F54);
		goto ZZ_337BC_798;
	}
	ZZ_CLOCKCYCLES(9,0x80033F4C);
ZZ_337BC_790:
	RA = 0x80033F54; //ZZ_337BC_798
	A0 = S4;
	ZZ_CLOCKCYCLES(2,0x80033764);
	goto ZZ_33764;
ZZ_337BC_798:
	S5 += 1;
	S2 += 1;
	S1 += 80;
	S7 += 80;
	S6 += 80;
	V0 = (int32_t)S2 < 24;
	if (V0)
	{
		S4 += 80;
		ZZ_CLOCKCYCLES(8,0x800339F4);
		goto ZZ_337BC_238;
	}
	S4 += 80;
	ZZ_CLOCKCYCLES(8,0x80033F74);
ZZ_337BC_7B8:
	RA = EMU_ReadU32(SP + 268); //+ 0x10C
	FP = EMU_ReadU32(SP + 264); //+ 0x108
	S7 = EMU_ReadU32(SP + 260); //+ 0x104
	S6 = EMU_ReadU32(SP + 256); //+ 0x100
	S5 = EMU_ReadU32(SP + 252); //+ 0xFC
	S4 = EMU_ReadU32(SP + 248); //+ 0xF8
	S3 = EMU_ReadU32(SP + 244); //+ 0xF4
	S2 = EMU_ReadU32(SP + 240); //+ 0xF0
	S1 = EMU_ReadU32(SP + 236); //+ 0xEC
	S0 = EMU_ReadU32(SP + 232); //+ 0xE8
	SP += 272;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x800168C8,ZZ_1658C_33C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800337BC,ZZ_337BC);
ZZ_MARK(0x800337C0);
ZZ_MARK(0x800337C4);
ZZ_MARK(0x800337C8);
ZZ_MARK(0x800337CC);
ZZ_MARK(0x800337D0);
ZZ_MARK(0x800337D4);
ZZ_MARK(0x800337D8);
ZZ_MARK(0x800337DC);
ZZ_MARK(0x800337E0);
ZZ_MARK(0x800337E4);
ZZ_MARK(0x800337E8);
ZZ_MARK(0x800337EC);
ZZ_MARK(0x800337F0);
ZZ_MARK(0x800337F4);
ZZ_MARK(0x800337F8);
ZZ_MARK(0x800337FC);
ZZ_MARK(0x80033800);
ZZ_MARK(0x80033804);
ZZ_MARK(0x80033808);
ZZ_MARK(0x8003380C);
ZZ_MARK(0x80033810);
ZZ_MARK_TARGET(0x80033814,ZZ_337BC_58);
ZZ_MARK(0x80033818);
ZZ_MARK(0x8003381C);
ZZ_MARK(0x80033820);
ZZ_MARK(0x80033824);
ZZ_MARK(0x80033828);
ZZ_MARK(0x8003382C);
ZZ_MARK(0x80033830);
ZZ_MARK(0x80033834);
ZZ_MARK(0x80033838);
ZZ_MARK(0x8003383C);
ZZ_MARK(0x80033840);
ZZ_MARK_TARGET(0x80033844,ZZ_337BC_88);
ZZ_MARK(0x80033848);
ZZ_MARK(0x8003384C);
ZZ_MARK(0x80033850);
ZZ_MARK(0x80033854);
ZZ_MARK(0x80033858);
ZZ_MARK(0x8003385C);
ZZ_MARK(0x80033860);
ZZ_MARK_TARGET(0x80033864,ZZ_337BC_A8);
ZZ_MARK(0x80033868);
ZZ_MARK(0x8003386C);
ZZ_MARK(0x80033870);
ZZ_MARK(0x80033874);
ZZ_MARK(0x80033878);
ZZ_MARK(0x8003387C);
ZZ_MARK(0x80033880);
ZZ_MARK(0x80033884);
ZZ_MARK(0x80033888);
ZZ_MARK(0x8003388C);
ZZ_MARK(0x80033890);
ZZ_MARK(0x80033894);
ZZ_MARK_TARGET(0x80033898,ZZ_337BC_DC);
ZZ_MARK(0x8003389C);
ZZ_MARK(0x800338A0);
ZZ_MARK(0x800338A4);
ZZ_MARK(0x800338A8);
ZZ_MARK(0x800338AC);
ZZ_MARK(0x800338B0);
ZZ_MARK(0x800338B4);
ZZ_MARK(0x800338B8);
ZZ_MARK(0x800338BC);
ZZ_MARK(0x800338C0);
ZZ_MARK(0x800338C4);
ZZ_MARK_TARGET(0x800338C8,ZZ_337BC_10C);
ZZ_MARK(0x800338CC);
ZZ_MARK(0x800338D0);
ZZ_MARK(0x800338D4);
ZZ_MARK(0x800338D8);
ZZ_MARK(0x800338DC);
ZZ_MARK(0x800338E0);
ZZ_MARK(0x800338E4);
ZZ_MARK(0x800338E8);
ZZ_MARK_TARGET(0x800338EC,ZZ_337BC_130);
ZZ_MARK(0x800338F0);
ZZ_MARK(0x800338F4);
ZZ_MARK(0x800338F8);
ZZ_MARK(0x800338FC);
ZZ_MARK(0x80033900);
ZZ_MARK(0x80033904);
ZZ_MARK(0x80033908);
ZZ_MARK(0x8003390C);
ZZ_MARK(0x80033910);
ZZ_MARK(0x80033914);
ZZ_MARK(0x80033918);
ZZ_MARK(0x8003391C);
ZZ_MARK(0x80033920);
ZZ_MARK(0x80033924);
ZZ_MARK(0x80033928);
ZZ_MARK(0x8003392C);
ZZ_MARK(0x80033930);
ZZ_MARK(0x80033934);
ZZ_MARK(0x80033938);
ZZ_MARK(0x8003393C);
ZZ_MARK(0x80033940);
ZZ_MARK(0x80033944);
ZZ_MARK_TARGET(0x80033948,ZZ_337BC_18C);
ZZ_MARK(0x8003394C);
ZZ_MARK(0x80033950);
ZZ_MARK_TARGET(0x80033954,ZZ_337BC_198);
ZZ_MARK(0x80033958);
ZZ_MARK(0x8003395C);
ZZ_MARK(0x80033960);
ZZ_MARK(0x80033964);
ZZ_MARK(0x80033968);
ZZ_MARK(0x8003396C);
ZZ_MARK(0x80033970);
ZZ_MARK(0x80033974);
ZZ_MARK(0x80033978);
ZZ_MARK(0x8003397C);
ZZ_MARK(0x80033980);
ZZ_MARK(0x80033984);
ZZ_MARK(0x80033988);
ZZ_MARK(0x8003398C);
ZZ_MARK(0x80033990);
ZZ_MARK(0x80033994);
ZZ_MARK(0x80033998);
ZZ_MARK(0x8003399C);
ZZ_MARK_TARGET(0x800339A0,ZZ_337BC_1E4);
ZZ_MARK(0x800339A4);
ZZ_MARK(0x800339A8);
ZZ_MARK(0x800339AC);
ZZ_MARK_TARGET(0x800339B0,ZZ_337BC_1F4);
ZZ_MARK(0x800339B4);
ZZ_MARK(0x800339B8);
ZZ_MARK(0x800339BC);
ZZ_MARK(0x800339C0);
ZZ_MARK(0x800339C4);
ZZ_MARK(0x800339C8);
ZZ_MARK(0x800339CC);
ZZ_MARK(0x800339D0);
ZZ_MARK(0x800339D4);
ZZ_MARK(0x800339D8);
ZZ_MARK(0x800339DC);
ZZ_MARK(0x800339E0);
ZZ_MARK(0x800339E4);
ZZ_MARK(0x800339E8);
ZZ_MARK(0x800339EC);
ZZ_MARK(0x800339F0);
ZZ_MARK_TARGET(0x800339F4,ZZ_337BC_238);
ZZ_MARK(0x800339F8);
ZZ_MARK(0x800339FC);
ZZ_MARK(0x80033A00);
ZZ_MARK(0x80033A04);
ZZ_MARK_TARGET(0x80033A08,ZZ_337BC_24C);
ZZ_MARK(0x80033A0C);
ZZ_MARK(0x80033A10);
ZZ_MARK(0x80033A14);
ZZ_MARK(0x80033A18);
ZZ_MARK(0x80033A1C);
ZZ_MARK(0x80033A20);
ZZ_MARK(0x80033A24);
ZZ_MARK(0x80033A28);
ZZ_MARK(0x80033A2C);
ZZ_MARK(0x80033A30);
ZZ_MARK(0x80033A34);
ZZ_MARK(0x80033A38);
ZZ_MARK_TARGET(0x80033A3C,ZZ_337BC_280);
ZZ_MARK(0x80033A40);
ZZ_MARK(0x80033A44);
ZZ_MARK(0x80033A48);
ZZ_MARK(0x80033A4C);
ZZ_MARK(0x80033A50);
ZZ_MARK(0x80033A54);
ZZ_MARK(0x80033A58);
ZZ_MARK_TARGET(0x80033A5C,ZZ_337BC_2A0);
ZZ_MARK(0x80033A60);
ZZ_MARK_TARGET(0x80033A64,ZZ_337BC_2A8);
ZZ_MARK(0x80033A68);
ZZ_MARK(0x80033A6C);
ZZ_MARK(0x80033A70);
ZZ_MARK(0x80033A74);
ZZ_MARK_TARGET(0x80033A78,ZZ_337BC_2BC);
ZZ_MARK(0x80033A7C);
ZZ_MARK(0x80033A80);
ZZ_MARK(0x80033A84);
ZZ_MARK(0x80033A88);
ZZ_MARK(0x80033A8C);
ZZ_MARK(0x80033A90);
ZZ_MARK(0x80033A94);
ZZ_MARK(0x80033A98);
ZZ_MARK(0x80033A9C);
ZZ_MARK_TARGET(0x80033AA0,ZZ_337BC_2E4);
ZZ_MARK(0x80033AA4);
ZZ_MARK(0x80033AA8);
ZZ_MARK(0x80033AAC);
ZZ_MARK(0x80033AB0);
ZZ_MARK_TARGET(0x80033AB4,ZZ_337BC_2F8);
ZZ_MARK(0x80033AB8);
ZZ_MARK(0x80033ABC);
ZZ_MARK(0x80033AC0);
ZZ_MARK_TARGET(0x80033AC4,ZZ_337BC_308);
ZZ_MARK(0x80033AC8);
ZZ_MARK(0x80033ACC);
ZZ_MARK(0x80033AD0);
ZZ_MARK_TARGET(0x80033AD4,ZZ_337BC_318);
ZZ_MARK(0x80033AD8);
ZZ_MARK(0x80033ADC);
ZZ_MARK(0x80033AE0);
ZZ_MARK(0x80033AE4);
ZZ_MARK(0x80033AE8);
ZZ_MARK(0x80033AEC);
ZZ_MARK(0x80033AF0);
ZZ_MARK(0x80033AF4);
ZZ_MARK(0x80033AF8);
ZZ_MARK_TARGET(0x80033AFC,ZZ_337BC_340);
ZZ_MARK(0x80033B00);
ZZ_MARK(0x80033B04);
ZZ_MARK(0x80033B08);
ZZ_MARK(0x80033B0C);
ZZ_MARK_TARGET(0x80033B10,ZZ_337BC_354);
ZZ_MARK(0x80033B14);
ZZ_MARK(0x80033B18);
ZZ_MARK(0x80033B1C);
ZZ_MARK(0x80033B20);
ZZ_MARK(0x80033B24);
ZZ_MARK(0x80033B28);
ZZ_MARK(0x80033B2C);
ZZ_MARK(0x80033B30);
ZZ_MARK_TARGET(0x80033B34,ZZ_337BC_378);
ZZ_MARK(0x80033B38);
ZZ_MARK_TARGET(0x80033B3C,ZZ_337BC_380);
ZZ_MARK(0x80033B40);
ZZ_MARK_TARGET(0x80033B44,ZZ_337BC_388);
ZZ_MARK(0x80033B48);
ZZ_MARK_TARGET(0x80033B4C,ZZ_337BC_390);
ZZ_MARK(0x80033B50);
ZZ_MARK(0x80033B54);
ZZ_MARK(0x80033B58);
ZZ_MARK(0x80033B5C);
ZZ_MARK(0x80033B60);
ZZ_MARK(0x80033B64);
ZZ_MARK(0x80033B68);
ZZ_MARK(0x80033B6C);
ZZ_MARK(0x80033B70);
ZZ_MARK(0x80033B74);
ZZ_MARK(0x80033B78);
ZZ_MARK(0x80033B7C);
ZZ_MARK(0x80033B80);
ZZ_MARK(0x80033B84);
ZZ_MARK(0x80033B88);
ZZ_MARK(0x80033B8C);
ZZ_MARK(0x80033B90);
ZZ_MARK(0x80033B94);
ZZ_MARK(0x80033B98);
ZZ_MARK(0x80033B9C);
ZZ_MARK(0x80033BA0);
ZZ_MARK_TARGET(0x80033BA4,ZZ_337BC_3E8);
ZZ_MARK_TARGET(0x80033BA8,ZZ_337BC_3EC);
ZZ_MARK(0x80033BAC);
ZZ_MARK(0x80033BB0);
ZZ_MARK(0x80033BB4);
ZZ_MARK(0x80033BB8);
ZZ_MARK_TARGET(0x80033BBC,ZZ_337BC_400);
ZZ_MARK(0x80033BC0);
ZZ_MARK(0x80033BC4);
ZZ_MARK(0x80033BC8);
ZZ_MARK(0x80033BCC);
ZZ_MARK(0x80033BD0);
ZZ_MARK(0x80033BD4);
ZZ_MARK(0x80033BD8);
ZZ_MARK(0x80033BDC);
ZZ_MARK(0x80033BE0);
ZZ_MARK(0x80033BE4);
ZZ_MARK(0x80033BE8);
ZZ_MARK(0x80033BEC);
ZZ_MARK_TARGET(0x80033BF0,ZZ_337BC_434);
ZZ_MARK(0x80033BF4);
ZZ_MARK(0x80033BF8);
ZZ_MARK_TARGET(0x80033BFC,ZZ_337BC_440);
ZZ_MARK(0x80033C00);
ZZ_MARK(0x80033C04);
ZZ_MARK(0x80033C08);
ZZ_MARK(0x80033C0C);
ZZ_MARK(0x80033C10);
ZZ_MARK(0x80033C14);
ZZ_MARK(0x80033C18);
ZZ_MARK(0x80033C1C);
ZZ_MARK(0x80033C20);
ZZ_MARK(0x80033C24);
ZZ_MARK(0x80033C28);
ZZ_MARK(0x80033C2C);
ZZ_MARK(0x80033C30);
ZZ_MARK(0x80033C34);
ZZ_MARK(0x80033C38);
ZZ_MARK(0x80033C3C);
ZZ_MARK(0x80033C40);
ZZ_MARK(0x80033C44);
ZZ_MARK(0x80033C48);
ZZ_MARK_TARGET(0x80033C4C,ZZ_337BC_490);
ZZ_MARK_TARGET(0x80033C50,ZZ_337BC_494);
ZZ_MARK(0x80033C54);
ZZ_MARK(0x80033C58);
ZZ_MARK(0x80033C5C);
ZZ_MARK(0x80033C60);
ZZ_MARK(0x80033C64);
ZZ_MARK(0x80033C68);
ZZ_MARK(0x80033C6C);
ZZ_MARK(0x80033C70);
ZZ_MARK(0x80033C74);
ZZ_MARK(0x80033C78);
ZZ_MARK(0x80033C7C);
ZZ_MARK(0x80033C80);
ZZ_MARK_TARGET(0x80033C84,ZZ_337BC_4C8);
ZZ_MARK(0x80033C88);
ZZ_MARK_TARGET(0x80033C8C,ZZ_337BC_4D0);
ZZ_MARK(0x80033C90);
ZZ_MARK(0x80033C94);
ZZ_MARK(0x80033C98);
ZZ_MARK(0x80033C9C);
ZZ_MARK(0x80033CA0);
ZZ_MARK(0x80033CA4);
ZZ_MARK(0x80033CA8);
ZZ_MARK(0x80033CAC);
ZZ_MARK(0x80033CB0);
ZZ_MARK(0x80033CB4);
ZZ_MARK_TARGET(0x80033CB8,ZZ_337BC_4FC);
ZZ_MARK(0x80033CBC);
ZZ_MARK(0x80033CC0);
ZZ_MARK(0x80033CC4);
ZZ_MARK_TARGET(0x80033CC8,ZZ_337BC_50C);
ZZ_MARK(0x80033CCC);
ZZ_MARK(0x80033CD0);
ZZ_MARK(0x80033CD4);
ZZ_MARK(0x80033CD8);
ZZ_MARK(0x80033CDC);
ZZ_MARK(0x80033CE0);
ZZ_MARK(0x80033CE4);
ZZ_MARK(0x80033CE8);
ZZ_MARK(0x80033CEC);
ZZ_MARK_TARGET(0x80033CF0,ZZ_337BC_534);
ZZ_MARK(0x80033CF4);
ZZ_MARK(0x80033CF8);
ZZ_MARK_TARGET(0x80033CFC,ZZ_337BC_540);
ZZ_MARK(0x80033D00);
ZZ_MARK_TARGET(0x80033D04,ZZ_337BC_548);
ZZ_MARK(0x80033D08);
ZZ_MARK_TARGET(0x80033D0C,ZZ_337BC_550);
ZZ_MARK(0x80033D10);
ZZ_MARK_TARGET(0x80033D14,ZZ_337BC_558);
ZZ_MARK(0x80033D18);
ZZ_MARK(0x80033D1C);
ZZ_MARK(0x80033D20);
ZZ_MARK(0x80033D24);
ZZ_MARK(0x80033D28);
ZZ_MARK(0x80033D2C);
ZZ_MARK(0x80033D30);
ZZ_MARK(0x80033D34);
ZZ_MARK(0x80033D38);
ZZ_MARK(0x80033D3C);
ZZ_MARK(0x80033D40);
ZZ_MARK(0x80033D44);
ZZ_MARK(0x80033D48);
ZZ_MARK(0x80033D4C);
ZZ_MARK(0x80033D50);
ZZ_MARK_TARGET(0x80033D54,ZZ_337BC_598);
ZZ_MARK(0x80033D58);
ZZ_MARK(0x80033D5C);
ZZ_MARK(0x80033D60);
ZZ_MARK_TARGET(0x80033D64,ZZ_337BC_5A8);
ZZ_MARK(0x80033D68);
ZZ_MARK(0x80033D6C);
ZZ_MARK(0x80033D70);
ZZ_MARK(0x80033D74);
ZZ_MARK(0x80033D78);
ZZ_MARK(0x80033D7C);
ZZ_MARK(0x80033D80);
ZZ_MARK(0x80033D84);
ZZ_MARK(0x80033D88);
ZZ_MARK(0x80033D8C);
ZZ_MARK(0x80033D90);
ZZ_MARK(0x80033D94);
ZZ_MARK(0x80033D98);
ZZ_MARK(0x80033D9C);
ZZ_MARK(0x80033DA0);
ZZ_MARK(0x80033DA4);
ZZ_MARK(0x80033DA8);
ZZ_MARK(0x80033DAC);
ZZ_MARK(0x80033DB0);
ZZ_MARK(0x80033DB4);
ZZ_MARK_TARGET(0x80033DB8,ZZ_337BC_5FC);
ZZ_MARK_TARGET(0x80033DBC,ZZ_337BC_600);
ZZ_MARK(0x80033DC0);
ZZ_MARK(0x80033DC4);
ZZ_MARK_TARGET(0x80033DC8,ZZ_337BC_60C);
ZZ_MARK(0x80033DCC);
ZZ_MARK(0x80033DD0);
ZZ_MARK_TARGET(0x80033DD4,ZZ_337BC_618);
ZZ_MARK(0x80033DD8);
ZZ_MARK(0x80033DDC);
ZZ_MARK(0x80033DE0);
ZZ_MARK(0x80033DE4);
ZZ_MARK_TARGET(0x80033DE8,ZZ_337BC_62C);
ZZ_MARK(0x80033DEC);
ZZ_MARK(0x80033DF0);
ZZ_MARK(0x80033DF4);
ZZ_MARK(0x80033DF8);
ZZ_MARK(0x80033DFC);
ZZ_MARK(0x80033E00);
ZZ_MARK(0x80033E04);
ZZ_MARK(0x80033E08);
ZZ_MARK(0x80033E0C);
ZZ_MARK(0x80033E10);
ZZ_MARK(0x80033E14);
ZZ_MARK(0x80033E18);
ZZ_MARK(0x80033E1C);
ZZ_MARK(0x80033E20);
ZZ_MARK_TARGET(0x80033E24,ZZ_337BC_668);
ZZ_MARK(0x80033E28);
ZZ_MARK(0x80033E2C);
ZZ_MARK(0x80033E30);
ZZ_MARK_TARGET(0x80033E34,ZZ_337BC_678);
ZZ_MARK(0x80033E38);
ZZ_MARK(0x80033E3C);
ZZ_MARK(0x80033E40);
ZZ_MARK(0x80033E44);
ZZ_MARK(0x80033E48);
ZZ_MARK(0x80033E4C);
ZZ_MARK(0x80033E50);
ZZ_MARK(0x80033E54);
ZZ_MARK(0x80033E58);
ZZ_MARK(0x80033E5C);
ZZ_MARK(0x80033E60);
ZZ_MARK(0x80033E64);
ZZ_MARK(0x80033E68);
ZZ_MARK(0x80033E6C);
ZZ_MARK_TARGET(0x80033E70,ZZ_337BC_6B4);
ZZ_MARK(0x80033E74);
ZZ_MARK_TARGET(0x80033E78,ZZ_337BC_6BC);
ZZ_MARK(0x80033E7C);
ZZ_MARK(0x80033E80);
ZZ_MARK(0x80033E84);
ZZ_MARK(0x80033E88);
ZZ_MARK(0x80033E8C);
ZZ_MARK(0x80033E90);
ZZ_MARK(0x80033E94);
ZZ_MARK(0x80033E98);
ZZ_MARK(0x80033E9C);
ZZ_MARK(0x80033EA0);
ZZ_MARK(0x80033EA4);
ZZ_MARK(0x80033EA8);
ZZ_MARK(0x80033EAC);
ZZ_MARK(0x80033EB0);
ZZ_MARK(0x80033EB4);
ZZ_MARK(0x80033EB8);
ZZ_MARK(0x80033EBC);
ZZ_MARK(0x80033EC0);
ZZ_MARK_TARGET(0x80033EC4,ZZ_337BC_708);
ZZ_MARK(0x80033EC8);
ZZ_MARK(0x80033ECC);
ZZ_MARK(0x80033ED0);
ZZ_MARK(0x80033ED4);
ZZ_MARK(0x80033ED8);
ZZ_MARK(0x80033EDC);
ZZ_MARK(0x80033EE0);
ZZ_MARK(0x80033EE4);
ZZ_MARK(0x80033EE8);
ZZ_MARK(0x80033EEC);
ZZ_MARK(0x80033EF0);
ZZ_MARK(0x80033EF4);
ZZ_MARK_TARGET(0x80033EF8,ZZ_337BC_73C);
ZZ_MARK(0x80033EFC);
ZZ_MARK(0x80033F00);
ZZ_MARK(0x80033F04);
ZZ_MARK(0x80033F08);
ZZ_MARK_TARGET(0x80033F0C,ZZ_337BC_750);
ZZ_MARK(0x80033F10);
ZZ_MARK(0x80033F14);
ZZ_MARK(0x80033F18);
ZZ_MARK(0x80033F1C);
ZZ_MARK(0x80033F20);
ZZ_MARK(0x80033F24);
ZZ_MARK_TARGET(0x80033F28,ZZ_337BC_76C);
ZZ_MARK(0x80033F2C);
ZZ_MARK(0x80033F30);
ZZ_MARK(0x80033F34);
ZZ_MARK(0x80033F38);
ZZ_MARK(0x80033F3C);
ZZ_MARK(0x80033F40);
ZZ_MARK(0x80033F44);
ZZ_MARK(0x80033F48);
ZZ_MARK_TARGET(0x80033F4C,ZZ_337BC_790);
ZZ_MARK(0x80033F50);
ZZ_MARK_TARGET(0x80033F54,ZZ_337BC_798);
ZZ_MARK(0x80033F58);
ZZ_MARK(0x80033F5C);
ZZ_MARK(0x80033F60);
ZZ_MARK(0x80033F64);
ZZ_MARK(0x80033F68);
ZZ_MARK(0x80033F6C);
ZZ_MARK(0x80033F70);
ZZ_MARK_TARGET(0x80033F74,ZZ_337BC_7B8);
ZZ_MARK(0x80033F78);
ZZ_MARK(0x80033F7C);
ZZ_MARK(0x80033F80);
ZZ_MARK(0x80033F84);
ZZ_MARK(0x80033F88);
ZZ_MARK(0x80033F8C);
ZZ_MARK(0x80033F90);
ZZ_MARK(0x80033F94);
ZZ_MARK(0x80033F98);
ZZ_MARK(0x80033F9C);
ZZ_MARK(0x80033FA0);
ZZ_MARK(0x80033FA4);
