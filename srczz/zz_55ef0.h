#ifdef ZZ_INCLUDE_CODE
ZZ_55EF0:
	SP -= 48;
	V0 = A0 << 16;
	T2 = (int32_t)V0 >> 16;
	V0 = 0x80070000;
	V0 -= 15268;
	A2 = T2 << 2;
	A2 += V0;
	V0 = A1 << 16;
	T0 = (int32_t)V0 >> 16;
	V0 = T0 << 1;
	V0 += T0;
	V0 <<= 2;
	V0 = V0 - T0;
	V0 <<= 4;
	EMU_Write32(SP + 36,S5); //+ 0x24
	EMU_Write32(SP + 40,RA); //+ 0x28
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V1 = EMU_ReadU32(A2);
	S3 = V1 + V0;
	A3 = EMU_ReadU32(S3);
	T1 = A3 + 1;
	EMU_Write32(S3,T1);
	V1 = EMU_ReadU32(A2);
	S2 = EMU_ReadU8(A3);
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 152); //+ 0x98
	V1 = 1025;
	V0 &= 0x401;
	if (V0 != V1)
	{
		S5 = R0;
		ZZ_CLOCKCYCLES(36,0x80055FAC);
		goto ZZ_55EF0_BC;
	}
	S5 = R0;
	V1 = EMU_ReadU32(S3 + 16); //+ 0x10
	V0 = V1 + 1;
	if (T1 != V0)
	{
		V0 = S2 & 0x80;
		ZZ_CLOCKCYCLES(41,0x80055FB0);
		goto ZZ_55EF0_C0;
	}
	V0 = S2 & 0x80;
	A0 = T2;
	A2 = EMU_ReadU8(V1 + 1); //+ 0x1
	RA = 0x80055FA4; //ZZ_55EF0_B4
	A1 = T0;
	ZZ_CLOCKCYCLES(45,0x80055CAC);
	goto ZZ_55CAC;
ZZ_55EF0_B4:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_BC:
	V0 = S2 & 0x80;
	ZZ_CLOCKCYCLES(1,0x80055FB0);
ZZ_55EF0_C0:
	if (!V0)
	{
		V0 = S2 & 0xF;
		ZZ_CLOCKCYCLES(2,0x8005610C);
		goto ZZ_55EF0_21C;
	}
	V0 = S2 & 0xF;
	EMU_Write8(S3 + 23,V0); //+ 0x17
	A2 = S2 & 0xF0;
	V0 = 192;
	if (A2 == V0)
	{
		V0 = (int32_t)A2 < 193;
		ZZ_CLOCKCYCLES(7,0x80056090);
		goto ZZ_55EF0_1A0;
	}
	V0 = (int32_t)A2 < 193;
	if (!V0)
	{
		V0 = 144;
		ZZ_CLOCKCYCLES(9,0x80055FEC);
		goto ZZ_55EF0_FC;
	}
	V0 = 144;
	if (A2 == V0)
	{
		V0 = 176;
		ZZ_CLOCKCYCLES(11,0x80056008);
		goto ZZ_55EF0_118;
	}
	V0 = 176;
	if (A2 == V0)
	{
		A0 <<= 16;
		ZZ_CLOCKCYCLES(13,0x80056064);
		goto ZZ_55EF0_174;
	}
	A0 <<= 16;
	V0 = S5;
	ZZ_CLOCKCYCLES(15,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_FC:
	V0 = 224;
	if (A2 == V0)
	{
		V0 = 240;
		ZZ_CLOCKCYCLES(3,0x800560C0);
		goto ZZ_55EF0_1D0;
	}
	V0 = 240;
	if (A2 == V0)
	{
		V0 = 255;
		ZZ_CLOCKCYCLES(5,0x800560E4);
		goto ZZ_55EF0_1F4;
	}
	V0 = 255;
	V0 = S5;
	ZZ_CLOCKCYCLES(7,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_118:
	S1 = A0 << 16;
	S1 = (int32_t)S1 >> 16;
	A0 = S1;
	S0 = A1 << 16;
	S0 = (int32_t)S0 >> 16;
	V1 = EMU_ReadU32(S3);
	V0 = 144;
	EMU_Write8(S3 + 22,V0); //+ 0x16
	V0 = V1 + 1;
	EMU_Write32(S3,V0);
	S2 = EMU_ReadU8(V1);
	V0 = V1 + 2;
	EMU_Write32(S3,V0);
	S4 = EMU_ReadU8(V1 + 1); //+ 0x1
	RA = 0x80056048; //ZZ_55EF0_158
	A1 = S0;
	ZZ_CLOCKCYCLES(16,0x800545DC);
	goto ZZ_545DC;
ZZ_55EF0_158:
	A0 = S1;
	A1 = S0;
	EMU_Write32(S3 + 144,V0); //+ 0x90
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1040); //+ 0x410
	A2 = S2;
	ZZ_CLOCKCYCLES(7,0x800561A0);
	goto ZZ_55EF0_2B0;
ZZ_55EF0_174:
	A0 = (int32_t)A0 >> 16;
	V0 = 176;
	V1 = EMU_ReadU32(S3);
	EMU_Write8(S3 + 22,V0); //+ 0x16
	V0 = V1 + 1;
	EMU_Write32(S3,V0);
	A2 = EMU_ReadU8(V1);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	A1 <<= 16;
	ZZ_CLOCKCYCLES(11,0x8005625C);
	goto ZZ_55EF0_36C;
ZZ_55EF0_1A0:
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	V0 = 192;
	V1 = EMU_ReadU32(S3);
	EMU_Write8(S3 + 22,V0); //+ 0x16
	V0 = V1 + 1;
	EMU_Write32(S3,V0);
	A2 = EMU_ReadU8(V1);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1044); //+ 0x414
	A1 <<= 16;
	ZZ_CLOCKCYCLES(12,0x8005625C);
	goto ZZ_55EF0_36C;
ZZ_55EF0_1D0:
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	V1 = 224;
	V0 = EMU_ReadU32(S3);
	A1 <<= 16;
	EMU_Write8(S3 + 22,V1); //+ 0x16
	V0 += 1;
	EMU_Write32(S3,V0);
	ZZ_CLOCKCYCLES(9,0x800561FC);
	goto ZZ_55EF0_30C;
ZZ_55EF0_1F4:
	V1 = EMU_ReadU32(S3);
	EMU_Write8(S3 + 22,V0); //+ 0x16
	V0 = V1 + 1;
	EMU_Write32(S3,V0);
	A2 = EMU_ReadU8(V1);
	V0 = 47;
	if (A2 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x80056224);
		goto ZZ_55EF0_334;
	}
	A0 <<= 16;
	ZZ_CLOCKCYCLES(10,0x8005624C);
	goto ZZ_55EF0_35C;
ZZ_55EF0_21C:
	V1 = EMU_ReadU8(S3 + 22); //+ 0x16
	V0 = 192;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 193;
		ZZ_CLOCKCYCLES(4,0x800561D0);
		goto ZZ_55EF0_2E0;
	}
	V0 = (int32_t)V1 < 193;
	if (!V0)
	{
		V0 = 144;
		ZZ_CLOCKCYCLES(6,0x8005613C);
		goto ZZ_55EF0_24C;
	}
	V0 = 144;
	if (V1 == V0)
	{
		V0 = 176;
		ZZ_CLOCKCYCLES(8,0x80056158);
		goto ZZ_55EF0_268;
	}
	V0 = 176;
	if (V1 == V0)
	{
		A0 <<= 16;
		ZZ_CLOCKCYCLES(10,0x800561B4);
		goto ZZ_55EF0_2C4;
	}
	A0 <<= 16;
	V0 = S5;
	ZZ_CLOCKCYCLES(12,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_24C:
	V0 = 224;
	if (V1 == V0)
	{
		V0 = 255;
		ZZ_CLOCKCYCLES(3,0x800561F0);
		goto ZZ_55EF0_300;
	}
	V0 = 255;
	if (V1 == V0)
	{
		A2 = S2 & 0xFF;
		ZZ_CLOCKCYCLES(5,0x80056218);
		goto ZZ_55EF0_328;
	}
	A2 = S2 & 0xFF;
	V0 = S5;
	ZZ_CLOCKCYCLES(7,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_268:
	S1 = A0 << 16;
	S1 = (int32_t)S1 >> 16;
	A0 = S1;
	S0 = A1 << 16;
	S0 = (int32_t)S0 >> 16;
	V1 = EMU_ReadU32(S3);
	V0 = V1 + 1;
	EMU_Write32(S3,V0);
	S4 = EMU_ReadU8(V1);
	RA = 0x80056188; //ZZ_55EF0_298
	A1 = S0;
	ZZ_CLOCKCYCLES(12,0x800545DC);
	goto ZZ_545DC;
ZZ_55EF0_298:
	A0 = S1;
	A1 = S0;
	A2 = S2;
	EMU_Write32(S3 + 144,V0); //+ 0x90
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1040); //+ 0x410
	ZZ_CLOCKCYCLES(6,0x800561A0);
ZZ_55EF0_2B0:
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800561AC; //ZZ_55EF0_2BC
	A3 = S4;
	ZZ_CLOCKCYCLES_JR(3);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800561A4)
	ZZ_JUMPREGISTER_END();
ZZ_55EF0_2BC:
	V0 = S5;
	ZZ_CLOCKCYCLES(2,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_2C4:
	A0 = (int32_t)A0 >> 16;
	A1 <<= 16;
	A1 = (int32_t)A1 >> 16;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	A2 = S2;
	ZZ_CLOCKCYCLES(7,0x80056260);
	goto ZZ_55EF0_370;
ZZ_55EF0_2E0:
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	A1 <<= 16;
	A1 = (int32_t)A1 >> 16;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1044); //+ 0x414
	A2 = S2;
	ZZ_CLOCKCYCLES(8,0x80056260);
	goto ZZ_55EF0_370;
ZZ_55EF0_300:
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	A1 <<= 16;
	ZZ_CLOCKCYCLES(3,0x800561FC);
ZZ_55EF0_30C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1048); //+ 0x418
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80056210; //ZZ_55EF0_320
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES_JR(5);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80056208)
	ZZ_JUMPREGISTER_END();
ZZ_55EF0_320:
	V0 = S5;
	ZZ_CLOCKCYCLES(2,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_328:
	V0 = 47;
	if (A2 != V0)
	{
		ZZ_CLOCKCYCLES(3,0x80056248);
		goto ZZ_55EF0_358;
	}
	ZZ_CLOCKCYCLES(3,0x80056224);
ZZ_55EF0_334:
	S5 = 1;
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	A1 <<= 16;
	A1 = (int32_t)A1 >> 16;
	RA = 0x80056240; //ZZ_55EF0_350
	A2 = 47;
	ZZ_CLOCKCYCLES(7,0x80055CAC);
	goto ZZ_55CAC;
ZZ_55EF0_350:
	V0 = S5;
	ZZ_CLOCKCYCLES(2,0x8005626C);
	goto ZZ_55EF0_37C;
ZZ_55EF0_358:
	A0 <<= 16;
	ZZ_CLOCKCYCLES(1,0x8005624C);
ZZ_55EF0_35C:
	A0 = (int32_t)A0 >> 16;
	A1 <<= 16;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 1052); //+ 0x41C
	ZZ_CLOCKCYCLES(4,0x8005625C);
ZZ_55EF0_36C:
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES(1,0x80056260);
ZZ_55EF0_370:
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80056268; //ZZ_55EF0_378
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80056260)
	ZZ_JUMPREGISTER_END();
ZZ_55EF0_378:
	V0 = S5;
	ZZ_CLOCKCYCLES(1,0x8005626C);
ZZ_55EF0_37C:
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80055C64,ZZ_55BA4_C0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80055EF0,0x80055FA4,ZZ_55EF0);
ZZ_MARK_TARGET(0x80055FA4,0x80055FAC,ZZ_55EF0_B4);
ZZ_MARK_TARGET(0x80055FAC,0x80055FB0,ZZ_55EF0_BC);
ZZ_MARK_TARGET(0x80055FB0,0x80055FEC,ZZ_55EF0_C0);
ZZ_MARK_TARGET(0x80055FEC,0x80056008,ZZ_55EF0_FC);
ZZ_MARK_TARGET(0x80056008,0x80056048,ZZ_55EF0_118);
ZZ_MARK_TARGET(0x80056048,0x80056064,ZZ_55EF0_158);
ZZ_MARK_TARGET(0x80056064,0x80056090,ZZ_55EF0_174);
ZZ_MARK_TARGET(0x80056090,0x800560C0,ZZ_55EF0_1A0);
ZZ_MARK_TARGET(0x800560C0,0x800560E4,ZZ_55EF0_1D0);
ZZ_MARK_TARGET(0x800560E4,0x8005610C,ZZ_55EF0_1F4);
ZZ_MARK_TARGET(0x8005610C,0x8005613C,ZZ_55EF0_21C);
ZZ_MARK_TARGET(0x8005613C,0x80056158,ZZ_55EF0_24C);
ZZ_MARK_TARGET(0x80056158,0x80056188,ZZ_55EF0_268);
ZZ_MARK_TARGET(0x80056188,0x800561A0,ZZ_55EF0_298);
ZZ_MARK_TARGET(0x800561A0,0x800561AC,ZZ_55EF0_2B0);
ZZ_MARK_TARGET(0x800561AC,0x800561B4,ZZ_55EF0_2BC);
ZZ_MARK_TARGET(0x800561B4,0x800561D0,ZZ_55EF0_2C4);
ZZ_MARK_TARGET(0x800561D0,0x800561F0,ZZ_55EF0_2E0);
ZZ_MARK_TARGET(0x800561F0,0x800561FC,ZZ_55EF0_300);
ZZ_MARK_TARGET(0x800561FC,0x80056210,ZZ_55EF0_30C);
ZZ_MARK_TARGET(0x80056210,0x80056218,ZZ_55EF0_320);
ZZ_MARK_TARGET(0x80056218,0x80056224,ZZ_55EF0_328);
ZZ_MARK_TARGET(0x80056224,0x80056240,ZZ_55EF0_334);
ZZ_MARK_TARGET(0x80056240,0x80056248,ZZ_55EF0_350);
ZZ_MARK_TARGET(0x80056248,0x8005624C,ZZ_55EF0_358);
ZZ_MARK_TARGET(0x8005624C,0x8005625C,ZZ_55EF0_35C);
ZZ_MARK_TARGET(0x8005625C,0x80056260,ZZ_55EF0_36C);
ZZ_MARK_TARGET(0x80056260,0x80056268,ZZ_55EF0_370);
ZZ_MARK_TARGET(0x80056268,0x8005626C,ZZ_55EF0_378);
ZZ_MARK_TARGET(0x8005626C,0x80056294,ZZ_55EF0_37C);
