#ifdef ZZ_INCLUDE_CODE
ZZ_44754:
	EMU_Write32(V1 + 100,RA); //+ 0x64
	RA = 0x80044760; //ZZ_44754_C
	ZZ_CLOCKCYCLES(3,0x80043328);
	goto ZZ_43328;
ZZ_44754_C:
	RA = 0x80044768; //ZZ_44754_14
	A0 = EMU_CheckedAdd(V1,32);
	ZZ_CLOCKCYCLES(2,0x800433A8);
	goto ZZ_433A8;
ZZ_44754_14:
	RA = EMU_ReadU32(V1 + 100); //+ 0x64
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80044784,ZZ_44754_30);
	ZZ_JUMPREGISTER_END();
ZZ_44754_24:
	EMU_Write32(V1 + 104,RA); //+ 0x68
	RA = 0x80044784; //ZZ_44754_30
	ZZ_CLOCKCYCLES(3,0x80044754);
	goto ZZ_44754;
ZZ_44754_30:
	A0 = GTE_GetRegister(GTE_CREG_TRZ);
	T9 = EMU_ReadU32(V1 + 16); //+ 0x10
	T8 = EMU_ReadU32(V1 + 8); //+ 0x8
	A0 = A0 - T9;
	if ((int32_t)A0 < 0)
	{
		A0 <<= T8;
		ZZ_CLOCKCYCLES(6,0x800447BC);
		goto ZZ_44754_68;
	}
	A0 <<= T8;
	T9 = EMU_ReadS16(SP + 32); //+ 0x20
	T8 = EMU_ReadU32(V1 + 4); //+ 0x4
	A0 += T9;
	T9 = EMU_CheckedAdd(A0,-4096);
	if ((int32_t)T9 <= 0)
	{
		EMU_Write32(SP + 40,T8); //+ 0x28
		ZZ_CLOCKCYCLES(12,0x800447B8);
		goto ZZ_44754_64;
	}
	EMU_Write32(SP + 40,T8); //+ 0x28
	A0 = 4096;
	ZZ_CLOCKCYCLES(13,0x800447B8);
ZZ_44754_64:
	EMU_Write16(SP + 32,A0); //+ 0x20
	ZZ_CLOCKCYCLES(1,0x800447BC);
ZZ_44754_68:
	RA = EMU_ReadU32(V1 + 104); //+ 0x68
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80044784,ZZ_44754_30);
	ZZ_JUMPREGISTER_END();
ZZ_44754_78:
	EMU_Write32(V1 + 100,RA); //+ 0x64
	RA = 0x800447D8; //ZZ_44754_84
	A0 = EMU_CheckedAdd(V1,32);
	ZZ_CLOCKCYCLES(3,0x80043240);
	goto ZZ_43240;
ZZ_44754_84:
	RA = 0x800447E0; //ZZ_44754_8C
	A0 = EMU_CheckedAdd(V1,32);
	ZZ_CLOCKCYCLES(2,0x800433A8);
	goto ZZ_433A8;
ZZ_44754_8C:
	RA = EMU_ReadU32(V1 + 100); //+ 0x64
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80044784,ZZ_44754_30);
	ZZ_JUMPREGISTER_END();
ZZ_44754_9C:
	EMU_Write32(V1 + 100,RA); //+ 0x64
	RA = 0x800447FC; //ZZ_44754_A8
	ZZ_CLOCKCYCLES(3,0x80043328);
	goto ZZ_43328;
ZZ_44754_A8:
	RA = EMU_ReadU32(V1 + 100); //+ 0x64
	T5 = EMU_ReadU32(GP + 96); //+ 0x60
	T6 = EMU_ReadU32(GP + 100); //+ 0x64
	T5 = (int32_t)T5 >> 8;
	T6 = (int32_t)T6 >> 8;
	T6 = EMU_CheckedSubtract(R0,T6);
	T7 = GTE_GetRegister(GTE_CREG_H);
	GTE_SetRegister(GTE_CREG_TRX,T5);
	GTE_SetRegister(GTE_CREG_TRY,T6);
	GTE_SetRegister(GTE_CREG_TRZ,T7);
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80044784,ZZ_44754_30);
	ZZ_JUMPREGISTER_END();
ZZ_44754_D8:
	EMU_Write32(V1 + 100,RA); //+ 0x64
	RA = 0x80044838; //ZZ_44754_E4
	ZZ_CLOCKCYCLES(3,0x80043328);
	goto ZZ_43328;
ZZ_44754_E4:
	RA = 0x80044840; //ZZ_44754_EC
	A0 = EMU_CheckedAdd(V1,32);
	ZZ_CLOCKCYCLES(2,0x800433A8);
	goto ZZ_433A8;
ZZ_44754_EC:
	RA = EMU_ReadU32(V1 + 100); //+ 0x64
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80044784,ZZ_44754_30);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80044754,0x80044760,ZZ_44754);
ZZ_MARK_TARGET(0x80044760,0x80044768,ZZ_44754_C);
ZZ_MARK_TARGET(0x80044768,0x80044778,ZZ_44754_14);
ZZ_MARK_TARGET(0x80044778,0x80044784,ZZ_44754_24);
ZZ_MARK_TARGET(0x80044784,0x800447B8,ZZ_44754_30);
ZZ_MARK_TARGET(0x800447B8,0x800447BC,ZZ_44754_64);
ZZ_MARK_TARGET(0x800447BC,0x800447CC,ZZ_44754_68);
ZZ_MARK_TARGET(0x800447CC,0x800447D8,ZZ_44754_78);
ZZ_MARK_TARGET(0x800447D8,0x800447E0,ZZ_44754_84);
ZZ_MARK_TARGET(0x800447E0,0x800447F0,ZZ_44754_8C);
ZZ_MARK_TARGET(0x800447F0,0x800447FC,ZZ_44754_9C);
ZZ_MARK_TARGET(0x800447FC,0x8004482C,ZZ_44754_A8);
ZZ_MARK_TARGET(0x8004482C,0x80044838,ZZ_44754_D8);
ZZ_MARK_TARGET(0x80044838,0x80044840,ZZ_44754_E4);
ZZ_MARK_TARGET(0x80044840,0x80044850,ZZ_44754_EC);
