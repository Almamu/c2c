#ifdef ZZ_INCLUDE_CODE
ZZ_2CE7C:
	T1 = EMU_ReadU32(SP + 16); //+ 0x10
	A2 += 16;
	V0 = (int32_t)A2 < 32;
	if (!V0)
	{
		T0 = -1;
		ZZ_CLOCKCYCLES(5,0x8002CEA0);
		goto ZZ_2CE7C_24;
	}
	T0 = -1;
	if ((int32_t)A2 <= 0)
	{
		V0 = 0x20;
		ZZ_CLOCKCYCLES(7,0x8002CF5C);
		goto ZZ_2CE7C_E0;
	}
	V0 = 0x20;
	V0 = V0 - A2;
	T0 <<= V0;
	ZZ_CLOCKCYCLES(9,0x8002CEA0);
ZZ_2CE7C_24:
	A0 += 15;
	V0 = (int32_t)A0 < 32;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002CF5C);
		goto ZZ_2CE7C_E0;
	}
	if ((int32_t)A0 < 0)
	{
		V0 = 0x80000000;
		ZZ_CLOCKCYCLES(6,0x8002CEC4);
		goto ZZ_2CE7C_48;
	}
	V0 = 0x80000000;
	V0 = (int32_t)V0 >> A0;
	V0 = ~V0;
	T0 &= V0;
	ZZ_CLOCKCYCLES(9,0x8002CEC4);
ZZ_2CE7C_48:
	if (!T0)
	{
		ZZ_CLOCKCYCLES(2,0x8002CF5C);
		goto ZZ_2CE7C_E0;
	}
	A1 += 16;
	if ((int32_t)A1 >= 0)
	{
		ZZ_CLOCKCYCLES(5,0x8002CEDC);
		goto ZZ_2CE7C_60;
	}
	A1 = R0;
	ZZ_CLOCKCYCLES(6,0x8002CEDC);
ZZ_2CE7C_60:
	A3 += 16;
	V0 = (int32_t)A3 < 33;
	if (V0)
	{
		V0 = (int32_t)A1 < 32;
		ZZ_CLOCKCYCLES(4,0x8002CEF0);
		goto ZZ_2CE7C_74;
	}
	V0 = (int32_t)A1 < 32;
	A3 = 0x20;
	ZZ_CLOCKCYCLES(5,0x8002CEF0);
ZZ_2CE7C_74:
	if (!V0)
	{
		V0 = A1 << 2;
		ZZ_CLOCKCYCLES(2,0x8002CF5C);
		goto ZZ_2CE7C_E0;
	}
	V0 = A1 << 2;
	V1 = EMU_ReadU32(GP + 584); //+ 0x248
	if (!T1)
	{
		V1 += V0;
		ZZ_CLOCKCYCLES(5,0x8002CF34);
		goto ZZ_2CE7C_B8;
	}
	V1 += V0;
	V0 = (int32_t)A1 < (int32_t)A3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002CF5C);
		goto ZZ_2CE7C_E0;
	}
	ZZ_CLOCKCYCLES(8,0x8002CF10);
ZZ_2CE7C_94:
	V0 = EMU_ReadU32(V1);
	A1 += 1;
	V0 |= T0;
	EMU_Write32(V1,V0);
	V0 = (int32_t)A1 < (int32_t)A3;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(7,0x8002CF10);
		goto ZZ_2CE7C_94;
	}
	V1 += 4;
	ZZ_CLOCKCYCLES(9,0x8002CF5C);
	goto ZZ_2CE7C_E0;
ZZ_2CE7C_B8:
	V0 = (int32_t)A1 < (int32_t)A3;
	if (!V0)
	{
		T0 = ~T0;
		ZZ_CLOCKCYCLES(3,0x8002CF5C);
		goto ZZ_2CE7C_E0;
	}
	T0 = ~T0;
	ZZ_CLOCKCYCLES(3,0x8002CF40);
ZZ_2CE7C_C4:
	V0 = EMU_ReadU32(V1);
	A1 += 1;
	V0 &= T0;
	EMU_Write32(V1,V0);
	V0 = (int32_t)A1 < (int32_t)A3;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(7,0x8002CF40);
		goto ZZ_2CE7C_C4;
	}
	V1 += 4;
	ZZ_CLOCKCYCLES(7,0x8002CF5C);
ZZ_2CE7C_E0:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8002E544,ZZ_2E2BC_288);
	ZZ_JUMPREGISTER(0x8002DF3C,ZZ_2D9F8_544);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002CE7C,0x8002CEA0,ZZ_2CE7C);
ZZ_MARK_TARGET(0x8002CEA0,0x8002CEC4,ZZ_2CE7C_24);
ZZ_MARK_TARGET(0x8002CEC4,0x8002CEDC,ZZ_2CE7C_48);
ZZ_MARK_TARGET(0x8002CEDC,0x8002CEF0,ZZ_2CE7C_60);
ZZ_MARK_TARGET(0x8002CEF0,0x8002CF10,ZZ_2CE7C_74);
ZZ_MARK_TARGET(0x8002CF10,0x8002CF34,ZZ_2CE7C_94);
ZZ_MARK_TARGET(0x8002CF34,0x8002CF40,ZZ_2CE7C_B8);
ZZ_MARK_TARGET(0x8002CF40,0x8002CF5C,ZZ_2CE7C_C4);
ZZ_MARK_TARGET(0x8002CF5C,0x8002CF64,ZZ_2CE7C_E0);
