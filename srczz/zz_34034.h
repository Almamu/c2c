#ifdef ZZ_INCLUDE_CODE
ZZ_34034:
	SP -= 24;
	V0 = 0x1;
	EMU_Write32(SP + 16,RA); //+ 0x10
	EMU_Write32(GP + 208,V0); //+ 0xD0
	RA = 0x8003404C; //ZZ_34034_18
	A0 = 0x4;
	ZZ_CLOCKCYCLES(6,0x800567A0);
	goto ZZ_567A0;
ZZ_34034_18:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12652); //+ 0xFFFFCE94
	A0 = V0 << 14;
	A0 = A0 - V0;
	A0 <<= 8;
	RA = 0x8003406C; //ZZ_34034_38
	A0 = (int32_t)A0 >> 16;
	ZZ_CLOCKCYCLES(8,0x80033FA8);
	goto ZZ_33FA8;
ZZ_34034_38:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2428); //+ 0xFFFFF684
	V0 = 0x63960000;
	V0 |= 0x347F;
	EMU_Write32(GP + 376,V0); //+ 0x178
	V0 = -1;
	EMU_Write32(GP + 544,R0); //+ 0x220
	EMU_Write16(GP + 616,V0); //+ 0x268
	EMU_Write16(GP + 612,V0); //+ 0x264
	V1 -= 1;
	V0 = V1 < 38;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(13,0x800340D0);
		goto ZZ_34034_9C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1488); //+ 0x5D0
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(19);
	ZZ_JUMPREGISTER(0x800340D0,ZZ_34034_9C);
	ZZ_JUMPREGISTER(0x800340B8,ZZ_34034_84);
	ZZ_JUMPREGISTER(0x800340C8,ZZ_34034_94);
	ZZ_JUMPREGISTER(0x800340C0,ZZ_34034_8C);
	ZZ_JUMPREGISTER_END();
ZZ_34034_84:
	V0 = 0x12;
	ZZ_CLOCKCYCLES(2,0x800340D4);
	goto ZZ_34034_A0;
ZZ_34034_8C:
	V0 = 0x11;
	ZZ_CLOCKCYCLES(2,0x800340D4);
	goto ZZ_34034_A0;
ZZ_34034_94:
	V0 = 0xC;
	ZZ_CLOCKCYCLES(2,0x800340D4);
	goto ZZ_34034_A0;
ZZ_34034_9C:
	V0 = 0x10;
	ZZ_CLOCKCYCLES(1,0x800340D4);
ZZ_34034_A0:
	EMU_Write32(GP + 392,V0); //+ 0x188
	A0 = EMU_ReadU8(GP + 392); //+ 0x188
	RA = 0x800340E4; //ZZ_34034_B0
	ZZ_CLOCKCYCLES(4,0x8005A660);
	goto ZZ_5A660;
ZZ_34034_B0:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80014FC8,ZZ_14D6C_25C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80034034,ZZ_34034);
ZZ_MARK(0x80034038);
ZZ_MARK(0x8003403C);
ZZ_MARK(0x80034040);
ZZ_MARK(0x80034044);
ZZ_MARK(0x80034048);
ZZ_MARK_TARGET(0x8003404C,ZZ_34034_18);
ZZ_MARK(0x80034050);
ZZ_MARK(0x80034054);
ZZ_MARK(0x80034058);
ZZ_MARK(0x8003405C);
ZZ_MARK(0x80034060);
ZZ_MARK(0x80034064);
ZZ_MARK(0x80034068);
ZZ_MARK_TARGET(0x8003406C,ZZ_34034_38);
ZZ_MARK(0x80034070);
ZZ_MARK(0x80034074);
ZZ_MARK(0x80034078);
ZZ_MARK(0x8003407C);
ZZ_MARK(0x80034080);
ZZ_MARK(0x80034084);
ZZ_MARK(0x80034088);
ZZ_MARK(0x8003408C);
ZZ_MARK(0x80034090);
ZZ_MARK(0x80034094);
ZZ_MARK(0x80034098);
ZZ_MARK(0x8003409C);
ZZ_MARK(0x800340A0);
ZZ_MARK(0x800340A4);
ZZ_MARK(0x800340A8);
ZZ_MARK(0x800340AC);
ZZ_MARK(0x800340B0);
ZZ_MARK(0x800340B4);
ZZ_MARK_TARGET(0x800340B8,ZZ_34034_84);
ZZ_MARK(0x800340BC);
ZZ_MARK_TARGET(0x800340C0,ZZ_34034_8C);
ZZ_MARK(0x800340C4);
ZZ_MARK_TARGET(0x800340C8,ZZ_34034_94);
ZZ_MARK(0x800340CC);
ZZ_MARK_TARGET(0x800340D0,ZZ_34034_9C);
ZZ_MARK_TARGET(0x800340D4,ZZ_34034_A0);
ZZ_MARK(0x800340D8);
ZZ_MARK(0x800340DC);
ZZ_MARK(0x800340E0);
ZZ_MARK_TARGET(0x800340E4,ZZ_34034_B0);
ZZ_MARK(0x800340E8);
ZZ_MARK(0x800340EC);
ZZ_MARK(0x800340F0);
