#ifdef ZZ_INCLUDE_CODE
ZZ_2A868:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	SP -= 96;
	EMU_Write32(SP + 68,S3); //+ 0x44
	S3 = A0;
	EMU_Write32(SP + 72,S4); //+ 0x48
	S4 = A3;
	EMU_Write32(SP + 92,RA); //+ 0x5C
	EMU_Write32(SP + 88,FP); //+ 0x58
	EMU_Write32(SP + 84,S7); //+ 0x54
	EMU_Write32(SP + 80,S6); //+ 0x50
	EMU_Write32(SP + 76,S5); //+ 0x4C
	EMU_Write32(SP + 64,S2); //+ 0x40
	EMU_Write32(SP + 60,S1); //+ 0x3C
	if (V0)
	{
		EMU_Write32(SP + 56,S0); //+ 0x38
		ZZ_CLOCKCYCLES(16,0x8002A8B4);
		goto ZZ_2A868_4C;
	}
	EMU_Write32(SP + 56,S0); //+ 0x38
	V0 = 0xC4650000;
	V0 |= 0x3601;
	ZZ_CLOCKCYCLES(19,0x8002ABB0);
	goto ZZ_2A868_348;
ZZ_2A868_4C:
	T1 = 0xC4650000;
	T1 |= 0x3601;
	FP = 0xC4650000;
	EMU_Write32(SP + 32,T1); //+ 0x20
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	A0 = EMU_ReadU32(A1 + 4); //+ 0x4
	FP |= 0x3601;
	V1 = 0xF424;
	A0 = A0 - V0;
	if ((int32_t)A0 <= 0)
	{
		S7 = V0 + V1;
		ZZ_CLOCKCYCLES(11,0x8002A8E4);
		goto ZZ_2A868_7C;
	}
	S7 = V0 + V1;
	S7 += A0;
	ZZ_CLOCKCYCLES(12,0x8002A8E4);
ZZ_2A868_7C:
	V0 = EMU_ReadU32(A2);
	V0 -= 19200;
	EMU_Write32(S4 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	EMU_Write32(S4 + 4132,V0); //+ 0x1024
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V0 -= 19200;
	EMU_Write32(S4 + 4136,V0); //+ 0x1028
	V0 = EMU_ReadU32(A2);
	S5 = R0;
	V0 += 19200;
	EMU_Write32(S4 + 4140,V0); //+ 0x102C
	V1 = EMU_ReadU32(S3 + 256); //+ 0x100
	A0 = EMU_ReadU32(A2 + 4); //+ 0x4
	V0 = 0x40000000;
	V1 &= V0;
	if (V1)
	{
		S6 = S4 + 4128;
		ZZ_CLOCKCYCLES(21,0x8002A94C);
		goto ZZ_2A868_E4;
	}
	S6 = S4 + 4128;
	V0 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 += A0;
	ZZ_CLOCKCYCLES(26,0x8002A958);
	goto ZZ_2A868_F0;
ZZ_2A868_E4:
	V0 = 0x20000;
	V0 |= 0x9900;
	V0 += A0;
	ZZ_CLOCKCYCLES(3,0x8002A958);
ZZ_2A868_F0:
	EMU_Write32(S6 + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V0 += 19200;
	EMU_Write32(S6 + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(S4 + 4172); //+ 0x104C
	V0 += 16;
	EMU_Write32(S4 + 4172,V0); //+ 0x104C
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(14,0x8002AB7C);
		goto ZZ_2A868_314;
	}
	S1 = R0;
	T0 = 0x10000;
	V0 = S1 << 2;
	ZZ_CLOCKCYCLES(16,0x8002A998);
ZZ_2A868_130:
	AT = 0x80070000;
	AT += V0;
	S2 = EMU_ReadU32(AT - 12140); //+ 0xFFFFD094
	S0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V1 = EMU_ReadU32(S0 + 172); //+ 0xAC
	A0 = 0xC4650000;
	V0 = 0x400000;
	V1 &= V0;
	V0 = 0x1;
	if (V1 == V0)
	{
		A0 |= 0x3601;
		ZZ_CLOCKCYCLES(13,0x8002A9D0);
		goto ZZ_2A868_168;
	}
	A0 |= 0x3601;
	A0 = S7;
	ZZ_CLOCKCYCLES(14,0x8002A9D0);
ZZ_2A868_168:
	EMU_Write32(SP + 16,FP); //+ 0x10
	EMU_Write32(SP + 20,A0); //+ 0x14
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 &= 0x200;
	if (!V0)
	{
		V0 = S0 + 156;
		ZZ_CLOCKCYCLES(7,0x8002A9F4);
		goto ZZ_2A868_18C;
	}
	V0 = S0 + 156;
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(9,0x8002A9F8);
	goto ZZ_2A868_190;
ZZ_2A868_18C:
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(1,0x8002A9F8);
ZZ_2A868_190:
	A0 = S2;
	A1 = S6;
	A2 = 0x1;
	A3 = 0x1;
	RA = 0x8002AA10; //ZZ_2A868_1A8
	EMU_Write32(SP + 48,T0); //+ 0x30
	ZZ_CLOCKCYCLES(6,0x8002ABE4);
	goto ZZ_2ABE4;
ZZ_2A868_1A8:
	V1 = 0xC4650000;
	V1 |= 0x3601;
	A1 = V0;
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	if (A1 == V1)
	{
		V1 = 0x20000;
		ZZ_CLOCKCYCLES(6,0x8002AB64);
		goto ZZ_2A868_2FC;
	}
	V1 = 0x20000;
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x8002AB54);
		goto ZZ_2A868_2EC;
	}
	V0 = EMU_ReadU32(S3 + 256); //+ 0x100
	V0 &= 0x10;
	if (V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(16,0x8002AA60);
		goto ZZ_2A868_1F8;
	}
	V0 = 0x5;
	V1 = EMU_ReadU32(S3 + 264); //+ 0x108
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(20,0x8002AAA8);
		goto ZZ_2A868_240;
	}
	ZZ_CLOCKCYCLES(20,0x8002AA60);
ZZ_2A868_1F8:
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002AA94);
		goto ZZ_2A868_22C;
	}
	V0 = EMU_ReadU32(S0 + 176); //+ 0xB0
	V0 &= 0x1012;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x8002AABC);
		goto ZZ_2A868_254;
	}
	ZZ_CLOCKCYCLES(13,0x8002AA94);
ZZ_2A868_22C:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= 0x20;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002AABC);
		goto ZZ_2A868_254;
	}
	ZZ_CLOCKCYCLES(5,0x8002AAA8);
ZZ_2A868_240:
	V0 = EMU_ReadU32(S3 + 256); //+ 0x100
	V0 &= T0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002AAD0);
		goto ZZ_2A868_268;
	}
	ZZ_CLOCKCYCLES(5,0x8002AABC);
ZZ_2A868_254:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= T0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002AB54);
		goto ZZ_2A868_2EC;
	}
	ZZ_CLOCKCYCLES(5,0x8002AAD0);
ZZ_2A868_268:
	A0 = EMU_ReadU32(S3 + 256); //+ 0x100
	V0 = 0xA00000;
	V1 = A0 & V0;
	V0 = 0x200000;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002AB30);
		goto ZZ_2A868_2C8;
	}
	V0 = EMU_ReadU32(S0 + 176); //+ 0xB0
	V0 &= V1;
	if (V0)
	{
		V0 = A0 & 0x8;
		ZZ_CLOCKCYCLES(11,0x8002AB30);
		goto ZZ_2A868_2C8;
	}
	V0 = A0 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x8002AB1C);
		goto ZZ_2A868_2B4;
	}
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	if ((int32_t)V0 < 0)
	{
		ZZ_CLOCKCYCLES(17,0x8002AB30);
		goto ZZ_2A868_2C8;
	}
	ZZ_CLOCKCYCLES(19,0x8002AB54);
	goto ZZ_2A868_2EC;
ZZ_2A868_2B4:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= 0x200;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002AB54);
		goto ZZ_2A868_2EC;
	}
	ZZ_CLOCKCYCLES(5,0x8002AB30);
ZZ_2A868_2C8:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V0 |= 0x4000;
	EMU_Write32(S0 + 168,V0); //+ 0xA8
	V0 = EMU_ReadU32(S3 + 8); //+ 0x8
	T1 = A1 + 1;
	FP = A1;
	EMU_Write32(SP + 32,T1); //+ 0x20
	EMU_Write32(V0 + 72,S0); //+ 0x48
	ZZ_CLOCKCYCLES(9,0x8002AB54);
ZZ_2A868_2EC:
	V0 = EMU_ReadU32(S4 + 4172); //+ 0x104C
	S5 = S2;
	V0 += 4096;
	EMU_Write32(S4 + 4172,V0); //+ 0x104C
	ZZ_CLOCKCYCLES(4,0x8002AB64);
ZZ_2A868_2FC:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		V0 = S1 << 2;
		ZZ_CLOCKCYCLES(6,0x8002A998);
		goto ZZ_2A868_130;
	}
	V0 = S1 << 2;
	ZZ_CLOCKCYCLES(6,0x8002AB7C);
ZZ_2A868_314:
	if (!S5)
	{
		ZZ_CLOCKCYCLES(2,0x8002ABAC);
		goto ZZ_2A868_344;
	}
	V0 = EMU_ReadU32(S5);
	V0 &= 0x7;
	if (V0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(7,0x8002AB9C);
		goto ZZ_2A868_334;
	}
	A3 = R0;
	A3 = S5 + 8;
	ZZ_CLOCKCYCLES(8,0x8002AB9C);
ZZ_2A868_334:
	A2 = EMU_ReadU32(S5 + 4); //+ 0x4
	A0 = S3;
	RA = 0x8002ABAC; //ZZ_2A868_344
	A1 = S6;
	ZZ_CLOCKCYCLES(4,0x8001A848);
	goto ZZ_1A848;
ZZ_2A868_344:
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(1,0x8002ABB0);
ZZ_2A868_348:
	RA = EMU_ReadU32(SP + 92); //+ 0x5C
	FP = EMU_ReadU32(SP + 88); //+ 0x58
	S7 = EMU_ReadU32(SP + 84); //+ 0x54
	S6 = EMU_ReadU32(SP + 80); //+ 0x50
	S5 = EMU_ReadU32(SP + 76); //+ 0x4C
	S4 = EMU_ReadU32(SP + 72); //+ 0x48
	S3 = EMU_ReadU32(SP + 68); //+ 0x44
	S2 = EMU_ReadU32(SP + 64); //+ 0x40
	S1 = EMU_ReadU32(SP + 60); //+ 0x3C
	S0 = EMU_ReadU32(SP + 56); //+ 0x38
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002B60C,ZZ_2B478_194);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002A868,ZZ_2A868);
ZZ_MARK(0x8002A86C);
ZZ_MARK(0x8002A870);
ZZ_MARK(0x8002A874);
ZZ_MARK(0x8002A878);
ZZ_MARK(0x8002A87C);
ZZ_MARK(0x8002A880);
ZZ_MARK(0x8002A884);
ZZ_MARK(0x8002A888);
ZZ_MARK(0x8002A88C);
ZZ_MARK(0x8002A890);
ZZ_MARK(0x8002A894);
ZZ_MARK(0x8002A898);
ZZ_MARK(0x8002A89C);
ZZ_MARK(0x8002A8A0);
ZZ_MARK(0x8002A8A4);
ZZ_MARK(0x8002A8A8);
ZZ_MARK(0x8002A8AC);
ZZ_MARK(0x8002A8B0);
ZZ_MARK_TARGET(0x8002A8B4,ZZ_2A868_4C);
ZZ_MARK(0x8002A8B8);
ZZ_MARK(0x8002A8BC);
ZZ_MARK(0x8002A8C0);
ZZ_MARK(0x8002A8C4);
ZZ_MARK(0x8002A8C8);
ZZ_MARK(0x8002A8CC);
ZZ_MARK(0x8002A8D0);
ZZ_MARK(0x8002A8D4);
ZZ_MARK(0x8002A8D8);
ZZ_MARK(0x8002A8DC);
ZZ_MARK(0x8002A8E0);
ZZ_MARK_TARGET(0x8002A8E4,ZZ_2A868_7C);
ZZ_MARK(0x8002A8E8);
ZZ_MARK(0x8002A8EC);
ZZ_MARK(0x8002A8F0);
ZZ_MARK(0x8002A8F4);
ZZ_MARK(0x8002A8F8);
ZZ_MARK(0x8002A8FC);
ZZ_MARK(0x8002A900);
ZZ_MARK(0x8002A904);
ZZ_MARK(0x8002A908);
ZZ_MARK(0x8002A90C);
ZZ_MARK(0x8002A910);
ZZ_MARK(0x8002A914);
ZZ_MARK(0x8002A918);
ZZ_MARK(0x8002A91C);
ZZ_MARK(0x8002A920);
ZZ_MARK(0x8002A924);
ZZ_MARK(0x8002A928);
ZZ_MARK(0x8002A92C);
ZZ_MARK(0x8002A930);
ZZ_MARK(0x8002A934);
ZZ_MARK(0x8002A938);
ZZ_MARK(0x8002A93C);
ZZ_MARK(0x8002A940);
ZZ_MARK(0x8002A944);
ZZ_MARK(0x8002A948);
ZZ_MARK_TARGET(0x8002A94C,ZZ_2A868_E4);
ZZ_MARK(0x8002A950);
ZZ_MARK(0x8002A954);
ZZ_MARK_TARGET(0x8002A958,ZZ_2A868_F0);
ZZ_MARK(0x8002A95C);
ZZ_MARK(0x8002A960);
ZZ_MARK(0x8002A964);
ZZ_MARK(0x8002A968);
ZZ_MARK(0x8002A96C);
ZZ_MARK(0x8002A970);
ZZ_MARK(0x8002A974);
ZZ_MARK(0x8002A978);
ZZ_MARK(0x8002A97C);
ZZ_MARK(0x8002A980);
ZZ_MARK(0x8002A984);
ZZ_MARK(0x8002A988);
ZZ_MARK(0x8002A98C);
ZZ_MARK(0x8002A990);
ZZ_MARK(0x8002A994);
ZZ_MARK_TARGET(0x8002A998,ZZ_2A868_130);
ZZ_MARK(0x8002A99C);
ZZ_MARK(0x8002A9A0);
ZZ_MARK(0x8002A9A4);
ZZ_MARK(0x8002A9A8);
ZZ_MARK(0x8002A9AC);
ZZ_MARK(0x8002A9B0);
ZZ_MARK(0x8002A9B4);
ZZ_MARK(0x8002A9B8);
ZZ_MARK(0x8002A9BC);
ZZ_MARK(0x8002A9C0);
ZZ_MARK(0x8002A9C4);
ZZ_MARK(0x8002A9C8);
ZZ_MARK(0x8002A9CC);
ZZ_MARK_TARGET(0x8002A9D0,ZZ_2A868_168);
ZZ_MARK(0x8002A9D4);
ZZ_MARK(0x8002A9D8);
ZZ_MARK(0x8002A9DC);
ZZ_MARK(0x8002A9E0);
ZZ_MARK(0x8002A9E4);
ZZ_MARK(0x8002A9E8);
ZZ_MARK(0x8002A9EC);
ZZ_MARK(0x8002A9F0);
ZZ_MARK_TARGET(0x8002A9F4,ZZ_2A868_18C);
ZZ_MARK_TARGET(0x8002A9F8,ZZ_2A868_190);
ZZ_MARK(0x8002A9FC);
ZZ_MARK(0x8002AA00);
ZZ_MARK(0x8002AA04);
ZZ_MARK(0x8002AA08);
ZZ_MARK(0x8002AA0C);
ZZ_MARK_TARGET(0x8002AA10,ZZ_2A868_1A8);
ZZ_MARK(0x8002AA14);
ZZ_MARK(0x8002AA18);
ZZ_MARK(0x8002AA1C);
ZZ_MARK(0x8002AA20);
ZZ_MARK(0x8002AA24);
ZZ_MARK(0x8002AA28);
ZZ_MARK(0x8002AA2C);
ZZ_MARK(0x8002AA30);
ZZ_MARK(0x8002AA34);
ZZ_MARK(0x8002AA38);
ZZ_MARK(0x8002AA3C);
ZZ_MARK(0x8002AA40);
ZZ_MARK(0x8002AA44);
ZZ_MARK(0x8002AA48);
ZZ_MARK(0x8002AA4C);
ZZ_MARK(0x8002AA50);
ZZ_MARK(0x8002AA54);
ZZ_MARK(0x8002AA58);
ZZ_MARK(0x8002AA5C);
ZZ_MARK_TARGET(0x8002AA60,ZZ_2A868_1F8);
ZZ_MARK(0x8002AA64);
ZZ_MARK(0x8002AA68);
ZZ_MARK(0x8002AA6C);
ZZ_MARK(0x8002AA70);
ZZ_MARK(0x8002AA74);
ZZ_MARK(0x8002AA78);
ZZ_MARK(0x8002AA7C);
ZZ_MARK(0x8002AA80);
ZZ_MARK(0x8002AA84);
ZZ_MARK(0x8002AA88);
ZZ_MARK(0x8002AA8C);
ZZ_MARK(0x8002AA90);
ZZ_MARK_TARGET(0x8002AA94,ZZ_2A868_22C);
ZZ_MARK(0x8002AA98);
ZZ_MARK(0x8002AA9C);
ZZ_MARK(0x8002AAA0);
ZZ_MARK(0x8002AAA4);
ZZ_MARK_TARGET(0x8002AAA8,ZZ_2A868_240);
ZZ_MARK(0x8002AAAC);
ZZ_MARK(0x8002AAB0);
ZZ_MARK(0x8002AAB4);
ZZ_MARK(0x8002AAB8);
ZZ_MARK_TARGET(0x8002AABC,ZZ_2A868_254);
ZZ_MARK(0x8002AAC0);
ZZ_MARK(0x8002AAC4);
ZZ_MARK(0x8002AAC8);
ZZ_MARK(0x8002AACC);
ZZ_MARK_TARGET(0x8002AAD0,ZZ_2A868_268);
ZZ_MARK(0x8002AAD4);
ZZ_MARK(0x8002AAD8);
ZZ_MARK(0x8002AADC);
ZZ_MARK(0x8002AAE0);
ZZ_MARK(0x8002AAE4);
ZZ_MARK(0x8002AAE8);
ZZ_MARK(0x8002AAEC);
ZZ_MARK(0x8002AAF0);
ZZ_MARK(0x8002AAF4);
ZZ_MARK(0x8002AAF8);
ZZ_MARK(0x8002AAFC);
ZZ_MARK(0x8002AB00);
ZZ_MARK(0x8002AB04);
ZZ_MARK(0x8002AB08);
ZZ_MARK(0x8002AB0C);
ZZ_MARK(0x8002AB10);
ZZ_MARK(0x8002AB14);
ZZ_MARK(0x8002AB18);
ZZ_MARK_TARGET(0x8002AB1C,ZZ_2A868_2B4);
ZZ_MARK(0x8002AB20);
ZZ_MARK(0x8002AB24);
ZZ_MARK(0x8002AB28);
ZZ_MARK(0x8002AB2C);
ZZ_MARK_TARGET(0x8002AB30,ZZ_2A868_2C8);
ZZ_MARK(0x8002AB34);
ZZ_MARK(0x8002AB38);
ZZ_MARK(0x8002AB3C);
ZZ_MARK(0x8002AB40);
ZZ_MARK(0x8002AB44);
ZZ_MARK(0x8002AB48);
ZZ_MARK(0x8002AB4C);
ZZ_MARK(0x8002AB50);
ZZ_MARK_TARGET(0x8002AB54,ZZ_2A868_2EC);
ZZ_MARK(0x8002AB58);
ZZ_MARK(0x8002AB5C);
ZZ_MARK(0x8002AB60);
ZZ_MARK_TARGET(0x8002AB64,ZZ_2A868_2FC);
ZZ_MARK(0x8002AB68);
ZZ_MARK(0x8002AB6C);
ZZ_MARK(0x8002AB70);
ZZ_MARK(0x8002AB74);
ZZ_MARK(0x8002AB78);
ZZ_MARK_TARGET(0x8002AB7C,ZZ_2A868_314);
ZZ_MARK(0x8002AB80);
ZZ_MARK(0x8002AB84);
ZZ_MARK(0x8002AB88);
ZZ_MARK(0x8002AB8C);
ZZ_MARK(0x8002AB90);
ZZ_MARK(0x8002AB94);
ZZ_MARK(0x8002AB98);
ZZ_MARK_TARGET(0x8002AB9C,ZZ_2A868_334);
ZZ_MARK(0x8002ABA0);
ZZ_MARK(0x8002ABA4);
ZZ_MARK(0x8002ABA8);
ZZ_MARK_TARGET(0x8002ABAC,ZZ_2A868_344);
ZZ_MARK_TARGET(0x8002ABB0,ZZ_2A868_348);
ZZ_MARK(0x8002ABB4);
ZZ_MARK(0x8002ABB8);
ZZ_MARK(0x8002ABBC);
ZZ_MARK(0x8002ABC0);
ZZ_MARK(0x8002ABC4);
ZZ_MARK(0x8002ABC8);
ZZ_MARK(0x8002ABCC);
ZZ_MARK(0x8002ABD0);
ZZ_MARK(0x8002ABD4);
ZZ_MARK(0x8002ABD8);
ZZ_MARK(0x8002ABDC);
ZZ_MARK(0x8002ABE0);
