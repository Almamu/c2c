#ifdef ZZ_INCLUDE_CODE
ZZ_1417C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32164); //+ 0xFFFF825C
	SP -= 40;
	A0 = (int32_t)A0 >> 1;
	A0 <<= 2;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	A0 += V0;
	S1 = EMU_ReadU32(A0);
	V0 = (int32_t)S1 < -254;
	if (V0)
	{
		S2 = A1;
		ZZ_CLOCKCYCLES(15,0x800141C0);
		goto ZZ_1417C_44;
	}
	S2 = A1;
	V0 = R0;
	ZZ_CLOCKCYCLES(17,0x80014230);
	goto ZZ_1417C_B4;
ZZ_1417C_44:
	V0 = -255;
	if (S1 == V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(3,0x800141E4);
		goto ZZ_1417C_68;
	}
	V0 = 0x3;
	V1 = EMU_ReadS16(S1 + 6); //+ 0x6
	if (V1 == V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(7,0x800141E4);
		goto ZZ_1417C_68;
	}
	V0 = 0x5;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(9,0x800141EC);
		goto ZZ_1417C_70;
	}
	ZZ_CLOCKCYCLES(9,0x800141E4);
ZZ_1417C_68:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80014230);
	goto ZZ_1417C_B4;
ZZ_1417C_70:
	if ((int32_t)S2 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x80014204);
		goto ZZ_1417C_88;
	}
	RA = 0x800141FC; //ZZ_1417C_80
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x80013F80);
	goto ZZ_13F80;
ZZ_1417C_80:
	ZZ_CLOCKCYCLES(2,0x80014224);
	goto ZZ_1417C_A8;
ZZ_1417C_88:
	if ((int32_t)S2 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x80014224);
		goto ZZ_1417C_A8;
	}
	S0 = R0;
	ZZ_CLOCKCYCLES(2,0x8001420C);
ZZ_1417C_90:
	RA = 0x80014214; //ZZ_1417C_98
	A0 = S1;
	ZZ_CLOCKCYCLES(2,0x80013F14);
	goto ZZ_13F14;
ZZ_1417C_98:
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)S2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001420C);
		goto ZZ_1417C_90;
	}
	ZZ_CLOCKCYCLES(4,0x80014224);
ZZ_1417C_A8:
	V0 = EMU_ReadS8(S1 + 15); //+ 0xF
	V0 += 1;
	ZZ_CLOCKCYCLES(3,0x80014230);
ZZ_1417C_B4:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x800144B0,ZZ_14450_60);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001417C,ZZ_1417C);
ZZ_MARK(0x80014180);
ZZ_MARK(0x80014184);
ZZ_MARK(0x80014188);
ZZ_MARK(0x8001418C);
ZZ_MARK(0x80014190);
ZZ_MARK(0x80014194);
ZZ_MARK(0x80014198);
ZZ_MARK(0x8001419C);
ZZ_MARK(0x800141A0);
ZZ_MARK(0x800141A4);
ZZ_MARK(0x800141A8);
ZZ_MARK(0x800141AC);
ZZ_MARK(0x800141B0);
ZZ_MARK(0x800141B4);
ZZ_MARK(0x800141B8);
ZZ_MARK(0x800141BC);
ZZ_MARK_TARGET(0x800141C0,ZZ_1417C_44);
ZZ_MARK(0x800141C4);
ZZ_MARK(0x800141C8);
ZZ_MARK(0x800141CC);
ZZ_MARK(0x800141D0);
ZZ_MARK(0x800141D4);
ZZ_MARK(0x800141D8);
ZZ_MARK(0x800141DC);
ZZ_MARK(0x800141E0);
ZZ_MARK_TARGET(0x800141E4,ZZ_1417C_68);
ZZ_MARK(0x800141E8);
ZZ_MARK_TARGET(0x800141EC,ZZ_1417C_70);
ZZ_MARK(0x800141F0);
ZZ_MARK(0x800141F4);
ZZ_MARK(0x800141F8);
ZZ_MARK_TARGET(0x800141FC,ZZ_1417C_80);
ZZ_MARK(0x80014200);
ZZ_MARK_TARGET(0x80014204,ZZ_1417C_88);
ZZ_MARK(0x80014208);
ZZ_MARK_TARGET(0x8001420C,ZZ_1417C_90);
ZZ_MARK(0x80014210);
ZZ_MARK_TARGET(0x80014214,ZZ_1417C_98);
ZZ_MARK(0x80014218);
ZZ_MARK(0x8001421C);
ZZ_MARK(0x80014220);
ZZ_MARK_TARGET(0x80014224,ZZ_1417C_A8);
ZZ_MARK(0x80014228);
ZZ_MARK(0x8001422C);
ZZ_MARK_TARGET(0x80014230,ZZ_1417C_B4);
ZZ_MARK(0x80014234);
ZZ_MARK(0x80014238);
ZZ_MARK(0x8001423C);
ZZ_MARK(0x80014240);
ZZ_MARK(0x80014244);
ZZ_MARK(0x80014248);
