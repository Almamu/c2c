#ifdef ZZ_INCLUDE_CODE
ZZ_36AE8:
	SP -= 40;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = R0;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = 0x1;
	EMU_Write32(SP + 28,S1); //+ 0x1C
	S1 = 0x6F4;
	EMU_Write32(SP + 36,RA); //+ 0x24
	ZZ_CLOCKCYCLES(8,0x80036B08);
ZZ_36AE8_20:
	A2 = EMU_ReadU32(GP + 232); //+ 0xE8
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12472); //+ 0xFFFFCF48
	A1 = S0 << 8;
	S0 += 1;
	A3 = 0x28;
	EMU_Write32(SP + 16,S2); //+ 0x10
	A2 += S1;
	RA = 0x80036B30; //ZZ_36AE8_48
	A2 += 12;
	ZZ_CLOCKCYCLES(10,0x800176FC);
	goto ZZ_176FC;
ZZ_36AE8_48:
	V0 = (int32_t)S0 < 4;
	if (V0)
	{
		S1 += 676;
		ZZ_CLOCKCYCLES(3,0x80036B08);
		goto ZZ_36AE8_20;
	}
	S1 += 676;
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80036A9C,ZZ_369C4_D8);
	ZZ_JUMPREGISTER(0x80036EBC,ZZ_36E70_4C);
	ZZ_JUMPREGISTER(0x80036DEC,ZZ_36D60_8C);
	ZZ_JUMPREGISTER(0x80034CC8,ZZ_34BCC_FC);
	ZZ_JUMPREGISTER(0x80034DEC,ZZ_34D74_78);
	ZZ_JUMPREGISTER(0x800353B8,ZZ_34F00_4B8);
	ZZ_JUMPREGISTER(0x80035368,ZZ_34F00_468);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80036AE8,0x80036B08,ZZ_36AE8);
ZZ_MARK_TARGET(0x80036B08,0x80036B30,ZZ_36AE8_20);
ZZ_MARK_TARGET(0x80036B30,0x80036B58,ZZ_36AE8_48);
