#ifdef ZZ_INCLUDE_CODE
ZZ_2EB98:
	SP -= 144;
	EMU_Write32(SP + 112,S2); //+ 0x70
	S2 = A2;
	EMU_Write32(SP + 108,S1); //+ 0x6C
	S1 = A3;
	EMU_Write32(SP + 140,RA); //+ 0x8C
	EMU_Write32(SP + 136,FP); //+ 0x88
	EMU_Write32(SP + 132,S7); //+ 0x84
	EMU_Write32(SP + 128,S6); //+ 0x80
	EMU_Write32(SP + 124,S5); //+ 0x7C
	EMU_Write32(SP + 120,S4); //+ 0x78
	EMU_Write32(SP + 116,S3); //+ 0x74
	EMU_Write32(SP + 104,S0); //+ 0x68
	EMU_Write32(SP + 56,A0); //+ 0x38
	EMU_Write32(SP + 64,A1); //+ 0x40
	A1 = 0x80060000;
	A1 -= 2912;
	EMU_ReadLeft(A1 + 3,&V0); //+ 0x3
	EMU_ReadRight(A1,&V0);
	V1 = EMU_ReadS8(A1 + 4); //+ 0x4
	A0 = EMU_ReadS8(A1 + 5); //+ 0x5
	EMU_WriteLeft(SP + 19,V0); //+ 0x13
	EMU_WriteRight(SP + 16,V0); //+ 0x10
	EMU_Write8(SP + 20,V1); //+ 0x14
	EMU_Write8(SP + 21,A0); //+ 0x15
	A0 = SP + 22;
	A1 = R0;
	RA = 0x8002EC0C; //ZZ_2EB98_74
	A2 = 0x2;
	ZZ_CLOCKCYCLES(29,0x800494CC);
	goto ZZ_494CC;
ZZ_2EB98_74:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 30756); //+ 0x7824
	RA = 0x8002EC1C; //ZZ_2EB98_84
	ZZ_CLOCKCYCLES(4,0x800120EC);
	goto ZZ_120EC;
ZZ_2EB98_84:
	A0 = SP + 16;
	RA = 0x8002EC28; //ZZ_2EB98_90
	EMU_Write8(SP + 19,V0); //+ 0x13
	ZZ_CLOCKCYCLES(3,0x80011F78);
	goto ZZ_11F78;
ZZ_2EB98_90:
	A0 = SP + 24;
	A1 = 0x1;
	A2 = R0;
	RA = 0x8002EC3C; //ZZ_2EB98_A4
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(5,0x80014364);
	goto ZZ_14364;
ZZ_2EB98_A4:
	T5 = EMU_ReadU32(SP + 56); //+ 0x38
	S6 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(T5 + 8); //+ 0x8
	T5 = EMU_ReadU32(SP + 64); //+ 0x40
	V1 = EMU_ReadU32(T5 + 8); //+ 0x8
	A0 = EMU_ReadU32(S6 + 8); //+ 0x8
	T1 = EMU_ReadU32(S6 + 12); //+ 0xC
	V0 += V1;
	V0 = V0 - A0;
	S5 = (int32_t)V0 >> 8;
	EMU_SDivide(S5,T1);
	if (T1)
	{
		ZZ_CLOCKCYCLES(14,0x8002EC78);
		goto ZZ_2EB98_E0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(15,0x8002EC78);
ZZ_2EB98_E0:
	AT = -1;
	if (T1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002EC90);
		goto ZZ_2EB98_F8;
	}
	AT = 0x80000000;
	if (S5 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002EC90);
		goto ZZ_2EB98_F8;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002EC90);
ZZ_2EB98_F8:
	V1 = LO;
	T5 = EMU_ReadU32(SP + 56); //+ 0x38
	V0 = EMU_ReadU32(T5);
	T5 = EMU_ReadU32(SP + 64); //+ 0x40
	T8 = 0x7FFF0000;
	T8 |= 0xFFFF;
	A0 = EMU_ReadU32(T5);
	A1 = EMU_ReadU32(S6);
	A2 = R0;
	T4 = S6 + 28;
	V0 += A0;
	V0 = V0 - A1;
	T2 = (int32_t)V0 >> 8;
	T0 = V1 - 1;
	A3 = T0;
	S0 = V1 + 1;
	V0 = (int32_t)S0 < (int32_t)A3;
	if (V0)
	{
		S7 = V1 - 2;
		ZZ_CLOCKCYCLES(20,0x8002ED30);
		goto ZZ_2EB98_198;
	}
	S7 = V1 - 2;
	V0 = A3 << 2;
	V1 = V0 + T4;
	ZZ_CLOCKCYCLES(22,0x8002ECE8);
ZZ_2EB98_150:
	V0 = EMU_ReadU32(V1);
	V0 &= 0x2000;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002ED18);
		goto ZZ_2EB98_180;
	}
	V0 = EMU_ReadU32(V1 - 4); //+ 0xFFFFFFFC
	V0 &= 0x2000;
	if (!V0)
	{
		A2 = 0x1;
		ZZ_CLOCKCYCLES(10,0x8002ED20);
		goto ZZ_2EB98_188;
	}
	A2 = 0x1;
	S7 = A3;
	ZZ_CLOCKCYCLES(12,0x8002ED20);
	goto ZZ_2EB98_188;
ZZ_2EB98_180:
	if (!S2)
	{
		ZZ_CLOCKCYCLES(2,0x8002F128);
		goto ZZ_2EB98_590;
	}
	ZZ_CLOCKCYCLES(2,0x8002ED20);
ZZ_2EB98_188:
	A3 += 1;
	V0 = (int32_t)S0 < (int32_t)A3;
	if (!V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(4,0x8002ECE8);
		goto ZZ_2EB98_150;
	}
	V1 += 4;
	ZZ_CLOCKCYCLES(4,0x8002ED30);
ZZ_2EB98_198:
	if (!A2)
	{
		T9 = S0 + 1;
		ZZ_CLOCKCYCLES(2,0x8002F128);
		goto ZZ_2EB98_590;
	}
	T9 = S0 + 1;
	V0 = (int32_t)S0 < (int32_t)T0;
	if (V0)
	{
		A3 = S0;
		ZZ_CLOCKCYCLES(5,0x8002ED94);
		goto ZZ_2EB98_1FC;
	}
	A3 = S0;
	V0 = S0 << 2;
	V1 = V0 + T4;
	ZZ_CLOCKCYCLES(7,0x8002ED4C);
ZZ_2EB98_1B4:
	V0 = EMU_ReadU32(V1);
	V0 &= 0x2000;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002ED7C);
		goto ZZ_2EB98_1E4;
	}
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	V0 &= 0x2000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8002ED84);
		goto ZZ_2EB98_1EC;
	}
	T9 = A3;
	ZZ_CLOCKCYCLES(12,0x8002ED84);
	goto ZZ_2EB98_1EC;
ZZ_2EB98_1E4:
	if (!S2)
	{
		ZZ_CLOCKCYCLES(2,0x8002F128);
		goto ZZ_2EB98_590;
	}
	ZZ_CLOCKCYCLES(2,0x8002ED84);
ZZ_2EB98_1EC:
	A3 -= 1;
	V0 = (int32_t)A3 < (int32_t)T0;
	if (!V0)
	{
		V1 -= 4;
		ZZ_CLOCKCYCLES(4,0x8002ED4C);
		goto ZZ_2EB98_1B4;
	}
	V1 -= 4;
	ZZ_CLOCKCYCLES(4,0x8002ED94);
ZZ_2EB98_1FC:
	EMU_SMultiply(S7,T1);
	T5 = LO;
	V0 = T5 + S1;
	V0 = (int32_t)S5 < (int32_t)V0;
	if (V0)
	{
		EMU_SMultiply(T9,T1);
		ZZ_CLOCKCYCLES(6,0x8002EE58);
		goto ZZ_2EB98_2C0;
	}
	EMU_SMultiply(T9,T1);
	V0 = T1 - S1;
	T5 = LO;
	V0 += T5;
	V0 = (int32_t)V0 < (int32_t)S5;
	if (V0)
	{
		A3 = T0;
		ZZ_CLOCKCYCLES(12,0x8002EE5C);
		goto ZZ_2EB98_2C4;
	}
	A3 = T0;
	V0 = T0 + 1;
	EMU_SMultiply(V0,T1);
	V0 = T0 << 2;
	V0 += T4;
	A1 = EMU_ReadU32(V0 + 4); //+ 0x4
	A0 = R0;
	T3 = -S1;
	T5 = LO;
	A2 = S5 - T5;
	A3 = T2 + A2;
	ZZ_CLOCKCYCLES(22,0x8002EDEC);
ZZ_2EB98_254:
	V0 = A1 & 0xC000;
	if (V0)
	{
		V0 = A1 & 0x8000;
		ZZ_CLOCKCYCLES(3,0x8002EE00);
		goto ZZ_2EB98_268;
	}
	V0 = A1 & 0x8000;
	V1 = T2 - A2;
	ZZ_CLOCKCYCLES(5,0x8002EE1C);
	goto ZZ_2EB98_284;
ZZ_2EB98_268:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002EE18);
		goto ZZ_2EB98_280;
	}
	if (A0)
	{
		V1 = T2;
		ZZ_CLOCKCYCLES(4,0x8002EE1C);
		goto ZZ_2EB98_284;
	}
	V1 = T2;
	V1 = T2 - T1;
	ZZ_CLOCKCYCLES(6,0x8002EE1C);
	goto ZZ_2EB98_284;
ZZ_2EB98_280:
	V1 = A3 - T1;
	ZZ_CLOCKCYCLES(1,0x8002EE1C);
ZZ_2EB98_284:
	V0 = A1 & 0x1FFF;
	EMU_SMultiply(T1,V0);
	T5 = LO;
	if (!A0)
	{
		V1 = V1 - T5;
		ZZ_CLOCKCYCLES(5,0x8002EE38);
		goto ZZ_2EB98_2A0;
	}
	V1 = V1 - T5;
	V0 = (int32_t)V1 < (int32_t)S1;
	ZZ_CLOCKCYCLES(7,0x8002EE3C);
	goto ZZ_2EB98_2A4;
ZZ_2EB98_2A0:
	V0 = (int32_t)T3 < (int32_t)V1;
	ZZ_CLOCKCYCLES(1,0x8002EE3C);
ZZ_2EB98_2A4:
	if (V0)
	{
		A0 += 1;
		ZZ_CLOCKCYCLES(2,0x8002EE58);
		goto ZZ_2EB98_2C0;
	}
	A0 += 1;
	V0 = (int32_t)A0 < 2;
	if (V0)
	{
		A1 = (int32_t)A1 >> 16;
		ZZ_CLOCKCYCLES(5,0x8002EDEC);
		goto ZZ_2EB98_254;
	}
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES(7,0x8002F128);
	goto ZZ_2EB98_590;
ZZ_2EB98_2C0:
	A3 = T0;
	ZZ_CLOCKCYCLES(1,0x8002EE5C);
ZZ_2EB98_2C4:
	V0 = (int32_t)S0 < (int32_t)T0;
	if (V0)
	{
		V0 = 0x7FFF0000;
		ZZ_CLOCKCYCLES(3,0x8002F0D4);
		goto ZZ_2EB98_53C;
	}
	V0 = 0x7FFF0000;
	S3 = 0x4000;
	T5 = SP + 16;
	EMU_Write32(SP + 80,T5); //+ 0x50
	V0 = A3 << 2;
	S4 = V0 + T4;
	EMU_SMultiply(A3,T1);
	T4 = LO;
	ZZ_CLOCKCYCLES(10,0x8002EE84);
ZZ_2EB98_2EC:
	V1 = EMU_ReadU32(S4);
	V0 = V1 & 0x2000;
	if (V0)
	{
		V0 = V1 & 0x1FFF;
		ZZ_CLOCKCYCLES(5,0x8002F0BC);
		goto ZZ_2EB98_524;
	}
	V0 = V1 & 0x1FFF;
	EMU_SMultiply(V0,T1);
	A2 = V1 & 0xC000;
	A0 = LO;
	V1 = (int32_t)V1 >> 16;
	V0 = V1 & 0x1FFF;
	EMU_SMultiply(V0,T1);
	S2 = R0;
	T0 = T1;
	EMU_Write32(SP + 40,A2); //+ 0x28
	V0 = V1 & 0xC000;
	A0 = A0 - S1;
	EMU_Write32(SP + 44,V0); //+ 0x2C
	EMU_Write32(SP + 32,A0); //+ 0x20
	T3 = LO;
	V1 = T3 + S1;
	T3 = S5 - T4;
	if (V0 != S3)
	{
		EMU_Write32(SP + 36,V1); //+ 0x24
		ZZ_CLOCKCYCLES(23,0x8002EEE8);
		goto ZZ_2EB98_350;
	}
	EMU_Write32(SP + 36,V1); //+ 0x24
	V0 = V1 + T1;
	EMU_Write32(SP + 36,V0); //+ 0x24
	ZZ_CLOCKCYCLES(25,0x8002EEE8);
ZZ_2EB98_350:
	if (!A2)
	{
		V0 = A0 + T1;
		ZZ_CLOCKCYCLES(2,0x8002EEF4);
		goto ZZ_2EB98_35C;
	}
	V0 = A0 + T1;
	EMU_Write32(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(3,0x8002EEF4);
ZZ_2EB98_35C:
	if (A3 == S7)
	{
		ZZ_CLOCKCYCLES(2,0x8002EF04);
		goto ZZ_2EB98_36C;
	}
	if (A3 != T9)
	{
		ZZ_CLOCKCYCLES(4,0x8002EFE4);
		goto ZZ_2EB98_44C;
	}
	ZZ_CLOCKCYCLES(4,0x8002EF04);
ZZ_2EB98_36C:
	if (A3 != T9)
	{
		A1 = S1;
		ZZ_CLOCKCYCLES(2,0x8002EF10);
		goto ZZ_2EB98_378;
	}
	A1 = S1;
	A1 = T1 - A1;
	ZZ_CLOCKCYCLES(3,0x8002EF10);
ZZ_2EB98_378:
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	if (A2)
	{
		EMU_Write32(SP + 48,V0); //+ 0x30
		ZZ_CLOCKCYCLES(3,0x8002EF24);
		goto ZZ_2EB98_38C;
	}
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 += A1;
	ZZ_CLOCKCYCLES(5,0x8002EF2C);
	goto ZZ_2EB98_394;
ZZ_2EB98_38C:
	if (A2 != S3)
	{
		V0 = V0 - A1;
		ZZ_CLOCKCYCLES(2,0x8002EF30);
		goto ZZ_2EB98_398;
	}
	V0 = V0 - A1;
	ZZ_CLOCKCYCLES(2,0x8002EF2C);
ZZ_2EB98_394:
	EMU_Write32(SP + 48,V0); //+ 0x30
	ZZ_CLOCKCYCLES(1,0x8002EF30);
ZZ_2EB98_398:
	V0 = EMU_ReadU32(SP + 36); //+ 0x24
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	if (V1)
	{
		EMU_Write32(SP + 52,V0); //+ 0x34
		ZZ_CLOCKCYCLES(5,0x8002EF4C);
		goto ZZ_2EB98_3B4;
	}
	EMU_Write32(SP + 52,V0); //+ 0x34
	V0 += A1;
	ZZ_CLOCKCYCLES(7,0x8002EF54);
	goto ZZ_2EB98_3BC;
ZZ_2EB98_3B4:
	if (V1 != S3)
	{
		V0 = V0 - A1;
		ZZ_CLOCKCYCLES(2,0x8002EF58);
		goto ZZ_2EB98_3C0;
	}
	V0 = V0 - A1;
	ZZ_CLOCKCYCLES(2,0x8002EF54);
ZZ_2EB98_3BC:
	EMU_Write32(SP + 52,V0); //+ 0x34
	ZZ_CLOCKCYCLES(1,0x8002EF58);
ZZ_2EB98_3C0:
	V1 = EMU_ReadU32(SP + 48); //+ 0x30
	V0 = (int32_t)V1 < (int32_t)T2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002EF80);
		goto ZZ_2EB98_3E8;
	}
	V1 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = (int32_t)T2 < (int32_t)V1;
	if (!V0)
	{
		A0 = T2;
		ZZ_CLOCKCYCLES(10,0x8002EF84);
		goto ZZ_2EB98_3EC;
	}
	A0 = T2;
	ZZ_CLOCKCYCLES(10,0x8002EF80);
ZZ_2EB98_3E8:
	A0 = V1;
	ZZ_CLOCKCYCLES(1,0x8002EF84);
ZZ_2EB98_3EC:
	V0 = T2 - A0;
	EMU_SMultiply(V0,V0);
	V1 = LO;
	V0 = T3 - A1;
	EMU_SMultiply(V0,V0);
	T0 = LO;
	V1 += T0;
	V0 = (int32_t)V1 < (int32_t)T8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x8002EFC0);
		goto ZZ_2EB98_428;
	}
	FP = A0;
	T5 = A1 + T4;
	EMU_Write32(SP + 72,T5); //+ 0x48
	T8 = V1;
	ZZ_CLOCKCYCLES(15,0x8002EFC0);
ZZ_2EB98_428:
	if (A3 != T9)
	{
		T0 = T1 - A1;
		ZZ_CLOCKCYCLES(2,0x8002EFD0);
		goto ZZ_2EB98_438;
	}
	T0 = T1 - A1;
	T0 = A1;
	ZZ_CLOCKCYCLES(4,0x8002EFE4);
	goto ZZ_2EB98_44C;
ZZ_2EB98_438:
	V0 = EMU_ReadU32(SP + 48); //+ 0x30
	V1 = EMU_ReadU32(SP + 52); //+ 0x34
	S2 = A1;
	EMU_Write32(SP + 32,V0); //+ 0x20
	EMU_Write32(SP + 36,V1); //+ 0x24
	ZZ_CLOCKCYCLES(5,0x8002EFE4);
ZZ_2EB98_44C:
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	T7 = T3 - T2;
	T6 = T3 + T2;
	T5 = A2 + 8;
	EMU_Write32(SP + 88,T5); //+ 0x58
	ZZ_CLOCKCYCLES(5,0x8002EFF8);
ZZ_2EB98_460:
	V0 = EMU_ReadU32(A2 + 24); //+ 0x18
	A0 = EMU_ReadU32(A2 + 16); //+ 0x10
	T5 = 0x8000;
	if (V0 != T5)
	{
		A1 = S2;
		ZZ_CLOCKCYCLES(5,0x8002F014);
		goto ZZ_2EB98_47C;
	}
	A1 = S2;
	V1 = T3 - A1;
	ZZ_CLOCKCYCLES(7,0x8002F030);
	goto ZZ_2EB98_498;
ZZ_2EB98_47C:
	if (!V0)
	{
		V0 = A1 - A0;
		ZZ_CLOCKCYCLES(2,0x8002F024);
		goto ZZ_2EB98_48C;
	}
	V0 = A1 - A0;
	V0 = T7 - V0;
	ZZ_CLOCKCYCLES(4,0x8002F02C);
	goto ZZ_2EB98_494;
ZZ_2EB98_48C:
	V0 = A1 + A0;
	V0 = T6 - V0;
	ZZ_CLOCKCYCLES(2,0x8002F02C);
ZZ_2EB98_494:
	V1 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(1,0x8002F030);
ZZ_2EB98_498:
	V0 = (int32_t)T0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002F040);
		goto ZZ_2EB98_4A8;
	}
	V1 = T0;
	ZZ_CLOCKCYCLES(4,0x8002F040);
ZZ_2EB98_4A8:
	if ((int32_t)V1 <= 0)
	{
		V0 = T2 - A0;
		ZZ_CLOCKCYCLES(2,0x8002F070);
		goto ZZ_2EB98_4D8;
	}
	V0 = T2 - A0;
	V0 = EMU_ReadU32(A2 + 24); //+ 0x18
	if (V0 != S3)
	{
		A1 += V1;
		ZZ_CLOCKCYCLES(6,0x8002F060);
		goto ZZ_2EB98_4C8;
	}
	A1 += V1;
	A0 = A0 - V1;
	ZZ_CLOCKCYCLES(8,0x8002F06C);
	goto ZZ_2EB98_4D4;
ZZ_2EB98_4C8:
	if (V0)
	{
		V0 = T2 - A0;
		ZZ_CLOCKCYCLES(2,0x8002F070);
		goto ZZ_2EB98_4D8;
	}
	V0 = T2 - A0;
	A0 += V1;
	ZZ_CLOCKCYCLES(3,0x8002F06C);
ZZ_2EB98_4D4:
	V0 = T2 - A0;
	ZZ_CLOCKCYCLES(1,0x8002F070);
ZZ_2EB98_4D8:
	EMU_SMultiply(V0,V0);
	V1 = LO;
	V0 = T3 - A1;
	EMU_SMultiply(V0,V0);
	T5 = LO;
	V1 += T5;
	V0 = (int32_t)V1 < (int32_t)T8;
	if (!V0)
	{
		EMU_Write32(SP + 96,T5); //+ 0x60
		ZZ_CLOCKCYCLES(10,0x8002F0A8);
		goto ZZ_2EB98_510;
	}
	EMU_Write32(SP + 96,T5); //+ 0x60
	FP = A0;
	A1 += T4;
	EMU_Write32(SP + 72,A1); //+ 0x48
	T8 = V1;
	ZZ_CLOCKCYCLES(14,0x8002F0A8);
ZZ_2EB98_510:
	T5 = EMU_ReadU32(SP + 88); //+ 0x58
	A2 += 4;
	V0 = (int32_t)A2 < (int32_t)T5;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002EFF8);
		goto ZZ_2EB98_460;
	}
	ZZ_CLOCKCYCLES(5,0x8002F0BC);
ZZ_2EB98_524:
	T4 += T1;
	A3 += 1;
	V0 = (int32_t)S0 < (int32_t)A3;
	if (!V0)
	{
		S4 += 4;
		ZZ_CLOCKCYCLES(5,0x8002EE84);
		goto ZZ_2EB98_2EC;
	}
	S4 += 4;
	V0 = 0x7FFF0000;
	ZZ_CLOCKCYCLES(6,0x8002F0D4);
ZZ_2EB98_53C:
	V0 |= 0xFFFF;
	if (T8 == V0)
	{
		V0 = FP << 8;
		ZZ_CLOCKCYCLES(3,0x8002F128);
		goto ZZ_2EB98_590;
	}
	V0 = FP << 8;
	T5 = EMU_ReadU32(SP + 56); //+ 0x38
	V1 = EMU_ReadU32(T5);
	A0 = EMU_ReadU32(S6);
	T5 = EMU_ReadU32(SP + 64); //+ 0x40
	V1 = V1 - A0;
	V0 = V0 - V1;
	EMU_Write32(T5,V0);
	T5 = EMU_ReadU32(SP + 56); //+ 0x38
	V1 = EMU_ReadU32(T5 + 8); //+ 0x8
	T5 = EMU_ReadU32(SP + 72); //+ 0x48
	A0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 = T5 << 8;
	T5 = EMU_ReadU32(SP + 64); //+ 0x40
	V1 = V1 - A0;
	V0 = V0 - V1;
	EMU_Write32(T5 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(21,0x8002F128);
ZZ_2EB98_590:
	RA = EMU_ReadU32(SP + 140); //+ 0x8C
	FP = EMU_ReadU32(SP + 136); //+ 0x88
	S7 = EMU_ReadU32(SP + 132); //+ 0x84
	S6 = EMU_ReadU32(SP + 128); //+ 0x80
	S5 = EMU_ReadU32(SP + 124); //+ 0x7C
	S4 = EMU_ReadU32(SP + 120); //+ 0x78
	S3 = EMU_ReadU32(SP + 116); //+ 0x74
	S2 = EMU_ReadU32(SP + 112); //+ 0x70
	S1 = EMU_ReadU32(SP + 108); //+ 0x6C
	S0 = EMU_ReadU32(SP + 104); //+ 0x68
	SP += 144;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002A15C,ZZ_29FA4_1B8);
	ZZ_JUMPREGISTER(0x8002A208,ZZ_29FA4_264);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002EB98,0x8002EC0C,ZZ_2EB98);
ZZ_MARK_TARGET(0x8002EC0C,0x8002EC1C,ZZ_2EB98_74);
ZZ_MARK_TARGET(0x8002EC1C,0x8002EC28,ZZ_2EB98_84);
ZZ_MARK_TARGET(0x8002EC28,0x8002EC3C,ZZ_2EB98_90);
ZZ_MARK_TARGET(0x8002EC3C,0x8002EC78,ZZ_2EB98_A4);
ZZ_MARK_TARGET(0x8002EC78,0x8002EC90,ZZ_2EB98_E0);
ZZ_MARK_TARGET(0x8002EC90,0x8002ECE8,ZZ_2EB98_F8);
ZZ_MARK_TARGET(0x8002ECE8,0x8002ED18,ZZ_2EB98_150);
ZZ_MARK_TARGET(0x8002ED18,0x8002ED20,ZZ_2EB98_180);
ZZ_MARK_TARGET(0x8002ED20,0x8002ED30,ZZ_2EB98_188);
ZZ_MARK_TARGET(0x8002ED30,0x8002ED4C,ZZ_2EB98_198);
ZZ_MARK_TARGET(0x8002ED4C,0x8002ED7C,ZZ_2EB98_1B4);
ZZ_MARK_TARGET(0x8002ED7C,0x8002ED84,ZZ_2EB98_1E4);
ZZ_MARK_TARGET(0x8002ED84,0x8002ED94,ZZ_2EB98_1EC);
ZZ_MARK_TARGET(0x8002ED94,0x8002EDEC,ZZ_2EB98_1FC);
ZZ_MARK_TARGET(0x8002EDEC,0x8002EE00,ZZ_2EB98_254);
ZZ_MARK_TARGET(0x8002EE00,0x8002EE18,ZZ_2EB98_268);
ZZ_MARK_TARGET(0x8002EE18,0x8002EE1C,ZZ_2EB98_280);
ZZ_MARK_TARGET(0x8002EE1C,0x8002EE38,ZZ_2EB98_284);
ZZ_MARK_TARGET(0x8002EE38,0x8002EE3C,ZZ_2EB98_2A0);
ZZ_MARK_TARGET(0x8002EE3C,0x8002EE58,ZZ_2EB98_2A4);
ZZ_MARK_TARGET(0x8002EE58,0x8002EE5C,ZZ_2EB98_2C0);
ZZ_MARK_TARGET(0x8002EE5C,0x8002EE84,ZZ_2EB98_2C4);
ZZ_MARK_TARGET(0x8002EE84,0x8002EEE8,ZZ_2EB98_2EC);
ZZ_MARK_TARGET(0x8002EEE8,0x8002EEF4,ZZ_2EB98_350);
ZZ_MARK_TARGET(0x8002EEF4,0x8002EF04,ZZ_2EB98_35C);
ZZ_MARK_TARGET(0x8002EF04,0x8002EF10,ZZ_2EB98_36C);
ZZ_MARK_TARGET(0x8002EF10,0x8002EF24,ZZ_2EB98_378);
ZZ_MARK_TARGET(0x8002EF24,0x8002EF2C,ZZ_2EB98_38C);
ZZ_MARK_TARGET(0x8002EF2C,0x8002EF30,ZZ_2EB98_394);
ZZ_MARK_TARGET(0x8002EF30,0x8002EF4C,ZZ_2EB98_398);
ZZ_MARK_TARGET(0x8002EF4C,0x8002EF54,ZZ_2EB98_3B4);
ZZ_MARK_TARGET(0x8002EF54,0x8002EF58,ZZ_2EB98_3BC);
ZZ_MARK_TARGET(0x8002EF58,0x8002EF80,ZZ_2EB98_3C0);
ZZ_MARK_TARGET(0x8002EF80,0x8002EF84,ZZ_2EB98_3E8);
ZZ_MARK_TARGET(0x8002EF84,0x8002EFC0,ZZ_2EB98_3EC);
ZZ_MARK_TARGET(0x8002EFC0,0x8002EFD0,ZZ_2EB98_428);
ZZ_MARK_TARGET(0x8002EFD0,0x8002EFE4,ZZ_2EB98_438);
ZZ_MARK_TARGET(0x8002EFE4,0x8002EFF8,ZZ_2EB98_44C);
ZZ_MARK_TARGET(0x8002EFF8,0x8002F014,ZZ_2EB98_460);
ZZ_MARK_TARGET(0x8002F014,0x8002F024,ZZ_2EB98_47C);
ZZ_MARK_TARGET(0x8002F024,0x8002F02C,ZZ_2EB98_48C);
ZZ_MARK_TARGET(0x8002F02C,0x8002F030,ZZ_2EB98_494);
ZZ_MARK_TARGET(0x8002F030,0x8002F040,ZZ_2EB98_498);
ZZ_MARK_TARGET(0x8002F040,0x8002F060,ZZ_2EB98_4A8);
ZZ_MARK_TARGET(0x8002F060,0x8002F06C,ZZ_2EB98_4C8);
ZZ_MARK_TARGET(0x8002F06C,0x8002F070,ZZ_2EB98_4D4);
ZZ_MARK_TARGET(0x8002F070,0x8002F0A8,ZZ_2EB98_4D8);
ZZ_MARK_TARGET(0x8002F0A8,0x8002F0BC,ZZ_2EB98_510);
ZZ_MARK_TARGET(0x8002F0BC,0x8002F0D4,ZZ_2EB98_524);
ZZ_MARK_TARGET(0x8002F0D4,0x8002F128,ZZ_2EB98_53C);
ZZ_MARK_TARGET(0x8002F128,0x8002F15C,ZZ_2EB98_590);
