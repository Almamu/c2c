#ifdef ZZ_INCLUDE_CODE
ZZ_4B080:
	SP -= 24;
	A0 = 0x80060000;
	A0 -= 8432;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8396); //+ 0xFFFFDF34
	V0 = 263;
	EMU_Write32(SP + 16,RA); //+ 0x10
	EMU_Write32(V1,V0);
	AT = 0x80060000;
	EMU_Write32(AT - 8400,R0); //+ 0xFFFFDF30
	RA = 0x8004B0B0; //ZZ_4B080_30
	A1 = 8;
	ZZ_CLOCKCYCLES(12,0x8004B17C);
	goto ZZ_4B17C;
ZZ_4B080_30:
	A1 = 0x80050000;
	A1 -= 20264;
	RA = 0x8004B0C0; //ZZ_4B080_40
	A0 = R0;
	ZZ_CLOCKCYCLES(4,0x8004A940);
	goto ZZ_4A940;
ZZ_4B080_40:
	V0 = 0x80050000;
	V0 -= 20144;
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8004AB44,ZZ_4AAA8_9C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004B080,ZZ_4B080);
ZZ_MARK(0x8004B084);
ZZ_MARK(0x8004B088);
ZZ_MARK(0x8004B08C);
ZZ_MARK(0x8004B090);
ZZ_MARK(0x8004B094);
ZZ_MARK(0x8004B098);
ZZ_MARK(0x8004B09C);
ZZ_MARK(0x8004B0A0);
ZZ_MARK(0x8004B0A4);
ZZ_MARK(0x8004B0A8);
ZZ_MARK(0x8004B0AC);
ZZ_MARK_TARGET(0x8004B0B0,ZZ_4B080_30);
ZZ_MARK(0x8004B0B4);
ZZ_MARK(0x8004B0B8);
ZZ_MARK(0x8004B0BC);
ZZ_MARK_TARGET(0x8004B0C0,ZZ_4B080_40);
ZZ_MARK(0x8004B0C4);
ZZ_MARK(0x8004B0C8);
ZZ_MARK(0x8004B0CC);
ZZ_MARK(0x8004B0D0);
ZZ_MARK(0x8004B0D4);
