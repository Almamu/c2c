#ifdef ZZ_INCLUDE_CODE
ZZ_4920C:
	SP -= 24;
	AT = 0x80060000;
	EMU_Write32(AT - 12924,A2); //+ 0xFFFFCD84
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12924); //+ 0xFFFFCD84
	A3 = A0;
	V1 = V0 & 0x30;
	if (!V1)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(9,0x80049244);
		goto ZZ_4920C_38;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = 32;
	if (V1 == V0)
	{
		V0 = 585;
		ZZ_CLOCKCYCLES(12,0x80049248);
		goto ZZ_4920C_3C;
	}
	V0 = 585;
	V0 = 582;
	ZZ_CLOCKCYCLES(14,0x80049248);
	goto ZZ_4920C_3C;
ZZ_4920C_38:
	V0 = 512;
	ZZ_CLOCKCYCLES(1,0x80049248);
ZZ_4920C_3C:
	AT = 0x80060000;
	EMU_Write32(AT - 12920,V0); //+ 0xFFFFCD88
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12924); //+ 0xFFFFCD84
	A0 = R0;
	V0 |= 0x20;
	AT = 0x80060000;
	EMU_Write32(AT - 12924,V0); //+ 0xFFFFCD84
	V0 = 0x80060000;
	V0 -= 12936;
	AT = 0x80060000;
	EMU_Write32(AT - 12932,A1); //+ 0xFFFFCD7C
	EMU_Write32(V0,A3);
	RA = 0x80049284; //ZZ_4920C_78
	ZZ_CLOCKCYCLES(15,0x80046DB8);
	goto ZZ_46DB8;
ZZ_4920C_78:
	A0 = R0;
	AT = 0x80060000;
	EMU_Write32(AT - 12900,V0); //+ 0xFFFFCD9C
	RA = 0x80049298; //ZZ_4920C_8C
	ZZ_CLOCKCYCLES(5,0x80046DD0);
	goto ZZ_46DD0;
ZZ_4920C_8C:
	AT = 0x80060000;
	EMU_Write32(AT - 12896,V0); //+ 0xFFFFCDA0
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12888); //+ 0xFFFFCDA8
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x800492C8);
		goto ZZ_4920C_BC;
	}
	RA = 0x800492C0; //ZZ_4920C_B4
	A0 = R0;
	ZZ_CLOCKCYCLES(10,0x800471F0);
	goto ZZ_471F0;
ZZ_4920C_B4:
	AT = 0x80060000;
	EMU_Write32(AT - 12892,V0); //+ 0xFFFFCDA4
	ZZ_CLOCKCYCLES(2,0x800492C8);
ZZ_4920C_BC:
	RA = 0x800492D0; //ZZ_4920C_C4
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004A71C);
	goto ZZ_4A71C;
ZZ_4920C_C4:
	AT = 0x80060000;
	EMU_Write32(AT - 12908,V0); //+ 0xFFFFCD94
	RA = 0x800492E0; //ZZ_4920C_D4
	ZZ_CLOCKCYCLES(4,0x80046C2C);
	goto ZZ_46C2C;
ZZ_4920C_D4:
	V0 &= 0xE0;
	if (!V0)
	{
		A0 = 9;
		ZZ_CLOCKCYCLES(3,0x800492F8);
		goto ZZ_4920C_EC;
	}
	A0 = 9;
	A1 = R0;
	RA = 0x800492F8; //ZZ_4920C_EC
	A2 = R0;
	ZZ_CLOCKCYCLES(6,0x8004704C);
	goto ZZ_4704C;
ZZ_4920C_EC:
	RA = 0x80049300; //ZZ_4920C_F4
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80048F5C);
	goto ZZ_48F5C;
ZZ_4920C_F4:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	V0 = (int32_t)R0 < (int32_t)V0;
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 24;
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x800124CC,ZZ_123F0_DC);
	ZZ_JUMPREGISTER(0x800319D0,ZZ_3198C_44);
	ZZ_JUMPREGISTER(0x800130D4,ZZ_12FE8_EC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004920C,ZZ_4920C);
ZZ_MARK(0x80049210);
ZZ_MARK(0x80049214);
ZZ_MARK(0x80049218);
ZZ_MARK(0x8004921C);
ZZ_MARK(0x80049220);
ZZ_MARK(0x80049224);
ZZ_MARK(0x80049228);
ZZ_MARK(0x8004922C);
ZZ_MARK(0x80049230);
ZZ_MARK(0x80049234);
ZZ_MARK(0x80049238);
ZZ_MARK(0x8004923C);
ZZ_MARK(0x80049240);
ZZ_MARK_TARGET(0x80049244,ZZ_4920C_38);
ZZ_MARK_TARGET(0x80049248,ZZ_4920C_3C);
ZZ_MARK(0x8004924C);
ZZ_MARK(0x80049250);
ZZ_MARK(0x80049254);
ZZ_MARK(0x80049258);
ZZ_MARK(0x8004925C);
ZZ_MARK(0x80049260);
ZZ_MARK(0x80049264);
ZZ_MARK(0x80049268);
ZZ_MARK(0x8004926C);
ZZ_MARK(0x80049270);
ZZ_MARK(0x80049274);
ZZ_MARK(0x80049278);
ZZ_MARK(0x8004927C);
ZZ_MARK(0x80049280);
ZZ_MARK_TARGET(0x80049284,ZZ_4920C_78);
ZZ_MARK(0x80049288);
ZZ_MARK(0x8004928C);
ZZ_MARK(0x80049290);
ZZ_MARK(0x80049294);
ZZ_MARK_TARGET(0x80049298,ZZ_4920C_8C);
ZZ_MARK(0x8004929C);
ZZ_MARK(0x800492A0);
ZZ_MARK(0x800492A4);
ZZ_MARK(0x800492A8);
ZZ_MARK(0x800492AC);
ZZ_MARK(0x800492B0);
ZZ_MARK(0x800492B4);
ZZ_MARK(0x800492B8);
ZZ_MARK(0x800492BC);
ZZ_MARK_TARGET(0x800492C0,ZZ_4920C_B4);
ZZ_MARK(0x800492C4);
ZZ_MARK_TARGET(0x800492C8,ZZ_4920C_BC);
ZZ_MARK(0x800492CC);
ZZ_MARK_TARGET(0x800492D0,ZZ_4920C_C4);
ZZ_MARK(0x800492D4);
ZZ_MARK(0x800492D8);
ZZ_MARK(0x800492DC);
ZZ_MARK_TARGET(0x800492E0,ZZ_4920C_D4);
ZZ_MARK(0x800492E4);
ZZ_MARK(0x800492E8);
ZZ_MARK(0x800492EC);
ZZ_MARK(0x800492F0);
ZZ_MARK(0x800492F4);
ZZ_MARK_TARGET(0x800492F8,ZZ_4920C_EC);
ZZ_MARK(0x800492FC);
ZZ_MARK_TARGET(0x80049300,ZZ_4920C_F4);
ZZ_MARK(0x80049304);
ZZ_MARK(0x80049308);
ZZ_MARK(0x8004930C);
