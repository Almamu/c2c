#ifdef ZZ_INCLUDE_CODE
ZZ_1E9C8:
	SP -= 72;
	EMU_Write32(SP + 60,S3); //+ 0x3C
	S3 = A0;
	EMU_Write32(SP + 52,S1); //+ 0x34
	S1 = A1;
	EMU_Write32(SP + 68,RA); //+ 0x44
	EMU_Write32(SP + 64,S4); //+ 0x40
	EMU_Write32(SP + 56,S2); //+ 0x38
	EMU_Write32(SP + 48,S0); //+ 0x30
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	S4 = A2;
	RA = 0x8001E9FC; //ZZ_1E9C8_34
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(13,0x8003D584);
	goto ZZ_3D584;
ZZ_1E9C8_34:
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	S0 = V0;
	RA = 0x8001EA0C; //ZZ_1E9C8_44
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(4,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_1E9C8_44:
	V1 = S0;
	S2 = 0x1000;
	S0 = -S0;
	EMU_Write16(S3,V0);
	EMU_Write16(S3 + 2,R0); //+ 0x2
	EMU_Write16(S3 + 4,V1); //+ 0x4
	EMU_Write16(S3 + 6,R0); //+ 0x6
	EMU_Write16(S3 + 8,S2); //+ 0x8
	EMU_Write16(S3 + 10,R0); //+ 0xA
	EMU_Write16(S3 + 12,S0); //+ 0xC
	EMU_Write16(S3 + 14,R0); //+ 0xE
	EMU_Write16(S3 + 16,V0); //+ 0x10
	A0 = EMU_ReadU32(S1);
	RA = 0x8001EA48; //ZZ_1E9C8_80
	ZZ_CLOCKCYCLES(15,0x8003D584);
	goto ZZ_3D584;
ZZ_1E9C8_80:
	A0 = EMU_ReadU32(S1);
	RA = 0x8001EA54; //ZZ_1E9C8_8C
	S0 = V0;
	ZZ_CLOCKCYCLES(3,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_1E9C8_8C:
	A0 = S3;
	A1 = SP + 16;
	V1 = -S0;
	EMU_Write16(SP + 16,S2); //+ 0x10
	EMU_Write16(SP + 18,R0); //+ 0x12
	EMU_Write16(SP + 20,R0); //+ 0x14
	EMU_Write16(SP + 22,R0); //+ 0x16
	EMU_Write16(SP + 24,V0); //+ 0x18
	EMU_Write16(SP + 26,V1); //+ 0x1A
	EMU_Write16(SP + 28,R0); //+ 0x1C
	EMU_Write16(SP + 30,S0); //+ 0x1E
	RA = 0x8001EA88; //ZZ_1E9C8_C0
	EMU_Write16(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(13,0x8004EF50);
	goto ZZ_4EF50;
ZZ_1E9C8_C0:
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	A0 = A0 - V0;
	A0 &= 0xFFF;
	RA = 0x8001EAA4; //ZZ_1E9C8_DC
	A0 = -A0;
	ZZ_CLOCKCYCLES(7,0x8003D584);
	goto ZZ_3D584;
ZZ_1E9C8_DC:
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V1 = EMU_ReadU32(S1 + 4); //+ 0x4
	S0 = V0;
	A0 = A0 - V1;
	A0 &= 0xFFF;
	RA = 0x8001EAC0; //ZZ_1E9C8_F8
	A0 = -A0;
	ZZ_CLOCKCYCLES(7,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_1E9C8_F8:
	A0 = S3;
	A1 = SP + 16;
	V1 = S0;
	S0 = -S0;
	EMU_Write16(SP + 16,V0); //+ 0x10
	EMU_Write16(SP + 18,R0); //+ 0x12
	EMU_Write16(SP + 20,V1); //+ 0x14
	EMU_Write16(SP + 22,R0); //+ 0x16
	EMU_Write16(SP + 24,S2); //+ 0x18
	EMU_Write16(SP + 26,R0); //+ 0x1A
	EMU_Write16(SP + 28,S0); //+ 0x1C
	EMU_Write16(SP + 30,R0); //+ 0x1E
	RA = 0x8001EAF8; //ZZ_1E9C8_130
	EMU_Write16(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(14,0x8004EF50);
	goto ZZ_4EF50;
ZZ_1E9C8_130:
	if (!S4)
	{
		A0 = S3;
		ZZ_CLOCKCYCLES(2,0x8001EB08);
		goto ZZ_1E9C8_140;
	}
	A0 = S3;
	RA = 0x8001EB08; //ZZ_1E9C8_140
	A1 = S4;
	ZZ_CLOCKCYCLES(4,0x8004F090);
	goto ZZ_4F090;
ZZ_1E9C8_140:
	RA = EMU_ReadU32(SP + 68); //+ 0x44
	S4 = EMU_ReadU32(SP + 64); //+ 0x40
	S3 = EMU_ReadU32(SP + 60); //+ 0x3C
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x8001EB5C,ZZ_1EB2C_30);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001E9C8,ZZ_1E9C8);
ZZ_MARK(0x8001E9CC);
ZZ_MARK(0x8001E9D0);
ZZ_MARK(0x8001E9D4);
ZZ_MARK(0x8001E9D8);
ZZ_MARK(0x8001E9DC);
ZZ_MARK(0x8001E9E0);
ZZ_MARK(0x8001E9E4);
ZZ_MARK(0x8001E9E8);
ZZ_MARK(0x8001E9EC);
ZZ_MARK(0x8001E9F0);
ZZ_MARK(0x8001E9F4);
ZZ_MARK(0x8001E9F8);
ZZ_MARK_TARGET(0x8001E9FC,ZZ_1E9C8_34);
ZZ_MARK(0x8001EA00);
ZZ_MARK(0x8001EA04);
ZZ_MARK(0x8001EA08);
ZZ_MARK_TARGET(0x8001EA0C,ZZ_1E9C8_44);
ZZ_MARK(0x8001EA10);
ZZ_MARK(0x8001EA14);
ZZ_MARK(0x8001EA18);
ZZ_MARK(0x8001EA1C);
ZZ_MARK(0x8001EA20);
ZZ_MARK(0x8001EA24);
ZZ_MARK(0x8001EA28);
ZZ_MARK(0x8001EA2C);
ZZ_MARK(0x8001EA30);
ZZ_MARK(0x8001EA34);
ZZ_MARK(0x8001EA38);
ZZ_MARK(0x8001EA3C);
ZZ_MARK(0x8001EA40);
ZZ_MARK(0x8001EA44);
ZZ_MARK_TARGET(0x8001EA48,ZZ_1E9C8_80);
ZZ_MARK(0x8001EA4C);
ZZ_MARK(0x8001EA50);
ZZ_MARK_TARGET(0x8001EA54,ZZ_1E9C8_8C);
ZZ_MARK(0x8001EA58);
ZZ_MARK(0x8001EA5C);
ZZ_MARK(0x8001EA60);
ZZ_MARK(0x8001EA64);
ZZ_MARK(0x8001EA68);
ZZ_MARK(0x8001EA6C);
ZZ_MARK(0x8001EA70);
ZZ_MARK(0x8001EA74);
ZZ_MARK(0x8001EA78);
ZZ_MARK(0x8001EA7C);
ZZ_MARK(0x8001EA80);
ZZ_MARK(0x8001EA84);
ZZ_MARK_TARGET(0x8001EA88,ZZ_1E9C8_C0);
ZZ_MARK(0x8001EA8C);
ZZ_MARK(0x8001EA90);
ZZ_MARK(0x8001EA94);
ZZ_MARK(0x8001EA98);
ZZ_MARK(0x8001EA9C);
ZZ_MARK(0x8001EAA0);
ZZ_MARK_TARGET(0x8001EAA4,ZZ_1E9C8_DC);
ZZ_MARK(0x8001EAA8);
ZZ_MARK(0x8001EAAC);
ZZ_MARK(0x8001EAB0);
ZZ_MARK(0x8001EAB4);
ZZ_MARK(0x8001EAB8);
ZZ_MARK(0x8001EABC);
ZZ_MARK_TARGET(0x8001EAC0,ZZ_1E9C8_F8);
ZZ_MARK(0x8001EAC4);
ZZ_MARK(0x8001EAC8);
ZZ_MARK(0x8001EACC);
ZZ_MARK(0x8001EAD0);
ZZ_MARK(0x8001EAD4);
ZZ_MARK(0x8001EAD8);
ZZ_MARK(0x8001EADC);
ZZ_MARK(0x8001EAE0);
ZZ_MARK(0x8001EAE4);
ZZ_MARK(0x8001EAE8);
ZZ_MARK(0x8001EAEC);
ZZ_MARK(0x8001EAF0);
ZZ_MARK(0x8001EAF4);
ZZ_MARK_TARGET(0x8001EAF8,ZZ_1E9C8_130);
ZZ_MARK(0x8001EAFC);
ZZ_MARK(0x8001EB00);
ZZ_MARK(0x8001EB04);
ZZ_MARK_TARGET(0x8001EB08,ZZ_1E9C8_140);
ZZ_MARK(0x8001EB0C);
ZZ_MARK(0x8001EB10);
ZZ_MARK(0x8001EB14);
ZZ_MARK(0x8001EB18);
ZZ_MARK(0x8001EB1C);
ZZ_MARK(0x8001EB20);
ZZ_MARK(0x8001EB24);
ZZ_MARK(0x8001EB28);
