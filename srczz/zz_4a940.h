#ifdef ZZ_INCLUDE_CODE
ZZ_4A940:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8452); //+ 0xFFFFDEFC
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004A960; //ZZ_4A940_20
	ZZ_CLOCKCYCLES_JR(8);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004A958)
	ZZ_JUMPREGISTER_END();
ZZ_4A940_20:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80052EB8,ZZ_52E18_A0);
	ZZ_JUMPREGISTER(0x80052EA0,ZZ_52E18_88);
	ZZ_JUMPREGISTER(0x80048544,ZZ_48504_40);
	ZZ_JUMPREGISTER(0x800485CC,ZZ_48554_78);
	ZZ_JUMPREGISTER(0x80055064,ZZ_54E64_200);
	ZZ_JUMPREGISTER(0x800550AC,ZZ_54E64_248);
	ZZ_JUMPREGISTER(0x8004B0C0,ZZ_4B080_40);
	ZZ_JUMPREGISTER(0x8004B1E0,ZZ_4B1A8_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004A940,ZZ_4A940);
ZZ_MARK(0x8004A944);
ZZ_MARK(0x8004A948);
ZZ_MARK(0x8004A94C);
ZZ_MARK(0x8004A950);
ZZ_MARK(0x8004A954);
ZZ_MARK(0x8004A958);
ZZ_MARK(0x8004A95C);
ZZ_MARK_TARGET(0x8004A960,ZZ_4A940_20);
ZZ_MARK(0x8004A964);
ZZ_MARK(0x8004A968);
ZZ_MARK(0x8004A96C);
