#ifdef ZZ_INCLUDE_CODE
ZZ_12C88:
	SP -= 72;
	V1 = 0x80070000;
	V1 -= 32184;
	EMU_Write32(SP + 64,RA); //+ 0x40
	EMU_Write32(SP + 60,S3); //+ 0x3C
	EMU_Write32(SP + 56,S2); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	EMU_Write32(SP + 48,S0); //+ 0x30
	V0 = EMU_ReadU32(V1);
	if (!V0)
	{
		S2 = A0;
		ZZ_CLOCKCYCLES(12,0x80012E64);
		goto ZZ_12C88_1DC;
	}
	S2 = A0;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32180); //+ 0xFFFF824C
	if (V0)
	{
		A2 = -1;
		ZZ_CLOCKCYCLES(17,0x80012E24);
		goto ZZ_12C88_19C;
	}
	A2 = -1;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 31720); //+ 0x7BE8
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(22,0x80012D40);
		goto ZZ_12C88_B8;
	}
	S0 = R0;
	T1 = 0x2;
	T0 = -1;
	A3 = EMU_ReadU32(V1 - 1632); //+ 0xFFFFF9A0
	A0 = V1 - 1628;
	ZZ_CLOCKCYCLES(26,0x80012CF0);
ZZ_12C88_68:
	V0 = EMU_ReadS16(A0 + 4); //+ 0x4
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(4,0x80012D30);
		goto ZZ_12C88_A8;
	}
	V1 = EMU_ReadU32(A0 + 20); //+ 0x14
	if (S2 != T0)
	{
		ZZ_CLOCKCYCLES(7,0x80012D1C);
		goto ZZ_12C88_94;
	}
	if (A2 == S2)
	{
		V0 = (int32_t)V1 < (int32_t)A1;
		ZZ_CLOCKCYCLES(9,0x80012D24);
		goto ZZ_12C88_9C;
	}
	V0 = (int32_t)V1 < (int32_t)A1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x80012D24);
		goto ZZ_12C88_9C;
	}
	ZZ_CLOCKCYCLES(11,0x80012D1C);
ZZ_12C88_94:
	if (V1 != S2)
	{
		ZZ_CLOCKCYCLES(2,0x80012D30);
		goto ZZ_12C88_A8;
	}
	ZZ_CLOCKCYCLES(2,0x80012D24);
ZZ_12C88_9C:
	A1 = V1;
	if (A1 == S2)
	{
		A2 = S0;
		ZZ_CLOCKCYCLES(3,0x80012D40);
		goto ZZ_12C88_B8;
	}
	A2 = S0;
	ZZ_CLOCKCYCLES(3,0x80012D30);
ZZ_12C88_A8:
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)A3;
	if (V0)
	{
		A0 += 44;
		ZZ_CLOCKCYCLES(4,0x80012CF0);
		goto ZZ_12C88_68;
	}
	A0 += 44;
	ZZ_CLOCKCYCLES(4,0x80012D40);
ZZ_12C88_B8:
	V0 = -1;
	if (A2 == V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(3,0x80012E24);
		goto ZZ_12C88_19C;
	}
	V0 = 0x1;
	V1 = EMU_ReadU32(GP + 40); //+ 0x28
	if (!V1)
	{
		EMU_Write32(SP + 24,V0); //+ 0x18
		ZZ_CLOCKCYCLES(7,0x80012DDC);
		goto ZZ_12C88_154;
	}
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30776); //+ 0x7838
	V0 = EMU_ReadU32(V0 + 1024); //+ 0x400
	V1 = (int32_t)A1 >> 1;
	A0 = V0 - 1;
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(16,0x80012DDC);
		goto ZZ_12C88_154;
	}
	A1 = A0;
	A3 = 0x80070000;
	A3 = EMU_ReadU32(A3 - 32164); //+ 0xFFFF825C
	V0 = V1 + 1;
	ZZ_CLOCKCYCLES(19,0x80012D8C);
ZZ_12C88_104:
	V0 <<= 1;
	A0 = (int32_t)V0 >> 1;
	V0 = A0 << 2;
	V0 += A3;
	V1 = EMU_ReadU32(V0);
	V0 = (int32_t)V1 < -254;
	if (!V0)
	{
		V0 = A2 << 1;
		ZZ_CLOCKCYCLES(9,0x80012DE0);
		goto ZZ_12C88_158;
	}
	V0 = A2 << 1;
	V0 = EMU_ReadS16(V1 + 6); //+ 0x6
	if (V0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(13,0x80012DDC);
		goto ZZ_12C88_154;
	}
	V1 = A0;
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	V0 += 1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = (int32_t)V1 < (int32_t)A1;
	if (V0)
	{
		V0 = V1 + 1;
		ZZ_CLOCKCYCLES(20,0x80012D8C);
		goto ZZ_12C88_104;
	}
	V0 = V1 + 1;
	ZZ_CLOCKCYCLES(20,0x80012DDC);
ZZ_12C88_154:
	V0 = A2 << 1;
	ZZ_CLOCKCYCLES(1,0x80012DE0);
ZZ_12C88_158:
	V0 += A2;
	V0 <<= 2;
	V0 = V0 - A2;
	V0 <<= 2;
	A0 = 0x80060000;
	A0 += 31724;
	A0 += V0;
	A2 = 0x63960000;
	AT = 0x80060000;
	AT += V0;
	A1 = EMU_ReadU32(AT + 31744); //+ 0x7C00
	A2 |= 0x347F;
	V0 = ~S2;
	V0 = R0 < V0;
	A3 = SP + 24;
	RA = 0x80012E24; //ZZ_12C88_19C
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(17,0x80013D9C);
	goto ZZ_13D9C;
ZZ_12C88_19C:
	V1 = 0x80060000;
	V1 += 30792;
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(6,0x80012E64);
		goto ZZ_12C88_1DC;
	}
	S0 = R0;
	S3 = V1 + 4;
	S1 = S3;
	ZZ_CLOCKCYCLES(8,0x80012E44);
ZZ_12C88_1BC:
	A0 = S1;
	RA = 0x80012E50; //ZZ_12C88_1C8
	A1 = S2;
	ZZ_CLOCKCYCLES(3,0x80013304);
	goto ZZ_13304;
ZZ_12C88_1C8:
	V0 = EMU_ReadU32(S3 - 4); //+ 0xFFFFFFFC
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 += 44;
		ZZ_CLOCKCYCLES(5,0x80012E44);
		goto ZZ_12C88_1BC;
	}
	S1 += 44;
	ZZ_CLOCKCYCLES(5,0x80012E64);
ZZ_12C88_1DC:
	RA = EMU_ReadU32(SP + 64); //+ 0x40
	S3 = EMU_ReadU32(SP + 60); //+ 0x3C
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80014154,ZZ_140DC_78);
	ZZ_JUMPREGISTER(0x80012EE8,ZZ_12E84_64);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80012C88,0x80012CF0,ZZ_12C88);
ZZ_MARK_TARGET(0x80012CF0,0x80012D1C,ZZ_12C88_68);
ZZ_MARK_TARGET(0x80012D1C,0x80012D24,ZZ_12C88_94);
ZZ_MARK_TARGET(0x80012D24,0x80012D30,ZZ_12C88_9C);
ZZ_MARK_TARGET(0x80012D30,0x80012D40,ZZ_12C88_A8);
ZZ_MARK_TARGET(0x80012D40,0x80012D8C,ZZ_12C88_B8);
ZZ_MARK_TARGET(0x80012D8C,0x80012DDC,ZZ_12C88_104);
ZZ_MARK_TARGET(0x80012DDC,0x80012DE0,ZZ_12C88_154);
ZZ_MARK_TARGET(0x80012DE0,0x80012E24,ZZ_12C88_158);
ZZ_MARK_TARGET(0x80012E24,0x80012E44,ZZ_12C88_19C);
ZZ_MARK_TARGET(0x80012E44,0x80012E50,ZZ_12C88_1BC);
ZZ_MARK_TARGET(0x80012E50,0x80012E64,ZZ_12C88_1C8);
ZZ_MARK_TARGET(0x80012E64,0x80012E84,ZZ_12C88_1DC);
