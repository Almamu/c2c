#ifdef ZZ_INCLUDE_CODE
ZZ_265A8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 17284); //+ 0xFFFFBC7C
	SP -= 56;
	EMU_Write32(SP + 48,RA); //+ 0x30
	EMU_Write32(SP + 44,S1); //+ 0x2C
	V0 = ~V0;
	S1 = A0 & V0;
	if (!S1)
	{
		EMU_Write32(SP + 40,S0); //+ 0x28
		ZZ_CLOCKCYCLES(9,0x800266E8);
		goto ZZ_265A8_140;
	}
	EMU_Write32(SP + 40,S0); //+ 0x28
	S0 = 0x80060000;
	S0 += 2924;
	A0 = EMU_ReadU32(S0);
	A1 = 0x4B;
	A2 = R0;
	RA = 0x800265E8; //ZZ_265A8_40
	A3 = 0x2;
	ZZ_CLOCKCYCLES(16,0x800325CC);
	goto ZZ_325CC;
ZZ_265A8_40:
	A0 = EMU_ReadU32(S0);
	A1 = 0x1A8;
	V0 -= 1;
	A2 = V0 << 8;
	A3 = R0;
	V0 = 0x1;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80026618; //ZZ_265A8_70
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(12,0x80031DF4);
	goto ZZ_31DF4;
ZZ_265A8_70:
	S0 = V0;
	if (!S0)
	{
		ZZ_CLOCKCYCLES(3,0x80026668);
		goto ZZ_265A8_C0;
	}
	V0 = EMU_ReadS8(S0 + 3); //+ 0x3
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80026668);
		goto ZZ_265A8_C0;
	}
	ZZ_CLOCKCYCLES(7,0x80026634);
ZZ_265A8_8C:
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	if (V0 != S1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x8002664C);
		goto ZZ_265A8_A4;
	}
	A0 = S0;
	RA = 0x8002664C; //ZZ_265A8_A4
	A1 = 0x2;
	ZZ_CLOCKCYCLES(6,0x80026700);
	goto ZZ_26700;
ZZ_265A8_A4:
	V0 = EMU_ReadS8(S0 + 3); //+ 0x3
	S0 += V0;
	V0 = EMU_ReadS8(S0 + 3); //+ 0x3
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x80026634);
		goto ZZ_265A8_8C;
	}
	ZZ_CLOCKCYCLES(7,0x80026668);
ZZ_265A8_C0:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2924); //+ 0xB6C
	A1 = 0x1A8;
	A2 = R0;
	A3 = R0;
	V0 = 0x1;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80026698; //ZZ_265A8_F0
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(12,0x80031DF4);
	goto ZZ_31DF4;
ZZ_265A8_F0:
	S0 = V0;
	if (!S0)
	{
		ZZ_CLOCKCYCLES(3,0x800266E8);
		goto ZZ_265A8_140;
	}
	V0 = EMU_ReadS8(S0 + 3); //+ 0x3
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x800266E8);
		goto ZZ_265A8_140;
	}
	ZZ_CLOCKCYCLES(7,0x800266B4);
ZZ_265A8_10C:
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	if (V0 != S1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x800266CC);
		goto ZZ_265A8_124;
	}
	A0 = S0;
	RA = 0x800266CC; //ZZ_265A8_124
	A1 = 0x1;
	ZZ_CLOCKCYCLES(6,0x80026700);
	goto ZZ_26700;
ZZ_265A8_124:
	V0 = EMU_ReadS8(S0 + 3); //+ 0x3
	S0 += V0;
	V0 = EMU_ReadS8(S0 + 3); //+ 0x3
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x800266B4);
		goto ZZ_265A8_10C;
	}
	ZZ_CLOCKCYCLES(7,0x800266E8);
ZZ_265A8_140:
	RA = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = EMU_ReadU32(SP + 44); //+ 0x2C
	S0 = EMU_ReadU32(SP + 40); //+ 0x28
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8002641C,ZZ_26368_B4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800265A8,0x800265E8,ZZ_265A8);
ZZ_MARK_TARGET(0x800265E8,0x80026618,ZZ_265A8_40);
ZZ_MARK_TARGET(0x80026618,0x80026634,ZZ_265A8_70);
ZZ_MARK_TARGET(0x80026634,0x8002664C,ZZ_265A8_8C);
ZZ_MARK_TARGET(0x8002664C,0x80026668,ZZ_265A8_A4);
ZZ_MARK_TARGET(0x80026668,0x80026698,ZZ_265A8_C0);
ZZ_MARK_TARGET(0x80026698,0x800266B4,ZZ_265A8_F0);
ZZ_MARK_TARGET(0x800266B4,0x800266CC,ZZ_265A8_10C);
ZZ_MARK_TARGET(0x800266CC,0x800266E8,ZZ_265A8_124);
ZZ_MARK_TARGET(0x800266E8,0x80026700,ZZ_265A8_140);
