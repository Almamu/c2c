#ifdef ZZ_INCLUDE_CODE
ZZ_187FC:
	T2 = EMU_ReadU32(SP + 16); //+ 0x10
	T0 = A0;
	V1 = EMU_ReadU32(T2 + 16); //+ 0x10
	A0 = EMU_ReadU16(T2);
	T4 = EMU_ReadU32(SP + 20); //+ 0x14
	T3 = EMU_ReadU32(SP + 24); //+ 0x18
	V1 <<= 16;
	A3 = A0 | V1;
	GTE_SetDataRegister(0,A3);
	T5 = R0;
	GTE_SetDataRegister(1,T5);
	V0 = EMU_ReadU16(T2 + 12); //+ 0xC
	A3 = V0 | V1;
	GTE_SetDataRegister(2,A3);
	GTE_SetDataRegister(3,T5);
	V0 = EMU_ReadU32(T2 + 4); //+ 0x4
	V0 <<= 16;
	A3 = A0 | V0;
	GTE_SetDataRegister(4,A3);
	GTE_SetDataRegister(5,T5);
	GTE_Execute(2621488);
	A3 = GTE_GetControlRegister(31);
	if ((int32_t)A3 < 0)
	{
		ZZ_CLOCKCYCLES(27,0x80018AE0);
		goto ZZ_187FC_2E4;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14064); //+ 0x36F0
	A0 = EMU_ReadU32(V0 + 8); //+ 0x8
	V1 = A0 + 52;
	T1 = A0;
	if (!T3)
	{
		EMU_Write32(V0 + 8,V1); //+ 0x8
		ZZ_CLOCKCYCLES(36,0x800189E0);
		goto ZZ_187FC_1E4;
	}
	EMU_Write32(V0 + 8,V1); //+ 0x8
	V1 = EMU_ReadU8(A1);
	V0 = EMU_ReadS16(T0 + 40); //+ 0x28
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 4,V0); //+ 0x4
	V1 = EMU_ReadU8(A1 + 1); //+ 0x1
	V0 = EMU_ReadS16(T0 + 42); //+ 0x2A
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 5,V0); //+ 0x5
	V1 = EMU_ReadU8(A1 + 2); //+ 0x2
	V0 = EMU_ReadS16(T0 + 44); //+ 0x2C
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 6,V0); //+ 0x6
	V1 = EMU_ReadU8(A1);
	V0 = EMU_ReadS16(T0 + 46); //+ 0x2E
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 16,V0); //+ 0x10
	V1 = EMU_ReadU8(A1 + 1); //+ 0x1
	V0 = EMU_ReadS16(T0 + 48); //+ 0x30
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 17,V0); //+ 0x11
	V1 = EMU_ReadU8(A1 + 2); //+ 0x2
	V0 = EMU_ReadS16(T0 + 50); //+ 0x32
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 18,V0); //+ 0x12
	V1 = EMU_ReadU8(A1);
	V0 = EMU_ReadS16(T0 + 52); //+ 0x34
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 28,V0); //+ 0x1C
	V1 = EMU_ReadU8(A1 + 1); //+ 0x1
	V0 = EMU_ReadS16(T0 + 54); //+ 0x36
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 29,V0); //+ 0x1D
	V1 = EMU_ReadU8(A1 + 2); //+ 0x2
	V0 = EMU_ReadS16(T0 + 56); //+ 0x38
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 30,V0); //+ 0x1E
	V1 = EMU_ReadU8(A1);
	V0 = EMU_ReadS16(T0 + 58); //+ 0x3A
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 40,V0); //+ 0x28
	V1 = EMU_ReadU8(A1 + 1); //+ 0x1
	V0 = EMU_ReadS16(T0 + 60); //+ 0x3C
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 41,V0); //+ 0x29
	V1 = EMU_ReadU8(A1 + 2); //+ 0x2
	V0 = EMU_ReadS16(T0 + 62); //+ 0x3E
	EMU_SMultiply(V1,V0);
	T5 = LO;
	V0 = (int32_t)T5 >> 7;
	EMU_Write8(T1 + 42,V0); //+ 0x2A
	ZZ_CLOCKCYCLES(121,0x800189F8);
	goto ZZ_187FC_1FC;
ZZ_187FC_1E4:
	V0 = EMU_ReadU32(A1);
	EMU_Write32(T1 + 4,V0); //+ 0x4
	EMU_Write32(T1 + 16,V0); //+ 0x10
	EMU_Write32(T1 + 28,V0); //+ 0x1C
	EMU_Write32(T1 + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(6,0x800189F8);
ZZ_187FC_1FC:
	T0 = GTE_GetDataRegister(17);
	V0 = EMU_ReadU8(A1 + 3); //+ 0x3
	V0 |= 0x3C;
	EMU_Write8(T1 + 7,V0); //+ 0x7
	A3 = GTE_GetDataRegister(18);
	EMU_Write32(T1 + 32,GTE_GetDataRegister(14)); //+ 0x20
	T0 += A3;
	A3 = GTE_GetDataRegister(19);
	EMU_Write32(T1 + 20,GTE_GetDataRegister(13)); //+ 0x14
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2844); //+ 0xB1C
	A0 = A2 + 2048;
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	A0 = A0 - V0;
	V0 = T0 + A3;
	V0 >>= 5;
	T0 = A0 - V0;
	V0 = (int32_t)T0 < 2047;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(23,0x80018A68);
		goto ZZ_187FC_26C;
	}
	if ((int32_t)T0 < 0)
	{
		A2 = T4;
		ZZ_CLOCKCYCLES(25,0x80018A6C);
		goto ZZ_187FC_270;
	}
	A2 = T4;
	V0 = T0 << 2;
	A2 += V0;
	ZZ_CLOCKCYCLES(28,0x80018A6C);
	goto ZZ_187FC_270;
ZZ_187FC_26C:
	A2 = T4 + 8188;
	ZZ_CLOCKCYCLES(1,0x80018A6C);
ZZ_187FC_270:
	V1 = EMU_ReadU32(A2);
	A0 = 0xFF0000;
	A0 |= 0xFFFF;
	V0 = 0xC000000;
	A0 &= T1;
	V1 |= V0;
	EMU_Write32(T1,V1);
	EMU_Write32(A2,A0);
	V0 = EMU_ReadU32(T2 + 4); //+ 0x4
	V1 = EMU_ReadU16(T2 + 12); //+ 0xC
	V0 <<= 16;
	A3 = V1 | V0;
	EMU_Write32(T1 + 8,GTE_GetDataRegister(12)); //+ 0x8
	GTE_SetDataRegister(0,A3);
	T5 = R0;
	GTE_SetDataRegister(1,T5);
	GTE_Execute(1572865);
	V0 = EMU_ReadU32(A1 + 4); //+ 0x4
	EMU_Write32(T1 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_Write32(T1 + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(A1 + 12); //+ 0xC
	EMU_Write16(T1 + 36,V0); //+ 0x24
	V0 >>= 16;
	EMU_Write16(T1 + 48,V0); //+ 0x30
	EMU_Write32(T1 + 44,GTE_GetDataRegister(14)); //+ 0x2C
	ZZ_CLOCKCYCLES(29,0x80018AE0);
ZZ_187FC_2E4:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8001BDD8,ZZ_1B974_464);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800187FC,ZZ_187FC);
ZZ_MARK(0x80018800);
ZZ_MARK(0x80018804);
ZZ_MARK(0x80018808);
ZZ_MARK(0x8001880C);
ZZ_MARK(0x80018810);
ZZ_MARK(0x80018814);
ZZ_MARK(0x80018818);
ZZ_MARK(0x8001881C);
ZZ_MARK(0x80018820);
ZZ_MARK(0x80018824);
ZZ_MARK(0x80018828);
ZZ_MARK(0x8001882C);
ZZ_MARK(0x80018830);
ZZ_MARK(0x80018834);
ZZ_MARK(0x80018838);
ZZ_MARK(0x8001883C);
ZZ_MARK(0x80018840);
ZZ_MARK(0x80018844);
ZZ_MARK(0x80018848);
ZZ_MARK(0x8001884C);
ZZ_MARK(0x80018850);
ZZ_MARK(0x80018854);
ZZ_MARK(0x80018858);
ZZ_MARK(0x8001885C);
ZZ_MARK(0x80018860);
ZZ_MARK(0x80018864);
ZZ_MARK(0x80018868);
ZZ_MARK(0x8001886C);
ZZ_MARK(0x80018870);
ZZ_MARK(0x80018874);
ZZ_MARK(0x80018878);
ZZ_MARK(0x8001887C);
ZZ_MARK(0x80018880);
ZZ_MARK(0x80018884);
ZZ_MARK(0x80018888);
ZZ_MARK(0x8001888C);
ZZ_MARK(0x80018890);
ZZ_MARK(0x80018894);
ZZ_MARK(0x80018898);
ZZ_MARK(0x8001889C);
ZZ_MARK(0x800188A0);
ZZ_MARK(0x800188A4);
ZZ_MARK(0x800188A8);
ZZ_MARK(0x800188AC);
ZZ_MARK(0x800188B0);
ZZ_MARK(0x800188B4);
ZZ_MARK(0x800188B8);
ZZ_MARK(0x800188BC);
ZZ_MARK(0x800188C0);
ZZ_MARK(0x800188C4);
ZZ_MARK(0x800188C8);
ZZ_MARK(0x800188CC);
ZZ_MARK(0x800188D0);
ZZ_MARK(0x800188D4);
ZZ_MARK(0x800188D8);
ZZ_MARK(0x800188DC);
ZZ_MARK(0x800188E0);
ZZ_MARK(0x800188E4);
ZZ_MARK(0x800188E8);
ZZ_MARK(0x800188EC);
ZZ_MARK(0x800188F0);
ZZ_MARK(0x800188F4);
ZZ_MARK(0x800188F8);
ZZ_MARK(0x800188FC);
ZZ_MARK(0x80018900);
ZZ_MARK(0x80018904);
ZZ_MARK(0x80018908);
ZZ_MARK(0x8001890C);
ZZ_MARK(0x80018910);
ZZ_MARK(0x80018914);
ZZ_MARK(0x80018918);
ZZ_MARK(0x8001891C);
ZZ_MARK(0x80018920);
ZZ_MARK(0x80018924);
ZZ_MARK(0x80018928);
ZZ_MARK(0x8001892C);
ZZ_MARK(0x80018930);
ZZ_MARK(0x80018934);
ZZ_MARK(0x80018938);
ZZ_MARK(0x8001893C);
ZZ_MARK(0x80018940);
ZZ_MARK(0x80018944);
ZZ_MARK(0x80018948);
ZZ_MARK(0x8001894C);
ZZ_MARK(0x80018950);
ZZ_MARK(0x80018954);
ZZ_MARK(0x80018958);
ZZ_MARK(0x8001895C);
ZZ_MARK(0x80018960);
ZZ_MARK(0x80018964);
ZZ_MARK(0x80018968);
ZZ_MARK(0x8001896C);
ZZ_MARK(0x80018970);
ZZ_MARK(0x80018974);
ZZ_MARK(0x80018978);
ZZ_MARK(0x8001897C);
ZZ_MARK(0x80018980);
ZZ_MARK(0x80018984);
ZZ_MARK(0x80018988);
ZZ_MARK(0x8001898C);
ZZ_MARK(0x80018990);
ZZ_MARK(0x80018994);
ZZ_MARK(0x80018998);
ZZ_MARK(0x8001899C);
ZZ_MARK(0x800189A0);
ZZ_MARK(0x800189A4);
ZZ_MARK(0x800189A8);
ZZ_MARK(0x800189AC);
ZZ_MARK(0x800189B0);
ZZ_MARK(0x800189B4);
ZZ_MARK(0x800189B8);
ZZ_MARK(0x800189BC);
ZZ_MARK(0x800189C0);
ZZ_MARK(0x800189C4);
ZZ_MARK(0x800189C8);
ZZ_MARK(0x800189CC);
ZZ_MARK(0x800189D0);
ZZ_MARK(0x800189D4);
ZZ_MARK(0x800189D8);
ZZ_MARK(0x800189DC);
ZZ_MARK_TARGET(0x800189E0,ZZ_187FC_1E4);
ZZ_MARK(0x800189E4);
ZZ_MARK(0x800189E8);
ZZ_MARK(0x800189EC);
ZZ_MARK(0x800189F0);
ZZ_MARK(0x800189F4);
ZZ_MARK_TARGET(0x800189F8,ZZ_187FC_1FC);
ZZ_MARK(0x800189FC);
ZZ_MARK(0x80018A00);
ZZ_MARK(0x80018A04);
ZZ_MARK(0x80018A08);
ZZ_MARK(0x80018A0C);
ZZ_MARK(0x80018A10);
ZZ_MARK(0x80018A14);
ZZ_MARK(0x80018A18);
ZZ_MARK(0x80018A1C);
ZZ_MARK(0x80018A20);
ZZ_MARK(0x80018A24);
ZZ_MARK(0x80018A28);
ZZ_MARK(0x80018A2C);
ZZ_MARK(0x80018A30);
ZZ_MARK(0x80018A34);
ZZ_MARK(0x80018A38);
ZZ_MARK(0x80018A3C);
ZZ_MARK(0x80018A40);
ZZ_MARK(0x80018A44);
ZZ_MARK(0x80018A48);
ZZ_MARK(0x80018A4C);
ZZ_MARK(0x80018A50);
ZZ_MARK(0x80018A54);
ZZ_MARK(0x80018A58);
ZZ_MARK(0x80018A5C);
ZZ_MARK(0x80018A60);
ZZ_MARK(0x80018A64);
ZZ_MARK_TARGET(0x80018A68,ZZ_187FC_26C);
ZZ_MARK_TARGET(0x80018A6C,ZZ_187FC_270);
ZZ_MARK(0x80018A70);
ZZ_MARK(0x80018A74);
ZZ_MARK(0x80018A78);
ZZ_MARK(0x80018A7C);
ZZ_MARK(0x80018A80);
ZZ_MARK(0x80018A84);
ZZ_MARK(0x80018A88);
ZZ_MARK(0x80018A8C);
ZZ_MARK(0x80018A90);
ZZ_MARK(0x80018A94);
ZZ_MARK(0x80018A98);
ZZ_MARK(0x80018A9C);
ZZ_MARK(0x80018AA0);
ZZ_MARK(0x80018AA4);
ZZ_MARK(0x80018AA8);
ZZ_MARK(0x80018AAC);
ZZ_MARK(0x80018AB0);
ZZ_MARK(0x80018AB4);
ZZ_MARK(0x80018AB8);
ZZ_MARK(0x80018ABC);
ZZ_MARK(0x80018AC0);
ZZ_MARK(0x80018AC4);
ZZ_MARK(0x80018AC8);
ZZ_MARK(0x80018ACC);
ZZ_MARK(0x80018AD0);
ZZ_MARK(0x80018AD4);
ZZ_MARK(0x80018AD8);
ZZ_MARK(0x80018ADC);
ZZ_MARK_TARGET(0x80018AE0,ZZ_187FC_2E4);
ZZ_MARK(0x80018AE4);
