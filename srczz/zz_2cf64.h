#ifdef ZZ_INCLUDE_CODE
ZZ_2CF64:
	SP -= 456;
	EMU_Write32(SP + 416,S0); //+ 0x1A0
	S0 = A0;
	EMU_Write32(SP + 420,S1); //+ 0x1A4
	S1 = A1;
	A0 = S1;
	A1 = S0 + 44;
	EMU_Write32(SP + 452,RA); //+ 0x1C4
	EMU_Write32(SP + 448,FP); //+ 0x1C0
	EMU_Write32(SP + 444,S7); //+ 0x1BC
	EMU_Write32(SP + 440,S6); //+ 0x1B8
	EMU_Write32(SP + 436,S5); //+ 0x1B4
	EMU_Write32(SP + 432,S4); //+ 0x1B0
	EMU_Write32(SP + 428,S3); //+ 0x1AC
	EMU_Write32(SP + 424,S2); //+ 0x1A8
	EMU_Write32(SP + 328,A2); //+ 0x148
	RA = 0x8002CFAC; //ZZ_2CF64_48
	EMU_Write32(SP + 336,A3); //+ 0x150
	ZZ_CLOCKCYCLES(18,0x800311CC);
	goto ZZ_311CC;
ZZ_2CF64_48:
	if (!V0)
	{
		A0 = SP + 24;
		ZZ_CLOCKCYCLES(2,0x8002D9C4);
		goto ZZ_2CF64_A60;
	}
	A0 = SP + 24;
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	EMU_Write32(SP + 84,V0); //+ 0x54
	EMU_Write32(SP + 72,V0); //+ 0x48
	EMU_Write32(SP + 36,V0); //+ 0x24
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	EMU_Write32(SP + 108,V0); //+ 0x6C
	EMU_Write32(SP + 96,V0); //+ 0x60
	EMU_Write32(SP + 60,V0); //+ 0x3C
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	EMU_Write32(SP + 112,V0); //+ 0x70
	EMU_Write32(SP + 76,V0); //+ 0x4C
	EMU_Write32(SP + 64,V0); //+ 0x40
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S0 + 24); //+ 0x18
	EMU_Write32(SP + 100,V0); //+ 0x64
	EMU_Write32(SP + 88,V0); //+ 0x58
	EMU_Write32(SP + 52,V0); //+ 0x34
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	EMU_Write32(SP + 68,V0); //+ 0x44
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 44,V0); //+ 0x2C
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S0 + 28); //+ 0x1C
	EMU_Write32(SP + 116,V0); //+ 0x74
	EMU_Write32(SP + 104,V0); //+ 0x68
	EMU_Write32(SP + 92,V0); //+ 0x5C
	EMU_Write32(SP + 80,V0); //+ 0x50
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	V0 = 0x8;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x4;
	EMU_Write32(SP + 20,V0); //+ 0x14
	A2 = EMU_ReadU32(V1 + 8); //+ 0x8
	A1 = A0;
	RA = 0x8002D068; //ZZ_2CF64_104
	A3 = S0 + 32;
	ZZ_CLOCKCYCLES(47,0x8003ED6C);
	goto ZZ_3ED6C;
ZZ_2CF64_104:
	T6 = EMU_ReadU32(S1 + 16); //+ 0x10
	EMU_Write32(SP + 344,T6); //+ 0x158
	A1 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 = EMU_ReadU32(S0 + 60); //+ 0x3C
	V0 = T6 + A1;
	V0 = (int32_t)V0 >> 1;
	EMU_Write32(SP + 352,V0); //+ 0x160
	V0 = (int32_t)V1 < (int32_t)T6;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x8002D098);
		goto ZZ_2CF64_134;
	}
	EMU_Write32(SP + 344,V1); //+ 0x158
	ZZ_CLOCKCYCLES(12,0x8002D098);
ZZ_2CF64_134:
	A0 = EMU_ReadU32(S0 + 48); //+ 0x30
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D0B0);
		goto ZZ_2CF64_14C;
	}
	A1 = A0;
	ZZ_CLOCKCYCLES(6,0x8002D0B0);
ZZ_2CF64_14C:
	T7 = EMU_ReadU32(SP + 352); //+ 0x160
	V0 = (int32_t)V1 < (int32_t)T7;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D0C8);
		goto ZZ_2CF64_164;
	}
	EMU_Write32(SP + 352,V1); //+ 0x160
	ZZ_CLOCKCYCLES(6,0x8002D0C8);
ZZ_2CF64_164:
	T6 = EMU_ReadU32(SP + 352); //+ 0x160
	V0 = (int32_t)T6 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D0E0);
		goto ZZ_2CF64_17C;
	}
	EMU_Write32(SP + 352,A0); //+ 0x160
	ZZ_CLOCKCYCLES(6,0x8002D0E0);
ZZ_2CF64_17C:
	EMU_Write32(SP + 360,A1); //+ 0x168
	T7 = SP + 264;
	EMU_Write32(SP + 376,T7); //+ 0x178
	ZZ_CLOCKCYCLES(3,0x8002D0EC);
ZZ_2CF64_188:
	A0 = EMU_ReadU32(SP + 360); //+ 0x168
	A1 = SP + 24;
	RA = 0x8002D0FC; //ZZ_2CF64_198
	A2 = SP + 120;
	ZZ_CLOCKCYCLES(4,0x80030308);
	goto ZZ_30308;
ZZ_2CF64_198:
	T0 = V0;
	V0 = (int32_t)T0 < 3;
	if (V0)
	{
		V0 = T0 << 1;
		ZZ_CLOCKCYCLES(4,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	V0 = T0 << 1;
	S7 = EMU_ReadU32(SP + 120); //+ 0x78
	T3 = EMU_ReadU32(SP + 128); //+ 0x80
	T1 = SP + 132;
	A2 = V0 - 2;
	FP = S7;
	if ((int32_t)A2 < 0)
	{
		T5 = T3;
		ZZ_CLOCKCYCLES(11,0x8002D17C);
		goto ZZ_2CF64_218;
	}
	T5 = T3;
	ZZ_CLOCKCYCLES(11,0x8002D128);
ZZ_2CF64_1C4:
	V1 = EMU_ReadU32(T1);
	V0 = (int32_t)V1 < (int32_t)FP;
	if (!V0)
	{
		V0 = (int32_t)S7 < (int32_t)V1;
		ZZ_CLOCKCYCLES(5,0x8002D140);
		goto ZZ_2CF64_1DC;
	}
	V0 = (int32_t)S7 < (int32_t)V1;
	FP = V1;
	ZZ_CLOCKCYCLES(6,0x8002D140);
ZZ_2CF64_1DC:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D14C);
		goto ZZ_2CF64_1E8;
	}
	S7 = V1;
	ZZ_CLOCKCYCLES(3,0x8002D14C);
ZZ_2CF64_1E8:
	V1 = EMU_ReadU32(T1 + 8); //+ 0x8
	V0 = (int32_t)V1 < (int32_t)T3;
	if (!V0)
	{
		V0 = (int32_t)T5 < (int32_t)V1;
		ZZ_CLOCKCYCLES(5,0x8002D164);
		goto ZZ_2CF64_200;
	}
	V0 = (int32_t)T5 < (int32_t)V1;
	T3 = V1;
	ZZ_CLOCKCYCLES(6,0x8002D164);
ZZ_2CF64_200:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D170);
		goto ZZ_2CF64_20C;
	}
	T5 = V1;
	ZZ_CLOCKCYCLES(3,0x8002D170);
ZZ_2CF64_20C:
	A2 -= 1;
	if ((int32_t)A2 >= 0)
	{
		T1 += 12;
		ZZ_CLOCKCYCLES(3,0x8002D128);
		goto ZZ_2CF64_1C4;
	}
	T1 += 12;
	ZZ_CLOCKCYCLES(3,0x8002D17C);
ZZ_2CF64_218:
	T6 = EMU_ReadU32(SP + 328); //+ 0x148
	V1 = EMU_ReadU32(T6);
	V0 = S7 - V1;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(8,0x8002D1A0);
		goto ZZ_2CF64_23C;
	}
	V0 += 8191;
	ZZ_CLOCKCYCLES(9,0x8002D1A0);
ZZ_2CF64_23C:
	T7 = EMU_ReadU32(SP + 328); //+ 0x148
	A1 = EMU_ReadU32(T7 + 8); //+ 0x8
	A3 = (int32_t)V0 >> 13;
	V0 = T5 - A1;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		S7 = A3 + 16;
		ZZ_CLOCKCYCLES(8,0x8002D1C4);
		goto ZZ_2CF64_260;
	}
	S7 = A3 + 16;
	V0 += 8191;
	ZZ_CLOCKCYCLES(9,0x8002D1C4);
ZZ_2CF64_260:
	A2 = (int32_t)V0 >> 13;
	V0 = FP - V1;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		T5 = A2 + 16;
		ZZ_CLOCKCYCLES(5,0x8002D1DC);
		goto ZZ_2CF64_278;
	}
	T5 = A2 + 16;
	V0 += 8191;
	ZZ_CLOCKCYCLES(6,0x8002D1DC);
ZZ_2CF64_278:
	A0 = (int32_t)V0 >> 13;
	V0 = T3 - A1;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		FP = A0 + 16;
		ZZ_CLOCKCYCLES(5,0x8002D1F4);
		goto ZZ_2CF64_290;
	}
	FP = A0 + 16;
	V0 += 8191;
	ZZ_CLOCKCYCLES(6,0x8002D1F4);
ZZ_2CF64_290:
	T6 = EMU_ReadU32(SP + 336); //+ 0x150
	V1 = (int32_t)V0 >> 13;
	if (!T6)
	{
		T3 = V1 + 16;
		ZZ_CLOCKCYCLES(4,0x8002D238);
		goto ZZ_2CF64_2D4;
	}
	T3 = V1 + 16;
	V0 = A3 + 32;
	if ((int32_t)V0 < 0)
	{
		V0 = A2 + 32;
		ZZ_CLOCKCYCLES(7,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	V0 = A2 + 32;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)A0 < 32;
		ZZ_CLOCKCYCLES(9,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	V0 = (int32_t)A0 < 32;
	if (!V0)
	{
		V0 = (int32_t)V1 < 32;
		ZZ_CLOCKCYCLES(11,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	V0 = (int32_t)V1 < 32;
	if (!V0)
	{
		FP = -16;
		ZZ_CLOCKCYCLES(13,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	FP = -16;
	T3 = -16;
	S7 = 0x2F;
	T5 = 0x2F;
	ZZ_CLOCKCYCLES(17,0x8002D264);
	goto ZZ_2CF64_300;
ZZ_2CF64_2D4:
	if ((int32_t)S7 < 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	if ((int32_t)T5 < 0)
	{
		V0 = (int32_t)FP < 32;
		ZZ_CLOCKCYCLES(4,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	V0 = (int32_t)FP < 32;
	if (!V0)
	{
		V0 = (int32_t)T3 < 32;
		ZZ_CLOCKCYCLES(6,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	V0 = (int32_t)T3 < 32;
	if (!V0)
	{
		FP = R0;
		ZZ_CLOCKCYCLES(8,0x8002D98C);
		goto ZZ_2CF64_A28;
	}
	FP = R0;
	T3 = R0;
	S7 = 0x1F;
	T5 = 0x1F;
	ZZ_CLOCKCYCLES(11,0x8002D264);
ZZ_2CF64_300:
	V1 = 0xFE210000;
	V1 |= 0xFE21;
	S1 = SP + 264;
	A2 = 0xF;
	ZZ_CLOCKCYCLES(4,0x8002D274);
ZZ_2CF64_310:
	EMU_Write32(S1,V1);
	A2 -= 1;
	if ((int32_t)A2 >= 0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(4,0x8002D274);
		goto ZZ_2CF64_310;
	}
	S1 += 4;
	A2 = T0 - 1;
	if ((int32_t)A2 < 0)
	{
		T1 = SP + 120;
		ZZ_CLOCKCYCLES(7,0x8002D8F8);
		goto ZZ_2CF64_994;
	}
	T1 = SP + 120;
	ZZ_CLOCKCYCLES(7,0x8002D290);
ZZ_2CF64_32C:
	T7 = EMU_ReadU32(SP + 328); //+ 0x148
	V0 = EMU_ReadU32(T1);
	A0 = EMU_ReadU32(T7);
	V0 = V0 - A0;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(8,0x8002D2B4);
		goto ZZ_2CF64_350;
	}
	V0 += 8191;
	ZZ_CLOCKCYCLES(9,0x8002D2B4);
ZZ_2CF64_350:
	T6 = EMU_ReadU32(SP + 328); //+ 0x148
	V1 = EMU_ReadU32(T1 + 8); //+ 0x8
	A1 = EMU_ReadU32(T6 + 8); //+ 0x8
	V0 = (int32_t)V0 >> 13;
	S0 = V0 + 16;
	V1 = V1 - A1;
	V0 = V1 << 2;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(9,0x8002D2DC);
		goto ZZ_2CF64_378;
	}
	V0 += 8191;
	ZZ_CLOCKCYCLES(10,0x8002D2DC);
ZZ_2CF64_378:
	T1 += 12;
	V1 = EMU_ReadU32(T1);
	V0 = (int32_t)V0 >> 13;
	S2 = V0 + 16;
	V1 = V1 - A0;
	V0 = V1 << 2;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(8,0x8002D300);
		goto ZZ_2CF64_39C;
	}
	V0 += 8191;
	ZZ_CLOCKCYCLES(9,0x8002D300);
ZZ_2CF64_39C:
	V1 = EMU_ReadU32(T1 + 8); //+ 0x8
	V0 = (int32_t)V0 >> 13;
	S4 = V0 + 16;
	V1 = V1 - A1;
	V0 = V1 << 2;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(7,0x8002D320);
		goto ZZ_2CF64_3BC;
	}
	V0 += 8191;
	ZZ_CLOCKCYCLES(8,0x8002D320);
ZZ_2CF64_3BC:
	V0 = (int32_t)V0 >> 13;
	S6 = V0 + 16;
	V0 = (int32_t)S6 < (int32_t)S2;
	if (!V0)
	{
		T1 += 12;
		ZZ_CLOCKCYCLES(5,0x8002D34C);
		goto ZZ_2CF64_3E8;
	}
	T1 += 12;
	V1 = S2;
	S2 = S6;
	S6 = V1;
	V1 = S0;
	S0 = S4;
	S4 = V1;
	ZZ_CLOCKCYCLES(11,0x8002D34C);
ZZ_2CF64_3E8:
	V0 = (int32_t)T5 < (int32_t)S2;
	if (V0)
	{
		V0 = (int32_t)S6 < (int32_t)T3;
		ZZ_CLOCKCYCLES(3,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	V0 = (int32_t)S6 < (int32_t)T3;
	if (V0)
	{
		A0 = S6 - S2;
		ZZ_CLOCKCYCLES(5,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	A0 = S6 - S2;
	if (A0)
	{
		V1 = S4 - S0;
		ZZ_CLOCKCYCLES(7,0x8002D4E0);
		goto ZZ_2CF64_57C;
	}
	V1 = S4 - S0;
	V0 = S2 < 32;
	if (!V0)
	{
		V0 = S2 << 1;
		ZZ_CLOCKCYCLES(10,0x8002D424);
		goto ZZ_2CF64_4C0;
	}
	V0 = S2 << 1;
	T7 = EMU_ReadU32(SP + 376); //+ 0x178
	S1 = T7 + V0;
	V0 = (int32_t)S0 < -1;
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(16,0x8002D390);
		goto ZZ_2CF64_42C;
	}
	V1 = S0;
	V1 = -1;
	ZZ_CLOCKCYCLES(17,0x8002D390);
ZZ_2CF64_42C:
	V0 = (int32_t)V1 < 33;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002D3A0);
		goto ZZ_2CF64_43C;
	}
	V1 = 0x20;
	ZZ_CLOCKCYCLES(4,0x8002D3A0);
ZZ_2CF64_43C:
	V0 = EMU_ReadS8(S1);
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D3B8);
		goto ZZ_2CF64_454;
	}
	EMU_Write8(S1,V1);
	ZZ_CLOCKCYCLES(6,0x8002D3B8);
ZZ_2CF64_454:
	V0 = EMU_ReadS8(S1 + 1); //+ 0x1
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D3D0);
		goto ZZ_2CF64_46C;
	}
	EMU_Write8(S1 + 1,V1); //+ 0x1
	ZZ_CLOCKCYCLES(6,0x8002D3D0);
ZZ_2CF64_46C:
	V1 = S4;
	V0 = (int32_t)S4 < -1;
	if (!V0)
	{
		V0 = (int32_t)V1 < 33;
		ZZ_CLOCKCYCLES(4,0x8002D3E8);
		goto ZZ_2CF64_484;
	}
	V0 = (int32_t)V1 < 33;
	V1 = -1;
	V0 = (int32_t)V1 < 33;
	ZZ_CLOCKCYCLES(6,0x8002D3E8);
ZZ_2CF64_484:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D3F4);
		goto ZZ_2CF64_490;
	}
	V1 = 0x20;
	ZZ_CLOCKCYCLES(3,0x8002D3F4);
ZZ_2CF64_490:
	V0 = EMU_ReadS8(S1);
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D40C);
		goto ZZ_2CF64_4A8;
	}
	EMU_Write8(S1,V1);
	ZZ_CLOCKCYCLES(6,0x8002D40C);
ZZ_2CF64_4A8:
	V0 = EMU_ReadS8(S1 + 1); //+ 0x1
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D424);
		goto ZZ_2CF64_4C0;
	}
	EMU_Write8(S1 + 1,V1); //+ 0x1
	ZZ_CLOCKCYCLES(6,0x8002D424);
ZZ_2CF64_4C0:
	T6 = EMU_ReadU32(SP + 336); //+ 0x150
	if (!T6)
	{
		V0 = (int32_t)S4 < (int32_t)S0;
		ZZ_CLOCKCYCLES(4,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	V0 = (int32_t)S4 < (int32_t)S0;
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(6,0x8002D444);
		goto ZZ_2CF64_4E0;
	}
	V1 = S0;
	S0 = S4;
	S4 = V1;
	ZZ_CLOCKCYCLES(8,0x8002D444);
ZZ_2CF64_4E0:
	V0 = (int32_t)S7 < (int32_t)S0;
	if (V0)
	{
		V0 = (int32_t)S4 < (int32_t)FP;
		ZZ_CLOCKCYCLES(3,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	V0 = (int32_t)S4 < (int32_t)FP;
	if (V0)
	{
		V0 = (int32_t)S0 < (int32_t)FP;
		ZZ_CLOCKCYCLES(5,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	V0 = (int32_t)S0 < (int32_t)FP;
	if (!V0)
	{
		V0 = (int32_t)S7 < (int32_t)S4;
		ZZ_CLOCKCYCLES(7,0x8002D464);
		goto ZZ_2CF64_500;
	}
	V0 = (int32_t)S7 < (int32_t)S4;
	S0 = FP;
	ZZ_CLOCKCYCLES(8,0x8002D464);
ZZ_2CF64_500:
	if (!V0)
	{
		A0 = S0 - 16;
		ZZ_CLOCKCYCLES(2,0x8002D470);
		goto ZZ_2CF64_50C;
	}
	A0 = S0 - 16;
	S4 = S7;
	ZZ_CLOCKCYCLES(3,0x8002D470);
ZZ_2CF64_50C:
	A1 = S2 - 16;
	EMU_Write32(SP + 384,A2); //+ 0x180
	EMU_Write32(SP + 396,T1); //+ 0x18C
	EMU_Write32(SP + 404,T3); //+ 0x194
	RA = 0x8002D488; //ZZ_2CF64_524
	EMU_Write32(SP + 412,T5); //+ 0x19C
	ZZ_CLOCKCYCLES(6,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2CF64_524:
	S0 += 8;
	V0 = (int32_t)S4 < (int32_t)S0;
	A2 = EMU_ReadU32(SP + 384); //+ 0x180
	T1 = EMU_ReadU32(SP + 396); //+ 0x18C
	T3 = EMU_ReadU32(SP + 404); //+ 0x194
	T5 = EMU_ReadU32(SP + 412); //+ 0x19C
	if (!V0)
	{
		A0 = S0 - 16;
		ZZ_CLOCKCYCLES(8,0x8002D470);
		goto ZZ_2CF64_50C;
	}
	A0 = S0 - 16;
	if (S0 == S4)
	{
		A0 = S4 - 16;
		ZZ_CLOCKCYCLES(10,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	A0 = S4 - 16;
	A1 = S2 - 16;
	EMU_Write32(SP + 384,A2); //+ 0x180
	EMU_Write32(SP + 396,T1); //+ 0x18C
	EMU_Write32(SP + 404,T3); //+ 0x194
	RA = 0x8002D4C8; //ZZ_2CF64_564
	EMU_Write32(SP + 412,T5); //+ 0x19C
	ZZ_CLOCKCYCLES(16,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2CF64_564:
	A2 = EMU_ReadU32(SP + 384); //+ 0x180
	T1 = EMU_ReadU32(SP + 396); //+ 0x18C
	T3 = EMU_ReadU32(SP + 404); //+ 0x194
	T5 = EMU_ReadU32(SP + 412); //+ 0x19C
	A2 -= 1;
	ZZ_CLOCKCYCLES(6,0x8002D8F0);
	goto ZZ_2CF64_98C;
ZZ_2CF64_57C:
	if ((int32_t)V1 >= 0)
	{
		T0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8002D4F0);
		goto ZZ_2CF64_58C;
	}
	T0 = 0x1;
	V1 = -V1;
	T0 = -1;
	ZZ_CLOCKCYCLES(4,0x8002D4F0);
ZZ_2CF64_58C:
	V0 = (int32_t)T5 < (int32_t)S6;
	if (!V0)
	{
		V0 = (int32_t)A0 < (int32_t)V1;
		ZZ_CLOCKCYCLES(3,0x8002D500);
		goto ZZ_2CF64_59C;
	}
	V0 = (int32_t)A0 < (int32_t)V1;
	S6 = T5;
	ZZ_CLOCKCYCLES(4,0x8002D500);
ZZ_2CF64_59C:
	if (!V0)
	{
		A3 = A0 << 1;
		ZZ_CLOCKCYCLES(2,0x8002D738);
		goto ZZ_2CF64_7D4;
	}
	A3 = A0 << 1;
	V0 = A0 - V1;
	T2 = V0 << 1;
	V0 = (int32_t)S2 < (int32_t)T3;
	if (!V0)
	{
		S3 = A3 - V1;
		ZZ_CLOCKCYCLES(7,0x8002D540);
		goto ZZ_2CF64_5DC;
	}
	S3 = A3 - V1;
	ZZ_CLOCKCYCLES(7,0x8002D51C);
ZZ_2CF64_5B8:
	if ((int32_t)S3 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D52C);
		goto ZZ_2CF64_5C8;
	}
	S3 += A3;
	ZZ_CLOCKCYCLES(4,0x8002D534);
	goto ZZ_2CF64_5D0;
ZZ_2CF64_5C8:
	S3 += T2;
	S2 += 1;
	ZZ_CLOCKCYCLES(2,0x8002D534);
ZZ_2CF64_5D0:
	V0 = (int32_t)S2 < (int32_t)T3;
	if (V0)
	{
		S0 += T0;
		ZZ_CLOCKCYCLES(3,0x8002D51C);
		goto ZZ_2CF64_5B8;
	}
	S0 += T0;
	ZZ_CLOCKCYCLES(3,0x8002D540);
ZZ_2CF64_5DC:
	if ((int32_t)S2 >= 0)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(2,0x8002D54C);
		goto ZZ_2CF64_5E8;
	}
	V0 = S2;
	V0 = R0;
	ZZ_CLOCKCYCLES(3,0x8002D54C);
ZZ_2CF64_5E8:
	T7 = EMU_ReadU32(SP + 376); //+ 0x178
	V0 <<= 1;
	S1 = T7 + V0;
	V0 = S2 < 32;
	if (!V0)
	{
		V0 = (int32_t)S0 < -1;
		ZZ_CLOCKCYCLES(6,0x8002D5B0);
		goto ZZ_2CF64_64C;
	}
	V0 = (int32_t)S0 < -1;
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(8,0x8002D570);
		goto ZZ_2CF64_60C;
	}
	V1 = S0;
	V1 = -1;
	ZZ_CLOCKCYCLES(9,0x8002D570);
ZZ_2CF64_60C:
	V0 = (int32_t)V1 < 33;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002D580);
		goto ZZ_2CF64_61C;
	}
	V1 = 0x20;
	ZZ_CLOCKCYCLES(4,0x8002D580);
ZZ_2CF64_61C:
	V0 = EMU_ReadS8(S1);
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D598);
		goto ZZ_2CF64_634;
	}
	EMU_Write8(S1,V1);
	ZZ_CLOCKCYCLES(6,0x8002D598);
ZZ_2CF64_634:
	V0 = EMU_ReadS8(S1 + 1); //+ 0x1
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		S5 = R0;
		ZZ_CLOCKCYCLES(5,0x8002D5B4);
		goto ZZ_2CF64_650;
	}
	S5 = R0;
	EMU_Write8(S1 + 1,V1); //+ 0x1
	ZZ_CLOCKCYCLES(6,0x8002D5B0);
ZZ_2CF64_64C:
	S5 = R0;
	ZZ_CLOCKCYCLES(1,0x8002D5B4);
ZZ_2CF64_650:
	A0 = 0x3039;
	T4 = S4 + T0;
	S4 = S1 + 1;
	ZZ_CLOCKCYCLES(3,0x8002D5C0);
ZZ_2CF64_65C:
	T6 = EMU_ReadU32(SP + 336); //+ 0x150
	if (!T6)
	{
		V0 = (int32_t)S0 < (int32_t)FP;
		ZZ_CLOCKCYCLES(4,0x8002D648);
		goto ZZ_2CF64_6E4;
	}
	V0 = (int32_t)S0 < (int32_t)FP;
	if (V0)
	{
		V0 = (int32_t)S7 < (int32_t)S0;
		ZZ_CLOCKCYCLES(6,0x8002D648);
		goto ZZ_2CF64_6E4;
	}
	V0 = (int32_t)S7 < (int32_t)S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002D648);
		goto ZZ_2CF64_6E4;
	}
	S5 -= 1;
	if ((int32_t)S5 > 0)
	{
		A0 = S0 - 16;
		ZZ_CLOCKCYCLES(11,0x8002D640);
		goto ZZ_2CF64_6DC;
	}
	A0 = S0 - 16;
	S5 = 0x8;
	A1 = S2 - 16;
	EMU_Write32(SP + 384,A2); //+ 0x180
	EMU_Write32(SP + 388,A3); //+ 0x184
	EMU_Write32(SP + 392,T0); //+ 0x188
	EMU_Write32(SP + 396,T1); //+ 0x18C
	EMU_Write32(SP + 400,T2); //+ 0x190
	EMU_Write32(SP + 404,T3); //+ 0x194
	EMU_Write32(SP + 408,T4); //+ 0x198
	RA = 0x8002D618; //ZZ_2CF64_6B4
	EMU_Write32(SP + 412,T5); //+ 0x19C
	ZZ_CLOCKCYCLES(22,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2CF64_6B4:
	A2 = EMU_ReadU32(SP + 384); //+ 0x180
	A3 = EMU_ReadU32(SP + 388); //+ 0x184
	T0 = EMU_ReadU32(SP + 392); //+ 0x188
	T1 = EMU_ReadU32(SP + 396); //+ 0x18C
	T2 = EMU_ReadU32(SP + 400); //+ 0x190
	T3 = EMU_ReadU32(SP + 404); //+ 0x194
	T4 = EMU_ReadU32(SP + 408); //+ 0x198
	T5 = EMU_ReadU32(SP + 412); //+ 0x19C
	A0 = 0x3039;
	ZZ_CLOCKCYCLES(10,0x8002D648);
	goto ZZ_2CF64_6E4;
ZZ_2CF64_6DC:
	A0 = S0;
	EMU_Write32(SP + 368,S2); //+ 0x170
	ZZ_CLOCKCYCLES(2,0x8002D648);
ZZ_2CF64_6E4:
	if ((int32_t)S3 > 0)
	{
		V0 = S2 < 32;
		ZZ_CLOCKCYCLES(2,0x8002D664);
		goto ZZ_2CF64_700;
	}
	V0 = S2 < 32;
	S0 += T0;
	if (S0 == T4)
	{
		S3 += A3;
		ZZ_CLOCKCYCLES(5,0x8002D8A4);
		goto ZZ_2CF64_940;
	}
	S3 += A3;
	ZZ_CLOCKCYCLES(7,0x8002D5C0);
	goto ZZ_2CF64_65C;
ZZ_2CF64_700:
	if (!V0)
	{
		S3 += T2;
		ZZ_CLOCKCYCLES(2,0x8002D6C4);
		goto ZZ_2CF64_760;
	}
	S3 += T2;
	V0 = (int32_t)S0 < -1;
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(5,0x8002D67C);
		goto ZZ_2CF64_718;
	}
	V1 = S0;
	V1 = -1;
	ZZ_CLOCKCYCLES(6,0x8002D67C);
ZZ_2CF64_718:
	V0 = (int32_t)V1 < 33;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002D68C);
		goto ZZ_2CF64_728;
	}
	V1 = 0x20;
	ZZ_CLOCKCYCLES(4,0x8002D68C);
ZZ_2CF64_728:
	V0 = EMU_ReadS8(S1);
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D6A4);
		goto ZZ_2CF64_740;
	}
	EMU_Write8(S1,V1);
	ZZ_CLOCKCYCLES(6,0x8002D6A4);
ZZ_2CF64_740:
	V0 = EMU_ReadS8(S4);
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D6BC);
		goto ZZ_2CF64_758;
	}
	EMU_Write8(S4,V1);
	ZZ_CLOCKCYCLES(6,0x8002D6BC);
ZZ_2CF64_758:
	S4 += 2;
	S1 += 2;
	ZZ_CLOCKCYCLES(2,0x8002D6C4);
ZZ_2CF64_760:
	S0 += T0;
	if (S0 == T4)
	{
		ZZ_CLOCKCYCLES(3,0x8002D8A4);
		goto ZZ_2CF64_940;
	}
	S2 += 1;
	V0 = (int32_t)S6 < (int32_t)S2;
	if (V0)
	{
		V0 = S2 < 32;
		ZZ_CLOCKCYCLES(7,0x8002D8A4);
		goto ZZ_2CF64_940;
	}
	V0 = S2 < 32;
	if (!V0)
	{
		V0 = (int32_t)S0 < -1;
		ZZ_CLOCKCYCLES(9,0x8002D5C0);
		goto ZZ_2CF64_65C;
	}
	V0 = (int32_t)S0 < -1;
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(11,0x8002D6F4);
		goto ZZ_2CF64_790;
	}
	V1 = S0;
	V1 = -1;
	ZZ_CLOCKCYCLES(12,0x8002D6F4);
ZZ_2CF64_790:
	V0 = (int32_t)V1 < 33;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002D704);
		goto ZZ_2CF64_7A0;
	}
	V1 = 0x20;
	ZZ_CLOCKCYCLES(4,0x8002D704);
ZZ_2CF64_7A0:
	V0 = EMU_ReadS8(S1);
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D71C);
		goto ZZ_2CF64_7B8;
	}
	EMU_Write8(S1,V1);
	ZZ_CLOCKCYCLES(6,0x8002D71C);
ZZ_2CF64_7B8:
	V0 = EMU_ReadS8(S4);
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D5C0);
		goto ZZ_2CF64_65C;
	}
	EMU_Write8(S4,V1);
	ZZ_CLOCKCYCLES(7,0x8002D5C0);
	goto ZZ_2CF64_65C;
ZZ_2CF64_7D4:
	A3 = V1 << 1;
	V0 = V1 - A0;
	T2 = V0 << 1;
	V0 = (int32_t)S2 < (int32_t)T3;
	if (!V0)
	{
		S3 = A3 - A0;
		ZZ_CLOCKCYCLES(6,0x8002D778);
		goto ZZ_2CF64_814;
	}
	S3 = A3 - A0;
	ZZ_CLOCKCYCLES(6,0x8002D750);
ZZ_2CF64_7EC:
	if ((int32_t)S3 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D760);
		goto ZZ_2CF64_7FC;
	}
	S3 += A3;
	ZZ_CLOCKCYCLES(4,0x8002D768);
	goto ZZ_2CF64_804;
ZZ_2CF64_7FC:
	S3 += T2;
	S0 += T0;
	ZZ_CLOCKCYCLES(2,0x8002D768);
ZZ_2CF64_804:
	S2 += 1;
	V0 = (int32_t)S2 < (int32_t)T3;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002D750);
		goto ZZ_2CF64_7EC;
	}
	ZZ_CLOCKCYCLES(4,0x8002D778);
ZZ_2CF64_814:
	if ((int32_t)S2 >= 0)
	{
		V0 = S2;
		ZZ_CLOCKCYCLES(2,0x8002D784);
		goto ZZ_2CF64_820;
	}
	V0 = S2;
	V0 = R0;
	ZZ_CLOCKCYCLES(3,0x8002D784);
ZZ_2CF64_820:
	T7 = EMU_ReadU32(SP + 376); //+ 0x178
	V0 <<= 1;
	S5 = R0;
	A0 = 0x3039;
	S1 = T7 + V0;
	S4 = S1 + 1;
	V0 = S2 < 32;
	ZZ_CLOCKCYCLES(7,0x8002D7A0);
ZZ_2CF64_83C:
	if (!V0)
	{
		V0 = (int32_t)S0 < -1;
		ZZ_CLOCKCYCLES(2,0x8002D7FC);
		goto ZZ_2CF64_898;
	}
	V0 = (int32_t)S0 < -1;
	if (!V0)
	{
		V1 = S0;
		ZZ_CLOCKCYCLES(4,0x8002D7B4);
		goto ZZ_2CF64_850;
	}
	V1 = S0;
	V1 = -1;
	ZZ_CLOCKCYCLES(5,0x8002D7B4);
ZZ_2CF64_850:
	V0 = (int32_t)V1 < 33;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002D7C4);
		goto ZZ_2CF64_860;
	}
	V1 = 0x20;
	ZZ_CLOCKCYCLES(4,0x8002D7C4);
ZZ_2CF64_860:
	V0 = EMU_ReadS8(S1);
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D7DC);
		goto ZZ_2CF64_878;
	}
	EMU_Write8(S1,V1);
	ZZ_CLOCKCYCLES(6,0x8002D7DC);
ZZ_2CF64_878:
	V0 = EMU_ReadS8(S4);
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002D7F4);
		goto ZZ_2CF64_890;
	}
	EMU_Write8(S4,V1);
	ZZ_CLOCKCYCLES(6,0x8002D7F4);
ZZ_2CF64_890:
	S4 += 2;
	S1 += 2;
	ZZ_CLOCKCYCLES(2,0x8002D7FC);
ZZ_2CF64_898:
	T6 = EMU_ReadU32(SP + 336); //+ 0x150
	if (!T6)
	{
		V0 = (int32_t)S0 < (int32_t)FP;
		ZZ_CLOCKCYCLES(4,0x8002D87C);
		goto ZZ_2CF64_918;
	}
	V0 = (int32_t)S0 < (int32_t)FP;
	if (V0)
	{
		V0 = (int32_t)S7 < (int32_t)S0;
		ZZ_CLOCKCYCLES(6,0x8002D87C);
		goto ZZ_2CF64_918;
	}
	V0 = (int32_t)S7 < (int32_t)S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002D87C);
		goto ZZ_2CF64_918;
	}
	S5 -= 1;
	if ((int32_t)S5 > 0)
	{
		A0 = S0 - 16;
		ZZ_CLOCKCYCLES(11,0x8002D874);
		goto ZZ_2CF64_910;
	}
	A0 = S0 - 16;
	S5 = 0x8;
	A1 = S2 - 16;
	EMU_Write32(SP + 384,A2); //+ 0x180
	EMU_Write32(SP + 388,A3); //+ 0x184
	EMU_Write32(SP + 392,T0); //+ 0x188
	EMU_Write32(SP + 396,T1); //+ 0x18C
	EMU_Write32(SP + 400,T2); //+ 0x190
	EMU_Write32(SP + 404,T3); //+ 0x194
	RA = 0x8002D850; //ZZ_2CF64_8EC
	EMU_Write32(SP + 412,T5); //+ 0x19C
	ZZ_CLOCKCYCLES(21,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2CF64_8EC:
	A2 = EMU_ReadU32(SP + 384); //+ 0x180
	A3 = EMU_ReadU32(SP + 388); //+ 0x184
	T0 = EMU_ReadU32(SP + 392); //+ 0x188
	T1 = EMU_ReadU32(SP + 396); //+ 0x18C
	T2 = EMU_ReadU32(SP + 400); //+ 0x190
	T3 = EMU_ReadU32(SP + 404); //+ 0x194
	T5 = EMU_ReadU32(SP + 412); //+ 0x19C
	A0 = 0x3039;
	ZZ_CLOCKCYCLES(9,0x8002D87C);
	goto ZZ_2CF64_918;
ZZ_2CF64_910:
	A0 = S0;
	EMU_Write32(SP + 368,S2); //+ 0x170
	ZZ_CLOCKCYCLES(2,0x8002D87C);
ZZ_2CF64_918:
	if ((int32_t)S3 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D88C);
		goto ZZ_2CF64_928;
	}
	S3 += A3;
	ZZ_CLOCKCYCLES(4,0x8002D894);
	goto ZZ_2CF64_930;
ZZ_2CF64_928:
	S3 += T2;
	S0 += T0;
	ZZ_CLOCKCYCLES(2,0x8002D894);
ZZ_2CF64_930:
	S2 += 1;
	V0 = (int32_t)S6 < (int32_t)S2;
	if (!V0)
	{
		V0 = S2 < 32;
		ZZ_CLOCKCYCLES(4,0x8002D7A0);
		goto ZZ_2CF64_83C;
	}
	V0 = S2 < 32;
	ZZ_CLOCKCYCLES(4,0x8002D8A4);
ZZ_2CF64_940:
	T7 = EMU_ReadU32(SP + 336); //+ 0x150
	if (!T7)
	{
		V0 = 0x3039;
		ZZ_CLOCKCYCLES(4,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	V0 = 0x3039;
	if (A0 == V0)
	{
		A0 -= 16;
		ZZ_CLOCKCYCLES(6,0x8002D8E8);
		goto ZZ_2CF64_984;
	}
	A0 -= 16;
	T6 = EMU_ReadU32(SP + 368); //+ 0x170
	EMU_Write32(SP + 384,A2); //+ 0x180
	EMU_Write32(SP + 396,T1); //+ 0x18C
	EMU_Write32(SP + 404,T3); //+ 0x194
	EMU_Write32(SP + 412,T5); //+ 0x19C
	RA = 0x8002D8D8; //ZZ_2CF64_974
	A1 = T6 - 16;
	ZZ_CLOCKCYCLES(13,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2CF64_974:
	T5 = EMU_ReadU32(SP + 412); //+ 0x19C
	T3 = EMU_ReadU32(SP + 404); //+ 0x194
	T1 = EMU_ReadU32(SP + 396); //+ 0x18C
	A2 = EMU_ReadU32(SP + 384); //+ 0x180
	ZZ_CLOCKCYCLES(4,0x8002D8E8);
ZZ_2CF64_984:
	A2 -= 1;
	ZZ_CLOCKCYCLES(2,0x8002D8F0);
ZZ_2CF64_98C:
	if ((int32_t)A2 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002D290);
		goto ZZ_2CF64_32C;
	}
	ZZ_CLOCKCYCLES(2,0x8002D8F8);
ZZ_2CF64_994:
	A2 = 0x1F;
	S1 = SP + 264;
	A1 = EMU_ReadU32(GP + 584); //+ 0x248
	A3 = -1;
	T0 = 0x1F;
	ZZ_CLOCKCYCLES(5,0x8002D90C);
ZZ_2CF64_9A8:
	FP = EMU_ReadS8(S1);
	S1 += 1;
	S7 = EMU_ReadS8(S1);
	V0 = (int32_t)S7 < -1;
	if (V0)
	{
		S1 += 1;
		ZZ_CLOCKCYCLES(7,0x8002D980);
		goto ZZ_2CF64_A1C;
	}
	S1 += 1;
	if ((int32_t)FP >= 0)
	{
		ZZ_CLOCKCYCLES(9,0x8002D93C);
		goto ZZ_2CF64_9D8;
	}
	if ((int32_t)S7 < 0)
	{
		V0 = (int32_t)S7 < 32;
		ZZ_CLOCKCYCLES(11,0x8002D940);
		goto ZZ_2CF64_9DC;
	}
	V0 = (int32_t)S7 < 32;
	FP = R0;
	ZZ_CLOCKCYCLES(12,0x8002D93C);
ZZ_2CF64_9D8:
	V0 = (int32_t)S7 < 32;
	ZZ_CLOCKCYCLES(1,0x8002D940);
ZZ_2CF64_9DC:
	if (V0)
	{
		V0 = FP < 32;
		ZZ_CLOCKCYCLES(2,0x8002D958);
		goto ZZ_2CF64_9F4;
	}
	V0 = FP < 32;
	V0 = (int32_t)FP < 32;
	if (!V0)
	{
		V0 = FP < 32;
		ZZ_CLOCKCYCLES(5,0x8002D958);
		goto ZZ_2CF64_9F4;
	}
	V0 = FP < 32;
	S7 = 0x1F;
	ZZ_CLOCKCYCLES(6,0x8002D958);
ZZ_2CF64_9F4:
	if (!V0)
	{
		V0 = S7 < 32;
		ZZ_CLOCKCYCLES(2,0x8002D980);
		goto ZZ_2CF64_A1C;
	}
	V0 = S7 < 32;
	if (!V0)
	{
		V0 = A3 >> FP;
		ZZ_CLOCKCYCLES(4,0x8002D980);
		goto ZZ_2CF64_A1C;
	}
	V0 = A3 >> FP;
	A0 = EMU_ReadU32(A1);
	V1 = T0 - S7;
	V1 = A3 << V1;
	V0 &= V1;
	A0 |= V0;
	EMU_Write32(A1,A0);
	ZZ_CLOCKCYCLES(10,0x8002D980);
ZZ_2CF64_A1C:
	A2 -= 1;
	if ((int32_t)A2 >= 0)
	{
		A1 += 4;
		ZZ_CLOCKCYCLES(3,0x8002D90C);
		goto ZZ_2CF64_9A8;
	}
	A1 += 4;
	ZZ_CLOCKCYCLES(3,0x8002D98C);
ZZ_2CF64_A28:
	T7 = EMU_ReadU32(SP + 360); //+ 0x168
	T6 = EMU_ReadU32(SP + 344); //+ 0x158
	if (T7 == T6)
	{
		ZZ_CLOCKCYCLES(5,0x8002D9C4);
		goto ZZ_2CF64_A60;
	}
	T6 = EMU_ReadU32(SP + 352); //+ 0x160
	if (T7 != T6)
	{
		ZZ_CLOCKCYCLES(9,0x8002D9BC);
		goto ZZ_2CF64_A58;
	}
	T7 = EMU_ReadU32(SP + 344); //+ 0x158
	EMU_Write32(SP + 360,T7); //+ 0x168
	ZZ_CLOCKCYCLES(12,0x8002D0EC);
	goto ZZ_2CF64_188;
ZZ_2CF64_A58:
	EMU_Write32(SP + 360,T6); //+ 0x168
	ZZ_CLOCKCYCLES(2,0x8002D0EC);
	goto ZZ_2CF64_188;
ZZ_2CF64_A60:
	RA = EMU_ReadU32(SP + 452); //+ 0x1C4
	FP = EMU_ReadU32(SP + 448); //+ 0x1C0
	S7 = EMU_ReadU32(SP + 444); //+ 0x1BC
	S6 = EMU_ReadU32(SP + 440); //+ 0x1B8
	S5 = EMU_ReadU32(SP + 436); //+ 0x1B4
	S4 = EMU_ReadU32(SP + 432); //+ 0x1B0
	S3 = EMU_ReadU32(SP + 428); //+ 0x1AC
	S2 = EMU_ReadU32(SP + 424); //+ 0x1A8
	S1 = EMU_ReadU32(SP + 420); //+ 0x1A4
	S0 = EMU_ReadU32(SP + 416); //+ 0x1A0
	SP += 456;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002E000,ZZ_2D9F8_608);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002CF64,0x8002CFAC,ZZ_2CF64);
ZZ_MARK_TARGET(0x8002CFAC,0x8002D068,ZZ_2CF64_48);
ZZ_MARK_TARGET(0x8002D068,0x8002D098,ZZ_2CF64_104);
ZZ_MARK_TARGET(0x8002D098,0x8002D0B0,ZZ_2CF64_134);
ZZ_MARK_TARGET(0x8002D0B0,0x8002D0C8,ZZ_2CF64_14C);
ZZ_MARK_TARGET(0x8002D0C8,0x8002D0E0,ZZ_2CF64_164);
ZZ_MARK_TARGET(0x8002D0E0,0x8002D0EC,ZZ_2CF64_17C);
ZZ_MARK_TARGET(0x8002D0EC,0x8002D0FC,ZZ_2CF64_188);
ZZ_MARK_TARGET(0x8002D0FC,0x8002D128,ZZ_2CF64_198);
ZZ_MARK_TARGET(0x8002D128,0x8002D140,ZZ_2CF64_1C4);
ZZ_MARK_TARGET(0x8002D140,0x8002D14C,ZZ_2CF64_1DC);
ZZ_MARK_TARGET(0x8002D14C,0x8002D164,ZZ_2CF64_1E8);
ZZ_MARK_TARGET(0x8002D164,0x8002D170,ZZ_2CF64_200);
ZZ_MARK_TARGET(0x8002D170,0x8002D17C,ZZ_2CF64_20C);
ZZ_MARK_TARGET(0x8002D17C,0x8002D1A0,ZZ_2CF64_218);
ZZ_MARK_TARGET(0x8002D1A0,0x8002D1C4,ZZ_2CF64_23C);
ZZ_MARK_TARGET(0x8002D1C4,0x8002D1DC,ZZ_2CF64_260);
ZZ_MARK_TARGET(0x8002D1DC,0x8002D1F4,ZZ_2CF64_278);
ZZ_MARK_TARGET(0x8002D1F4,0x8002D238,ZZ_2CF64_290);
ZZ_MARK_TARGET(0x8002D238,0x8002D264,ZZ_2CF64_2D4);
ZZ_MARK_TARGET(0x8002D264,0x8002D274,ZZ_2CF64_300);
ZZ_MARK_TARGET(0x8002D274,0x8002D290,ZZ_2CF64_310);
ZZ_MARK_TARGET(0x8002D290,0x8002D2B4,ZZ_2CF64_32C);
ZZ_MARK_TARGET(0x8002D2B4,0x8002D2DC,ZZ_2CF64_350);
ZZ_MARK_TARGET(0x8002D2DC,0x8002D300,ZZ_2CF64_378);
ZZ_MARK_TARGET(0x8002D300,0x8002D320,ZZ_2CF64_39C);
ZZ_MARK_TARGET(0x8002D320,0x8002D34C,ZZ_2CF64_3BC);
ZZ_MARK_TARGET(0x8002D34C,0x8002D390,ZZ_2CF64_3E8);
ZZ_MARK_TARGET(0x8002D390,0x8002D3A0,ZZ_2CF64_42C);
ZZ_MARK_TARGET(0x8002D3A0,0x8002D3B8,ZZ_2CF64_43C);
ZZ_MARK_TARGET(0x8002D3B8,0x8002D3D0,ZZ_2CF64_454);
ZZ_MARK_TARGET(0x8002D3D0,0x8002D3E8,ZZ_2CF64_46C);
ZZ_MARK_TARGET(0x8002D3E8,0x8002D3F4,ZZ_2CF64_484);
ZZ_MARK_TARGET(0x8002D3F4,0x8002D40C,ZZ_2CF64_490);
ZZ_MARK_TARGET(0x8002D40C,0x8002D424,ZZ_2CF64_4A8);
ZZ_MARK_TARGET(0x8002D424,0x8002D444,ZZ_2CF64_4C0);
ZZ_MARK_TARGET(0x8002D444,0x8002D464,ZZ_2CF64_4E0);
ZZ_MARK_TARGET(0x8002D464,0x8002D470,ZZ_2CF64_500);
ZZ_MARK_TARGET(0x8002D470,0x8002D488,ZZ_2CF64_50C);
ZZ_MARK_TARGET(0x8002D488,0x8002D4C8,ZZ_2CF64_524);
ZZ_MARK_TARGET(0x8002D4C8,0x8002D4E0,ZZ_2CF64_564);
ZZ_MARK_TARGET(0x8002D4E0,0x8002D4F0,ZZ_2CF64_57C);
ZZ_MARK_TARGET(0x8002D4F0,0x8002D500,ZZ_2CF64_58C);
ZZ_MARK_TARGET(0x8002D500,0x8002D51C,ZZ_2CF64_59C);
ZZ_MARK_TARGET(0x8002D51C,0x8002D52C,ZZ_2CF64_5B8);
ZZ_MARK_TARGET(0x8002D52C,0x8002D534,ZZ_2CF64_5C8);
ZZ_MARK_TARGET(0x8002D534,0x8002D540,ZZ_2CF64_5D0);
ZZ_MARK_TARGET(0x8002D540,0x8002D54C,ZZ_2CF64_5DC);
ZZ_MARK_TARGET(0x8002D54C,0x8002D570,ZZ_2CF64_5E8);
ZZ_MARK_TARGET(0x8002D570,0x8002D580,ZZ_2CF64_60C);
ZZ_MARK_TARGET(0x8002D580,0x8002D598,ZZ_2CF64_61C);
ZZ_MARK_TARGET(0x8002D598,0x8002D5B0,ZZ_2CF64_634);
ZZ_MARK_TARGET(0x8002D5B0,0x8002D5B4,ZZ_2CF64_64C);
ZZ_MARK_TARGET(0x8002D5B4,0x8002D5C0,ZZ_2CF64_650);
ZZ_MARK_TARGET(0x8002D5C0,0x8002D618,ZZ_2CF64_65C);
ZZ_MARK_TARGET(0x8002D618,0x8002D640,ZZ_2CF64_6B4);
ZZ_MARK_TARGET(0x8002D640,0x8002D648,ZZ_2CF64_6DC);
ZZ_MARK_TARGET(0x8002D648,0x8002D664,ZZ_2CF64_6E4);
ZZ_MARK_TARGET(0x8002D664,0x8002D67C,ZZ_2CF64_700);
ZZ_MARK_TARGET(0x8002D67C,0x8002D68C,ZZ_2CF64_718);
ZZ_MARK_TARGET(0x8002D68C,0x8002D6A4,ZZ_2CF64_728);
ZZ_MARK_TARGET(0x8002D6A4,0x8002D6BC,ZZ_2CF64_740);
ZZ_MARK_TARGET(0x8002D6BC,0x8002D6C4,ZZ_2CF64_758);
ZZ_MARK_TARGET(0x8002D6C4,0x8002D6F4,ZZ_2CF64_760);
ZZ_MARK_TARGET(0x8002D6F4,0x8002D704,ZZ_2CF64_790);
ZZ_MARK_TARGET(0x8002D704,0x8002D71C,ZZ_2CF64_7A0);
ZZ_MARK_TARGET(0x8002D71C,0x8002D738,ZZ_2CF64_7B8);
ZZ_MARK_TARGET(0x8002D738,0x8002D750,ZZ_2CF64_7D4);
ZZ_MARK_TARGET(0x8002D750,0x8002D760,ZZ_2CF64_7EC);
ZZ_MARK_TARGET(0x8002D760,0x8002D768,ZZ_2CF64_7FC);
ZZ_MARK_TARGET(0x8002D768,0x8002D778,ZZ_2CF64_804);
ZZ_MARK_TARGET(0x8002D778,0x8002D784,ZZ_2CF64_814);
ZZ_MARK_TARGET(0x8002D784,0x8002D7A0,ZZ_2CF64_820);
ZZ_MARK_TARGET(0x8002D7A0,0x8002D7B4,ZZ_2CF64_83C);
ZZ_MARK_TARGET(0x8002D7B4,0x8002D7C4,ZZ_2CF64_850);
ZZ_MARK_TARGET(0x8002D7C4,0x8002D7DC,ZZ_2CF64_860);
ZZ_MARK_TARGET(0x8002D7DC,0x8002D7F4,ZZ_2CF64_878);
ZZ_MARK_TARGET(0x8002D7F4,0x8002D7FC,ZZ_2CF64_890);
ZZ_MARK_TARGET(0x8002D7FC,0x8002D850,ZZ_2CF64_898);
ZZ_MARK_TARGET(0x8002D850,0x8002D874,ZZ_2CF64_8EC);
ZZ_MARK_TARGET(0x8002D874,0x8002D87C,ZZ_2CF64_910);
ZZ_MARK_TARGET(0x8002D87C,0x8002D88C,ZZ_2CF64_918);
ZZ_MARK_TARGET(0x8002D88C,0x8002D894,ZZ_2CF64_928);
ZZ_MARK_TARGET(0x8002D894,0x8002D8A4,ZZ_2CF64_930);
ZZ_MARK_TARGET(0x8002D8A4,0x8002D8D8,ZZ_2CF64_940);
ZZ_MARK_TARGET(0x8002D8D8,0x8002D8E8,ZZ_2CF64_974);
ZZ_MARK_TARGET(0x8002D8E8,0x8002D8F0,ZZ_2CF64_984);
ZZ_MARK_TARGET(0x8002D8F0,0x8002D8F8,ZZ_2CF64_98C);
ZZ_MARK_TARGET(0x8002D8F8,0x8002D90C,ZZ_2CF64_994);
ZZ_MARK_TARGET(0x8002D90C,0x8002D93C,ZZ_2CF64_9A8);
ZZ_MARK_TARGET(0x8002D93C,0x8002D940,ZZ_2CF64_9D8);
ZZ_MARK_TARGET(0x8002D940,0x8002D958,ZZ_2CF64_9DC);
ZZ_MARK_TARGET(0x8002D958,0x8002D980,ZZ_2CF64_9F4);
ZZ_MARK_TARGET(0x8002D980,0x8002D98C,ZZ_2CF64_A1C);
ZZ_MARK_TARGET(0x8002D98C,0x8002D9BC,ZZ_2CF64_A28);
ZZ_MARK_TARGET(0x8002D9BC,0x8002D9C4,ZZ_2CF64_A58);
ZZ_MARK_TARGET(0x8002D9C4,0x8002D9F8,ZZ_2CF64_A60);
