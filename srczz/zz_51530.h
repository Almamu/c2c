#ifdef ZZ_INCLUDE_CODE
ZZ_51530:
	SP -= 24;
	A1 = A0;
	V0 = 0x70000;
	V0 |= 0xEFE8;
	V1 = A1 - 4112;
	V0 = V0 < V1;
	if (V0)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(8,0x80051578);
		goto ZZ_51530_48;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x80051558; //ZZ_51530_28
	A0 = -1;
	ZZ_CLOCKCYCLES(10,0x8004FEE0);
	goto ZZ_4FEE0;
ZZ_51530_28:
	AT = 0x80060000;
	EMU_Write16(AT - 5504,V0); //+ 0xFFFFEA80
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 - 5504); //+ 0xFFFFEA80
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5488); //+ 0xFFFFEA90
	V0 = V1 << V0;
	ZZ_CLOCKCYCLES(8,0x8005157C);
	goto ZZ_51530_4C;
ZZ_51530_48:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8005157C);
ZZ_51530_4C:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8001364C,ZZ_13304_348);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80051530,ZZ_51530);
ZZ_MARK(0x80051534);
ZZ_MARK(0x80051538);
ZZ_MARK(0x8005153C);
ZZ_MARK(0x80051540);
ZZ_MARK(0x80051544);
ZZ_MARK(0x80051548);
ZZ_MARK(0x8005154C);
ZZ_MARK(0x80051550);
ZZ_MARK(0x80051554);
ZZ_MARK_TARGET(0x80051558,ZZ_51530_28);
ZZ_MARK(0x8005155C);
ZZ_MARK(0x80051560);
ZZ_MARK(0x80051564);
ZZ_MARK(0x80051568);
ZZ_MARK(0x8005156C);
ZZ_MARK(0x80051570);
ZZ_MARK(0x80051574);
ZZ_MARK_TARGET(0x80051578,ZZ_51530_48);
ZZ_MARK_TARGET(0x8005157C,ZZ_51530_4C);
ZZ_MARK(0x80051580);
ZZ_MARK(0x80051584);
ZZ_MARK(0x80051588);
