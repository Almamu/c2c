#ifdef ZZ_INCLUDE_CODE
ZZ_4388C:
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S6 = EMU_ReadU32(SP + 52); //+ 0x34
	T0 = EMU_ReadU32(S2);
	T9 = EMU_CheckedAdd(V1,320);
	T8 = S6;
	ZZ_CLOCKCYCLES(6,0x800438B4);
	goto ZZ_4388C_28;
ZZ_4388C_18:
	A0 = EMU_ReadU32(T8);
	T8 = EMU_CheckedAdd(T8,4);
	EMU_Write32(T9,A0);
	T9 = EMU_CheckedAdd(T9,4);
	ZZ_CLOCKCYCLES(4,0x800438B4);
ZZ_4388C_28:
	if ((int32_t)T0 > 0)
	{
		T0 = EMU_CheckedAdd(T0,-1);
		ZZ_CLOCKCYCLES(2,0x800438A4);
		goto ZZ_4388C_18;
	}
	T0 = EMU_CheckedAdd(T0,-1);
	S2 = EMU_CheckedAdd(S2,4);
	S1 = EMU_ReadU32(SP + 56); //+ 0x38
	S0 = EMU_ReadU32(SP + 60); //+ 0x3C
	GP = EMU_ReadU32(SP + 96); //+ 0x60
	T0 = EMU_ReadU32(S2);
	T8 = EMU_ReadU32(S4 + 20); //+ 0x14
	S2 = EMU_CheckedAdd(S2,4);
	S4 += T8;
	T9 = EMU_CheckedAdd(T0,1);
	T4 = 0;
	T3 = 0;
	ZZ_JUMPREGISTER_BEGIN(RA);
	EMU_Write32(V1 + 272,R0); //+ 0x110
	ZZ_CLOCKCYCLES_JR(15);
	ZZ_JUMPREGISTER(0x8003E624,ZZ_3DFAC_678);
	ZZ_JUMPREGISTER(0x80040434,ZZ_3FFAC_488);
	ZZ_JUMPREGISTER(0x8003E408,ZZ_3DFAC_45C);
	ZZ_JUMPREGISTER(0x8003E1C4,ZZ_3DFAC_218);
	ZZ_JUMPREGISTER(0x80040254,ZZ_3FFAC_2A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004388C,ZZ_4388C);
ZZ_MARK(0x80043890);
ZZ_MARK(0x80043894);
ZZ_MARK(0x80043898);
ZZ_MARK(0x8004389C);
ZZ_MARK(0x800438A0);
ZZ_MARK_TARGET(0x800438A4,ZZ_4388C_18);
ZZ_MARK(0x800438A8);
ZZ_MARK(0x800438AC);
ZZ_MARK(0x800438B0);
ZZ_MARK_TARGET(0x800438B4,ZZ_4388C_28);
ZZ_MARK(0x800438B8);
ZZ_MARK(0x800438BC);
ZZ_MARK(0x800438C0);
ZZ_MARK(0x800438C4);
ZZ_MARK(0x800438C8);
ZZ_MARK(0x800438CC);
ZZ_MARK(0x800438D0);
ZZ_MARK(0x800438D4);
ZZ_MARK(0x800438D8);
ZZ_MARK(0x800438DC);
ZZ_MARK(0x800438E0);
ZZ_MARK(0x800438E4);
ZZ_MARK(0x800438E8);
ZZ_MARK(0x800438EC);
