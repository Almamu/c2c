#ifdef ZZ_INCLUDE_CODE
ZZ_3A9B0:
	AT = RA;
	A0 = A1 >> 12;
	V1 = A0 & 0xFFF;
	V1 -= 3056;
	if (!V1)
	{
		A3 = 256;
		ZZ_CLOCKCYCLES(6,0x8003A9D8);
		goto ZZ_3A9B0_28;
	}
	A3 = 256;
	RA = 0x8003A9D0; //ZZ_3A9B0_20
	A0 = A1 >> 12;
	ZZ_CLOCKCYCLES(8,0x8003A118);
	goto ZZ_3A118;
ZZ_3A9B0_20:
	V1 = V0;
	ZZ_CLOCKCYCLES(2,0x8003A9E8);
	goto ZZ_3A9B0_38;
ZZ_3A9B0_28:
	S6 -= 4;
	A3 = EMU_ReadU32(S6);
	S6 -= 4;
	V1 = EMU_ReadU32(S6);
	ZZ_CLOCKCYCLES(4,0x8003A9E8);
ZZ_3A9B0_38:
	RA = 0x8003A9F0; //ZZ_3A9B0_40
	A0 = A1;
	ZZ_CLOCKCYCLES(2,0x8003A118);
	goto ZZ_3A118;
ZZ_3A9B0_40:
	A2 = EMU_ReadU32(FP + 84); //+ 0x54
	A0 = V0 << 20;
	EMU_SMultiply(A2,A3);
	A2 = V1 << 20;
	A2 = A2 - A0;
	A2 = (int32_t)A2 >> 20;
	if ((int32_t)A2 >= 0)
	{
		A0 = A2;
		ZZ_CLOCKCYCLES(8,0x8003AA14);
		goto ZZ_3A9B0_64;
	}
	A0 = A2;
	A0 = -A2;
	ZZ_CLOCKCYCLES(9,0x8003AA14);
ZZ_3A9B0_64:
	A3 = LO;
	A3 = (int32_t)A3 >> 10;
	A0 = A0 - A3;
	if ((int32_t)A0 <= 0)
	{
		A0 = V1;
		ZZ_CLOCKCYCLES(5,0x8003AA48);
		goto ZZ_3A9B0_98;
	}
	A0 = V1;
	if ((int32_t)A2 >= 0)
	{
		ZZ_CLOCKCYCLES(7,0x8003AA3C);
		goto ZZ_3A9B0_8C;
	}
	A0 = V0 - A3;
	ZZ_JUMPREGISTER_BEGIN(AT);
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8003A9A4,ZZ_3A918_8C);
	ZZ_JUMPREGISTER_END();
ZZ_3A9B0_8C:
	A0 = V0 + A3;
	ZZ_JUMPREGISTER_BEGIN(AT);
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x8003A9A4,ZZ_3A918_8C);
	ZZ_JUMPREGISTER_END();
ZZ_3A9B0_98:
	ZZ_JUMPREGISTER_BEGIN(AT);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8003A9A4,ZZ_3A918_8C);
	ZZ_JUMPREGISTER_END();
ZZ_3A9B0_A0:
	RA = 0x8003AA58; //ZZ_3A9B0_A8
	ZZ_CLOCKCYCLES(2,0x8003AA64);
	goto ZZ_3AA64;
ZZ_3A9B0_A8:
	S6 += 4;
	EMU_Write32(S6 - 4,A0); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(3,0x8003A304);
	goto ZZ_3A2AC_58;
#endif
ZZ_MARK_TARGET(0x8003A9B0,0x8003A9D0,ZZ_3A9B0);
ZZ_MARK_TARGET(0x8003A9D0,0x8003A9D8,ZZ_3A9B0_20);
ZZ_MARK_TARGET(0x8003A9D8,0x8003A9E8,ZZ_3A9B0_28);
ZZ_MARK_TARGET(0x8003A9E8,0x8003A9F0,ZZ_3A9B0_38);
ZZ_MARK_TARGET(0x8003A9F0,0x8003AA14,ZZ_3A9B0_40);
ZZ_MARK_TARGET(0x8003AA14,0x8003AA3C,ZZ_3A9B0_64);
ZZ_MARK_TARGET(0x8003AA3C,0x8003AA48,ZZ_3A9B0_8C);
ZZ_MARK_TARGET(0x8003AA48,0x8003AA50,ZZ_3A9B0_98);
ZZ_MARK_TARGET(0x8003AA50,0x8003AA58,ZZ_3A9B0_A0);
ZZ_MARK_TARGET(0x8003AA58,0x8003AA64,ZZ_3A9B0_A8);
