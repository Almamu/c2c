#ifdef ZZ_INCLUDE_CODE
ZZ_572C0:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 25520); //+ 0xFFFF9C50
	SP -= 136;
	EMU_Write32(SP + 108,S1); //+ 0x6C
	EMU_Write32(SP + 132,RA); //+ 0x84
	EMU_Write32(SP + 128,S6); //+ 0x80
	EMU_Write32(SP + 124,S5); //+ 0x7C
	EMU_Write32(SP + 120,S4); //+ 0x78
	EMU_Write32(SP + 116,S3); //+ 0x74
	EMU_Write32(SP + 112,S2); //+ 0x70
	EMU_Write32(SP + 104,S0); //+ 0x68
	V0 += 1;
	V0 &= 0xF;
	AT = 0x80070000;
	EMU_Write32(AT - 25520,V0); //+ 0xFFFF9C50
	V0 <<= 2;
	AT = 0x80070000;
	AT += V0;
	EMU_Write32(AT - 12952,R0); //+ 0xFFFFCD68
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 32136); //+ 0xFFFF8278
	V1 = 0x80070000;
	V1 -= 12952;
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(25,0x80057398);
		goto ZZ_572C0_D8;
	}
	S1 = R0;
	S3 = V1;
	S2 = 0x80060000;
	S2 += 1194;
	S0 = R0;
	ZZ_CLOCKCYCLES(29,0x80057334);
ZZ_572C0_74:
	A0 = S1;
	RA = 0x80057340; //ZZ_572C0_80
	A1 = S2;
	ZZ_CLOCKCYCLES(3,0x8005772C);
	goto ZZ_5772C;
ZZ_572C0_80:
	AT = 0x80060000;
	AT += S0;
	V0 = EMU_ReadU16(AT + 1194); //+ 0x4AA
	if (V0)
	{
		V1 = 1;
		ZZ_CLOCKCYCLES(6,0x8005737C);
		goto ZZ_572C0_BC;
	}
	V1 = 1;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 25520); //+ 0xFFFF9C50
	V0 <<= 2;
	V0 += S3;
	A0 = EMU_ReadU32(V0);
	V1 <<= S1;
	A0 |= V1;
	EMU_Write32(V0,A0);
	ZZ_CLOCKCYCLES(15,0x8005737C);
ZZ_572C0_BC:
	S2 += 54;
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 32136); //+ 0xFFFF8278
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S0 += 54;
		ZZ_CLOCKCYCLES(7,0x80057334);
		goto ZZ_572C0_74;
	}
	S0 += 54;
	ZZ_CLOCKCYCLES(7,0x80057398);
ZZ_572C0_D8:
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 25680); //+ 0xFFFF9BB0
	if (V0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(5,0x8005744C);
		goto ZZ_572C0_18C;
	}
	S1 = R0;
	S2 = -1;
	V1 = 0x80070000;
	V1 -= 12952;
	ZZ_CLOCKCYCLES(8,0x800573B8);
ZZ_572C0_F8:
	V0 = EMU_ReadU32(V1);
	S1 += 1;
	S2 &= V0;
	V0 = (int32_t)S1 < 15;
	if (V0)
	{
		V1 += 4;
		ZZ_CLOCKCYCLES(6,0x800573B8);
		goto ZZ_572C0_F8;
	}
	V1 += 4;
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 32136); //+ 0xFFFF8278
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(11,0x80057448);
		goto ZZ_572C0_188;
	}
	S1 = R0;
	S4 = 1;
	S3 = 2;
	S0 = R0;
	ZZ_CLOCKCYCLES(14,0x800573F0);
ZZ_572C0_130:
	V0 = S4 << S1;
	V0 &= S2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80057430);
		goto ZZ_572C0_170;
	}
	AT = 0x80060000;
	AT += S0;
	V0 = EMU_ReadU8(AT + 1217); //+ 0x4C1
	if (V0 != S3)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(10,0x80057424);
		goto ZZ_572C0_164;
	}
	A0 = R0;
	A1 = 0xFF0000;
	RA = 0x80057424; //ZZ_572C0_164
	A1 |= 0xFFFF;
	ZZ_CLOCKCYCLES(13,0x800576FC);
	goto ZZ_576FC;
ZZ_572C0_164:
	AT = 0x80060000;
	AT += S0;
	EMU_Write8(AT + 1217,R0); //+ 0x4C1
	ZZ_CLOCKCYCLES(3,0x80057430);
ZZ_572C0_170:
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 32136); //+ 0xFFFF8278
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S0 += 54;
		ZZ_CLOCKCYCLES(6,0x800573F0);
		goto ZZ_572C0_130;
	}
	S0 += 54;
	ZZ_CLOCKCYCLES(6,0x80057448);
ZZ_572C0_188:
	S1 = R0;
	ZZ_CLOCKCYCLES(1,0x8005744C);
ZZ_572C0_18C:
	V0 = 0x80070000;
	V0 = EMU_ReadU16(V0 - 2944); //+ 0xFFFFF480
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 + 952); //+ 0x3B8
	V0 = ~V0;
	V1 &= V0;
	V0 = 0x80070000;
	V0 = EMU_ReadU16(V0 - 2940); //+ 0xFFFFF484
	S0 = R0;
	AT = 0x80060000;
	EMU_Write16(AT + 952,V1); //+ 0x3B8
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 + 956); //+ 0x3BC
	V0 = ~V0;
	V1 &= V0;
	AT = 0x80060000;
	EMU_Write16(AT + 956,V1); //+ 0x3BC
	ZZ_CLOCKCYCLES(17,0x80057490);
ZZ_572C0_1D0:
	AT = 0x80060000;
	AT += S0;
	V0 = EMU_ReadS16(AT + 1218); //+ 0x4C2
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800574BC);
		goto ZZ_572C0_1FC;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 26196); //+ 0xFFFF99AC
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800574BC; //ZZ_572C0_1FC
	A0 = S1;
	ZZ_CLOCKCYCLES_JR(11);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800574B4)
	ZZ_JUMPREGISTER_END();
ZZ_572C0_1FC:
	AT = 0x80060000;
	AT += S0;
	V0 = EMU_ReadS16(AT + 1230); //+ 0x4CE
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800574E8);
		goto ZZ_572C0_228;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 26632); //+ 0xFFFF97F8
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800574E8; //ZZ_572C0_228
	A0 = S1;
	ZZ_CLOCKCYCLES_JR(11);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800574E0)
	ZZ_JUMPREGISTER_END();
ZZ_572C0_228:
	S1 += 1;
	V0 = (int32_t)S1 < 24;
	if (V0)
	{
		S0 += 54;
		ZZ_CLOCKCYCLES(4,0x80057490);
		goto ZZ_572C0_1D0;
	}
	S0 += 54;
	S1 = R0;
	S0 = 0x80060000;
	S0 += 2508;
	V0 = 0x80070000;
	V0 -= 26580;
	S6 = V0 + 10;
	S5 = V0 + 8;
	S2 = R0;
	S4 = V0 + 2;
	S3 = V0;
	ZZ_CLOCKCYCLES(14,0x80057520);
ZZ_572C0_260:
	V0 = 1;
	V0 <<= S1;
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU8(S0);
	V0 &= 0x1;
	if (!V0)
	{
		V0 = 3;
		ZZ_CLOCKCYCLES(9,0x80057560);
		goto ZZ_572C0_2A0;
	}
	V0 = 3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU16(S3);
	EMU_Write16(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU16(S4);
	EMU_Write16(SP + 26,V0); //+ 0x1A
	ZZ_CLOCKCYCLES(16,0x80057560);
ZZ_572C0_2A0:
	V0 = EMU_ReadU8(S0);
	V0 &= 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80057598);
		goto ZZ_572C0_2D8;
	}
	V0 = EMU_ReadU32(SP + 20); //+ 0x14
	V0 |= 0x10;
	EMU_Write32(SP + 20,V0); //+ 0x14
	AT = 0x80070000;
	AT += S2;
	V0 = EMU_ReadU16(AT - 26576); //+ 0xFFFF9830
	EMU_Write16(SP + 36,V0); //+ 0x24
	ZZ_CLOCKCYCLES(14,0x80057598);
ZZ_572C0_2D8:
	V0 = EMU_ReadU8(S0);
	V0 &= 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x800575D4);
		goto ZZ_572C0_314;
	}
	V0 = EMU_ReadU32(SP + 20); //+ 0x14
	V0 |= 0x80;
	EMU_Write32(SP + 20,V0); //+ 0x14
	AT = 0x80070000;
	AT += S2;
	V0 = EMU_ReadU16(AT - 26574); //+ 0xFFFF9832
	V0 <<= 3;
	EMU_Write32(SP + 44,V0); //+ 0x2C
	ZZ_CLOCKCYCLES(15,0x800575D4);
ZZ_572C0_314:
	V0 = EMU_ReadU8(S0);
	V0 &= 0x10;
	if (!V0)
	{
		V1 = 0x60000;
		ZZ_CLOCKCYCLES(5,0x80057610);
		goto ZZ_572C0_350;
	}
	V1 = 0x60000;
	V0 = EMU_ReadU32(SP + 20); //+ 0x14
	V0 |= V1;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU16(S5);
	EMU_Write16(SP + 74,V0); //+ 0x4A
	V0 = EMU_ReadU16(S6);
	EMU_Write16(SP + 76,V0); //+ 0x4C
	ZZ_CLOCKCYCLES(15,0x80057610);
ZZ_572C0_350:
	V0 = EMU_ReadU32(SP + 20); //+ 0x14
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80057628);
		goto ZZ_572C0_368;
	}
	RA = 0x80057628; //ZZ_572C0_368
	A0 = SP + 16;
	ZZ_CLOCKCYCLES(6,0x80051B50);
	goto ZZ_51B50;
ZZ_572C0_368:
	EMU_Write8(S0,R0);
	S0 += 1;
	S6 += 16;
	S5 += 16;
	S2 += 16;
	S4 += 16;
	S1 += 1;
	V0 = (int32_t)S1 < 24;
	if (V0)
	{
		S3 += 16;
		ZZ_CLOCKCYCLES(10,0x80057520);
		goto ZZ_572C0_260;
	}
	S3 += 16;
	A0 = R0;
	A1 = 0x80070000;
	A1 = EMU_ReadU8(A1 - 2940); //+ 0xFFFFF484
	V0 = 0x80070000;
	V0 = EMU_ReadU16(V0 - 2944); //+ 0xFFFFF480
	A1 <<= 16;
	RA = 0x80057670; //ZZ_572C0_3B0
	A1 |= V0;
	ZZ_CLOCKCYCLES(18,0x80051310);
	goto ZZ_51310;
ZZ_572C0_3B0:
	A0 = 1;
	A1 = 0x80060000;
	A1 = EMU_ReadU8(A1 + 956); //+ 0x3BC
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 952); //+ 0x3B8
	A1 <<= 16;
	RA = 0x80057690; //ZZ_572C0_3D0
	A1 |= V0;
	ZZ_CLOCKCYCLES(8,0x80051310);
	goto ZZ_51310;
ZZ_572C0_3D0:
	A0 = 8;
	A1 = 0x80060000;
	A1 = EMU_ReadU8(A1 + 964); //+ 0x3C4
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 960); //+ 0x3C0
	A1 <<= 16;
	RA = 0x800576B0; //ZZ_572C0_3F0
	A1 |= V0;
	ZZ_CLOCKCYCLES(8,0x80050E70);
	goto ZZ_50E70;
ZZ_572C0_3F0:
	AT = 0x80070000;
	EMU_Write16(AT - 2944,R0); //+ 0xFFFFF480
	AT = 0x80070000;
	EMU_Write16(AT - 2940,R0); //+ 0xFFFFF484
	AT = 0x80060000;
	EMU_Write16(AT + 952,R0); //+ 0x3B8
	AT = 0x80060000;
	EMU_Write16(AT + 956,R0); //+ 0x3BC
	RA = EMU_ReadU32(SP + 132); //+ 0x84
	S6 = EMU_ReadU32(SP + 128); //+ 0x80
	S5 = EMU_ReadU32(SP + 124); //+ 0x7C
	S4 = EMU_ReadU32(SP + 120); //+ 0x78
	S3 = EMU_ReadU32(SP + 116); //+ 0x74
	S2 = EMU_ReadU32(SP + 112); //+ 0x70
	S1 = EMU_ReadU32(SP + 108); //+ 0x6C
	S0 = EMU_ReadU32(SP + 104); //+ 0x68
	SP += 136;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(19);
	ZZ_JUMPREGISTER(0x80057A54,ZZ_5774C_308);
	ZZ_JUMPREGISTER(0x800551E8,ZZ_5519C_4C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800572C0,0x80057334,ZZ_572C0);
ZZ_MARK_TARGET(0x80057334,0x80057340,ZZ_572C0_74);
ZZ_MARK_TARGET(0x80057340,0x8005737C,ZZ_572C0_80);
ZZ_MARK_TARGET(0x8005737C,0x80057398,ZZ_572C0_BC);
ZZ_MARK_TARGET(0x80057398,0x800573B8,ZZ_572C0_D8);
ZZ_MARK_TARGET(0x800573B8,0x800573F0,ZZ_572C0_F8);
ZZ_MARK_TARGET(0x800573F0,0x80057424,ZZ_572C0_130);
ZZ_MARK_TARGET(0x80057424,0x80057430,ZZ_572C0_164);
ZZ_MARK_TARGET(0x80057430,0x80057448,ZZ_572C0_170);
ZZ_MARK_TARGET(0x80057448,0x8005744C,ZZ_572C0_188);
ZZ_MARK_TARGET(0x8005744C,0x80057490,ZZ_572C0_18C);
ZZ_MARK_TARGET(0x80057490,0x800574BC,ZZ_572C0_1D0);
ZZ_MARK_TARGET(0x800574BC,0x800574E8,ZZ_572C0_1FC);
ZZ_MARK_TARGET(0x800574E8,0x80057520,ZZ_572C0_228);
ZZ_MARK_TARGET(0x80057520,0x80057560,ZZ_572C0_260);
ZZ_MARK_TARGET(0x80057560,0x80057598,ZZ_572C0_2A0);
ZZ_MARK_TARGET(0x80057598,0x800575D4,ZZ_572C0_2D8);
ZZ_MARK_TARGET(0x800575D4,0x80057610,ZZ_572C0_314);
ZZ_MARK_TARGET(0x80057610,0x80057628,ZZ_572C0_350);
ZZ_MARK_TARGET(0x80057628,0x80057670,ZZ_572C0_368);
ZZ_MARK_TARGET(0x80057670,0x80057690,ZZ_572C0_3B0);
ZZ_MARK_TARGET(0x80057690,0x800576B0,ZZ_572C0_3D0);
ZZ_MARK_TARGET(0x800576B0,0x800576FC,ZZ_572C0_3F0);
