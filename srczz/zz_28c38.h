#ifdef ZZ_INCLUDE_CODE
ZZ_28C38:
	SP -= 40;
	EMU_Write32(SP + 28,S1); //+ 0x1C
	S1 = A0;
	A0 = A1;
	A1 = SP + 16;
	EMU_Write32(SP + 24,S0); //+ 0x18
	EMU_Write32(SP + 32,RA); //+ 0x20
	RA = 0x80028C5C; //ZZ_28C38_24
	S0 = A2;
	ZZ_CLOCKCYCLES(9,0x80028BDC);
	goto ZZ_28BDC;
ZZ_28C38_24:
	if (S0)
	{
		ZZ_CLOCKCYCLES(2,0x80028C70);
		goto ZZ_28C38_38;
	}
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	EMU_Write16(S1 + 34,V0); //+ 0x22
	ZZ_CLOCKCYCLES(5,0x80028C84);
	goto ZZ_28C38_4C;
ZZ_28C38_38:
	A0 = EMU_ReadS16(S1 + 34); //+ 0x22
	A1 = EMU_ReadU32(SP + 16); //+ 0x10
	RA = 0x80028C80; //ZZ_28C38_48
	A2 = 0x100;
	ZZ_CLOCKCYCLES(4,0x8001E844);
	goto ZZ_1E844;
ZZ_28C38_48:
	EMU_Write16(S1 + 34,V0); //+ 0x22
	ZZ_CLOCKCYCLES(1,0x80028C84);
ZZ_28C38_4C:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80029798,ZZ_29728_70);
	ZZ_JUMPREGISTER(0x800296CC,ZZ_29254_478);
	ZZ_JUMPREGISTER(0x800296F0,ZZ_29254_49C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80028C38,ZZ_28C38);
ZZ_MARK(0x80028C3C);
ZZ_MARK(0x80028C40);
ZZ_MARK(0x80028C44);
ZZ_MARK(0x80028C48);
ZZ_MARK(0x80028C4C);
ZZ_MARK(0x80028C50);
ZZ_MARK(0x80028C54);
ZZ_MARK(0x80028C58);
ZZ_MARK_TARGET(0x80028C5C,ZZ_28C38_24);
ZZ_MARK(0x80028C60);
ZZ_MARK(0x80028C64);
ZZ_MARK(0x80028C68);
ZZ_MARK(0x80028C6C);
ZZ_MARK_TARGET(0x80028C70,ZZ_28C38_38);
ZZ_MARK(0x80028C74);
ZZ_MARK(0x80028C78);
ZZ_MARK(0x80028C7C);
ZZ_MARK_TARGET(0x80028C80,ZZ_28C38_48);
ZZ_MARK_TARGET(0x80028C84,ZZ_28C38_4C);
ZZ_MARK(0x80028C88);
ZZ_MARK(0x80028C8C);
ZZ_MARK(0x80028C90);
ZZ_MARK(0x80028C94);
ZZ_MARK(0x80028C98);
