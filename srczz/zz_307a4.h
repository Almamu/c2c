#ifdef ZZ_INCLUDE_CODE
ZZ_307A4:
	T8 = A0;
	T4 = R0;
	T2 = A2;
	A0 = R0;
	ZZ_CLOCKCYCLES(4,0x800307B4);
ZZ_307A4_10:
	V1 = A0 + 1;
	V1 &= 0x3;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	T1 = A2 + V0;
	V0 = EMU_ReadU32(T1 + 8); //+ 0x8
	V1 = EMU_ReadU32(T2 + 8); //+ 0x8
	T0 = A1 - V1;
	if ((int32_t)T0 > 0)
	{
		A3 = V0 - A1;
		ZZ_CLOCKCYCLES(12,0x800307F4);
		goto ZZ_307A4_50;
	}
	A3 = V0 - A1;
	if ((int32_t)A3 <= 0)
	{
		ZZ_CLOCKCYCLES(14,0x800307FC);
		goto ZZ_307A4_58;
	}
	if ((int32_t)T0 < 0)
	{
		ZZ_CLOCKCYCLES(16,0x8003096C);
		goto ZZ_307A4_1C8;
	}
	ZZ_CLOCKCYCLES(16,0x800307F4);
ZZ_307A4_50:
	if ((int32_t)A3 < 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003096C);
		goto ZZ_307A4_1C8;
	}
	ZZ_CLOCKCYCLES(2,0x800307FC);
ZZ_307A4_58:
	if (T4)
	{
		T4 = 0x1;
		ZZ_CLOCKCYCLES(2,0x80030818);
		goto ZZ_307A4_74;
	}
	T4 = 0x1;
	T3 = T0;
	T7 = A3;
	T6 = T2;
	T5 = T1;
	ZZ_CLOCKCYCLES(7,0x8003096C);
	goto ZZ_307A4_1C8;
ZZ_307A4_74:
	A1 = T3 + T7;
	if (A1)
	{
		V0 = T3 << 12;
		ZZ_CLOCKCYCLES(3,0x80030828);
		goto ZZ_307A4_84;
	}
	V0 = T3 << 12;
	A1 = 0x1;
	ZZ_CLOCKCYCLES(4,0x80030828);
ZZ_307A4_84:
	EMU_SDivide(V0,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(3,0x80030838);
		goto ZZ_307A4_94;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(4,0x80030838);
ZZ_307A4_94:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80030850);
		goto ZZ_307A4_AC;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80030850);
		goto ZZ_307A4_AC;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80030850);
ZZ_307A4_AC:
	A1 = LO;
	V0 = EMU_ReadU32(T5);
	A0 = EMU_ReadU32(T6);
	V0 = V0 - A0;
	EMU_SMultiply(A1,V0);
	V1 = EMU_ReadU32(T6 + 4); //+ 0x4
	V0 = EMU_ReadU32(T5 + 4); //+ 0x4
	A2 = LO;
	V0 = V0 - V1;
	EMU_SMultiply(A1,V0);
	A1 = T0 + A3;
	V0 = (int32_t)A2 >> 12;
	A3 = V0 + A0;
	T3 = LO;
	V0 = (int32_t)T3 >> 12;
	if (A1)
	{
		T3 = V0 + V1;
		ZZ_CLOCKCYCLES(19,0x800308A0);
		goto ZZ_307A4_FC;
	}
	T3 = V0 + V1;
	A1 = 0x1;
	ZZ_CLOCKCYCLES(20,0x800308A0);
ZZ_307A4_FC:
	V0 = T0 << 12;
	EMU_SDivide(V0,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(4,0x800308B4);
		goto ZZ_307A4_110;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(5,0x800308B4);
ZZ_307A4_110:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800308CC);
		goto ZZ_307A4_128;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800308CC);
		goto ZZ_307A4_128;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800308CC);
ZZ_307A4_128:
	A1 = LO;
	V0 = EMU_ReadU32(T1);
	A0 = EMU_ReadU32(T2);
	V0 = V0 - A0;
	EMU_SMultiply(A1,V0);
	V1 = EMU_ReadU32(T2 + 4); //+ 0x4
	V0 = EMU_ReadU32(T1 + 4); //+ 0x4
	A2 = LO;
	V0 = V0 - V1;
	EMU_SMultiply(A1,V0);
	V0 = (int32_t)A2 >> 12;
	V0 += A0;
	A1 = V0 - A3;
	T0 = LO;
	V0 = (int32_t)T0 >> 12;
	if (A1)
	{
		V1 += V0;
		ZZ_CLOCKCYCLES(19,0x8003091C);
		goto ZZ_307A4_178;
	}
	V1 += V0;
	A1 = 0x1;
	ZZ_CLOCKCYCLES(20,0x8003091C);
ZZ_307A4_178:
	V0 = T8 - A3;
	V0 <<= 12;
	EMU_SDivide(V0,A1);
	if (A1)
	{
		ZZ_CLOCKCYCLES(5,0x80030934);
		goto ZZ_307A4_190;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(6,0x80030934);
ZZ_307A4_190:
	AT = -1;
	if (A1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8003094C);
		goto ZZ_307A4_1A8;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8003094C);
		goto ZZ_307A4_1A8;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8003094C);
ZZ_307A4_1A8:
	A1 = LO;
	V0 = V1 - T3;
	EMU_SMultiply(A1,V0);
	T9 = LO;
	V0 = (int32_t)T9 >> 12;
	V0 += T3;
	ZZ_CLOCKCYCLES(8,0x80030984);
	goto ZZ_307A4_1E0;
ZZ_307A4_1C8:
	A0 += 1;
	V0 = (int32_t)A0 < 4;
	if (V0)
	{
		T2 = T1;
		ZZ_CLOCKCYCLES(4,0x800307B4);
		goto ZZ_307A4_10;
	}
	T2 = T1;
	V0 = 0xC4650000;
	V0 |= 0x3601;
	ZZ_CLOCKCYCLES(6,0x80030984);
ZZ_307A4_1E0:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8002B23C,ZZ_2ABE4_658);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800307A4,0x800307B4,ZZ_307A4);
ZZ_MARK_TARGET(0x800307B4,0x800307F4,ZZ_307A4_10);
ZZ_MARK_TARGET(0x800307F4,0x800307FC,ZZ_307A4_50);
ZZ_MARK_TARGET(0x800307FC,0x80030818,ZZ_307A4_58);
ZZ_MARK_TARGET(0x80030818,0x80030828,ZZ_307A4_74);
ZZ_MARK_TARGET(0x80030828,0x80030838,ZZ_307A4_84);
ZZ_MARK_TARGET(0x80030838,0x80030850,ZZ_307A4_94);
ZZ_MARK_TARGET(0x80030850,0x800308A0,ZZ_307A4_AC);
ZZ_MARK_TARGET(0x800308A0,0x800308B4,ZZ_307A4_FC);
ZZ_MARK_TARGET(0x800308B4,0x800308CC,ZZ_307A4_110);
ZZ_MARK_TARGET(0x800308CC,0x8003091C,ZZ_307A4_128);
ZZ_MARK_TARGET(0x8003091C,0x80030934,ZZ_307A4_178);
ZZ_MARK_TARGET(0x80030934,0x8003094C,ZZ_307A4_190);
ZZ_MARK_TARGET(0x8003094C,0x8003096C,ZZ_307A4_1A8);
ZZ_MARK_TARGET(0x8003096C,0x80030984,ZZ_307A4_1C8);
ZZ_MARK_TARGET(0x80030984,0x8003098C,ZZ_307A4_1E0);
