#ifdef ZZ_INCLUDE_CODE
ZZ_1EE74:
	SP -= 64;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	EMU_Write32(SP + 48,S0); //+ 0x30
	V0 = EMU_ReadU32(A0);
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	S0 = A1;
	S1 = A2;
	A0 = 0x80060000;
	A0 += 2572;
	if (!S1)
	{
		EMU_Write32(SP + 32,V0); //+ 0x20
		ZZ_CLOCKCYCLES(17,0x8001EEC0);
		goto ZZ_1EE74_4C;
	}
	EMU_Write32(SP + 32,V0); //+ 0x20
	A0 = 0x80060000;
	A0 += 2668;
	ZZ_CLOCKCYCLES(19,0x8001EEC0);
ZZ_1EE74_4C:
	RA = 0x8001EEC8; //ZZ_1EE74_54
	ZZ_CLOCKCYCLES(2,0x8004F1C0);
	goto ZZ_4F1C0;
ZZ_1EE74_54:
	A0 = 0x80060000;
	A0 += 968;
	RA = 0x8001EED8; //ZZ_1EE74_64
	ZZ_CLOCKCYCLES(4,0x8004F220);
	goto ZZ_4F220;
ZZ_1EE74_64:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x8001EF0C);
		goto ZZ_1EE74_98;
	}
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2772); //+ 0xAD4
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2776); //+ 0xAD8
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 + 2780); //+ 0xADC
	V0 = V0 - A1;
	ZZ_CLOCKCYCLES(13,0x8001EF34);
	goto ZZ_1EE74_C0;
ZZ_1EE74_98:
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2700); //+ 0xA8C
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2704); //+ 0xA90
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 + 2708); //+ 0xA94
	V0 = V0 - A1;
	ZZ_CLOCKCYCLES(10,0x8001EF34);
ZZ_1EE74_C0:
	V0 = (int32_t)V0 >> 8;
	V1 = V1 - A2;
	V1 = (int32_t)V1 >> 8;
	A0 = A0 - A3;
	A0 = (int32_t)A0 >> 8;
	EMU_Write16(SP + 16,V0); //+ 0x10
	EMU_Write16(SP + 18,V1); //+ 0x12
	EMU_Write16(SP + 20,A0); //+ 0x14
	A0 = SP + 16;
	A1 = S0;
	RA = 0x8001EF64; //ZZ_1EE74_F0
	A2 = SP + 40;
	ZZ_CLOCKCYCLES(12,0x8004F2E0);
	goto ZZ_4F2E0;
ZZ_1EE74_F0:
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	A0 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 <<= 8;
	V1 <<= 8;
	V1 = -V1;
	A0 <<= 8;
	EMU_Write32(S0,V0);
	V0 = -255;
	EMU_Write32(S0 + 4,V1); //+ 0x4
	EMU_Write32(S0 + 8,A0); //+ 0x8
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(17);
	ZZ_JUMPREGISTER(0x80038978,ZZ_38414_564);
	ZZ_JUMPREGISTER(0x8003353C,ZZ_3322C_310);
	ZZ_JUMPREGISTER(0x80033064,ZZ_32E88_1DC);
	ZZ_JUMPREGISTER(0x80033EC4,ZZ_337BC_708);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001EE74,0x8001EEC0,ZZ_1EE74);
ZZ_MARK_TARGET(0x8001EEC0,0x8001EEC8,ZZ_1EE74_4C);
ZZ_MARK_TARGET(0x8001EEC8,0x8001EED8,ZZ_1EE74_54);
ZZ_MARK_TARGET(0x8001EED8,0x8001EF0C,ZZ_1EE74_64);
ZZ_MARK_TARGET(0x8001EF0C,0x8001EF34,ZZ_1EE74_98);
ZZ_MARK_TARGET(0x8001EF34,0x8001EF64,ZZ_1EE74_C0);
ZZ_MARK_TARGET(0x8001EF64,0x8001EFA8,ZZ_1EE74_F0);
