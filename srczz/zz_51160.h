#ifdef ZZ_INCLUDE_CODE
ZZ_51160:
	SP -= 56;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 44,S5); //+ 0x2C
	V0 = S0 < 10;
	EMU_Write32(SP + 48,RA); //+ 0x30
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 16,R0); //+ 0x10
	if (!V0)
	{
		S5 = R0;
		ZZ_CLOCKCYCLES(13,0x800511B8);
		goto ZZ_51160_58;
	}
	S5 = R0;
	V1 = 0x80060000;
	V1 -= 4264;
	V0 = S0 << 2;
	S1 = V0 + V1;
	A0 = EMU_ReadU32(S1);
	RA = 0x800511B0; //ZZ_51160_50
	ZZ_CLOCKCYCLES(20,0x800503B0);
	goto ZZ_503B0;
ZZ_51160_50:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800511C0);
		goto ZZ_51160_60;
	}
	ZZ_CLOCKCYCLES(2,0x800511B8);
ZZ_51160_58:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x800512D0);
	goto ZZ_51160_170;
ZZ_51160_60:
	if (S0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(2,0x800511E4);
		goto ZZ_51160_84;
	}
	V0 = 0x10000;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5488); //+ 0xFFFFEA90
	V1 = 16;
	S1 = V1 << V0;
	V1 = 0xFFF0;
	S2 = V1 << V0;
	ZZ_CLOCKCYCLES(9,0x800511FC);
	goto ZZ_51160_9C;
ZZ_51160_84:
	A0 = EMU_ReadU32(S1);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 5488); //+ 0xFFFFEA90
	V0 = V0 - A0;
	S1 = V0 << V1;
	S2 = A0 << V1;
	ZZ_CLOCKCYCLES(6,0x800511FC);
ZZ_51160_9C:
	S4 = 0x80060000;
	S4 = EMU_ReadU32(S4 - 5500); //+ 0xFFFFEA84
	V0 = 1;
	if (S4 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x8005121C);
		goto ZZ_51160_BC;
	}
	AT = 0x80060000;
	EMU_Write32(AT - 5500,R0); //+ 0xFFFFEA84
	S5 = 1;
	ZZ_CLOCKCYCLES(8,0x8005121C);
ZZ_51160_BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5472); //+ 0xFFFFEAA0
	if (!V0)
	{
		S3 = 1;
		ZZ_CLOCKCYCLES(5,0x80051248);
		goto ZZ_51160_E8;
	}
	S3 = 1;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5472); //+ 0xFFFFEAA0
	EMU_Write32(SP + 16,V0); //+ 0x10
	AT = 0x80060000;
	EMU_Write32(AT - 5472,R0); //+ 0xFFFFEAA0
	ZZ_CLOCKCYCLES(11,0x80051248);
ZZ_51160_E8:
	V0 = S1 < 1025;
	ZZ_CLOCKCYCLES(1,0x8005124C);
ZZ_51160_EC:
	if (!V0)
	{
		S0 = 1024;
		ZZ_CLOCKCYCLES(2,0x8005125C);
		goto ZZ_51160_FC;
	}
	S0 = 1024;
	S0 = S1;
	S3 = R0;
	ZZ_CLOCKCYCLES(4,0x8005125C);
ZZ_51160_FC:
	A0 = 2;
	RA = 0x80051268; //ZZ_51160_108
	A1 = S2;
	ZZ_CLOCKCYCLES(3,0x8004FB34);
	goto ZZ_4FB34;
ZZ_51160_108:
	RA = 0x80051270; //ZZ_51160_110
	A0 = 1;
	ZZ_CLOCKCYCLES(2,0x8004FB34);
	goto ZZ_4FB34;
ZZ_51160_110:
	A0 = 3;
	A1 = 0x80060000;
	A1 -= 5288;
	RA = 0x80051284; //ZZ_51160_124
	A2 = S0;
	ZZ_CLOCKCYCLES(5,0x8004FB34);
	goto ZZ_4FB34;
ZZ_51160_124:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 5408); //+ 0xFFFFEAE0
	S1 -= 1024;
	RA = 0x80051298; //ZZ_51160_138
	S2 += 1024;
	ZZ_CLOCKCYCLES(5,0x80051300);
	goto ZZ_51300;
ZZ_51160_138:
	if (S3)
	{
		V0 = S1 < 1025;
		ZZ_CLOCKCYCLES(2,0x8005124C);
		goto ZZ_51160_EC;
	}
	V0 = S1 < 1025;
	if (!S5)
	{
		ZZ_CLOCKCYCLES(4,0x800512B0);
		goto ZZ_51160_150;
	}
	AT = 0x80060000;
	EMU_Write32(AT - 5500,S4); //+ 0xFFFFEA84
	ZZ_CLOCKCYCLES(6,0x800512B0);
ZZ_51160_150:
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(4,0x800512D0);
		goto ZZ_51160_170;
	}
	V0 = R0;
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	AT = 0x80060000;
	EMU_Write32(AT - 5472,V0); //+ 0xFFFFEAA0
	V0 = R0;
	ZZ_CLOCKCYCLES(8,0x800512D0);
ZZ_51160_170:
	RA = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 56;
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x800508A4,ZZ_50440_464);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80051160,0x800511B0,ZZ_51160);
ZZ_MARK_TARGET(0x800511B0,0x800511B8,ZZ_51160_50);
ZZ_MARK_TARGET(0x800511B8,0x800511C0,ZZ_51160_58);
ZZ_MARK_TARGET(0x800511C0,0x800511E4,ZZ_51160_60);
ZZ_MARK_TARGET(0x800511E4,0x800511FC,ZZ_51160_84);
ZZ_MARK_TARGET(0x800511FC,0x8005121C,ZZ_51160_9C);
ZZ_MARK_TARGET(0x8005121C,0x80051248,ZZ_51160_BC);
ZZ_MARK_TARGET(0x80051248,0x8005124C,ZZ_51160_E8);
ZZ_MARK_TARGET(0x8005124C,0x8005125C,ZZ_51160_EC);
ZZ_MARK_TARGET(0x8005125C,0x80051268,ZZ_51160_FC);
ZZ_MARK_TARGET(0x80051268,0x80051270,ZZ_51160_108);
ZZ_MARK_TARGET(0x80051270,0x80051284,ZZ_51160_110);
ZZ_MARK_TARGET(0x80051284,0x80051298,ZZ_51160_124);
ZZ_MARK_TARGET(0x80051298,0x800512B0,ZZ_51160_138);
ZZ_MARK_TARGET(0x800512B0,0x800512D0,ZZ_51160_150);
ZZ_MARK_TARGET(0x800512D0,0x800512F4,ZZ_51160_170);
