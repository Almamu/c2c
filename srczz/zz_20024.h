#ifdef ZZ_INCLUDE_CODE
ZZ_20024:
	SP -= 32;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 392); //+ 0x188
	V1 = 0x55550000;
	V1 |= 0x5556;
	EMU_SMultiply(V0,V1);
	V0 = (int32_t)V0 >> 31;
	T1 = HI;
	V1 = T1 - V0;
	if ((int32_t)V1 <= 0)
	{
		V0 = V1 << 1;
		ZZ_CLOCKCYCLES(15,0x800200DC);
		goto ZZ_20024_B8;
	}
	V0 = V1 << 1;
	A1 = R0;
	T0 = V0 + V1;
	ZZ_CLOCKCYCLES(17,0x80020068);
ZZ_20024_44:
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 388); //+ 0x184
	V0 += A1;
	V0 <<= 2;
	V0 += S0;
	A2 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = 0x1;
	A3 = A1;
	EMU_Write32(A2 + 4,S0); //+ 0x4
	ZZ_CLOCKCYCLES(11,0x80020094);
ZZ_20024_70:
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 388); //+ 0x184
	V0 = A3 + A0;
	V0 += V1;
	V0 <<= 2;
	V0 += S0;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 += 1;
	EMU_Write32(V0 + 4,S0); //+ 0x4
	EMU_Write32(V0 + 8,A2); //+ 0x8
	V0 = (int32_t)A0 < 3;
	if (V0)
	{
		ZZ_CLOCKCYCLES(14,0x80020094);
		goto ZZ_20024_70;
	}
	A1 += 3;
	V0 = (int32_t)A1 < (int32_t)T0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(18,0x80020068);
		goto ZZ_20024_44;
	}
	ZZ_CLOCKCYCLES(18,0x800200DC);
ZZ_20024_B8:
	V1 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V1 + 396); //+ 0x18C
	if ((int32_t)V0 <= 0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(6,0x80020134);
		goto ZZ_20024_110;
	}
	A0 = R0;
	ZZ_CLOCKCYCLES(6,0x800200F4);
ZZ_20024_D0:
	V0 = EMU_ReadU32(V1 + 388); //+ 0x184
	V1 = EMU_ReadU32(V1 + 392); //+ 0x188
	V0 += A0;
	V0 += V1;
	V0 <<= 2;
	V0 += S0;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	EMU_Write32(V0 + 4,S0); //+ 0x4
	V1 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V1 + 396); //+ 0x18C
	A0 += 1;
	V0 = (int32_t)A0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(16,0x800200F4);
		goto ZZ_20024_D0;
	}
	ZZ_CLOCKCYCLES(16,0x80020134);
ZZ_20024_110:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2916); //+ 0xB64
	if (!A0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(5,0x80020164);
		goto ZZ_20024_140;
	}
	V0 = -255;
	RA = 0x80020150; //ZZ_20024_12C
	A1 = S0;
	ZZ_CLOCKCYCLES(7,0x800201C4);
	goto ZZ_201C4;
ZZ_20024_12C:
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(2,0x80020164);
		goto ZZ_20024_140;
	}
	V0 = -255;
	RA = 0x80020160; //ZZ_20024_13C
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80020240);
	goto ZZ_20240;
ZZ_20024_13C:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x80020164);
ZZ_20024_140:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80012800,ZZ_126BC_144);
	ZZ_JUMPREGISTER(0x80012A58,ZZ_126BC_39C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80020024,ZZ_20024);
ZZ_MARK(0x80020028);
ZZ_MARK(0x8002002C);
ZZ_MARK(0x80020030);
ZZ_MARK(0x80020034);
ZZ_MARK(0x80020038);
ZZ_MARK(0x8002003C);
ZZ_MARK(0x80020040);
ZZ_MARK(0x80020044);
ZZ_MARK(0x80020048);
ZZ_MARK(0x8002004C);
ZZ_MARK(0x80020050);
ZZ_MARK(0x80020054);
ZZ_MARK(0x80020058);
ZZ_MARK(0x8002005C);
ZZ_MARK(0x80020060);
ZZ_MARK(0x80020064);
ZZ_MARK_TARGET(0x80020068,ZZ_20024_44);
ZZ_MARK(0x8002006C);
ZZ_MARK(0x80020070);
ZZ_MARK(0x80020074);
ZZ_MARK(0x80020078);
ZZ_MARK(0x8002007C);
ZZ_MARK(0x80020080);
ZZ_MARK(0x80020084);
ZZ_MARK(0x80020088);
ZZ_MARK(0x8002008C);
ZZ_MARK(0x80020090);
ZZ_MARK_TARGET(0x80020094,ZZ_20024_70);
ZZ_MARK(0x80020098);
ZZ_MARK(0x8002009C);
ZZ_MARK(0x800200A0);
ZZ_MARK(0x800200A4);
ZZ_MARK(0x800200A8);
ZZ_MARK(0x800200AC);
ZZ_MARK(0x800200B0);
ZZ_MARK(0x800200B4);
ZZ_MARK(0x800200B8);
ZZ_MARK(0x800200BC);
ZZ_MARK(0x800200C0);
ZZ_MARK(0x800200C4);
ZZ_MARK(0x800200C8);
ZZ_MARK(0x800200CC);
ZZ_MARK(0x800200D0);
ZZ_MARK(0x800200D4);
ZZ_MARK(0x800200D8);
ZZ_MARK_TARGET(0x800200DC,ZZ_20024_B8);
ZZ_MARK(0x800200E0);
ZZ_MARK(0x800200E4);
ZZ_MARK(0x800200E8);
ZZ_MARK(0x800200EC);
ZZ_MARK(0x800200F0);
ZZ_MARK_TARGET(0x800200F4,ZZ_20024_D0);
ZZ_MARK(0x800200F8);
ZZ_MARK(0x800200FC);
ZZ_MARK(0x80020100);
ZZ_MARK(0x80020104);
ZZ_MARK(0x80020108);
ZZ_MARK(0x8002010C);
ZZ_MARK(0x80020110);
ZZ_MARK(0x80020114);
ZZ_MARK(0x80020118);
ZZ_MARK(0x8002011C);
ZZ_MARK(0x80020120);
ZZ_MARK(0x80020124);
ZZ_MARK(0x80020128);
ZZ_MARK(0x8002012C);
ZZ_MARK(0x80020130);
ZZ_MARK_TARGET(0x80020134,ZZ_20024_110);
ZZ_MARK(0x80020138);
ZZ_MARK(0x8002013C);
ZZ_MARK(0x80020140);
ZZ_MARK(0x80020144);
ZZ_MARK(0x80020148);
ZZ_MARK(0x8002014C);
ZZ_MARK_TARGET(0x80020150,ZZ_20024_12C);
ZZ_MARK(0x80020154);
ZZ_MARK(0x80020158);
ZZ_MARK(0x8002015C);
ZZ_MARK_TARGET(0x80020160,ZZ_20024_13C);
ZZ_MARK_TARGET(0x80020164,ZZ_20024_140);
ZZ_MARK(0x80020168);
ZZ_MARK(0x8002016C);
ZZ_MARK(0x80020170);
ZZ_MARK(0x80020174);
