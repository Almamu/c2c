#ifdef ZZ_INCLUDE_CODE
ZZ_34A0C:
	V0 = EMU_ReadU32(GP + 232); //+ 0xE8
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = EMU_ReadU32(V0 + 24); //+ 0x18
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80034A44);
		goto ZZ_34A0C_38;
	}
	RA = 0x80034A30; //ZZ_34A0C_24
	A0 = R0;
	ZZ_CLOCKCYCLES(9,0x8005B240);
	goto ZZ_5B240;
ZZ_34A0C_24:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80034B34);
		goto ZZ_34A0C_128;
	}
	V0 = EMU_ReadU32(GP + 232); //+ 0xE8
	EMU_Write32(V0 + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(5,0x80034A44);
ZZ_34A0C_38:
	RA = 0x80034A4C; //ZZ_34A0C_40
	ZZ_CLOCKCYCLES(2,0x80035DFC);
	goto ZZ_35DFC;
ZZ_34A0C_40:
	V1 = V0;
	V0 = 0x1;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 2;
		ZZ_CLOCKCYCLES(4,0x80034A90);
		goto ZZ_34A0C_84;
	}
	V0 = (int32_t)V1 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80034A74);
		goto ZZ_34A0C_68;
	}
	if (!V1)
	{
		ZZ_CLOCKCYCLES(8,0x80034AA8);
		goto ZZ_34A0C_9C;
	}
	ZZ_CLOCKCYCLES(10,0x80034B34);
	goto ZZ_34A0C_128;
ZZ_34A0C_68:
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(3,0x80034B14);
		goto ZZ_34A0C_108;
	}
	V0 = 0x3;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x80034ACC);
		goto ZZ_34A0C_C0;
	}
	ZZ_CLOCKCYCLES(7,0x80034B34);
	goto ZZ_34A0C_128;
ZZ_34A0C_84:
	RA = 0x80034A98; //ZZ_34A0C_8C
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80036410);
	goto ZZ_36410;
ZZ_34A0C_8C:
	RA = 0x80034AA0; //ZZ_34A0C_94
	A0 = 0x2;
	ZZ_CLOCKCYCLES(2,0x800363C8);
	goto ZZ_363C8;
ZZ_34A0C_94:
	ZZ_CLOCKCYCLES(2,0x80034B34);
	goto ZZ_34A0C_128;
ZZ_34A0C_9C:
	RA = 0x80034AB0; //ZZ_34A0C_A4
	ZZ_CLOCKCYCLES(2,0x80036494);
	goto ZZ_36494;
ZZ_34A0C_A4:
	V0 &= 0x4;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x80034ACC);
		goto ZZ_34A0C_C0;
	}
	RA = 0x80034AC4; //ZZ_34A0C_B8
	A0 = R0;
	ZZ_CLOCKCYCLES(5,0x80036410);
	goto ZZ_36410;
ZZ_34A0C_B8:
	ZZ_CLOCKCYCLES(2,0x80034B34);
	goto ZZ_34A0C_128;
ZZ_34A0C_C0:
	RA = 0x80034AD4; //ZZ_34A0C_C8
	ZZ_CLOCKCYCLES(2,0x80035FB8);
	goto ZZ_35FB8;
ZZ_34A0C_C8:
	RA = 0x80034ADC; //ZZ_34A0C_D0
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8005B290);
	goto ZZ_5B290;
ZZ_34A0C_D0:
	RA = 0x80034AE4; //ZZ_34A0C_D8
	ZZ_CLOCKCYCLES(2,0x80035F84);
	goto ZZ_35F84;
ZZ_34A0C_D8:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x80034B14);
		goto ZZ_34A0C_108;
	}
	RA = 0x80034AF4; //ZZ_34A0C_E8
	A0 = 0x6;
	ZZ_CLOCKCYCLES(4,0x800363F0);
	goto ZZ_363F0;
ZZ_34A0C_E8:
	RA = 0x80034AFC; //ZZ_34A0C_F0
	A0 = 0x18;
	ZZ_CLOCKCYCLES(2,0x800363C8);
	goto ZZ_363C8;
ZZ_34A0C_F0:
	RA = 0x80034B04; //ZZ_34A0C_F8
	A0 = 0x4;
	ZZ_CLOCKCYCLES(2,0x80036410);
	goto ZZ_36410;
ZZ_34A0C_F8:
	RA = 0x80034B0C; //ZZ_34A0C_100
	A0 = 0x96;
	ZZ_CLOCKCYCLES(2,0x80035DC0);
	goto ZZ_35DC0;
ZZ_34A0C_100:
	ZZ_CLOCKCYCLES(2,0x80034B2C);
	goto ZZ_34A0C_120;
ZZ_34A0C_108:
	RA = 0x80034B1C; //ZZ_34A0C_110
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80036410);
	goto ZZ_36410;
ZZ_34A0C_110:
	RA = 0x80034B24; //ZZ_34A0C_118
	A0 = 0x4;
	ZZ_CLOCKCYCLES(2,0x800363C8);
	goto ZZ_363C8;
ZZ_34A0C_118:
	RA = 0x80034B2C; //ZZ_34A0C_120
	A0 = 0x8;
	ZZ_CLOCKCYCLES(2,0x800363F0);
	goto ZZ_363F0;
ZZ_34A0C_120:
	RA = 0x80034B34; //ZZ_34A0C_128
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003636C);
	goto ZZ_3636C;
ZZ_34A0C_128:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80034984,ZZ_348EC_98);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80034A0C,ZZ_34A0C);
ZZ_MARK(0x80034A10);
ZZ_MARK(0x80034A14);
ZZ_MARK(0x80034A18);
ZZ_MARK(0x80034A1C);
ZZ_MARK(0x80034A20);
ZZ_MARK(0x80034A24);
ZZ_MARK(0x80034A28);
ZZ_MARK(0x80034A2C);
ZZ_MARK_TARGET(0x80034A30,ZZ_34A0C_24);
ZZ_MARK(0x80034A34);
ZZ_MARK(0x80034A38);
ZZ_MARK(0x80034A3C);
ZZ_MARK(0x80034A40);
ZZ_MARK_TARGET(0x80034A44,ZZ_34A0C_38);
ZZ_MARK(0x80034A48);
ZZ_MARK_TARGET(0x80034A4C,ZZ_34A0C_40);
ZZ_MARK(0x80034A50);
ZZ_MARK(0x80034A54);
ZZ_MARK(0x80034A58);
ZZ_MARK(0x80034A5C);
ZZ_MARK(0x80034A60);
ZZ_MARK(0x80034A64);
ZZ_MARK(0x80034A68);
ZZ_MARK(0x80034A6C);
ZZ_MARK(0x80034A70);
ZZ_MARK_TARGET(0x80034A74,ZZ_34A0C_68);
ZZ_MARK(0x80034A78);
ZZ_MARK(0x80034A7C);
ZZ_MARK(0x80034A80);
ZZ_MARK(0x80034A84);
ZZ_MARK(0x80034A88);
ZZ_MARK(0x80034A8C);
ZZ_MARK_TARGET(0x80034A90,ZZ_34A0C_84);
ZZ_MARK(0x80034A94);
ZZ_MARK_TARGET(0x80034A98,ZZ_34A0C_8C);
ZZ_MARK(0x80034A9C);
ZZ_MARK_TARGET(0x80034AA0,ZZ_34A0C_94);
ZZ_MARK(0x80034AA4);
ZZ_MARK_TARGET(0x80034AA8,ZZ_34A0C_9C);
ZZ_MARK(0x80034AAC);
ZZ_MARK_TARGET(0x80034AB0,ZZ_34A0C_A4);
ZZ_MARK(0x80034AB4);
ZZ_MARK(0x80034AB8);
ZZ_MARK(0x80034ABC);
ZZ_MARK(0x80034AC0);
ZZ_MARK_TARGET(0x80034AC4,ZZ_34A0C_B8);
ZZ_MARK(0x80034AC8);
ZZ_MARK_TARGET(0x80034ACC,ZZ_34A0C_C0);
ZZ_MARK(0x80034AD0);
ZZ_MARK_TARGET(0x80034AD4,ZZ_34A0C_C8);
ZZ_MARK(0x80034AD8);
ZZ_MARK_TARGET(0x80034ADC,ZZ_34A0C_D0);
ZZ_MARK(0x80034AE0);
ZZ_MARK_TARGET(0x80034AE4,ZZ_34A0C_D8);
ZZ_MARK(0x80034AE8);
ZZ_MARK(0x80034AEC);
ZZ_MARK(0x80034AF0);
ZZ_MARK_TARGET(0x80034AF4,ZZ_34A0C_E8);
ZZ_MARK(0x80034AF8);
ZZ_MARK_TARGET(0x80034AFC,ZZ_34A0C_F0);
ZZ_MARK(0x80034B00);
ZZ_MARK_TARGET(0x80034B04,ZZ_34A0C_F8);
ZZ_MARK(0x80034B08);
ZZ_MARK_TARGET(0x80034B0C,ZZ_34A0C_100);
ZZ_MARK(0x80034B10);
ZZ_MARK_TARGET(0x80034B14,ZZ_34A0C_108);
ZZ_MARK(0x80034B18);
ZZ_MARK_TARGET(0x80034B1C,ZZ_34A0C_110);
ZZ_MARK(0x80034B20);
ZZ_MARK_TARGET(0x80034B24,ZZ_34A0C_118);
ZZ_MARK(0x80034B28);
ZZ_MARK_TARGET(0x80034B2C,ZZ_34A0C_120);
ZZ_MARK(0x80034B30);
ZZ_MARK_TARGET(0x80034B34,ZZ_34A0C_128);
ZZ_MARK(0x80034B38);
ZZ_MARK(0x80034B3C);
ZZ_MARK(0x80034B40);
