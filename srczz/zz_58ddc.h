#ifdef ZZ_INCLUDE_CODE
ZZ_58DDC:
	V0 = A0;
	if ((int32_t)V0 < 0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(3,0x80058DFC);
		goto ZZ_58DDC_20;
	}
	A1 = R0;
	A1 = V0;
	V0 = (int32_t)A1 < 64;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x80058DFC);
		goto ZZ_58DDC_20;
	}
	A1 = 63;
	ZZ_CLOCKCYCLES(8,0x80058DFC);
ZZ_58DDC_20:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 5528); //+ 0xFFFFEA68
	V0 = A1 & 0x3F;
	V1 = EMU_ReadU16(A0 + 426); //+ 0x1AA
	V0 <<= 8;
	V1 &= 0xC0FF;
	V1 |= V0;
	V0 = A1;
	ZZ_JUMPREGISTER_BEGIN(RA);
	EMU_Write16(A0 + 426,V1); //+ 0x1AA
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80058BB8,ZZ_58900_2B8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80058DDC,ZZ_58DDC);
ZZ_MARK(0x80058DE0);
ZZ_MARK(0x80058DE4);
ZZ_MARK(0x80058DE8);
ZZ_MARK(0x80058DEC);
ZZ_MARK(0x80058DF0);
ZZ_MARK(0x80058DF4);
ZZ_MARK(0x80058DF8);
ZZ_MARK_TARGET(0x80058DFC,ZZ_58DDC_20);
ZZ_MARK(0x80058E00);
ZZ_MARK(0x80058E04);
ZZ_MARK(0x80058E08);
ZZ_MARK(0x80058E0C);
ZZ_MARK(0x80058E10);
ZZ_MARK(0x80058E14);
ZZ_MARK(0x80058E18);
ZZ_MARK(0x80058E1C);
ZZ_MARK(0x80058E20);
