#ifdef ZZ_INCLUDE_CODE
ZZ_2E2BC:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 28032); //+ 0xFFFF9280
	SP -= 120;
	EMU_Write32(SP + 88,S2); //+ 0x58
	S2 = A1;
	EMU_Write32(SP + 100,S5); //+ 0x64
	S5 = A2;
	EMU_Write32(SP + 80,S0); //+ 0x50
	S0 = R0;
	EMU_Write32(SP + 96,S4); //+ 0x60
	S4 = R0;
	EMU_Write32(SP + 92,S3); //+ 0x5C
	S3 = 0x80070000;
	S3 -= 32132;
	EMU_Write32(SP + 116,RA); //+ 0x74
	EMU_Write32(SP + 112,FP); //+ 0x70
	EMU_Write32(SP + 108,S7); //+ 0x6C
	EMU_Write32(SP + 104,S6); //+ 0x68
	EMU_Write32(SP + 84,S1); //+ 0x54
	if ((int32_t)V0 <= 0)
	{
		EMU_Write32(SP + 64,A0); //+ 0x40
		ZZ_CLOCKCYCLES(21,0x8002E55C);
		goto ZZ_2E2BC_2A0;
	}
	EMU_Write32(SP + 64,A0); //+ 0x40
	V0 = S0 << 3;
	ZZ_CLOCKCYCLES(22,0x8002E314);
ZZ_2E2BC_58:
	A2 = S3 + V0;
	V0 = EMU_ReadU16(A2);
	if (V0)
	{
		V0 >>= 2;
		ZZ_CLOCKCYCLES(5,0x8002E374);
		goto ZZ_2E2BC_B8;
	}
	V0 >>= 2;
	V0 = EMU_ReadU16(A2 + 2); //+ 0x2
	V0 <<= 8;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU16(A2 + 4); //+ 0x4
	V0 <<= 8;
	EMU_Write32(SP + 52,V0); //+ 0x34
	V1 = EMU_ReadU16(A2 + 6); //+ 0x6
	S0 += 1;
	V0 = S0 << 3;
	A2 = S3 + V0;
	V1 <<= 8;
	EMU_Write32(SP + 56,V1); //+ 0x38
	FP = EMU_ReadU16(A2 + 2); //+ 0x2
	S7 = EMU_ReadU16(A2 + 4); //+ 0x4
	S6 = EMU_ReadU16(A2 + 6); //+ 0x6
	ZZ_CLOCKCYCLES(24,0x8002E548);
	goto ZZ_2E2BC_28C;
ZZ_2E2BC_B8:
	V0 |= 0x1;
	if (!V0)
	{
		V0 &= 0xE;
		ZZ_CLOCKCYCLES(3,0x8002E38C);
		goto ZZ_2E2BC_D0;
	}
	V0 &= 0xE;
	V0 >>= 1;
	V1 = V0 + 1;
	ZZ_CLOCKCYCLES(6,0x8002E390);
	goto ZZ_2E2BC_D4;
ZZ_2E2BC_D0:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x8002E390);
ZZ_2E2BC_D4:
	V0 = 0x5;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002E548);
		goto ZZ_2E2BC_28C;
	}
	if (!V1)
	{
		ZZ_CLOCKCYCLES(5,0x8002E548);
		goto ZZ_2E2BC_28C;
	}
	if (!S2)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(7,0x8002E3BC);
		goto ZZ_2E2BC_100;
	}
	V0 = 0x1;
	if (S2 == V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(9,0x8002E3D8);
		goto ZZ_2E2BC_11C;
	}
	V0 = 0x2;
	ZZ_CLOCKCYCLES(11,0x8002E3E8);
	goto ZZ_2E2BC_12C;
ZZ_2E2BC_100:
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(3,0x8002E3E8);
		goto ZZ_2E2BC_12C;
	}
	V0 = 0x6;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002E3E8);
		goto ZZ_2E2BC_12C;
	}
	ZZ_CLOCKCYCLES(7,0x8002E548);
	goto ZZ_2E2BC_28C;
ZZ_2E2BC_11C:
	if (V1 == V0)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(2,0x8002E548);
		goto ZZ_2E2BC_28C;
	}
	V0 = 0x6;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002E548);
		goto ZZ_2E2BC_28C;
	}
	ZZ_CLOCKCYCLES(4,0x8002E3E8);
ZZ_2E2BC_12C:
	V0 = EMU_ReadS16(A2 + 4); //+ 0x4
	V1 = EMU_ReadU32(S3 + 4108); //+ 0x100C
	A0 = EMU_ReadU32(S5 + 4); //+ 0x4
	A1 = S7;
	V0 <<= 4;
	V1 += V0;
	V1 = V1 - A0;
	V0 = S1 & 0xFFFF;
	V0 = V0 < A1;
	if (!V0)
	{
		EMU_Write32(SP + 28,V1); //+ 0x1C
		ZZ_CLOCKCYCLES(11,0x8002E418);
		goto ZZ_2E2BC_15C;
	}
	EMU_Write32(SP + 28,V1); //+ 0x1C
	A1 = S1;
	ZZ_CLOCKCYCLES(12,0x8002E418);
ZZ_2E2BC_15C:
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = (int32_t)V0 >> A1;
	A0 = V1 + V0;
	if (!S2)
	{
		EMU_Write32(SP + 40,A0); //+ 0x28
		ZZ_CLOCKCYCLES(6,0x8002E444);
		goto ZZ_2E2BC_188;
	}
	EMU_Write32(SP + 40,A0); //+ 0x28
	V0 = 0x1;
	if (S2 == V0)
	{
		ZZ_CLOCKCYCLES(9,0x8002E468);
		goto ZZ_2E2BC_1AC;
	}
	ZZ_CLOCKCYCLES(11,0x8002E470);
	goto ZZ_2E2BC_1B4;
ZZ_2E2BC_188:
	V0 = (int32_t)V1 < 25601;
	if (!V0)
	{
		V0 = 0xFFFE0000;
		ZZ_CLOCKCYCLES(3,0x8002E548);
		goto ZZ_2E2BC_28C;
	}
	V0 = 0xFFFE0000;
	V0 |= 0x7000;
	V0 = (int32_t)A0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8002E470);
		goto ZZ_2E2BC_1B4;
	}
	ZZ_CLOCKCYCLES(9,0x8002E548);
	goto ZZ_2E2BC_28C;
ZZ_2E2BC_1AC:
	if ((int32_t)A0 < 0)
	{
		ZZ_CLOCKCYCLES(2,0x8002E548);
		goto ZZ_2E2BC_28C;
	}
	ZZ_CLOCKCYCLES(2,0x8002E470);
ZZ_2E2BC_1B4:
	V0 = EMU_ReadS16(A2 + 2); //+ 0x2
	V1 = EMU_ReadU32(S3 + 4104); //+ 0x1008
	A0 = EMU_ReadU32(S5);
	V0 <<= 4;
	V1 += V0;
	A3 = V1 - A0;
	EMU_Write32(SP + 24,A3); //+ 0x18
	V0 = EMU_ReadS16(A2 + 6); //+ 0x6
	V1 = EMU_ReadU32(S3 + 4112); //+ 0x1010
	A0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V0 <<= 4;
	V1 += V0;
	T0 = V1 - A0;
	EMU_Write32(SP + 32,T0); //+ 0x20
	V0 = EMU_ReadU16(A2);
	A0 = FP;
	S1 = V0 & 0x7;
	A2 = S1 & 0xFFFF;
	V0 = A2 < A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(21,0x8002E4C8);
		goto ZZ_2E2BC_20C;
	}
	A0 = S1;
	ZZ_CLOCKCYCLES(22,0x8002E4C8);
ZZ_2E2BC_20C:
	V0 = EMU_ReadU32(SP + 48); //+ 0x30
	A1 = S6;
	V0 = (int32_t)V0 >> A0;
	A0 = A3 + V0;
	V0 = A2 < A1;
	if (!V0)
	{
		EMU_Write32(SP + 36,A0); //+ 0x24
		ZZ_CLOCKCYCLES(7,0x8002E4E8);
		goto ZZ_2E2BC_22C;
	}
	EMU_Write32(SP + 36,A0); //+ 0x24
	A1 = S1;
	ZZ_CLOCKCYCLES(8,0x8002E4E8);
ZZ_2E2BC_22C:
	V0 = EMU_ReadU32(SP + 56); //+ 0x38
	V1 = A3 << 2;
	V0 = (int32_t)V0 >> A1;
	A3 = T0 + V0;
	if ((int32_t)V1 >= 0)
	{
		EMU_Write32(SP + 44,A3); //+ 0x2C
		ZZ_CLOCKCYCLES(6,0x8002E504);
		goto ZZ_2E2BC_248;
	}
	EMU_Write32(SP + 44,A3); //+ 0x2C
	V1 += 8191;
	ZZ_CLOCKCYCLES(7,0x8002E504);
ZZ_2E2BC_248:
	A2 = A0 << 2;
	if ((int32_t)A2 >= 0)
	{
		A0 = (int32_t)V1 >> 13;
		ZZ_CLOCKCYCLES(3,0x8002E514);
		goto ZZ_2E2BC_258;
	}
	A0 = (int32_t)V1 >> 13;
	A2 += 8191;
	ZZ_CLOCKCYCLES(4,0x8002E514);
ZZ_2E2BC_258:
	V1 = T0 << 2;
	if ((int32_t)V1 >= 0)
	{
		A2 = (int32_t)A2 >> 13;
		ZZ_CLOCKCYCLES(3,0x8002E524);
		goto ZZ_2E2BC_268;
	}
	A2 = (int32_t)A2 >> 13;
	V1 += 8191;
	ZZ_CLOCKCYCLES(4,0x8002E524);
ZZ_2E2BC_268:
	A3 <<= 2;
	if ((int32_t)A3 >= 0)
	{
		A1 = (int32_t)V1 >> 13;
		ZZ_CLOCKCYCLES(3,0x8002E534);
		goto ZZ_2E2BC_278;
	}
	A1 = (int32_t)V1 >> 13;
	A3 += 8191;
	ZZ_CLOCKCYCLES(4,0x8002E534);
ZZ_2E2BC_278:
	T1 = EMU_ReadU32(SP + 64); //+ 0x40
	A3 = (int32_t)A3 >> 13;
	RA = 0x8002E544; //ZZ_2E2BC_288
	EMU_Write32(SP + 16,T1); //+ 0x10
	ZZ_CLOCKCYCLES(4,0x8002CE7C);
	goto ZZ_2CE7C;
ZZ_2E2BC_288:
	S4 += 1;
	ZZ_CLOCKCYCLES(1,0x8002E548);
ZZ_2E2BC_28C:
	V0 = EMU_ReadU32(S3 + 4100); //+ 0x1004
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		V0 = S0 << 3;
		ZZ_CLOCKCYCLES(5,0x8002E314);
		goto ZZ_2E2BC_58;
	}
	V0 = S0 << 3;
	ZZ_CLOCKCYCLES(5,0x8002E55C);
ZZ_2E2BC_2A0:
	V0 = S4;
	RA = EMU_ReadU32(SP + 116); //+ 0x74
	FP = EMU_ReadU32(SP + 112); //+ 0x70
	S7 = EMU_ReadU32(SP + 108); //+ 0x6C
	S6 = EMU_ReadU32(SP + 104); //+ 0x68
	S5 = EMU_ReadU32(SP + 100); //+ 0x64
	S4 = EMU_ReadU32(SP + 96); //+ 0x60
	S3 = EMU_ReadU32(SP + 92); //+ 0x5C
	S2 = EMU_ReadU32(SP + 88); //+ 0x58
	S1 = EMU_ReadU32(SP + 84); //+ 0x54
	S0 = EMU_ReadU32(SP + 80); //+ 0x50
	SP += 120;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x8002E838,ZZ_2E594_2A4);
	ZZ_JUMPREGISTER(0x8002E850,ZZ_2E594_2BC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002E2BC,ZZ_2E2BC);
ZZ_MARK(0x8002E2C0);
ZZ_MARK(0x8002E2C4);
ZZ_MARK(0x8002E2C8);
ZZ_MARK(0x8002E2CC);
ZZ_MARK(0x8002E2D0);
ZZ_MARK(0x8002E2D4);
ZZ_MARK(0x8002E2D8);
ZZ_MARK(0x8002E2DC);
ZZ_MARK(0x8002E2E0);
ZZ_MARK(0x8002E2E4);
ZZ_MARK(0x8002E2E8);
ZZ_MARK(0x8002E2EC);
ZZ_MARK(0x8002E2F0);
ZZ_MARK(0x8002E2F4);
ZZ_MARK(0x8002E2F8);
ZZ_MARK(0x8002E2FC);
ZZ_MARK(0x8002E300);
ZZ_MARK(0x8002E304);
ZZ_MARK(0x8002E308);
ZZ_MARK(0x8002E30C);
ZZ_MARK(0x8002E310);
ZZ_MARK_TARGET(0x8002E314,ZZ_2E2BC_58);
ZZ_MARK(0x8002E318);
ZZ_MARK(0x8002E31C);
ZZ_MARK(0x8002E320);
ZZ_MARK(0x8002E324);
ZZ_MARK(0x8002E328);
ZZ_MARK(0x8002E32C);
ZZ_MARK(0x8002E330);
ZZ_MARK(0x8002E334);
ZZ_MARK(0x8002E338);
ZZ_MARK(0x8002E33C);
ZZ_MARK(0x8002E340);
ZZ_MARK(0x8002E344);
ZZ_MARK(0x8002E348);
ZZ_MARK(0x8002E34C);
ZZ_MARK(0x8002E350);
ZZ_MARK(0x8002E354);
ZZ_MARK(0x8002E358);
ZZ_MARK(0x8002E35C);
ZZ_MARK(0x8002E360);
ZZ_MARK(0x8002E364);
ZZ_MARK(0x8002E368);
ZZ_MARK(0x8002E36C);
ZZ_MARK(0x8002E370);
ZZ_MARK_TARGET(0x8002E374,ZZ_2E2BC_B8);
ZZ_MARK(0x8002E378);
ZZ_MARK(0x8002E37C);
ZZ_MARK(0x8002E380);
ZZ_MARK(0x8002E384);
ZZ_MARK(0x8002E388);
ZZ_MARK_TARGET(0x8002E38C,ZZ_2E2BC_D0);
ZZ_MARK_TARGET(0x8002E390,ZZ_2E2BC_D4);
ZZ_MARK(0x8002E394);
ZZ_MARK(0x8002E398);
ZZ_MARK(0x8002E39C);
ZZ_MARK(0x8002E3A0);
ZZ_MARK(0x8002E3A4);
ZZ_MARK(0x8002E3A8);
ZZ_MARK(0x8002E3AC);
ZZ_MARK(0x8002E3B0);
ZZ_MARK(0x8002E3B4);
ZZ_MARK(0x8002E3B8);
ZZ_MARK_TARGET(0x8002E3BC,ZZ_2E2BC_100);
ZZ_MARK(0x8002E3C0);
ZZ_MARK(0x8002E3C4);
ZZ_MARK(0x8002E3C8);
ZZ_MARK(0x8002E3CC);
ZZ_MARK(0x8002E3D0);
ZZ_MARK(0x8002E3D4);
ZZ_MARK_TARGET(0x8002E3D8,ZZ_2E2BC_11C);
ZZ_MARK(0x8002E3DC);
ZZ_MARK(0x8002E3E0);
ZZ_MARK(0x8002E3E4);
ZZ_MARK_TARGET(0x8002E3E8,ZZ_2E2BC_12C);
ZZ_MARK(0x8002E3EC);
ZZ_MARK(0x8002E3F0);
ZZ_MARK(0x8002E3F4);
ZZ_MARK(0x8002E3F8);
ZZ_MARK(0x8002E3FC);
ZZ_MARK(0x8002E400);
ZZ_MARK(0x8002E404);
ZZ_MARK(0x8002E408);
ZZ_MARK(0x8002E40C);
ZZ_MARK(0x8002E410);
ZZ_MARK(0x8002E414);
ZZ_MARK_TARGET(0x8002E418,ZZ_2E2BC_15C);
ZZ_MARK(0x8002E41C);
ZZ_MARK(0x8002E420);
ZZ_MARK(0x8002E424);
ZZ_MARK(0x8002E428);
ZZ_MARK(0x8002E42C);
ZZ_MARK(0x8002E430);
ZZ_MARK(0x8002E434);
ZZ_MARK(0x8002E438);
ZZ_MARK(0x8002E43C);
ZZ_MARK(0x8002E440);
ZZ_MARK_TARGET(0x8002E444,ZZ_2E2BC_188);
ZZ_MARK(0x8002E448);
ZZ_MARK(0x8002E44C);
ZZ_MARK(0x8002E450);
ZZ_MARK(0x8002E454);
ZZ_MARK(0x8002E458);
ZZ_MARK(0x8002E45C);
ZZ_MARK(0x8002E460);
ZZ_MARK(0x8002E464);
ZZ_MARK_TARGET(0x8002E468,ZZ_2E2BC_1AC);
ZZ_MARK(0x8002E46C);
ZZ_MARK_TARGET(0x8002E470,ZZ_2E2BC_1B4);
ZZ_MARK(0x8002E474);
ZZ_MARK(0x8002E478);
ZZ_MARK(0x8002E47C);
ZZ_MARK(0x8002E480);
ZZ_MARK(0x8002E484);
ZZ_MARK(0x8002E488);
ZZ_MARK(0x8002E48C);
ZZ_MARK(0x8002E490);
ZZ_MARK(0x8002E494);
ZZ_MARK(0x8002E498);
ZZ_MARK(0x8002E49C);
ZZ_MARK(0x8002E4A0);
ZZ_MARK(0x8002E4A4);
ZZ_MARK(0x8002E4A8);
ZZ_MARK(0x8002E4AC);
ZZ_MARK(0x8002E4B0);
ZZ_MARK(0x8002E4B4);
ZZ_MARK(0x8002E4B8);
ZZ_MARK(0x8002E4BC);
ZZ_MARK(0x8002E4C0);
ZZ_MARK(0x8002E4C4);
ZZ_MARK_TARGET(0x8002E4C8,ZZ_2E2BC_20C);
ZZ_MARK(0x8002E4CC);
ZZ_MARK(0x8002E4D0);
ZZ_MARK(0x8002E4D4);
ZZ_MARK(0x8002E4D8);
ZZ_MARK(0x8002E4DC);
ZZ_MARK(0x8002E4E0);
ZZ_MARK(0x8002E4E4);
ZZ_MARK_TARGET(0x8002E4E8,ZZ_2E2BC_22C);
ZZ_MARK(0x8002E4EC);
ZZ_MARK(0x8002E4F0);
ZZ_MARK(0x8002E4F4);
ZZ_MARK(0x8002E4F8);
ZZ_MARK(0x8002E4FC);
ZZ_MARK(0x8002E500);
ZZ_MARK_TARGET(0x8002E504,ZZ_2E2BC_248);
ZZ_MARK(0x8002E508);
ZZ_MARK(0x8002E50C);
ZZ_MARK(0x8002E510);
ZZ_MARK_TARGET(0x8002E514,ZZ_2E2BC_258);
ZZ_MARK(0x8002E518);
ZZ_MARK(0x8002E51C);
ZZ_MARK(0x8002E520);
ZZ_MARK_TARGET(0x8002E524,ZZ_2E2BC_268);
ZZ_MARK(0x8002E528);
ZZ_MARK(0x8002E52C);
ZZ_MARK(0x8002E530);
ZZ_MARK_TARGET(0x8002E534,ZZ_2E2BC_278);
ZZ_MARK(0x8002E538);
ZZ_MARK(0x8002E53C);
ZZ_MARK(0x8002E540);
ZZ_MARK_TARGET(0x8002E544,ZZ_2E2BC_288);
ZZ_MARK_TARGET(0x8002E548,ZZ_2E2BC_28C);
ZZ_MARK(0x8002E54C);
ZZ_MARK(0x8002E550);
ZZ_MARK(0x8002E554);
ZZ_MARK(0x8002E558);
ZZ_MARK_TARGET(0x8002E55C,ZZ_2E2BC_2A0);
ZZ_MARK(0x8002E560);
ZZ_MARK(0x8002E564);
ZZ_MARK(0x8002E568);
ZZ_MARK(0x8002E56C);
ZZ_MARK(0x8002E570);
ZZ_MARK(0x8002E574);
ZZ_MARK(0x8002E578);
ZZ_MARK(0x8002E57C);
ZZ_MARK(0x8002E580);
ZZ_MARK(0x8002E584);
ZZ_MARK(0x8002E588);
ZZ_MARK(0x8002E58C);
ZZ_MARK(0x8002E590);
