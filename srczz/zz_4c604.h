#ifdef ZZ_INCLUDE_CODE
ZZ_4C604:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	A0 = 0x80010000;
	A0 += 3992;
	EMU_Write32(SP + 24,RA); //+ 0x18
	RA = 0x8004C62C; //ZZ_4C604_28
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C348);
	goto ZZ_4C348;
ZZ_4C604_28:
	A1 = S0;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8276); //+ 0xFFFFDFAC
	A2 = 8;
	A0 = EMU_ReadU32(V0 + 28); //+ 0x1C
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004C650; //ZZ_4C604_4C
	A3 = S1;
	ZZ_CLOCKCYCLES_JR(9);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004C648)
	ZZ_JUMPREGISTER_END();
ZZ_4C604_4C:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80017950,ZZ_17800_150);
	ZZ_JUMPREGISTER(0x800178F0,ZZ_17800_F0);
	ZZ_JUMPREGISTER(0x80017A70,ZZ_17800_270);
	ZZ_JUMPREGISTER(0x80017A10,ZZ_17800_210);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004C604,ZZ_4C604);
ZZ_MARK(0x8004C608);
ZZ_MARK(0x8004C60C);
ZZ_MARK(0x8004C610);
ZZ_MARK(0x8004C614);
ZZ_MARK(0x8004C618);
ZZ_MARK(0x8004C61C);
ZZ_MARK(0x8004C620);
ZZ_MARK(0x8004C624);
ZZ_MARK(0x8004C628);
ZZ_MARK_TARGET(0x8004C62C,ZZ_4C604_28);
ZZ_MARK(0x8004C630);
ZZ_MARK(0x8004C634);
ZZ_MARK(0x8004C638);
ZZ_MARK(0x8004C63C);
ZZ_MARK(0x8004C640);
ZZ_MARK(0x8004C644);
ZZ_MARK(0x8004C648);
ZZ_MARK(0x8004C64C);
ZZ_MARK_TARGET(0x8004C650,ZZ_4C604_4C);
ZZ_MARK(0x8004C654);
ZZ_MARK(0x8004C658);
ZZ_MARK(0x8004C65C);
ZZ_MARK(0x8004C660);
ZZ_MARK(0x8004C664);
