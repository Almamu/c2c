#ifdef ZZ_INCLUDE_CODE
ZZ_47234:
	V1 = 0x1B4E0000;
	V1 |= 0x81B5;
	A0 += 150;
	EMU_SMultiply(A0,V1);
	V0 = A1;
	A1 = 0x88880000;
	A1 |= 0x8889;
	V1 = HI;
	A3 = (int32_t)V1 >> 3;
	V1 = (int32_t)A0 >> 31;
	A3 = A3 - V1;
	EMU_SMultiply(A3,A1);
	T1 = 0x66660000;
	T1 |= 0x6667;
	A1 = A3 << 2;
	A1 += A3;
	V1 = A1 << 4;
	A2 = HI;
	V1 = V1 - A1;
	A0 = A0 - V1;
	EMU_SMultiply(A0,T1);
	V1 = (int32_t)A3 >> 31;
	T0 = A2 + A3;
	T0 = (int32_t)T0 >> 5;
	T0 = T0 - V1;
	V1 = T0 << 4;
	V1 = V1 - T0;
	A1 = HI;
	V1 <<= 2;
	A3 = A3 - V1;
	EMU_SMultiply(A3,T1);
	V1 = (int32_t)A0 >> 31;
	A1 = (int32_t)A1 >> 2;
	A1 = A1 - V1;
	A2 = A1 << 4;
	V1 = A1 << 2;
	V1 += A1;
	V1 <<= 1;
	A0 = A0 - V1;
	T3 = HI;
	A2 += A0;
	V1 = (int32_t)A3 >> 31;
	EMU_SMultiply(T0,T1);
	EMU_Write8(V0 + 2,A2); //+ 0x2
	A0 = (int32_t)T3 >> 2;
	A0 = A0 - V1;
	A1 = A0 << 4;
	V1 = A0 << 2;
	V1 += A0;
	V1 <<= 1;
	A3 = A3 - V1;
	A1 += A3;
	V1 = (int32_t)T0 >> 31;
	EMU_Write8(V0 + 1,A1); //+ 0x1
	T1 = HI;
	A0 = (int32_t)T1 >> 2;
	A0 = A0 - V1;
	A1 = A0 << 4;
	V1 = A0 << 2;
	V1 += A0;
	V1 <<= 1;
	T0 = T0 - V1;
	A1 += T0;
	ZZ_JUMPREGISTER_BEGIN(RA);
	EMU_Write8(V0,A1);
	ZZ_CLOCKCYCLES_JR(65);
	ZZ_JUMPREGISTER(0x80012488,ZZ_123F0_98);
	ZZ_JUMPREGISTER(0x800319B0,ZZ_3198C_24);
	ZZ_JUMPREGISTER(0x80013088,ZZ_12FE8_A0);
	ZZ_JUMPREGISTER(0x80012F74,ZZ_12F10_64);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80047234,ZZ_47234);
ZZ_MARK(0x80047238);
ZZ_MARK(0x8004723C);
ZZ_MARK(0x80047240);
ZZ_MARK(0x80047244);
ZZ_MARK(0x80047248);
ZZ_MARK(0x8004724C);
ZZ_MARK(0x80047250);
ZZ_MARK(0x80047254);
ZZ_MARK(0x80047258);
ZZ_MARK(0x8004725C);
ZZ_MARK(0x80047260);
ZZ_MARK(0x80047264);
ZZ_MARK(0x80047268);
ZZ_MARK(0x8004726C);
ZZ_MARK(0x80047270);
ZZ_MARK(0x80047274);
ZZ_MARK(0x80047278);
ZZ_MARK(0x8004727C);
ZZ_MARK(0x80047280);
ZZ_MARK(0x80047284);
ZZ_MARK(0x80047288);
ZZ_MARK(0x8004728C);
ZZ_MARK(0x80047290);
ZZ_MARK(0x80047294);
ZZ_MARK(0x80047298);
ZZ_MARK(0x8004729C);
ZZ_MARK(0x800472A0);
ZZ_MARK(0x800472A4);
ZZ_MARK(0x800472A8);
ZZ_MARK(0x800472AC);
ZZ_MARK(0x800472B0);
ZZ_MARK(0x800472B4);
ZZ_MARK(0x800472B8);
ZZ_MARK(0x800472BC);
ZZ_MARK(0x800472C0);
ZZ_MARK(0x800472C4);
ZZ_MARK(0x800472C8);
ZZ_MARK(0x800472CC);
ZZ_MARK(0x800472D0);
ZZ_MARK(0x800472D4);
ZZ_MARK(0x800472D8);
ZZ_MARK(0x800472DC);
ZZ_MARK(0x800472E0);
ZZ_MARK(0x800472E4);
ZZ_MARK(0x800472E8);
ZZ_MARK(0x800472EC);
ZZ_MARK(0x800472F0);
ZZ_MARK(0x800472F4);
ZZ_MARK(0x800472F8);
ZZ_MARK(0x800472FC);
ZZ_MARK(0x80047300);
ZZ_MARK(0x80047304);
ZZ_MARK(0x80047308);
ZZ_MARK(0x8004730C);
ZZ_MARK(0x80047310);
ZZ_MARK(0x80047314);
ZZ_MARK(0x80047318);
ZZ_MARK(0x8004731C);
ZZ_MARK(0x80047320);
ZZ_MARK(0x80047324);
ZZ_MARK(0x80047328);
ZZ_MARK(0x8004732C);
ZZ_MARK(0x80047330);
ZZ_MARK(0x80047334);
