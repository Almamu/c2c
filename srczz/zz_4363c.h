#ifdef ZZ_INCLUDE_CODE
ZZ_4363C:
	T8 = EMU_ReadU32(SP + 84); //+ 0x54
	T9 = EMU_ReadU32(SP + 88); //+ 0x58
	A0 = EMU_ReadU32(SP + 92); //+ 0x5C
	EMU_Write32(V1 + 292,T8); //+ 0x124
	EMU_Write32(V1 + 300,T9); //+ 0x12C
	T9 = EMU_ReadU32(SP + 80); //+ 0x50
	EMU_Write32(V1 + 304,A0); //+ 0x130
	T9 &= 0xFFFE;
	T9 <<= 16;
	EMU_Write32(V1 + 116,T9); //+ 0x74
	GTE_SetControlRegister(21,R0);
	GTE_SetControlRegister(22,R0);
	GTE_SetControlRegister(23,R0);
	A1 = EMU_ReadU32(GP + 96); //+ 0x60
	T8 = EMU_ReadU32(GP + 100); //+ 0x64
	A0 = EMU_ReadU32(GP + 104); //+ 0x68
	A1 = (int32_t)A1 >> 8;
	T8 = (int32_t)T8 >> 8;
	A0 = (int32_t)A0 >> 8;
	T9 = EMU_ReadU32(V1 + 52); //+ 0x34
	A3 = EMU_ReadU32(V1 + 56); //+ 0x38
	A1 = A1 - T9;
	T9 = EMU_ReadU32(V1 + 60); //+ 0x3C
	T8 = T8 - A3;
	A0 = A0 - T9;
	T8 <<= 16;
	A1 &= 0xFFFF;
	T8 |= A1;
	T9 = EMU_ReadU32(A2 + 64); //+ 0x40
	A1 = EMU_ReadU32(A2 + 68); //+ 0x44
	A3 = 8800;
	A1 = A0 - A1;
	if ((int32_t)A1 >= 0)
	{
		T9 = T8 - T9;
		ZZ_CLOCKCYCLES(34,0x800436C8);
		goto ZZ_4363C_8C;
	}
	T9 = T8 - T9;
	A1 = -A1;
	ZZ_CLOCKCYCLES(35,0x800436C8);
ZZ_4363C_8C:
	A3 = A3 - A1;
	if ((int32_t)A3 < 0)
	{
		A1 = (int32_t)T9 >> 16;
		ZZ_CLOCKCYCLES(3,0x80043704);
		goto ZZ_4363C_C8;
	}
	A1 = (int32_t)T9 >> 16;
	if ((int32_t)A1 >= 0)
	{
		T9 <<= 16;
		ZZ_CLOCKCYCLES(5,0x800436E0);
		goto ZZ_4363C_A4;
	}
	T9 <<= 16;
	A1 = -A1;
	ZZ_CLOCKCYCLES(6,0x800436E0);
ZZ_4363C_A4:
	A3 = A3 - A1;
	if ((int32_t)A3 < 0)
	{
		A1 = (int32_t)T9 >> 16;
		ZZ_CLOCKCYCLES(3,0x80043704);
		goto ZZ_4363C_C8;
	}
	A1 = (int32_t)T9 >> 16;
	if ((int32_t)A1 >= 0)
	{
		A3 = EMU_CheckedAdd(A3,-800);
		ZZ_CLOCKCYCLES(5,0x800436F8);
		goto ZZ_4363C_BC;
	}
	A3 = EMU_CheckedAdd(A3,-800);
	A1 = -A1;
	ZZ_CLOCKCYCLES(6,0x800436F8);
ZZ_4363C_BC:
	A3 = A3 - A1;
	if ((int32_t)A3 >= 0)
	{
		ZZ_CLOCKCYCLES(3,0x80043708);
		goto ZZ_4363C_CC;
	}
	ZZ_CLOCKCYCLES(3,0x80043704);
ZZ_4363C_C8:
	A3 = 0;
	ZZ_CLOCKCYCLES(1,0x80043708);
ZZ_4363C_CC:
	T9 = EMU_ReadU32(A2 + 72); //+ 0x48
	A1 = EMU_ReadU32(A2 + 76); //+ 0x4C
	V0 = 8800;
	A1 = A0 - A1;
	if ((int32_t)A1 >= 0)
	{
		T9 = T8 - T9;
		ZZ_CLOCKCYCLES(6,0x80043724);
		goto ZZ_4363C_E8;
	}
	T9 = T8 - T9;
	A1 = -A1;
	ZZ_CLOCKCYCLES(7,0x80043724);
ZZ_4363C_E8:
	V0 = V0 - A1;
	if ((int32_t)V0 < 0)
	{
		A1 = (int32_t)T9 >> 16;
		ZZ_CLOCKCYCLES(3,0x80043760);
		goto ZZ_4363C_124;
	}
	A1 = (int32_t)T9 >> 16;
	if ((int32_t)A1 >= 0)
	{
		T9 <<= 16;
		ZZ_CLOCKCYCLES(5,0x8004373C);
		goto ZZ_4363C_100;
	}
	T9 <<= 16;
	A1 = -A1;
	ZZ_CLOCKCYCLES(6,0x8004373C);
ZZ_4363C_100:
	V0 = V0 - A1;
	if ((int32_t)V0 < 0)
	{
		A1 = (int32_t)T9 >> 16;
		ZZ_CLOCKCYCLES(3,0x80043760);
		goto ZZ_4363C_124;
	}
	A1 = (int32_t)T9 >> 16;
	if ((int32_t)A1 >= 0)
	{
		V0 = EMU_CheckedAdd(V0,-800);
		ZZ_CLOCKCYCLES(5,0x80043754);
		goto ZZ_4363C_118;
	}
	V0 = EMU_CheckedAdd(V0,-800);
	A1 = -A1;
	ZZ_CLOCKCYCLES(6,0x80043754);
ZZ_4363C_118:
	V0 = V0 - A1;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(3,0x80043764);
		goto ZZ_4363C_128;
	}
	ZZ_CLOCKCYCLES(3,0x80043760);
ZZ_4363C_124:
	V0 = 0;
	ZZ_CLOCKCYCLES(1,0x80043764);
ZZ_4363C_128:
	A1 = A3 + V0;
	T9 = 4096;
	A1 = T9 - A1;
	if ((int32_t)A1 >= 0)
	{
		ZZ_CLOCKCYCLES(5,0x8004377C);
		goto ZZ_4363C_140;
	}
	A1 = 0;
	ZZ_CLOCKCYCLES(6,0x8004377C);
ZZ_4363C_140:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x800435C8,ZZ_43508_C0);
	ZZ_JUMPREGISTER(0x80043618,ZZ_43508_110);
	ZZ_JUMPREGISTER_END();
ZZ_4363C_148:
	T9 = EMU_ReadU32(SP + 80); //+ 0x50
	T9 &= 0xFFFE;
	T9 <<= 16;
	ZZ_JUMPREGISTER_BEGIN(RA);
	EMU_Write32(V1 + 116,T9); //+ 0x74
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800435C8,ZZ_43508_C0);
	ZZ_JUMPREGISTER(0x80043618,ZZ_43508_110);
	ZZ_JUMPREGISTER_END();
ZZ_4363C_160:
	GTE_SetControlRegister(21,R0);
	GTE_SetControlRegister(22,R0);
	GTE_SetControlRegister(23,R0);
	EMU_Write32(V1 + 236,R0); //+ 0xEC
	ZZ_JUMPREGISTER_BEGIN(RA);
	T8 = EMU_ReadU32(SP + 28); //+ 0x1C
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800435C8,ZZ_43508_C0);
	ZZ_JUMPREGISTER(0x80043618,ZZ_43508_110);
	ZZ_JUMPREGISTER_END();
ZZ_4363C_178:
	A3 = EMU_ReadU32(SP + 64); //+ 0x40
	T8 = EMU_ReadU32(SP + 68); //+ 0x44
	EMU_Write32(V1 + 236,A3); //+ 0xEC
	GTE_SetDataRegister(6,R0);
	T9 = T8 >> 16;
	A0 = T8 >> 8;
	T9 &= 0xFF0;
	A0 &= 0xFF0;
	T8 &= 0xFF0;
	GTE_SetControlRegister(21,T9);
	GTE_SetControlRegister(22,A0);
	GTE_SetControlRegister(23,T8);
	ZZ_JUMPREGISTER_BEGIN(RA);
	T8 = EMU_ReadU32(SP + 28); //+ 0x1C
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x800435C8,ZZ_43508_C0);
	ZZ_JUMPREGISTER(0x80043618,ZZ_43508_110);
	ZZ_JUMPREGISTER_END();
ZZ_4363C_1B0:
	A3 = EMU_ReadU32(SP + 64); //+ 0x40
	T8 = EMU_ReadU32(SP + 68); //+ 0x44
	EMU_Write32(V1 + 236,A3); //+ 0xEC
	GTE_SetDataRegister(6,R0);
	T9 = A3 & 0xFFFF;
	if (!T9)
	{
		T9 = T8 >> 16;
		ZZ_CLOCKCYCLES(7,0x80043824);
		goto ZZ_4363C_1E8;
	}
	T9 = T8 >> 16;
	A0 = T8 >> 8;
	T9 &= 0xFF0;
	A0 &= 0xFF0;
	T8 &= 0xFF0;
	GTE_SetControlRegister(21,T9);
	GTE_SetControlRegister(22,A0);
	GTE_SetControlRegister(23,T8);
	ZZ_CLOCKCYCLES(14,0x80043824);
ZZ_4363C_1E8:
	ZZ_JUMPREGISTER_BEGIN(RA);
	T8 = EMU_ReadU32(SP + 28); //+ 0x1C
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x800435C8,ZZ_43508_C0);
	ZZ_JUMPREGISTER(0x80043618,ZZ_43508_110);
	ZZ_JUMPREGISTER_END();
ZZ_4363C_1F0:
	A0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	A3 = EMU_ReadU32(SP + 64); //+ 0x40
	A0 <<= 7;
	A0 &= 0xFFF;
	A0 = EMU_CheckedAdd(A0,-2048);
	if ((int32_t)A0 <= 0)
	{
		T8 = 4096;
		ZZ_CLOCKCYCLES(7,0x8004384C);
		goto ZZ_4363C_210;
	}
	T8 = 4096;
	A0 = T8 - A0;
	ZZ_CLOCKCYCLES(8,0x8004384C);
ZZ_4363C_210:
	T8 = EMU_ReadU32(SP + 68); //+ 0x44
	EMU_Write32(V1 + 236,A3); //+ 0xEC
	EMU_Write16(V1 + 236,A0); //+ 0xEC
	GTE_SetDataRegister(6,R0);
	T9 = A3 & 0xFFFF;
	if (!T9)
	{
		T9 = T8 >> 16;
		ZZ_CLOCKCYCLES(7,0x80043884);
		goto ZZ_4363C_248;
	}
	T9 = T8 >> 16;
	A0 = T8 >> 8;
	T9 &= 0xFF0;
	A0 &= 0xFF0;
	T8 &= 0xFF0;
	GTE_SetControlRegister(21,T9);
	GTE_SetControlRegister(22,A0);
	GTE_SetControlRegister(23,T8);
	ZZ_CLOCKCYCLES(14,0x80043884);
ZZ_4363C_248:
	ZZ_JUMPREGISTER_BEGIN(RA);
	T8 = EMU_ReadU32(SP + 28); //+ 0x1C
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x800435C8,ZZ_43508_C0);
	ZZ_JUMPREGISTER(0x80043618,ZZ_43508_110);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004363C,ZZ_4363C);
ZZ_MARK(0x80043640);
ZZ_MARK(0x80043644);
ZZ_MARK(0x80043648);
ZZ_MARK(0x8004364C);
ZZ_MARK(0x80043650);
ZZ_MARK(0x80043654);
ZZ_MARK(0x80043658);
ZZ_MARK(0x8004365C);
ZZ_MARK(0x80043660);
ZZ_MARK(0x80043664);
ZZ_MARK(0x80043668);
ZZ_MARK(0x8004366C);
ZZ_MARK(0x80043670);
ZZ_MARK(0x80043674);
ZZ_MARK(0x80043678);
ZZ_MARK(0x8004367C);
ZZ_MARK(0x80043680);
ZZ_MARK(0x80043684);
ZZ_MARK(0x80043688);
ZZ_MARK(0x8004368C);
ZZ_MARK(0x80043690);
ZZ_MARK(0x80043694);
ZZ_MARK(0x80043698);
ZZ_MARK(0x8004369C);
ZZ_MARK(0x800436A0);
ZZ_MARK(0x800436A4);
ZZ_MARK(0x800436A8);
ZZ_MARK(0x800436AC);
ZZ_MARK(0x800436B0);
ZZ_MARK(0x800436B4);
ZZ_MARK(0x800436B8);
ZZ_MARK(0x800436BC);
ZZ_MARK(0x800436C0);
ZZ_MARK(0x800436C4);
ZZ_MARK_TARGET(0x800436C8,ZZ_4363C_8C);
ZZ_MARK(0x800436CC);
ZZ_MARK(0x800436D0);
ZZ_MARK(0x800436D4);
ZZ_MARK(0x800436D8);
ZZ_MARK(0x800436DC);
ZZ_MARK_TARGET(0x800436E0,ZZ_4363C_A4);
ZZ_MARK(0x800436E4);
ZZ_MARK(0x800436E8);
ZZ_MARK(0x800436EC);
ZZ_MARK(0x800436F0);
ZZ_MARK(0x800436F4);
ZZ_MARK_TARGET(0x800436F8,ZZ_4363C_BC);
ZZ_MARK(0x800436FC);
ZZ_MARK(0x80043700);
ZZ_MARK_TARGET(0x80043704,ZZ_4363C_C8);
ZZ_MARK_TARGET(0x80043708,ZZ_4363C_CC);
ZZ_MARK(0x8004370C);
ZZ_MARK(0x80043710);
ZZ_MARK(0x80043714);
ZZ_MARK(0x80043718);
ZZ_MARK(0x8004371C);
ZZ_MARK(0x80043720);
ZZ_MARK_TARGET(0x80043724,ZZ_4363C_E8);
ZZ_MARK(0x80043728);
ZZ_MARK(0x8004372C);
ZZ_MARK(0x80043730);
ZZ_MARK(0x80043734);
ZZ_MARK(0x80043738);
ZZ_MARK_TARGET(0x8004373C,ZZ_4363C_100);
ZZ_MARK(0x80043740);
ZZ_MARK(0x80043744);
ZZ_MARK(0x80043748);
ZZ_MARK(0x8004374C);
ZZ_MARK(0x80043750);
ZZ_MARK_TARGET(0x80043754,ZZ_4363C_118);
ZZ_MARK(0x80043758);
ZZ_MARK(0x8004375C);
ZZ_MARK_TARGET(0x80043760,ZZ_4363C_124);
ZZ_MARK_TARGET(0x80043764,ZZ_4363C_128);
ZZ_MARK(0x80043768);
ZZ_MARK(0x8004376C);
ZZ_MARK(0x80043770);
ZZ_MARK(0x80043774);
ZZ_MARK(0x80043778);
ZZ_MARK_TARGET(0x8004377C,ZZ_4363C_140);
ZZ_MARK(0x80043780);
ZZ_MARK_TARGET(0x80043784,ZZ_4363C_148);
ZZ_MARK(0x80043788);
ZZ_MARK(0x8004378C);
ZZ_MARK(0x80043790);
ZZ_MARK(0x80043794);
ZZ_MARK(0x80043798);
ZZ_MARK_TARGET(0x8004379C,ZZ_4363C_160);
ZZ_MARK(0x800437A0);
ZZ_MARK(0x800437A4);
ZZ_MARK(0x800437A8);
ZZ_MARK(0x800437AC);
ZZ_MARK(0x800437B0);
ZZ_MARK_TARGET(0x800437B4,ZZ_4363C_178);
ZZ_MARK(0x800437B8);
ZZ_MARK(0x800437BC);
ZZ_MARK(0x800437C0);
ZZ_MARK(0x800437C4);
ZZ_MARK(0x800437C8);
ZZ_MARK(0x800437CC);
ZZ_MARK(0x800437D0);
ZZ_MARK(0x800437D4);
ZZ_MARK(0x800437D8);
ZZ_MARK(0x800437DC);
ZZ_MARK(0x800437E0);
ZZ_MARK(0x800437E4);
ZZ_MARK(0x800437E8);
ZZ_MARK_TARGET(0x800437EC,ZZ_4363C_1B0);
ZZ_MARK(0x800437F0);
ZZ_MARK(0x800437F4);
ZZ_MARK(0x800437F8);
ZZ_MARK(0x800437FC);
ZZ_MARK(0x80043800);
ZZ_MARK(0x80043804);
ZZ_MARK(0x80043808);
ZZ_MARK(0x8004380C);
ZZ_MARK(0x80043810);
ZZ_MARK(0x80043814);
ZZ_MARK(0x80043818);
ZZ_MARK(0x8004381C);
ZZ_MARK(0x80043820);
ZZ_MARK_TARGET(0x80043824,ZZ_4363C_1E8);
ZZ_MARK(0x80043828);
ZZ_MARK_TARGET(0x8004382C,ZZ_4363C_1F0);
ZZ_MARK(0x80043830);
ZZ_MARK(0x80043834);
ZZ_MARK(0x80043838);
ZZ_MARK(0x8004383C);
ZZ_MARK(0x80043840);
ZZ_MARK(0x80043844);
ZZ_MARK(0x80043848);
ZZ_MARK_TARGET(0x8004384C,ZZ_4363C_210);
ZZ_MARK(0x80043850);
ZZ_MARK(0x80043854);
ZZ_MARK(0x80043858);
ZZ_MARK(0x8004385C);
ZZ_MARK(0x80043860);
ZZ_MARK(0x80043864);
ZZ_MARK(0x80043868);
ZZ_MARK(0x8004386C);
ZZ_MARK(0x80043870);
ZZ_MARK(0x80043874);
ZZ_MARK(0x80043878);
ZZ_MARK(0x8004387C);
ZZ_MARK(0x80043880);
ZZ_MARK_TARGET(0x80043884,ZZ_4363C_248);
ZZ_MARK(0x80043888);
