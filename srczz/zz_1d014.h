#ifdef ZZ_INCLUDE_CODE
ZZ_1D014:
	SP -= 64;
	EMU_Write32(SP + 52,S1); //+ 0x34
	S1 = A1;
	EMU_Write32(SP + 60,RA); //+ 0x3C
	EMU_Write32(SP + 56,S2); //+ 0x38
	EMU_Write32(SP + 48,S0); //+ 0x30
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	if (!V0)
	{
		S2 = A0;
		ZZ_CLOCKCYCLES(10,0x8001D2BC);
		goto ZZ_1D014_2A8;
	}
	S2 = A0;
	V1 = V0 - 1;
	V0 = V1 < 5;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(14,0x8001D2BC);
		goto ZZ_1D014_2A8;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 728); //+ 0x2D8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(20);
	ZZ_JUMPREGISTER(0x8001D08C,ZZ_1D014_78);
	ZZ_JUMPREGISTER(0x8001D150,ZZ_1D014_13C);
	ZZ_JUMPREGISTER(0x8001D128,ZZ_1D014_114);
	ZZ_JUMPREGISTER(0x8001D064,ZZ_1D014_50);
	ZZ_JUMPREGISTER(0x8001D178,ZZ_1D014_164);
	ZZ_JUMPREGISTER_END();
ZZ_1D014_50:
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 == V0)
	{
		V0 = 0x400;
		ZZ_CLOCKCYCLES(8,0x8001D08C);
		goto ZZ_1D014_78;
	}
	V0 = 0x400;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(10,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(10,0x8001D08C);
ZZ_1D014_78:
	A0 = EMU_ReadU32(S1);
	if (S2 == A0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x8001D340);
		goto ZZ_1D014_32C;
	}
	V0 = 0x1;
	V1 = EMU_ReadU32(S1 + 12); //+ 0xC
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001D0D0);
		goto ZZ_1D014_BC;
	}
	V0 = EMU_ReadU32(S2 + 172); //+ 0xAC
	V0 &= 0x10;
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(13,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	V0 = EMU_ReadU32(A0 + 88); //+ 0x58
	if (V0 == S2)
	{
		ZZ_CLOCKCYCLES(17,0x8001D2BC);
		goto ZZ_1D014_2A8;
	}
	ZZ_CLOCKCYCLES(17,0x8001D0D0);
ZZ_1D014_BC:
	A0 = S2;
	A1 = R0;
	RA = 0x8001D0E0; //ZZ_1D014_CC
	A2 = -2;
	ZZ_CLOCKCYCLES(4,0x8002C638);
	goto ZZ_2C638;
ZZ_1D014_CC:
	S0 = V0;
	if (!S0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(3,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	A0 = EMU_ReadU32(S1);
	A1 = R0;
	RA = 0x8001D0FC; //ZZ_1D014_E8
	A2 = -2;
	ZZ_CLOCKCYCLES(7,0x8002C638);
	goto ZZ_2C638;
ZZ_1D014_E8:
	A0 = S0 + 8;
	RA = 0x8001D108; //ZZ_1D014_F4
	A1 = V0 + 8;
	ZZ_CLOCKCYCLES(3,0x800311CC);
	goto ZZ_311CC;
ZZ_1D014_F4:
	RA = 0x8001D110; //ZZ_1D014_FC
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x8002CD30);
	goto ZZ_2CD30;
ZZ_1D014_FC:
	RA = 0x8001D118; //ZZ_1D014_104
	ZZ_CLOCKCYCLES(2,0x8002CD30);
	goto ZZ_2CD30;
ZZ_1D014_104:
	if (S0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(2,0x8001D2BC);
		goto ZZ_1D014_2A8;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(4,0x8001D344);
	goto ZZ_1D014_330;
ZZ_1D014_114:
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 == V0)
	{
		V0 = 0x400;
		ZZ_CLOCKCYCLES(8,0x8001D150);
		goto ZZ_1D014_13C;
	}
	V0 = 0x400;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(10,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(10,0x8001D150);
ZZ_1D014_13C:
	A0 = EMU_ReadU32(S1);
	A1 = R0;
	RA = 0x8001D160; //ZZ_1D014_14C
	A2 = -2;
	ZZ_CLOCKCYCLES(4,0x8002C638);
	goto ZZ_2C638;
ZZ_1D014_14C:
	if (!V0)
	{
		A0 = S2 + 96;
		ZZ_CLOCKCYCLES(2,0x8001D340);
		goto ZZ_1D014_32C;
	}
	A0 = S2 + 96;
	RA = 0x8001D170; //ZZ_1D014_15C
	A1 = V0 + 8;
	ZZ_CLOCKCYCLES(4,0x800310A4);
	goto ZZ_310A4;
ZZ_1D014_15C:
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x8001D110);
	goto ZZ_1D014_FC;
ZZ_1D014_164:
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 == V0)
	{
		V0 = 0x400;
		ZZ_CLOCKCYCLES(8,0x8001D1A0);
		goto ZZ_1D014_18C;
	}
	V0 = 0x400;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(10,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	ZZ_CLOCKCYCLES(10,0x8001D1A0);
ZZ_1D014_18C:
	A0 = S2;
	A1 = R0;
	RA = 0x8001D1B0; //ZZ_1D014_19C
	A2 = -2;
	ZZ_CLOCKCYCLES(4,0x8002C638);
	goto ZZ_2C638;
ZZ_1D014_19C:
	A0 = V0;
	if (!A0)
	{
		A0 += 8;
		ZZ_CLOCKCYCLES(3,0x8001D340);
		goto ZZ_1D014_32C;
	}
	A0 += 8;
	V1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V1 + 96); //+ 0x60
	V1 = EMU_ReadU32(V1 + 144); //+ 0x90
	V0 = V0 - V1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V1 + 100); //+ 0x64
	V1 = EMU_ReadU32(V1 + 148); //+ 0x94
	V0 = V0 - V1;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V1 + 104); //+ 0x68
	V1 = EMU_ReadU32(V1 + 152); //+ 0x98
	V0 = V0 - V1;
	EMU_Write32(SP + 32,V0); //+ 0x20
	V1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V1 + 144); //+ 0x90
	V1 = EMU_ReadU32(V1 + 96); //+ 0x60
	V0 += V1;
	EMU_Write32(SP + 36,V0); //+ 0x24
	V1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V1 + 148); //+ 0x94
	V1 = EMU_ReadU32(V1 + 100); //+ 0x64
	V0 += V1;
	EMU_Write32(SP + 40,V0); //+ 0x28
	V1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V1 + 152); //+ 0x98
	V1 = EMU_ReadU32(V1 + 104); //+ 0x68
	A1 = SP + 24;
	V0 += V1;
	RA = 0x8001D268; //ZZ_1D014_254
	EMU_Write32(SP + 44,V0); //+ 0x2C
	ZZ_CLOCKCYCLES(46,0x800311CC);
	goto ZZ_311CC;
ZZ_1D014_254:
	RA = 0x8001D270; //ZZ_1D014_25C
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x8002CD30);
	goto ZZ_2CD30;
ZZ_1D014_25C:
	if (!S0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(2,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	A0 = EMU_ReadU32(S1 + 16); //+ 0x10
	V0 = (int32_t)A0 < 3;
	if (V0)
	{
		V0 = 0x66660000;
		ZZ_CLOCKCYCLES(7,0x8001D2BC);
		goto ZZ_1D014_2A8;
	}
	V0 = 0x66660000;
	V0 |= 0x6667;
	EMU_SMultiply(A0,V0);
	V0 = (int32_t)A0 >> 31;
	T0 = HI;
	V1 = (int32_t)T0 >> 1;
	V1 = V1 - V0;
	V0 = V1 << 2;
	V0 += V1;
	if (A0 == V0)
	{
		V0 = A0 + 1;
		ZZ_CLOCKCYCLES(17,0x8001D2BC);
		goto ZZ_1D014_2A8;
	}
	V0 = A0 + 1;
	EMU_Write32(S1 + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(19,0x8001D340);
	goto ZZ_1D014_32C;
ZZ_1D014_2A8:
	V0 = EMU_ReadU32(S1 + 16); //+ 0x10
	V1 = EMU_ReadU32(S1 + 24); //+ 0x18
	V0 += 1;
	EMU_Write32(S1 + 16,V0); //+ 0x10
	EMU_Write32(SP + 16,V1); //+ 0x10
	A0 = EMU_ReadU32(S1);
	A2 = EMU_ReadU32(S1 + 4); //+ 0x4
	A3 = EMU_ReadU32(S1 + 8); //+ 0x8
	RA = 0x8001D2E4; //ZZ_1D014_2D0
	A1 = S2;
	ZZ_CLOCKCYCLES(10,0x8001CD48);
	goto ZZ_1CD48;
ZZ_1D014_2D0:
	V0 = EMU_ReadU32(S1);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001D340);
		goto ZZ_1D014_32C;
	}
	V0 = EMU_ReadU32(V0 + 212); //+ 0xD4
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(8,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	A0 = EMU_ReadU32(S1);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2524); //+ 0xFFFFF624
	V0 += 1;
	if (A0 != V1)
	{
		EMU_Write32(S1 + 20,V0); //+ 0x14
		ZZ_CLOCKCYCLES(15,0x8001D340);
		goto ZZ_1D014_32C;
	}
	EMU_Write32(S1 + 20,V0); //+ 0x14
	V1 = EMU_ReadU32(S1 + 4); //+ 0x4
	V0 = 0x2E00;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(19,0x8001D344);
		goto ZZ_1D014_330;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S2 + 172); //+ 0xAC
	V1 = -17;
	V0 &= V1;
	EMU_Write32(S2 + 172,V0); //+ 0xAC
	ZZ_CLOCKCYCLES(23,0x8001D340);
ZZ_1D014_32C:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001D344);
ZZ_1D014_330:
	RA = EMU_ReadU32(SP + 60); //+ 0x3C
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001D014,0x8001D064,ZZ_1D014);
ZZ_MARK_TARGET(0x8001D064,0x8001D08C,ZZ_1D014_50);
ZZ_MARK_TARGET(0x8001D08C,0x8001D0D0,ZZ_1D014_78);
ZZ_MARK_TARGET(0x8001D0D0,0x8001D0E0,ZZ_1D014_BC);
ZZ_MARK_TARGET(0x8001D0E0,0x8001D0FC,ZZ_1D014_CC);
ZZ_MARK_TARGET(0x8001D0FC,0x8001D108,ZZ_1D014_E8);
ZZ_MARK_TARGET(0x8001D108,0x8001D110,ZZ_1D014_F4);
ZZ_MARK_TARGET(0x8001D110,0x8001D118,ZZ_1D014_FC);
ZZ_MARK_TARGET(0x8001D118,0x8001D128,ZZ_1D014_104);
ZZ_MARK_TARGET(0x8001D128,0x8001D150,ZZ_1D014_114);
ZZ_MARK_TARGET(0x8001D150,0x8001D160,ZZ_1D014_13C);
ZZ_MARK_TARGET(0x8001D160,0x8001D170,ZZ_1D014_14C);
ZZ_MARK_TARGET(0x8001D170,0x8001D178,ZZ_1D014_15C);
ZZ_MARK_TARGET(0x8001D178,0x8001D1A0,ZZ_1D014_164);
ZZ_MARK_TARGET(0x8001D1A0,0x8001D1B0,ZZ_1D014_18C);
ZZ_MARK_TARGET(0x8001D1B0,0x8001D268,ZZ_1D014_19C);
ZZ_MARK_TARGET(0x8001D268,0x8001D270,ZZ_1D014_254);
ZZ_MARK_TARGET(0x8001D270,0x8001D2BC,ZZ_1D014_25C);
ZZ_MARK_TARGET(0x8001D2BC,0x8001D2E4,ZZ_1D014_2A8);
ZZ_MARK_TARGET(0x8001D2E4,0x8001D340,ZZ_1D014_2D0);
ZZ_MARK_TARGET(0x8001D340,0x8001D344,ZZ_1D014_32C);
ZZ_MARK_TARGET(0x8001D344,0x8001D360,ZZ_1D014_330);
