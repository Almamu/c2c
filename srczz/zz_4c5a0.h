#ifdef ZZ_INCLUDE_CODE
ZZ_4C5A0:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	A0 = 0x80010000;
	A0 += 3980;
	EMU_Write32(SP + 24,RA); //+ 0x18
	RA = 0x8004C5C8; //ZZ_4C5A0_28
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8004C348);
	goto ZZ_4C348;
ZZ_4C5A0_28:
	A1 = S0;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8276); //+ 0xFFFFDFAC
	A2 = 8;
	A0 = EMU_ReadU32(V0 + 32); //+ 0x20
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004C5EC; //ZZ_4C5A0_4C
	A3 = S1;
	ZZ_CLOCKCYCLES_JR(9);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004C5E4)
	ZZ_JUMPREGISTER_END();
ZZ_4C5A0_4C:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800178D4,ZZ_17800_D4);
	ZZ_JUMPREGISTER(0x800179F4,ZZ_17800_1F4);
	ZZ_JUMPREGISTER(0x800178C0,ZZ_17800_C0);
	ZZ_JUMPREGISTER(0x800179E0,ZZ_17800_1E0);
	ZZ_JUMPREGISTER(0x80027294,ZZ_27168_12C);
	ZZ_JUMPREGISTER(0x800128B0,ZZ_126BC_1F4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004C5A0,ZZ_4C5A0);
ZZ_MARK(0x8004C5A4);
ZZ_MARK(0x8004C5A8);
ZZ_MARK(0x8004C5AC);
ZZ_MARK(0x8004C5B0);
ZZ_MARK(0x8004C5B4);
ZZ_MARK(0x8004C5B8);
ZZ_MARK(0x8004C5BC);
ZZ_MARK(0x8004C5C0);
ZZ_MARK(0x8004C5C4);
ZZ_MARK_TARGET(0x8004C5C8,ZZ_4C5A0_28);
ZZ_MARK(0x8004C5CC);
ZZ_MARK(0x8004C5D0);
ZZ_MARK(0x8004C5D4);
ZZ_MARK(0x8004C5D8);
ZZ_MARK(0x8004C5DC);
ZZ_MARK(0x8004C5E0);
ZZ_MARK(0x8004C5E4);
ZZ_MARK(0x8004C5E8);
ZZ_MARK_TARGET(0x8004C5EC,ZZ_4C5A0_4C);
ZZ_MARK(0x8004C5F0);
ZZ_MARK(0x8004C5F4);
ZZ_MARK(0x8004C5F8);
ZZ_MARK(0x8004C5FC);
ZZ_MARK(0x8004C600);
