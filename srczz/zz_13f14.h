#ifdef ZZ_INCLUDE_CODE
ZZ_13F14:
	SP -= 32;
	EMU_Write32(SP + 24,RA); //+ 0x18
	V0 = EMU_ReadS8(A0 + 15); //+ 0xF
	if ((int32_t)V0 <= 0)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(6,0x80013F70);
		goto ZZ_13F14_5C;
	}
	V1 = V0;
	V0 = V1 - 1;
	EMU_Write8(A0 + 15,V0); //+ 0xF
	V0 <<= 24;
	if ((int32_t)V0 > 0)
	{
		ZZ_CLOCKCYCLES(11,0x80013F70);
		goto ZZ_13F14_5C;
	}
	V0 = EMU_ReadS16(A0 + 6); //+ 0x6
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x80013F70);
		goto ZZ_13F14_5C;
	}
	RA = 0x80013F58; //ZZ_13F14_44
	ZZ_CLOCKCYCLES(17,0x8001402C);
	goto ZZ_1402C;
ZZ_13F14_44:
	V1 = 0x80070000;
	V1 -= 32184;
	V0 = EMU_ReadU32(V1);
	V0 -= 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(6,0x80013F70);
ZZ_13F14_5C:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80014214,ZZ_1417C_98);
	ZZ_JUMPREGISTER(0x80013FA4,ZZ_13F80_24);
	ZZ_JUMPREGISTER(0x80033B3C,ZZ_337BC_380);
	ZZ_JUMPREGISTER(0x80033CB8,ZZ_337BC_4FC);
	ZZ_JUMPREGISTER(0x800337A8,ZZ_33764_44);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013F14,0x80013F58,ZZ_13F14);
ZZ_MARK_TARGET(0x80013F58,0x80013F70,ZZ_13F14_44);
ZZ_MARK_TARGET(0x80013F70,0x80013F80,ZZ_13F14_5C);
