#ifdef ZZ_INCLUDE_CODE
ZZ_2ABE4:
	SP -= 296;
	T0 = A0;
	EMU_Write32(SP + 272,S4); //+ 0x110
	EMU_Write32(SP + 292,RA); //+ 0x124
	EMU_Write32(SP + 288,FP); //+ 0x120
	EMU_Write32(SP + 284,S7); //+ 0x11C
	EMU_Write32(SP + 280,S6); //+ 0x118
	EMU_Write32(SP + 276,S5); //+ 0x114
	EMU_Write32(SP + 268,S3); //+ 0x10C
	EMU_Write32(SP + 264,S2); //+ 0x108
	EMU_Write32(SP + 260,S1); //+ 0x104
	EMU_Write32(SP + 256,S0); //+ 0x100
	EMU_Write32(SP + 224,A2); //+ 0xE0
	EMU_Write32(SP + 232,A3); //+ 0xE8
	V0 = EMU_ReadU32(T0);
	T5 = EMU_ReadU32(SP + 312); //+ 0x138
	T6 = EMU_ReadU32(SP + 316); //+ 0x13C
	FP = EMU_ReadU32(SP + 320); //+ 0x140
	V1 = V0 & 0x7;
	if (!V1)
	{
		S4 = A1;
		ZZ_CLOCKCYCLES(21,0x8002AC4C);
		goto ZZ_2ABE4_68;
	}
	S4 = A1;
	V0 = 0x1;
	if (V1 == V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(24,0x8002ADC8);
		goto ZZ_2ABE4_1E4;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(26,0x8002B440);
	goto ZZ_2ABE4_85C;
ZZ_2ABE4_68:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 76); //+ 0x4C
	V0 &= 0x1;
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(10,0x8002AC80);
		goto ZZ_2ABE4_9C;
	}
	A0 = R0;
	V0 = EMU_ReadU32(T0 + 4); //+ 0x4
	A0 = EMU_ReadU32(V0 + 296); //+ 0x128
	ZZ_CLOCKCYCLES(13,0x8002AC80);
ZZ_2ABE4_9C:
	T7 = EMU_ReadU32(SP + 232); //+ 0xE8
	if (!T7)
	{
		ZZ_CLOCKCYCLES(4,0x8002ACC0);
		goto ZZ_2ABE4_DC;
	}
	V1 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(10,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	V1 = EMU_ReadU32(T0 + 12); //+ 0xC
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(16,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(16,0x8002ACC0);
ZZ_2ABE4_DC:
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		V1 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002AD04);
		goto ZZ_2ABE4_120;
	}
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x8002ACF0);
		goto ZZ_2ABE4_10C;
	}
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	V0 = (int32_t)V0 < (int32_t)T5;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(12,0x8002ACF0);
ZZ_2ABE4_10C:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AD40);
		goto ZZ_2ABE4_15C;
	}
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	V0 = (int32_t)T6 < (int32_t)V0;
	ZZ_CLOCKCYCLES(5,0x8002AD38);
	goto ZZ_2ABE4_154;
ZZ_2ABE4_120:
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(3,0x8002AD24);
		goto ZZ_2ABE4_140;
	}
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	V0 = (int32_t)T5 < (int32_t)V0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(8,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(8,0x8002AD24);
ZZ_2ABE4_140:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AD40);
		goto ZZ_2ABE4_15C;
	}
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	V0 = (int32_t)V0 < (int32_t)T6;
	ZZ_CLOCKCYCLES(5,0x8002AD38);
ZZ_2ABE4_154:
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(2,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(2,0x8002AD40);
ZZ_2ABE4_15C:
	V0 = EMU_ReadU32(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(T0 + 8); //+ 0x8
	V0 = V0 - A0;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(6,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4);
	V1 = EMU_ReadU32(T0 + 20); //+ 0x14
	V0 += A0;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 20); //+ 0x14
	V1 = EMU_ReadU32(T0 + 16); //+ 0x10
	V0 = V0 - A0;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(18,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(T0 + 28); //+ 0x1C
	V0 += A0;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(24,0x8002B43C);
		goto ZZ_2ABE4_858;
	}
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		ZZ_CLOCKCYCLES(28,0x8002ADBC);
		goto ZZ_2ABE4_1D8;
	}
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	ZZ_CLOCKCYCLES(31,0x8002B444);
	goto ZZ_2ABE4_860;
ZZ_2ABE4_1D8:
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	ZZ_CLOCKCYCLES(3,0x8002B444);
	goto ZZ_2ABE4_860;
ZZ_2ABE4_1E4:
	T7 = EMU_ReadU32(SP + 232); //+ 0xE8
	if (!T7)
	{
		ZZ_CLOCKCYCLES(4,0x8002AE08);
		goto ZZ_2ABE4_224;
	}
	V1 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = EMU_ReadU32(T0 + 60); //+ 0x3C
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(10,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	V1 = EMU_ReadU32(T0 + 48); //+ 0x30
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(16,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(16,0x8002AE08);
ZZ_2ABE4_224:
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		V1 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002AE4C);
		goto ZZ_2ABE4_268;
	}
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x8002AE38);
		goto ZZ_2ABE4_254;
	}
	V0 = EMU_ReadU32(T0 + 60); //+ 0x3C
	V0 = (int32_t)V0 < (int32_t)T5;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(12,0x8002AE38);
ZZ_2ABE4_254:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AE88);
		goto ZZ_2ABE4_2A4;
	}
	V0 = EMU_ReadU32(T0 + 48); //+ 0x30
	V0 = (int32_t)T6 < (int32_t)V0;
	ZZ_CLOCKCYCLES(5,0x8002AE80);
	goto ZZ_2ABE4_29C;
ZZ_2ABE4_268:
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(3,0x8002AE6C);
		goto ZZ_2ABE4_288;
	}
	V0 = EMU_ReadU32(T0 + 48); //+ 0x30
	V0 = (int32_t)T5 < (int32_t)V0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(8,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(8,0x8002AE6C);
ZZ_2ABE4_288:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AE88);
		goto ZZ_2ABE4_2A4;
	}
	V0 = EMU_ReadU32(T0 + 60); //+ 0x3C
	V0 = (int32_t)V0 < (int32_t)T6;
	ZZ_CLOCKCYCLES(5,0x8002AE80);
ZZ_2ABE4_29C:
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(2,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(2,0x8002AE88);
ZZ_2ABE4_2A4:
	V0 = EMU_ReadU32(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(T0 + 44); //+ 0x2C
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(6,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V1 = EMU_ReadU32(S4);
	V0 = EMU_ReadU32(T0 + 56); //+ 0x38
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 20); //+ 0x14
	V1 = EMU_ReadU32(T0 + 52); //+ 0x34
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(18,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V1 = EMU_ReadU32(S4 + 8); //+ 0x8
	V0 = EMU_ReadU32(T0 + 64); //+ 0x40
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(24,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(T0 + 8); //+ 0x8
	EMU_Write32(SP + 84,V0); //+ 0x54
	EMU_Write32(SP + 72,V0); //+ 0x48
	EMU_Write32(SP + 36,V0); //+ 0x24
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(T0 + 20); //+ 0x14
	EMU_Write32(SP + 108,V0); //+ 0x6C
	EMU_Write32(SP + 96,V0); //+ 0x60
	EMU_Write32(SP + 60,V0); //+ 0x3C
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	EMU_Write32(SP + 112,V0); //+ 0x70
	EMU_Write32(SP + 76,V0); //+ 0x4C
	EMU_Write32(SP + 64,V0); //+ 0x40
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	EMU_Write32(SP + 100,V0); //+ 0x64
	EMU_Write32(SP + 88,V0); //+ 0x58
	EMU_Write32(SP + 52,V0); //+ 0x34
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(T0 + 16); //+ 0x10
	A0 = SP + 24;
	EMU_Write32(SP + 68,V0); //+ 0x44
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 44,V0); //+ 0x2C
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(T0 + 28); //+ 0x1C
	A1 = A0;
	S2 = R0;
	S0 = 0x80060000;
	S0 -= 16816;
	EMU_Write32(SP + 116,V0); //+ 0x74
	EMU_Write32(SP + 104,V0); //+ 0x68
	EMU_Write32(SP + 92,V0); //+ 0x5C
	EMU_Write32(SP + 80,V0); //+ 0x50
	V1 = EMU_ReadU32(T0 + 4); //+ 0x4
	S3 = SP + 24;
	T7 = SP + 184;
	V0 = 0x8;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x4;
	EMU_Write32(SP + 240,T7); //+ 0xF0
	EMU_Write32(SP + 20,V0); //+ 0x14
	A2 = EMU_ReadU32(V1 + 8); //+ 0x8
	S7 = 0xC4650000;
	S7 |= 0x3601;
	A3 = T0 + 32;
	EMU_Write32(SP + 248,T5); //+ 0xF8
	RA = 0x8002AFC0; //ZZ_2ABE4_3DC
	EMU_Write32(SP + 252,T6); //+ 0xFC
	ZZ_CLOCKCYCLES(78,0x8003ED6C);
	goto ZZ_3ED6C;
ZZ_2ABE4_3DC:
	T6 = EMU_ReadU32(SP + 252); //+ 0xFC
	T5 = EMU_ReadU32(SP + 248); //+ 0xF8
	ZZ_CLOCKCYCLES(2,0x8002AFC8);
ZZ_2ABE4_3E4:
	V0 = EMU_ReadU32(S0);
	S0 += 4;
	A2 = V0 << 1;
	A2 += V0;
	A2 <<= 2;
	A2 += S3;
	EMU_Write32(SP + 120,A2); //+ 0x78
	V0 = EMU_ReadU32(S0);
	S0 += 4;
	A1 = V0 << 1;
	A1 += V0;
	A1 <<= 2;
	A1 += S3;
	EMU_Write32(SP + 124,A1); //+ 0x7C
	V0 = EMU_ReadU32(S0);
	S0 += 4;
	A0 = V0 << 1;
	A0 += V0;
	A0 <<= 2;
	A0 += S3;
	EMU_Write32(SP + 128,A0); //+ 0x80
	V1 = EMU_ReadU32(S0);
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += S3;
	EMU_Write32(SP + 132,V0); //+ 0x84
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	A3 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = EMU_ReadU32(A0);
	A2 = EMU_ReadU32(A2);
	V0 = V0 - A3;
	V0 = (int32_t)V0 >> 7;
	V1 = V1 - A2;
	T0 = (int32_t)V1 >> 7;
	EMU_SMultiply(V0,T0);
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = V0 - A2;
	T0 = (int32_t)V0 >> 7;
	T1 = LO;
	V1 = V1 - A3;
	V0 = (int32_t)V1 >> 7;
	EMU_SMultiply(T0,V0);
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	S0 += 4;
	V1 = LO;
	if (!T7)
	{
		T1 = T1 - V1;
		ZZ_CLOCKCYCLES(50,0x8002B0A0);
		goto ZZ_2ABE4_4BC;
	}
	T1 = T1 - V1;
	if ((int32_t)T1 >= 0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(52,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	T3 = R0;
	ZZ_CLOCKCYCLES(54,0x8002B0A8);
	goto ZZ_2ABE4_4C4;
ZZ_2ABE4_4BC:
	if ((int32_t)T1 <= 0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(2,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	T3 = R0;
	ZZ_CLOCKCYCLES(2,0x8002B0A8);
ZZ_2ABE4_4C4:
	T2 = SP + 184;
	A2 = EMU_ReadU32(SP + 120); //+ 0x78
	A3 = EMU_ReadU32(SP + 124); //+ 0x7C
	T0 = EMU_ReadU32(SP + 128); //+ 0x80
	T1 = EMU_ReadU32(SP + 132); //+ 0x84
	V1 = EMU_ReadU32(A2);
	V0 = EMU_ReadU32(A3);
	A0 = EMU_ReadU32(T0);
	A1 = EMU_ReadU32(T1);
	T4 = S3;
	V1 += V0;
	V1 += A0;
	V1 += A1;
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	A0 = EMU_ReadU32(A3 + 8); //+ 0x8
	A1 = EMU_ReadU32(T0 + 8); //+ 0x8
	A2 = EMU_ReadU32(T1 + 8); //+ 0x8
	S5 = (int32_t)V1 >> 2;
	V0 += A0;
	V0 += A1;
	V0 += A2;
	S6 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(22,0x8002B100);
ZZ_2ABE4_51C:
	A2 = EMU_ReadU32(T4 + 96); //+ 0x60
	V0 = EMU_ReadU32(A2);
	V0 = V0 - S5;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(T2,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	T4 += 4;
	T3 += 1;
	V0 = V0 - S6;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(T2 + 4,V0); //+ 0x4
	V0 = (int32_t)T3 < 4;
	if (V0)
	{
		T2 += 8;
		ZZ_CLOCKCYCLES(16,0x8002B100);
		goto ZZ_2ABE4_51C;
	}
	T2 += 8;
	V0 = EMU_ReadU32(S4);
	V1 = EMU_ReadU32(S4 + 12); //+ 0xC
	A1 = EMU_ReadU32(SP + 240); //+ 0xF0
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S5;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(SP + 216,V0); //+ 0xD8
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(S4 + 20); //+ 0x14
	A0 = SP + 216;
	EMU_Write32(SP + 248,T5); //+ 0xF8
	EMU_Write32(SP + 252,T6); //+ 0xFC
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S6;
	V0 = (int32_t)V0 >> 7;
	RA = 0x8002B18C; //ZZ_2ABE4_5A8
	EMU_Write32(SP + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(35,0x8003098C);
	goto ZZ_3098C;
ZZ_2ABE4_5A8:
	T5 = EMU_ReadU32(SP + 248); //+ 0xF8
	T6 = EMU_ReadU32(SP + 252); //+ 0xFC
	if (!V0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(4,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	T3 = R0;
	A2 = SP + 136;
	T2 = EMU_ReadU32(SP + 240); //+ 0xF0
	T0 = SP + 140;
	V0 = EMU_ReadU32(SP + 120); //+ 0x78
	V1 = EMU_ReadU32(SP + 124); //+ 0x7C
	A0 = EMU_ReadU32(SP + 128); //+ 0x80
	A1 = EMU_ReadU32(SP + 132); //+ 0x84
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V1 = EMU_ReadU32(V1 + 4); //+ 0x4
	A0 = EMU_ReadU32(A0 + 4); //+ 0x4
	A1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A3 = S3;
	V0 += V1;
	V0 += A0;
	V0 += A1;
	S1 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(20,0x8002B1DC);
ZZ_2ABE4_5F8:
	V0 = EMU_ReadU32(T2);
	EMU_Write32(A2,V0);
	V0 = EMU_ReadU32(T2 + 4); //+ 0x4
	EMU_Write32(T0 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(A3 + 96); //+ 0x60
	T3 += 1;
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	A2 += 12;
	T2 += 8;
	A3 += 4;
	V0 = V0 - S1;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(T0,V0);
	V0 = (int32_t)T3 < 4;
	if (V0)
	{
		T0 += 12;
		ZZ_CLOCKCYCLES(18,0x8002B1DC);
		goto ZZ_2ABE4_5F8;
	}
	T0 += 12;
	A0 = EMU_ReadU32(SP + 216); //+ 0xD8
	A1 = EMU_ReadU32(SP + 220); //+ 0xDC
	A2 = SP + 136;
	EMU_Write32(SP + 248,T5); //+ 0xF8
	RA = 0x8002B23C; //ZZ_2ABE4_658
	EMU_Write32(SP + 252,T6); //+ 0xFC
	ZZ_CLOCKCYCLES(24,0x800307A4);
	goto ZZ_307A4;
ZZ_2ABE4_658:
	T1 = V0;
	T5 = EMU_ReadU32(SP + 248); //+ 0xF8
	T6 = EMU_ReadU32(SP + 252); //+ 0xFC
	if (T1 == S7)
	{
		V0 = T1 << 7;
		ZZ_CLOCKCYCLES(5,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	V0 = T1 << 7;
	T7 = EMU_ReadU32(SP + 232); //+ 0xE8
	if (!T7)
	{
		T1 = V0 + S1;
		ZZ_CLOCKCYCLES(9,0x8002B288);
		goto ZZ_2ABE4_6A4;
	}
	T1 = V0 + S1;
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	V0 = (int32_t)V0 < (int32_t)T1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(14,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = (int32_t)T1 < (int32_t)V0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(19,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(19,0x8002B288);
ZZ_2ABE4_6A4:
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		ZZ_CLOCKCYCLES(4,0x8002B404);
		goto ZZ_2ABE4_820;
	}
	if (T5 == S7)
	{
		V0 = (int32_t)T1 < (int32_t)T5;
		ZZ_CLOCKCYCLES(6,0x8002B2A8);
		goto ZZ_2ABE4_6C4;
	}
	V0 = (int32_t)T1 < (int32_t)T5;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(8,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(8,0x8002B2A8);
ZZ_2ABE4_6C4:
	if (T6 == S7)
	{
		V0 = (int32_t)T6 < (int32_t)T1;
		ZZ_CLOCKCYCLES(2,0x8002B2B8);
		goto ZZ_2ABE4_6D4;
	}
	V0 = (int32_t)T6 < (int32_t)T1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(4,0x8002B2B8);
ZZ_2ABE4_6D4:
	if (!FP)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(2,0x8002B424);
		goto ZZ_2ABE4_840;
	}
	A3 = R0;
	V0 = EMU_ReadU32(SP + 120); //+ 0x78
	S2 = 0x1;
	A0 = S3 + 4;
	A1 = EMU_ReadU32(V0 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(6,0x8002B2D0);
ZZ_2ABE4_6EC:
	V0 = EMU_ReadU32(A0 + 96); //+ 0x60
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8002B2F4);
		goto ZZ_2ABE4_710;
	}
	A1 = V1;
	A3 = S2;
	ZZ_CLOCKCYCLES(9,0x8002B2F4);
ZZ_2ABE4_710:
	S2 += 1;
	V0 = (int32_t)S2 < 4;
	if (V0)
	{
		A0 += 4;
		ZZ_CLOCKCYCLES(4,0x8002B2D0);
		goto ZZ_2ABE4_6EC;
	}
	A0 += 4;
	V0 = A1 - S1;
	V1 = A3 << 2;
	V1 += S3;
	EMU_Write32(FP + 4,V0); //+ 0x4
	V0 = A3 + 1;
	V0 &= 0x3;
	V0 <<= 2;
	V0 += S3;
	T0 = EMU_ReadU32(V0 + 96); //+ 0x60
	A2 = EMU_ReadU32(V1 + 96); //+ 0x60
	V0 = A3 - 1;
	V0 &= 0x3;
	V1 = EMU_ReadU32(T0 + 4); //+ 0x4
	V0 <<= 2;
	V0 += S3;
	A0 = EMU_ReadU32(V0 + 96); //+ 0x60
	if (V1 != A1)
	{
		ZZ_CLOCKCYCLES(22,0x8002B39C);
		goto ZZ_2ABE4_7B8;
	}
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V0 != A1)
	{
		ZZ_CLOCKCYCLES(26,0x8002B368);
		goto ZZ_2ABE4_784;
	}
	EMU_Write32(FP,R0);
	EMU_Write32(FP + 8,R0); //+ 0x8
	ZZ_CLOCKCYCLES(29,0x8002B424);
	goto ZZ_2ABE4_840;
ZZ_2ABE4_784:
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(T0);
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S5;
	EMU_Write32(FP,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = EMU_ReadU32(T0 + 8); //+ 0x8
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(13,0x8002B3F4);
	goto ZZ_2ABE4_810;
ZZ_2ABE4_7B8:
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V0 != A1)
	{
		ZZ_CLOCKCYCLES(4,0x8002B3E0);
		goto ZZ_2ABE4_7FC;
	}
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(A0);
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S5;
	EMU_Write32(FP,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(17,0x8002B3F4);
	goto ZZ_2ABE4_810;
ZZ_2ABE4_7FC:
	V0 = EMU_ReadU32(A2);
	V0 = V0 - S5;
	EMU_Write32(FP,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	ZZ_CLOCKCYCLES(5,0x8002B3F4);
ZZ_2ABE4_810:
	V0 = V0 - S6;
	EMU_Write32(FP + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(4,0x8002B424);
	goto ZZ_2ABE4_840;
ZZ_2ABE4_820:
	if (T5 == S7)
	{
		V0 = (int32_t)T5 < (int32_t)T1;
		ZZ_CLOCKCYCLES(2,0x8002B414);
		goto ZZ_2ABE4_830;
	}
	V0 = (int32_t)T5 < (int32_t)T1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(4,0x8002B414);
ZZ_2ABE4_830:
	if (T6 == S7)
	{
		V0 = (int32_t)T1 < (int32_t)T6;
		ZZ_CLOCKCYCLES(2,0x8002B424);
		goto ZZ_2ABE4_840;
	}
	V0 = (int32_t)T1 < (int32_t)T6;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(4,0x8002B424);
ZZ_2ABE4_840:
	V0 = T1;
	ZZ_CLOCKCYCLES(2,0x8002B444);
	goto ZZ_2ABE4_860;
ZZ_2ABE4_848:
	S2 += 1;
	V0 = (int32_t)S2 < 6;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002AFC8);
		goto ZZ_2ABE4_3E4;
	}
	ZZ_CLOCKCYCLES(4,0x8002B43C);
ZZ_2ABE4_858:
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(1,0x8002B440);
ZZ_2ABE4_85C:
	V0 |= 0x3601;
	ZZ_CLOCKCYCLES(1,0x8002B444);
ZZ_2ABE4_860:
	RA = EMU_ReadU32(SP + 292); //+ 0x124
	FP = EMU_ReadU32(SP + 288); //+ 0x120
	S7 = EMU_ReadU32(SP + 284); //+ 0x11C
	S6 = EMU_ReadU32(SP + 280); //+ 0x118
	S5 = EMU_ReadU32(SP + 276); //+ 0x114
	S4 = EMU_ReadU32(SP + 272); //+ 0x110
	S3 = EMU_ReadU32(SP + 268); //+ 0x10C
	S2 = EMU_ReadU32(SP + 264); //+ 0x108
	S1 = EMU_ReadU32(SP + 260); //+ 0x104
	S0 = EMU_ReadU32(SP + 256); //+ 0x100
	SP += 296;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80028E30,ZZ_28C9C_194);
	ZZ_JUMPREGISTER(0x8002BC7C,ZZ_2B890_3EC);
	ZZ_JUMPREGISTER(0x8002AA10,ZZ_2A868_1A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002ABE4,0x8002AC4C,ZZ_2ABE4);
ZZ_MARK_TARGET(0x8002AC4C,0x8002AC80,ZZ_2ABE4_68);
ZZ_MARK_TARGET(0x8002AC80,0x8002ACC0,ZZ_2ABE4_9C);
ZZ_MARK_TARGET(0x8002ACC0,0x8002ACF0,ZZ_2ABE4_DC);
ZZ_MARK_TARGET(0x8002ACF0,0x8002AD04,ZZ_2ABE4_10C);
ZZ_MARK_TARGET(0x8002AD04,0x8002AD24,ZZ_2ABE4_120);
ZZ_MARK_TARGET(0x8002AD24,0x8002AD38,ZZ_2ABE4_140);
ZZ_MARK_TARGET(0x8002AD38,0x8002AD40,ZZ_2ABE4_154);
ZZ_MARK_TARGET(0x8002AD40,0x8002ADBC,ZZ_2ABE4_15C);
ZZ_MARK_TARGET(0x8002ADBC,0x8002ADC8,ZZ_2ABE4_1D8);
ZZ_MARK_TARGET(0x8002ADC8,0x8002AE08,ZZ_2ABE4_1E4);
ZZ_MARK_TARGET(0x8002AE08,0x8002AE38,ZZ_2ABE4_224);
ZZ_MARK_TARGET(0x8002AE38,0x8002AE4C,ZZ_2ABE4_254);
ZZ_MARK_TARGET(0x8002AE4C,0x8002AE6C,ZZ_2ABE4_268);
ZZ_MARK_TARGET(0x8002AE6C,0x8002AE80,ZZ_2ABE4_288);
ZZ_MARK_TARGET(0x8002AE80,0x8002AE88,ZZ_2ABE4_29C);
ZZ_MARK_TARGET(0x8002AE88,0x8002AFC0,ZZ_2ABE4_2A4);
ZZ_MARK_TARGET(0x8002AFC0,0x8002AFC8,ZZ_2ABE4_3DC);
ZZ_MARK_TARGET(0x8002AFC8,0x8002B0A0,ZZ_2ABE4_3E4);
ZZ_MARK_TARGET(0x8002B0A0,0x8002B0A8,ZZ_2ABE4_4BC);
ZZ_MARK_TARGET(0x8002B0A8,0x8002B100,ZZ_2ABE4_4C4);
ZZ_MARK_TARGET(0x8002B100,0x8002B18C,ZZ_2ABE4_51C);
ZZ_MARK_TARGET(0x8002B18C,0x8002B1DC,ZZ_2ABE4_5A8);
ZZ_MARK_TARGET(0x8002B1DC,0x8002B23C,ZZ_2ABE4_5F8);
ZZ_MARK_TARGET(0x8002B23C,0x8002B288,ZZ_2ABE4_658);
ZZ_MARK_TARGET(0x8002B288,0x8002B2A8,ZZ_2ABE4_6A4);
ZZ_MARK_TARGET(0x8002B2A8,0x8002B2B8,ZZ_2ABE4_6C4);
ZZ_MARK_TARGET(0x8002B2B8,0x8002B2D0,ZZ_2ABE4_6D4);
ZZ_MARK_TARGET(0x8002B2D0,0x8002B2F4,ZZ_2ABE4_6EC);
ZZ_MARK_TARGET(0x8002B2F4,0x8002B368,ZZ_2ABE4_710);
ZZ_MARK_TARGET(0x8002B368,0x8002B39C,ZZ_2ABE4_784);
ZZ_MARK_TARGET(0x8002B39C,0x8002B3E0,ZZ_2ABE4_7B8);
ZZ_MARK_TARGET(0x8002B3E0,0x8002B3F4,ZZ_2ABE4_7FC);
ZZ_MARK_TARGET(0x8002B3F4,0x8002B404,ZZ_2ABE4_810);
ZZ_MARK_TARGET(0x8002B404,0x8002B414,ZZ_2ABE4_820);
ZZ_MARK_TARGET(0x8002B414,0x8002B424,ZZ_2ABE4_830);
ZZ_MARK_TARGET(0x8002B424,0x8002B42C,ZZ_2ABE4_840);
ZZ_MARK_TARGET(0x8002B42C,0x8002B43C,ZZ_2ABE4_848);
ZZ_MARK_TARGET(0x8002B43C,0x8002B440,ZZ_2ABE4_858);
ZZ_MARK_TARGET(0x8002B440,0x8002B444,ZZ_2ABE4_85C);
ZZ_MARK_TARGET(0x8002B444,0x8002B478,ZZ_2ABE4_860);
