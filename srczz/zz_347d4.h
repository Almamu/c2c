#ifdef ZZ_INCLUDE_CODE
ZZ_347D4:
	SP -= 40;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	A3 = A2;
	EMU_Write32(SP + 32,RA); //+ 0x20
	if (!S0)
	{
		EMU_Write32(SP + 28,S1); //+ 0x1C
		ZZ_CLOCKCYCLES(7,0x800348D4);
		goto ZZ_347D4_100;
	}
	EMU_Write32(SP + 28,S1); //+ 0x1C
	V0 = A1 < 5;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x800348D4);
		goto ZZ_347D4_100;
	}
	V0 = A1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1640); //+ 0x668
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(17);
	ZZ_JUMPREGISTER(0x80034818,ZZ_347D4_44);
	ZZ_JUMPREGISTER(0x80034840,ZZ_347D4_6C);
	ZZ_JUMPREGISTER(0x8003485C,ZZ_347D4_88);
	ZZ_JUMPREGISTER(0x80034874,ZZ_347D4_A0);
	ZZ_JUMPREGISTER(0x80034890,ZZ_347D4_BC);
	ZZ_JUMPREGISTER_END();
ZZ_347D4_44:
	A0 = EMU_ReadS16(GP + 616); //+ 0x268
	A1 = EMU_ReadS16(S0);
	A2 = 0x1;
	A3 <<= 16;
	A3 = (int32_t)A3 >> 16;
	V0 = 0x1;
	RA = 0x80034838; //ZZ_347D4_64
	EMU_Write32(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(8,0x80054BD0);
	goto ZZ_54BD0;
ZZ_347D4_64:
	ZZ_CLOCKCYCLES(2,0x800348D4);
	goto ZZ_347D4_100;
ZZ_347D4_6C:
	A0 = EMU_ReadS16(GP + 616); //+ 0x268
	A1 = EMU_ReadS16(S0);
	V0 = 0x2;
	RA = 0x80034854; //ZZ_347D4_80
	EMU_Write32(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(5,0x8005659C);
	goto ZZ_5659C;
ZZ_347D4_80:
	ZZ_CLOCKCYCLES(2,0x800348D4);
	goto ZZ_347D4_100;
ZZ_347D4_88:
	A0 = EMU_ReadS16(GP + 616); //+ 0x268
	A1 = EMU_ReadS16(S0);
	RA = 0x8003486C; //ZZ_347D4_98
	EMU_Write32(S0 + 4,R0); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x80054B6C);
	goto ZZ_54B6C;
ZZ_347D4_98:
	ZZ_CLOCKCYCLES(2,0x800348D4);
	goto ZZ_347D4_100;
ZZ_347D4_A0:
	A0 = EMU_ReadS16(GP + 616); //+ 0x268
	A1 = EMU_ReadS16(S0);
	V0 = 0x1;
	RA = 0x80034888; //ZZ_347D4_B4
	EMU_Write32(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(5,0x80054CCC);
	goto ZZ_54CCC;
ZZ_347D4_B4:
	ZZ_CLOCKCYCLES(2,0x800348D4);
	goto ZZ_347D4_100;
ZZ_347D4_BC:
	V1 = EMU_ReadS16(GP + 380); //+ 0x17C
	S1 = R0;
	V0 = (int32_t)A3 >> 16;
	EMU_Write16(S0 + 16,V0); //+ 0x10
	if ((int32_t)V1 <= 0)
	{
		EMU_Write16(S0 + 18,A3); //+ 0x12
		ZZ_CLOCKCYCLES(6,0x800348D4);
		goto ZZ_347D4_100;
	}
	EMU_Write16(S0 + 18,A3); //+ 0x12
	ZZ_CLOCKCYCLES(6,0x800348A8);
ZZ_347D4_D4:
	A0 = EMU_ReadS16(GP + 616); //+ 0x268
	A1 = EMU_ReadS16(S0);
	A2 = EMU_ReadS16(S0 + 16); //+ 0x10
	A3 = EMU_ReadS16(S0 + 18); //+ 0x12
	RA = 0x800348C0; //ZZ_347D4_EC
	S1 += 1;
	ZZ_CLOCKCYCLES(6,0x800569F8);
	goto ZZ_569F8;
ZZ_347D4_EC:
	V0 = EMU_ReadS16(GP + 380); //+ 0x17C
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x800348A8);
		goto ZZ_347D4_D4;
	}
	ZZ_CLOCKCYCLES(5,0x800348D4);
ZZ_347D4_100:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003415C,ZZ_34104_58);
	ZZ_JUMPREGISTER(0x8003416C,ZZ_34104_68);
	ZZ_JUMPREGISTER(0x800341C8,ZZ_34104_C4);
	ZZ_JUMPREGISTER(0x800341D8,ZZ_34104_D4);
	ZZ_JUMPREGISTER(0x80033948,ZZ_337BC_18C);
	ZZ_JUMPREGISTER(0x800339A0,ZZ_337BC_1E4);
	ZZ_JUMPREGISTER(0x8003452C,ZZ_34204_328);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800347D4,0x80034818,ZZ_347D4);
ZZ_MARK_TARGET(0x80034818,0x80034838,ZZ_347D4_44);
ZZ_MARK_TARGET(0x80034838,0x80034840,ZZ_347D4_64);
ZZ_MARK_TARGET(0x80034840,0x80034854,ZZ_347D4_6C);
ZZ_MARK_TARGET(0x80034854,0x8003485C,ZZ_347D4_80);
ZZ_MARK_TARGET(0x8003485C,0x8003486C,ZZ_347D4_88);
ZZ_MARK_TARGET(0x8003486C,0x80034874,ZZ_347D4_98);
ZZ_MARK_TARGET(0x80034874,0x80034888,ZZ_347D4_A0);
ZZ_MARK_TARGET(0x80034888,0x80034890,ZZ_347D4_B4);
ZZ_MARK_TARGET(0x80034890,0x800348A8,ZZ_347D4_BC);
ZZ_MARK_TARGET(0x800348A8,0x800348C0,ZZ_347D4_D4);
ZZ_MARK_TARGET(0x800348C0,0x800348D4,ZZ_347D4_EC);
ZZ_MARK_TARGET(0x800348D4,0x800348EC,ZZ_347D4_100);
