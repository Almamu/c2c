#ifdef ZZ_INCLUDE_CODE
ZZ_38FA0:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	A0 = S1 & 0xFFF;
	A1 = A0;
	V1 = S1 & 0xE00;
	V0 = 0xE00;
	if (V1 != V0)
	{
		EMU_Write32(SP + 24,RA); //+ 0x18
		ZZ_CLOCKCYCLES(11,0x80039000);
		goto ZZ_38FA0_60;
	}
	EMU_Write32(SP + 24,RA); //+ 0x18
	V0 = 0xE1F;
	if (A0 != V0)
	{
		V0 = S1 & 0x1FF;
		ZZ_CLOCKCYCLES(14,0x80038FF0);
		goto ZZ_38FA0_50;
	}
	V0 = S1 & 0x1FF;
	V0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 -= 4;
	A2 = V0;
	EMU_Write32(S0 + 188,A2); //+ 0xBC
	ZZ_CLOCKCYCLES(20,0x8003900C);
	goto ZZ_38FA0_6C;
ZZ_38FA0_50:
	V0 <<= 2;
	V0 += 64;
	A2 = S0 + V0;
	ZZ_CLOCKCYCLES(4,0x8003900C);
	goto ZZ_38FA0_6C;
ZZ_38FA0_60:
	RA = 0x80039008; //ZZ_38FA0_68
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80036FA4);
	goto ZZ_36FA4;
ZZ_38FA0_68:
	A2 = V0;
	ZZ_CLOCKCYCLES(1,0x8003900C);
ZZ_38FA0_6C:
	V0 = S1 >> 20;
	A1 = V0 & 0xF;
	V0 = S1 >> 12;
	V1 = V0 & 0x3F;
	if (V1)
	{
		V0 = 0x1F;
		ZZ_CLOCKCYCLES(6,0x8003902C);
		goto ZZ_38FA0_8C;
	}
	V0 = 0x1F;
	A0 = R0;
	ZZ_CLOCKCYCLES(8,0x80039054);
	goto ZZ_38FA0_B4;
ZZ_38FA0_8C:
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(2,0x80039048);
		goto ZZ_38FA0_A8;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 -= 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(7,0x80039050);
	goto ZZ_38FA0_B0;
ZZ_38FA0_A8:
	V0 += 64;
	V0 += S0;
	ZZ_CLOCKCYCLES(2,0x80039050);
ZZ_38FA0_B0:
	A0 = EMU_ReadU32(V0);
	ZZ_CLOCKCYCLES(1,0x80039054);
ZZ_38FA0_B4:
	V0 = 0xF;
	if (A1 != V0)
	{
		V0 = 0x40000;
		ZZ_CLOCKCYCLES(3,0x80039064);
		goto ZZ_38FA0_C4;
	}
	V0 = 0x40000;
	A1 = 0x80000000;
	ZZ_CLOCKCYCLES(4,0x80039064);
ZZ_38FA0_C4:
	V0 &= S1;
	if (!V0)
	{
		V0 = 0x40000000;
		ZZ_CLOCKCYCLES(3,0x80039074);
		goto ZZ_38FA0_D4;
	}
	V0 = 0x40000000;
	A1 |= V0;
	ZZ_CLOCKCYCLES(4,0x80039074);
ZZ_38FA0_D4:
	V0 = 0x80000;
	V0 &= S1;
	if (!V0)
	{
		V0 = 0x20000000;
		ZZ_CLOCKCYCLES(4,0x80039088);
		goto ZZ_38FA0_E8;
	}
	V0 = 0x20000000;
	A1 |= V0;
	ZZ_CLOCKCYCLES(5,0x80039088);
ZZ_38FA0_E8:
	RA = 0x80039090; //ZZ_38FA0_F0
	A3 = S0;
	ZZ_CLOCKCYCLES(2,0x8003322C);
	goto ZZ_3322C;
ZZ_38FA0_F0:
	EMU_Write32(S0 + 212,V0); //+ 0xD4
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x8003A26C,ZZ_3A234_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80038FA0,ZZ_38FA0);
ZZ_MARK(0x80038FA4);
ZZ_MARK(0x80038FA8);
ZZ_MARK(0x80038FAC);
ZZ_MARK(0x80038FB0);
ZZ_MARK(0x80038FB4);
ZZ_MARK(0x80038FB8);
ZZ_MARK(0x80038FBC);
ZZ_MARK(0x80038FC0);
ZZ_MARK(0x80038FC4);
ZZ_MARK(0x80038FC8);
ZZ_MARK(0x80038FCC);
ZZ_MARK(0x80038FD0);
ZZ_MARK(0x80038FD4);
ZZ_MARK(0x80038FD8);
ZZ_MARK(0x80038FDC);
ZZ_MARK(0x80038FE0);
ZZ_MARK(0x80038FE4);
ZZ_MARK(0x80038FE8);
ZZ_MARK(0x80038FEC);
ZZ_MARK_TARGET(0x80038FF0,ZZ_38FA0_50);
ZZ_MARK(0x80038FF4);
ZZ_MARK(0x80038FF8);
ZZ_MARK(0x80038FFC);
ZZ_MARK_TARGET(0x80039000,ZZ_38FA0_60);
ZZ_MARK(0x80039004);
ZZ_MARK_TARGET(0x80039008,ZZ_38FA0_68);
ZZ_MARK_TARGET(0x8003900C,ZZ_38FA0_6C);
ZZ_MARK(0x80039010);
ZZ_MARK(0x80039014);
ZZ_MARK(0x80039018);
ZZ_MARK(0x8003901C);
ZZ_MARK(0x80039020);
ZZ_MARK(0x80039024);
ZZ_MARK(0x80039028);
ZZ_MARK_TARGET(0x8003902C,ZZ_38FA0_8C);
ZZ_MARK(0x80039030);
ZZ_MARK(0x80039034);
ZZ_MARK(0x80039038);
ZZ_MARK(0x8003903C);
ZZ_MARK(0x80039040);
ZZ_MARK(0x80039044);
ZZ_MARK_TARGET(0x80039048,ZZ_38FA0_A8);
ZZ_MARK(0x8003904C);
ZZ_MARK_TARGET(0x80039050,ZZ_38FA0_B0);
ZZ_MARK_TARGET(0x80039054,ZZ_38FA0_B4);
ZZ_MARK(0x80039058);
ZZ_MARK(0x8003905C);
ZZ_MARK(0x80039060);
ZZ_MARK_TARGET(0x80039064,ZZ_38FA0_C4);
ZZ_MARK(0x80039068);
ZZ_MARK(0x8003906C);
ZZ_MARK(0x80039070);
ZZ_MARK_TARGET(0x80039074,ZZ_38FA0_D4);
ZZ_MARK(0x80039078);
ZZ_MARK(0x8003907C);
ZZ_MARK(0x80039080);
ZZ_MARK(0x80039084);
ZZ_MARK_TARGET(0x80039088,ZZ_38FA0_E8);
ZZ_MARK(0x8003908C);
ZZ_MARK_TARGET(0x80039090,ZZ_38FA0_F0);
ZZ_MARK(0x80039094);
ZZ_MARK(0x80039098);
ZZ_MARK(0x8003909C);
ZZ_MARK(0x800390A0);
ZZ_MARK(0x800390A4);
ZZ_MARK(0x800390A8);
