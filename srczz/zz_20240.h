#ifdef ZZ_INCLUDE_CODE
ZZ_20240:
	V1 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V1 + 636); //+ 0x27C
	V0 &= 0x1;
	if (V0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(7,0x80020288);
		goto ZZ_20240_48;
	}
	V0 = 0x10000;
	V0 |= 0x9000;
	AT = 0x80070000;
	EMU_Write32(AT - 12152,R0); //+ 0xFFFFD088
	AT = 0x80070000;
	EMU_Write32(AT - 12144,R0); //+ 0xFFFFD090
	AT = 0x80070000;
	EMU_Write32(AT - 12148,V0); //+ 0xFFFFD08C
	V0 = EMU_ReadU32(V1 + 636); //+ 0x27C
	V0 |= 0x1;
	EMU_Write32(V1 + 636,V0); //+ 0x27C
	ZZ_CLOCKCYCLES(18,0x80020288);
ZZ_20240_48:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80020160,ZZ_20024_13C);
	ZZ_JUMPREGISTER(0x800208F8,ZZ_20304_5F4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80020240,ZZ_20240);
ZZ_MARK(0x80020244);
ZZ_MARK(0x80020248);
ZZ_MARK(0x8002024C);
ZZ_MARK(0x80020250);
ZZ_MARK(0x80020254);
ZZ_MARK(0x80020258);
ZZ_MARK(0x8002025C);
ZZ_MARK(0x80020260);
ZZ_MARK(0x80020264);
ZZ_MARK(0x80020268);
ZZ_MARK(0x8002026C);
ZZ_MARK(0x80020270);
ZZ_MARK(0x80020274);
ZZ_MARK(0x80020278);
ZZ_MARK(0x8002027C);
ZZ_MARK(0x80020280);
ZZ_MARK(0x80020284);
ZZ_MARK_TARGET(0x80020288,ZZ_20240_48);
ZZ_MARK(0x8002028C);
