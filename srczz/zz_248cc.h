#ifdef ZZ_INCLUDE_CODE
ZZ_248CC:
	SP -= 240;
	T0 = EMU_ReadU32(SP + 260); //+ 0x104
	EMU_Write32(SP + 208,S2); //+ 0xD0
	S2 = EMU_ReadU32(SP + 256); //+ 0x100
	EMU_Write32(SP + 160,A0); //+ 0xA0
	V0 = T0 << 4;
	EMU_Write32(SP + 192,T0); //+ 0xC0
	T0 = EMU_ReadU32(SP + 160); //+ 0xA0
	EMU_Write32(SP + 232,FP); //+ 0xE8
	FP = A1;
	EMU_Write32(SP + 200,S0); //+ 0xC8
	S0 = 0x2;
	EMU_Write32(SP + 236,RA); //+ 0xEC
	EMU_Write32(SP + 228,S7); //+ 0xE4
	EMU_Write32(SP + 224,S6); //+ 0xE0
	EMU_Write32(SP + 220,S5); //+ 0xDC
	EMU_Write32(SP + 216,S4); //+ 0xD8
	EMU_Write32(SP + 212,S3); //+ 0xD4
	EMU_Write32(SP + 204,S1); //+ 0xCC
	EMU_Write32(SP + 168,A2); //+ 0xA8
	EMU_Write32(SP + 176,A3); //+ 0xB0
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	V0 -= 16;
	S1 = T0 + V0;
	A0 = EMU_ReadU32(S1 + 4); //+ 0x4
	A1 = 0x29;
	A2 = R0;
	RA = 0x80024948; //ZZ_248CC_7C
	A3 = R0;
	ZZ_CLOCKCYCLES(31,0x800324E0);
	goto ZZ_324E0;
ZZ_248CC_7C:
	RA = 0x80024950; //ZZ_248CC_84
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x8002456C);
	goto ZZ_2456C;
ZZ_248CC_84:
	S3 = EMU_ReadU32(SP + 192); //+ 0xC0
	if (V0 == S0)
	{
		EMU_Write32(SP + 184,V0); //+ 0xB8
		ZZ_CLOCKCYCLES(3,0x80024974);
		goto ZZ_248CC_A8;
	}
	EMU_Write32(SP + 184,V0); //+ 0xB8
	RA = 0x80024964; //ZZ_248CC_98
	A0 = S2;
	ZZ_CLOCKCYCLES(5,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_248CC_98:
	S7 = V0;
	RA = 0x80024970; //ZZ_248CC_A4
	A0 = S2;
	ZZ_CLOCKCYCLES(3,0x8003D584);
	goto ZZ_3D584;
ZZ_248CC_A4:
	S6 = V0;
	ZZ_CLOCKCYCLES(1,0x80024974);
ZZ_248CC_A8:
	T0 = EMU_ReadU32(SP + 192); //+ 0xC0
	V0 = 0x1;
	if (T0 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x800249EC);
		goto ZZ_248CC_120;
	}
	T0 = EMU_ReadU32(SP + 176); //+ 0xB0
	if (!T0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(8,0x800249C0);
		goto ZZ_248CC_F4;
	}
	A0 = S1;
	A2 = EMU_ReadU32(SP + 168); //+ 0xA8
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	A1 = FP;
	A3 = S7;
	V0 = SP + 144;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	RA = 0x800249B8; //ZZ_248CC_EC
	EMU_Write32(SP + 20,T0); //+ 0x14
	ZZ_CLOCKCYCLES(17,0x80025624);
	goto ZZ_25624;
ZZ_248CC_EC:
	A1 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80024A50);
	goto ZZ_248CC_184;
ZZ_248CC_F4:
	A2 = EMU_ReadU32(SP + 168); //+ 0xA8
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	A1 = FP;
	A3 = S7;
	V0 = SP + 144;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	RA = 0x800249E4; //ZZ_248CC_118
	EMU_Write32(SP + 20,T0); //+ 0x14
	ZZ_CLOCKCYCLES(9,0x80024CBC);
	goto ZZ_24CBC;
ZZ_248CC_118:
	A1 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80024A50);
	goto ZZ_248CC_184;
ZZ_248CC_120:
	T0 = EMU_ReadU32(SP + 176); //+ 0xB0
	if (!T0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x80024A28);
		goto ZZ_248CC_15C;
	}
	A0 = S1;
	A2 = EMU_ReadU32(SP + 168); //+ 0xA8
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	A1 = FP;
	A3 = S7;
	V0 = SP + 144;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	RA = 0x80024A20; //ZZ_248CC_154
	EMU_Write32(SP + 20,T0); //+ 0x14
	ZZ_CLOCKCYCLES(13,0x80025748);
	goto ZZ_25748;
ZZ_248CC_154:
	A1 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80024A50);
	goto ZZ_248CC_184;
ZZ_248CC_15C:
	A2 = EMU_ReadU32(SP + 168); //+ 0xA8
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	A1 = FP;
	A3 = S7;
	V0 = SP + 144;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	RA = 0x80024A4C; //ZZ_248CC_180
	EMU_Write32(SP + 20,T0); //+ 0x14
	ZZ_CLOCKCYCLES(9,0x80024DE0);
	goto ZZ_24DE0;
ZZ_248CC_180:
	A1 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80024A50);
ZZ_248CC_184:
	if (S3 != A1)
	{
		S2 = V0;
		ZZ_CLOCKCYCLES(2,0x80024A88);
		goto ZZ_248CC_1BC;
	}
	S2 = V0;
	T0 = EMU_ReadU32(SP + 160); //+ 0xA0
	V0 = EMU_ReadU32(T0);
	V1 = EMU_ReadU32(T0 + 4); //+ 0x4
	A0 = EMU_ReadU32(T0 + 12); //+ 0xC
	T0 = 0x2;
	EMU_Write32(SP + 192,T0); //+ 0xC0
	T0 = EMU_ReadU32(SP + 160); //+ 0xA0
	S1 += 16;
	EMU_Write32(T0 + 16,V0); //+ 0x10
	EMU_Write32(T0 + 20,V1); //+ 0x14
	EMU_Write32(T0 + 28,A0); //+ 0x1C
	ZZ_CLOCKCYCLES(14,0x80024A88);
ZZ_248CC_1BC:
	V0 = EMU_ReadU32(SP + 144); //+ 0x90
	if (!S2)
	{
		EMU_Write32(S1 + 8,V0); //+ 0x8
		ZZ_CLOCKCYCLES(3,0x80024C84);
		goto ZZ_248CC_3B8;
	}
	EMU_Write32(S1 + 8,V0); //+ 0x8
	if (S3 == A1)
	{
		ZZ_CLOCKCYCLES(5,0x80024AD0);
		goto ZZ_248CC_204;
	}
	ZZ_CLOCKCYCLES(7,0x80024C84);
	goto ZZ_248CC_3B8;
ZZ_248CC_1D8:
	T0 = EMU_ReadU32(SP + 160); //+ 0xA0
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU32(S1 + 4); //+ 0x4
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	A1 = EMU_ReadU32(S1 + 12); //+ 0xC
	EMU_Write32(T0 + 16,V0); //+ 0x10
	EMU_Write32(T0 + 20,V1); //+ 0x14
	EMU_Write32(T0 + 24,A0); //+ 0x18
	EMU_Write32(T0 + 28,A1); //+ 0x1C
	ZZ_CLOCKCYCLES(11,0x80024C84);
	goto ZZ_248CC_3B8;
ZZ_248CC_204:
	A1 = EMU_ReadU32(SP + 160); //+ 0xA0
	RA = 0x80024ADC; //ZZ_248CC_210
	A0 = SP + 32;
	ZZ_CLOCKCYCLES(3,0x80026A38);
	goto ZZ_26A38;
ZZ_248CC_210:
	S4 = V0;
	S1 = SP + 32;
	if (!V0)
	{
		S4 -= 1;
		ZZ_CLOCKCYCLES(4,0x80024C84);
		goto ZZ_248CC_3B8;
	}
	S4 -= 1;
	S5 = SP + 144;
	S3 = SP + 40;
	ZZ_CLOCKCYCLES(6,0x80024AF4);
ZZ_248CC_228:
	T0 = 0x2;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,T0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	A0 = EMU_ReadU32(S3 - 4); //+ 0xFFFFFFFC
	A1 = 0x29;
	A2 = R0;
	RA = 0x80024B18; //ZZ_248CC_24C
	A3 = R0;
	ZZ_CLOCKCYCLES(9,0x800324E0);
	goto ZZ_324E0;
ZZ_248CC_24C:
	RA = 0x80024B20; //ZZ_248CC_254
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x8002456C);
	goto ZZ_2456C;
ZZ_248CC_254:
	T0 = EMU_ReadU32(SP + 184); //+ 0xB8
	S0 = V0;
	if (T0 != S0)
	{
		ZZ_CLOCKCYCLES(4,0x80024B80);
		goto ZZ_248CC_2B4;
	}
	T0 = EMU_ReadU32(SP + 176); //+ 0xB0
	if (!T0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(8,0x80024B64);
		goto ZZ_248CC_298;
	}
	A0 = S1;
	A2 = EMU_ReadU32(SP + 168); //+ 0xA8
	A1 = FP;
	A3 = S7;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80024B5C; //ZZ_248CC_290
	EMU_Write32(SP + 24,S5); //+ 0x18
	ZZ_CLOCKCYCLES(15,0x80025748);
	goto ZZ_25748;
ZZ_248CC_290:
	ZZ_CLOCKCYCLES(2,0x80024C24);
	goto ZZ_248CC_358;
ZZ_248CC_298:
	A2 = EMU_ReadU32(SP + 168); //+ 0xA8
	A1 = FP;
	A3 = S7;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 24,S5); //+ 0x18
	ZZ_CLOCKCYCLES(7,0x80024C1C);
	goto ZZ_248CC_350;
ZZ_248CC_2B4:
	if (!S0)
	{
		V0 = SP + 156;
		ZZ_CLOCKCYCLES(2,0x80024C70);
		goto ZZ_248CC_3A4;
	}
	V0 = SP + 156;
	A0 = S1;
	A1 = FP;
	A2 = SP + 148;
	A3 = SP + 152;
	RA = 0x80024BA0; //ZZ_248CC_2D4
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(8,0x800245B0);
	goto ZZ_245B0;
ZZ_248CC_2D4:
	if (!V0)
	{
		EMU_Write32(SP + 176,V0); //+ 0xB0
		ZZ_CLOCKCYCLES(2,0x80024AA4);
		goto ZZ_248CC_1D8;
	}
	EMU_Write32(SP + 176,V0); //+ 0xB0
	T0 = 0x2;
	if (S0 == T0)
	{
		ZZ_CLOCKCYCLES(5,0x80024BD0);
		goto ZZ_248CC_304;
	}
	A0 = EMU_ReadU32(SP + 156); //+ 0x9C
	RA = 0x80024BC0; //ZZ_248CC_2F4
	ZZ_CLOCKCYCLES(8,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_248CC_2F4:
	A0 = EMU_ReadU32(SP + 156); //+ 0x9C
	RA = 0x80024BCC; //ZZ_248CC_300
	S7 = V0;
	ZZ_CLOCKCYCLES(3,0x8003D584);
	goto ZZ_3D584;
ZZ_248CC_300:
	S6 = V0;
	ZZ_CLOCKCYCLES(1,0x80024BD0);
ZZ_248CC_304:
	T0 = EMU_ReadU32(SP + 176); //+ 0xB0
	if ((int32_t)T0 >= 0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x80024C04);
		goto ZZ_248CC_338;
	}
	A0 = S1;
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 24,S5); //+ 0x18
	A2 = EMU_ReadU32(SP + 152); //+ 0x98
	A1 = FP;
	RA = 0x80024BFC; //ZZ_248CC_330
	A3 = S7;
	ZZ_CLOCKCYCLES(11,0x80025748);
	goto ZZ_25748;
ZZ_248CC_330:
	ZZ_CLOCKCYCLES(2,0x80024C24);
	goto ZZ_248CC_358;
ZZ_248CC_338:
	EMU_Write32(SP + 16,S6); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 24,S5); //+ 0x18
	A2 = EMU_ReadU32(SP + 148); //+ 0x94
	A1 = FP;
	A3 = S7;
	ZZ_CLOCKCYCLES(6,0x80024C1C);
ZZ_248CC_350:
	RA = 0x80024C24; //ZZ_248CC_358
	ZZ_CLOCKCYCLES(2,0x80024DE0);
	goto ZZ_24DE0;
ZZ_248CC_358:
	if ((int32_t)S2 < 0)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(2,0x80024C3C);
		goto ZZ_248CC_370;
	}
	V1 = V0;
	if ((int32_t)V1 < 0)
	{
		V0 = (int32_t)V1 < (int32_t)S2;
		ZZ_CLOCKCYCLES(4,0x80024C70);
		goto ZZ_248CC_3A4;
	}
	V0 = (int32_t)V1 < (int32_t)S2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80024C70);
		goto ZZ_248CC_3A4;
	}
	ZZ_CLOCKCYCLES(6,0x80024C3C);
ZZ_248CC_370:
	V0 = EMU_ReadU32(SP + 144); //+ 0x90
	EMU_Write32(S3,V0);
	T0 = EMU_ReadU32(SP + 160); //+ 0xA0
	S2 = V1;
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU32(S1 + 4); //+ 0x4
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	A1 = EMU_ReadU32(S1 + 12); //+ 0xC
	EMU_Write32(T0 + 16,V0); //+ 0x10
	EMU_Write32(T0 + 20,V1); //+ 0x14
	EMU_Write32(T0 + 24,A0); //+ 0x18
	EMU_Write32(T0 + 28,A1); //+ 0x1C
	ZZ_CLOCKCYCLES(13,0x80024C70);
ZZ_248CC_3A4:
	S3 += 16;
	S1 += 16;
	V0 = S4;
	if (V0)
	{
		S4 -= 1;
		ZZ_CLOCKCYCLES(5,0x80024AF4);
		goto ZZ_248CC_228;
	}
	S4 -= 1;
	ZZ_CLOCKCYCLES(5,0x80024C84);
ZZ_248CC_3B8:
	V0 = EMU_ReadU32(SP + 192); //+ 0xC0
	RA = EMU_ReadU32(SP + 236); //+ 0xEC
	FP = EMU_ReadU32(SP + 232); //+ 0xE8
	S7 = EMU_ReadU32(SP + 228); //+ 0xE4
	S6 = EMU_ReadU32(SP + 224); //+ 0xE0
	S5 = EMU_ReadU32(SP + 220); //+ 0xDC
	S4 = EMU_ReadU32(SP + 216); //+ 0xD8
	S3 = EMU_ReadU32(SP + 212); //+ 0xD4
	S2 = EMU_ReadU32(SP + 208); //+ 0xD0
	S1 = EMU_ReadU32(SP + 204); //+ 0xCC
	S0 = EMU_ReadU32(SP + 200); //+ 0xC8
	SP += 240;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x80022A14,ZZ_22978_9C);
	ZZ_JUMPREGISTER(0x800228B8,ZZ_2281C_9C);
	ZZ_JUMPREGISTER(0x80022A6C,ZZ_22978_F4);
	ZZ_JUMPREGISTER(0x80022910,ZZ_2281C_F4);
	ZZ_JUMPREGISTER(0x80022634,ZZ_22570_C4);
	ZZ_JUMPREGISTER(0x8002268C,ZZ_22570_11C);
	ZZ_JUMPREGISTER(0x8002305C,ZZ_22CD0_38C);
	ZZ_JUMPREGISTER(0x80022E50,ZZ_22CD0_180);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800248CC,0x80024948,ZZ_248CC);
ZZ_MARK_TARGET(0x80024948,0x80024950,ZZ_248CC_7C);
ZZ_MARK_TARGET(0x80024950,0x80024964,ZZ_248CC_84);
ZZ_MARK_TARGET(0x80024964,0x80024970,ZZ_248CC_98);
ZZ_MARK_TARGET(0x80024970,0x80024974,ZZ_248CC_A4);
ZZ_MARK_TARGET(0x80024974,0x800249B8,ZZ_248CC_A8);
ZZ_MARK_TARGET(0x800249B8,0x800249C0,ZZ_248CC_EC);
ZZ_MARK_TARGET(0x800249C0,0x800249E4,ZZ_248CC_F4);
ZZ_MARK_TARGET(0x800249E4,0x800249EC,ZZ_248CC_118);
ZZ_MARK_TARGET(0x800249EC,0x80024A20,ZZ_248CC_120);
ZZ_MARK_TARGET(0x80024A20,0x80024A28,ZZ_248CC_154);
ZZ_MARK_TARGET(0x80024A28,0x80024A4C,ZZ_248CC_15C);
ZZ_MARK_TARGET(0x80024A4C,0x80024A50,ZZ_248CC_180);
ZZ_MARK_TARGET(0x80024A50,0x80024A88,ZZ_248CC_184);
ZZ_MARK_TARGET(0x80024A88,0x80024AA4,ZZ_248CC_1BC);
ZZ_MARK_TARGET(0x80024AA4,0x80024AD0,ZZ_248CC_1D8);
ZZ_MARK_TARGET(0x80024AD0,0x80024ADC,ZZ_248CC_204);
ZZ_MARK_TARGET(0x80024ADC,0x80024AF4,ZZ_248CC_210);
ZZ_MARK_TARGET(0x80024AF4,0x80024B18,ZZ_248CC_228);
ZZ_MARK_TARGET(0x80024B18,0x80024B20,ZZ_248CC_24C);
ZZ_MARK_TARGET(0x80024B20,0x80024B5C,ZZ_248CC_254);
ZZ_MARK_TARGET(0x80024B5C,0x80024B64,ZZ_248CC_290);
ZZ_MARK_TARGET(0x80024B64,0x80024B80,ZZ_248CC_298);
ZZ_MARK_TARGET(0x80024B80,0x80024BA0,ZZ_248CC_2B4);
ZZ_MARK_TARGET(0x80024BA0,0x80024BC0,ZZ_248CC_2D4);
ZZ_MARK_TARGET(0x80024BC0,0x80024BCC,ZZ_248CC_2F4);
ZZ_MARK_TARGET(0x80024BCC,0x80024BD0,ZZ_248CC_300);
ZZ_MARK_TARGET(0x80024BD0,0x80024BFC,ZZ_248CC_304);
ZZ_MARK_TARGET(0x80024BFC,0x80024C04,ZZ_248CC_330);
ZZ_MARK_TARGET(0x80024C04,0x80024C1C,ZZ_248CC_338);
ZZ_MARK_TARGET(0x80024C1C,0x80024C24,ZZ_248CC_350);
ZZ_MARK_TARGET(0x80024C24,0x80024C3C,ZZ_248CC_358);
ZZ_MARK_TARGET(0x80024C3C,0x80024C70,ZZ_248CC_370);
ZZ_MARK_TARGET(0x80024C70,0x80024C84,ZZ_248CC_3A4);
ZZ_MARK_TARGET(0x80024C84,0x80024CBC,ZZ_248CC_3B8);
