#ifdef ZZ_INCLUDE_CODE
ZZ_570D4:
	SP -= 32;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A2;
	EMU_Write32(SP + 16,S0); //+ 0x10
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	EMU_Write32(SP + 24,RA); //+ 0x18
	AT = 0x80070000;
	AT += A0;
	V1 = EMU_ReadU8(AT - 26596); //+ 0xFFFF981C
	V0 = 1;
	if (V1 == V0)
	{
		S0 = A3;
		ZZ_CLOCKCYCLES(13,0x80057110);
		goto ZZ_570D4_3C;
	}
	S0 = A3;
	V0 = -1;
	ZZ_CLOCKCYCLES(15,0x80057284);
	goto ZZ_570D4_1B0;
ZZ_570D4_3C:
	A1 <<= 16;
	RA = 0x8005711C; //ZZ_570D4_48
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES(3,0x8005A59C);
	goto ZZ_5A59C;
ZZ_570D4_48:
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 26621); //+ 0xFFFF9803
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0);
	V1 <<= 4;
	V1 += S1;
	V1 <<= 16;
	V1 = (int32_t)V1 >> 11;
	V0 += V1;
	EMU_Write8(V0,A0);
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 1); //+ 0x1
	V0 += V1;
	EMU_Write8(V0 + 1,A0); //+ 0x1
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 2); //+ 0x2
	V0 += V1;
	EMU_Write8(V0 + 2,A0); //+ 0x2
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 3); //+ 0x3
	V0 += V1;
	EMU_Write8(V0 + 3,A0); //+ 0x3
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 4); //+ 0x4
	V0 += V1;
	EMU_Write8(V0 + 4,A0); //+ 0x4
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 5); //+ 0x5
	V0 += V1;
	EMU_Write8(V0 + 5,A0); //+ 0x5
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 7); //+ 0x7
	V0 += V1;
	EMU_Write8(V0 + 7,A0); //+ 0x7
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 6); //+ 0x6
	V0 += V1;
	EMU_Write8(V0 + 6,A0); //+ 0x6
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 8); //+ 0x8
	V0 += V1;
	EMU_Write8(V0 + 8,A0); //+ 0x8
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 9); //+ 0x9
	V0 += V1;
	EMU_Write8(V0 + 9,A0); //+ 0x9
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 10); //+ 0xA
	V0 += V1;
	EMU_Write8(V0 + 10,A0); //+ 0xA
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 11); //+ 0xB
	V0 += V1;
	EMU_Write8(V0 + 11,A0); //+ 0xB
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 12); //+ 0xC
	V0 += V1;
	EMU_Write8(V0 + 12,A0); //+ 0xC
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU8(S0 + 13); //+ 0xD
	V0 += V1;
	EMU_Write8(V0 + 13,A0); //+ 0xD
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A0 = EMU_ReadU16(S0 + 16); //+ 0x10
	V1 += V0;
	EMU_Write16(V1 + 16,A0); //+ 0x10
	V0 = EMU_ReadU16(S0 + 18); //+ 0x12
	EMU_Write16(V1 + 18,V0); //+ 0x12
	V0 = EMU_ReadU16(S0 + 20); //+ 0x14
	EMU_Write16(V1 + 20,V0); //+ 0x14
	A0 = EMU_ReadU16(S0 + 22); //+ 0x16
	V0 = R0;
	EMU_Write16(V1 + 22,A0); //+ 0x16
	ZZ_CLOCKCYCLES(90,0x80057284);
ZZ_570D4_1B0:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800535DC,ZZ_53408_1D4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800570D4,ZZ_570D4);
ZZ_MARK(0x800570D8);
ZZ_MARK(0x800570DC);
ZZ_MARK(0x800570E0);
ZZ_MARK(0x800570E4);
ZZ_MARK(0x800570E8);
ZZ_MARK(0x800570EC);
ZZ_MARK(0x800570F0);
ZZ_MARK(0x800570F4);
ZZ_MARK(0x800570F8);
ZZ_MARK(0x800570FC);
ZZ_MARK(0x80057100);
ZZ_MARK(0x80057104);
ZZ_MARK(0x80057108);
ZZ_MARK(0x8005710C);
ZZ_MARK_TARGET(0x80057110,ZZ_570D4_3C);
ZZ_MARK(0x80057114);
ZZ_MARK(0x80057118);
ZZ_MARK_TARGET(0x8005711C,ZZ_570D4_48);
ZZ_MARK(0x80057120);
ZZ_MARK(0x80057124);
ZZ_MARK(0x80057128);
ZZ_MARK(0x8005712C);
ZZ_MARK(0x80057130);
ZZ_MARK(0x80057134);
ZZ_MARK(0x80057138);
ZZ_MARK(0x8005713C);
ZZ_MARK(0x80057140);
ZZ_MARK(0x80057144);
ZZ_MARK(0x80057148);
ZZ_MARK(0x8005714C);
ZZ_MARK(0x80057150);
ZZ_MARK(0x80057154);
ZZ_MARK(0x80057158);
ZZ_MARK(0x8005715C);
ZZ_MARK(0x80057160);
ZZ_MARK(0x80057164);
ZZ_MARK(0x80057168);
ZZ_MARK(0x8005716C);
ZZ_MARK(0x80057170);
ZZ_MARK(0x80057174);
ZZ_MARK(0x80057178);
ZZ_MARK(0x8005717C);
ZZ_MARK(0x80057180);
ZZ_MARK(0x80057184);
ZZ_MARK(0x80057188);
ZZ_MARK(0x8005718C);
ZZ_MARK(0x80057190);
ZZ_MARK(0x80057194);
ZZ_MARK(0x80057198);
ZZ_MARK(0x8005719C);
ZZ_MARK(0x800571A0);
ZZ_MARK(0x800571A4);
ZZ_MARK(0x800571A8);
ZZ_MARK(0x800571AC);
ZZ_MARK(0x800571B0);
ZZ_MARK(0x800571B4);
ZZ_MARK(0x800571B8);
ZZ_MARK(0x800571BC);
ZZ_MARK(0x800571C0);
ZZ_MARK(0x800571C4);
ZZ_MARK(0x800571C8);
ZZ_MARK(0x800571CC);
ZZ_MARK(0x800571D0);
ZZ_MARK(0x800571D4);
ZZ_MARK(0x800571D8);
ZZ_MARK(0x800571DC);
ZZ_MARK(0x800571E0);
ZZ_MARK(0x800571E4);
ZZ_MARK(0x800571E8);
ZZ_MARK(0x800571EC);
ZZ_MARK(0x800571F0);
ZZ_MARK(0x800571F4);
ZZ_MARK(0x800571F8);
ZZ_MARK(0x800571FC);
ZZ_MARK(0x80057200);
ZZ_MARK(0x80057204);
ZZ_MARK(0x80057208);
ZZ_MARK(0x8005720C);
ZZ_MARK(0x80057210);
ZZ_MARK(0x80057214);
ZZ_MARK(0x80057218);
ZZ_MARK(0x8005721C);
ZZ_MARK(0x80057220);
ZZ_MARK(0x80057224);
ZZ_MARK(0x80057228);
ZZ_MARK(0x8005722C);
ZZ_MARK(0x80057230);
ZZ_MARK(0x80057234);
ZZ_MARK(0x80057238);
ZZ_MARK(0x8005723C);
ZZ_MARK(0x80057240);
ZZ_MARK(0x80057244);
ZZ_MARK(0x80057248);
ZZ_MARK(0x8005724C);
ZZ_MARK(0x80057250);
ZZ_MARK(0x80057254);
ZZ_MARK(0x80057258);
ZZ_MARK(0x8005725C);
ZZ_MARK(0x80057260);
ZZ_MARK(0x80057264);
ZZ_MARK(0x80057268);
ZZ_MARK(0x8005726C);
ZZ_MARK(0x80057270);
ZZ_MARK(0x80057274);
ZZ_MARK(0x80057278);
ZZ_MARK(0x8005727C);
ZZ_MARK(0x80057280);
ZZ_MARK_TARGET(0x80057284,ZZ_570D4_1B0);
ZZ_MARK(0x80057288);
ZZ_MARK(0x8005728C);
ZZ_MARK(0x80057290);
ZZ_MARK(0x80057294);
ZZ_MARK(0x80057298);
