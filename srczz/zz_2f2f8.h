#ifdef ZZ_INCLUDE_CODE
ZZ_2F2F8:
	SP -= 24;
	V0 = 0x63;
	AT = 0x80070000;
	EMU_Write32(AT - 12712,V0); //+ 0xFFFFCE58
	V0 = -1;
	AT = 0x80070000;
	EMU_Write32(AT - 12716,V0); //+ 0xFFFFCE54
	V0 = 0x7;
	AT = 0x80070000;
	EMU_Write32(AT - 12720,V0); //+ 0xFFFFCE50
	V0 = 0x100;
	AT = 0x80070000;
	EMU_Write32(AT - 12656,V0); //+ 0xFFFFCE90
	AT = 0x80070000;
	EMU_Write32(AT - 12652,V0); //+ 0xFFFFCE94
	V0 = 0x400;
	AT = 0x80070000;
	EMU_Write32(AT - 12668,V0); //+ 0xFFFFCE84
	V0 = 0x1;
	AT = 0x80070000;
	EMU_Write32(AT - 12412,V0); //+ 0xFFFFCF84
	V0 = 0x80;
	AT = 0x80070000;
	EMU_Write32(AT - 12184,V0); //+ 0xFFFFD068
	AT = 0x80070000;
	EMU_Write32(AT - 12180,V0); //+ 0xFFFFD06C
	V0 = 0xFF;
	EMU_Write32(SP + 16,RA); //+ 0x10
	AT = 0x80070000;
	EMU_Write32(AT - 12708,R0); //+ 0xFFFFCE5C
	AT = 0x80070000;
	EMU_Write32(AT - 12664,R0); //+ 0xFFFFCE88
	AT = 0x80070000;
	EMU_Write32(AT - 12660,R0); //+ 0xFFFFCE8C
	AT = 0x80070000;
	EMU_Write32(AT - 12520,R0); //+ 0xFFFFCF18
	AT = 0x80070000;
	EMU_Write32(AT - 12356,R0); //+ 0xFFFFCFBC
	AT = 0x80070000;
	EMU_Write32(AT - 12332,R0); //+ 0xFFFFCFD4
	AT = 0x80070000;
	EMU_Write32(AT - 12408,R0); //+ 0xFFFFCF88
	AT = 0x80070000;
	EMU_Write32(AT - 12160,R0); //+ 0xFFFFD080
	AT = 0x80070000;
	EMU_Write32(AT - 12188,R0); //+ 0xFFFFD064
	AT = 0x80070000;
	EMU_Write32(AT - 12176,R0); //+ 0xFFFFD070
	AT = 0x80070000;
	EMU_Write32(AT - 12172,R0); //+ 0xFFFFD074
	AT = 0x80070000;
	EMU_Write32(AT - 12168,V0); //+ 0xFFFFD078
	AT = 0x80070000;
	EMU_Write32(AT - 12164,V0); //+ 0xFFFFD07C
	AT = 0x80070000;
	EMU_Write32(AT - 12724,R0); //+ 0xFFFFCE4C
	RA = 0x8002F3E0; //ZZ_2F2F8_E8
	A0 = 0x1;
	ZZ_CLOCKCYCLES(58,0x8002F3F0);
	goto ZZ_2F3F0;
ZZ_2F2F8_E8:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80011824,ZZ_11800_24);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002F2F8,0x8002F3E0,ZZ_2F2F8);
ZZ_MARK_TARGET(0x8002F3E0,0x8002F3F0,ZZ_2F2F8_E8);
