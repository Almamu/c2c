#ifdef ZZ_INCLUDE_CODE
ZZ_221A8:
	SP -= 104;
	EMU_Write32(SP + 100,RA); //+ 0x64
	EMU_Write32(SP + 96,S2); //+ 0x60
	EMU_Write32(SP + 92,S1); //+ 0x5C
	if (!A1)
	{
		EMU_Write32(SP + 88,S0); //+ 0x58
		ZZ_CLOCKCYCLES(6,0x800221CC);
		goto ZZ_221A8_24;
	}
	EMU_Write32(SP + 88,S0); //+ 0x58
	V0 = 0x1001;
	AT = 0x80060000;
	EMU_Write32(AT - 17340,V0); //+ 0xFFFFBC44
	ZZ_CLOCKCYCLES(9,0x800221CC);
ZZ_221A8_24:
	V1 = EMU_ReadU32(A0);
	EMU_Write32(SP + 48,V1); //+ 0x30
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	EMU_Write32(SP + 52,V0); //+ 0x34
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 16940); //+ 0xFFFFBDD4
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 16932); //+ 0xFFFFBDDC
	A0 = A0 - V1;
	A1 = A1 - V0;
	RA = 0x80022208; //ZZ_221A8_60
	EMU_Write32(SP + 56,V0); //+ 0x38
	ZZ_CLOCKCYCLES(15,0x8004F310);
	goto ZZ_4F310;
ZZ_221A8_60:
	V0 += 2048;
	S0 = V0 & 0xFFF;
	V0 = (int32_t)S0 < 2049;
	if (V0)
	{
		V0 = (int32_t)S0 < 513;
		ZZ_CLOCKCYCLES(5,0x80022230);
		goto ZZ_221A8_88;
	}
	V0 = (int32_t)S0 < 513;
	V0 = (int32_t)S0 < 3584;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002223C);
		goto ZZ_221A8_94;
	}
	S0 = 0xE00;
	ZZ_CLOCKCYCLES(10,0x8002223C);
	goto ZZ_221A8_94;
ZZ_221A8_88:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002223C);
		goto ZZ_221A8_94;
	}
	S0 = 0x200;
	ZZ_CLOCKCYCLES(3,0x8002223C);
ZZ_221A8_94:
	S1 = 0x80060000;
	S1 -= 17340;
	A0 = EMU_ReadU32(S1);
	V0 = 0x1001;
	AT = 0x80060000;
	EMU_Write32(AT + 2988,S0); //+ 0xBAC
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002226C);
		goto ZZ_221A8_C4;
	}
	A1 = S0;
	RA = 0x80022268; //ZZ_221A8_C0
	A2 = 0x80;
	ZZ_CLOCKCYCLES(11,0x800315D8);
	goto ZZ_315D8;
ZZ_221A8_C0:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x8002226C);
ZZ_221A8_C4:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2744); //+ 0xAB8
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 16932); //+ 0xFFFFBDDC
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2736); //+ 0xAB0
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 16940); //+ 0xFFFFBDD4
	EMU_Write32(S1,S0);
	A0 = V0 - A0;
	RA = 0x8002229C; //ZZ_221A8_F4
	A1 = V1 - A1;
	ZZ_CLOCKCYCLES(12,0x8004F310);
	goto ZZ_4F310;
ZZ_221A8_F4:
	V0 &= 0xFFF;
	V1 = S0 - V0;
	V0 = (int32_t)V1 < 2049;
	if (V0)
	{
		V0 = (int32_t)V1 < -2048;
		ZZ_CLOCKCYCLES(5,0x800222B8);
		goto ZZ_221A8_110;
	}
	V0 = (int32_t)V1 < -2048;
	V1 -= 4096;
	V0 = (int32_t)V1 < -2048;
	ZZ_CLOCKCYCLES(7,0x800222B8);
ZZ_221A8_110:
	if (!V0)
	{
		V0 = V1 + 2;
		ZZ_CLOCKCYCLES(2,0x800222C8);
		goto ZZ_221A8_120;
	}
	V0 = V1 + 2;
	V1 += 4096;
	V0 = V1 + 2;
	ZZ_CLOCKCYCLES(4,0x800222C8);
ZZ_221A8_120:
	V0 = V0 < 5;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x80022300);
		goto ZZ_221A8_158;
	}
	if ((int32_t)V1 >= 0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(5,0x800222F0);
		goto ZZ_221A8_148;
	}
	V0 = 0x2;
	V0 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 2960,V0); //+ 0xB90
	ZZ_CLOCKCYCLES(10,0x80022308);
	goto ZZ_221A8_160;
ZZ_221A8_148:
	AT = 0x80060000;
	EMU_Write32(AT + 2960,V0); //+ 0xB90
	ZZ_CLOCKCYCLES(4,0x80022308);
	goto ZZ_221A8_160;
ZZ_221A8_158:
	AT = 0x80060000;
	EMU_Write32(AT + 2960,R0); //+ 0xB90
	ZZ_CLOCKCYCLES(2,0x80022308);
ZZ_221A8_160:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2960); //+ 0xB90
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x800223F4);
		goto ZZ_221A8_24C;
	}
	if ((int32_t)V1 >= 0)
	{
		V0 = V1 << 3;
		ZZ_CLOCKCYCLES(7,0x8002232C);
		goto ZZ_221A8_184;
	}
	V0 = V1 << 3;
	V1 = -V1;
	V0 = V1 << 3;
	ZZ_CLOCKCYCLES(9,0x8002232C);
ZZ_221A8_184:
	V0 = V0 - V1;
	V0 <<= 3;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 4;
	A1 = (int32_t)V0 >> 8;
	A0 = SP + 16;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2924); //+ 0xB6C
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 + 2936); //+ 0xB78
	T0 = 0x80060000;
	T0 = EMU_ReadU32(T0 + 2960); //+ 0xB90
	A1 = (int32_t)A1 >> 4;
	S2 = SP + 80;
	A2 = S2;
	EMU_Write32(SP + 16,V0); //+ 0x10
	EMU_Write32(SP + 20,V1); //+ 0x14
	EMU_Write32(SP + 24,A3); //+ 0x18
	RA = 0x8002238C; //ZZ_221A8_1E4
	EMU_Write32(SP + 28,T0); //+ 0x1C
	ZZ_CLOCKCYCLES(24,0x800244DC);
	goto ZZ_244DC;
ZZ_221A8_1E4:
	S1 = V0;
	if (!S1)
	{
		S0 = SP + 32;
		ZZ_CLOCKCYCLES(3,0x800223D8);
		goto ZZ_221A8_230;
	}
	S0 = SP + 32;
	A0 = SP + 16;
	RA = 0x800223A4; //ZZ_221A8_1FC
	A1 = S0;
	ZZ_CLOCKCYCLES(6,0x800269D8);
	goto ZZ_269D8;
ZZ_221A8_1FC:
	if (!V0)
	{
		A1 = S1;
		ZZ_CLOCKCYCLES(2,0x800223D8);
		goto ZZ_221A8_230;
	}
	A1 = S1;
	V0 = EMU_ReadU32(SP + 44); //+ 0x2C
	A0 = S0;
	AT = 0x80060000;
	EMU_Write32(AT + 2960,V0); //+ 0xB90
	RA = 0x800223C4; //ZZ_221A8_21C
	A2 = S2;
	ZZ_CLOCKCYCLES(8,0x800244DC);
	goto ZZ_244DC;
ZZ_221A8_21C:
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	A1 = EMU_ReadU32(SP + 36); //+ 0x24
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	ZZ_CLOCKCYCLES(5,0x8002240C);
	goto ZZ_221A8_264;
ZZ_221A8_230:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2916); //+ 0xB64
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2924); //+ 0xB6C
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	ZZ_CLOCKCYCLES(7,0x8002240C);
	goto ZZ_221A8_264;
ZZ_221A8_24C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2916); //+ 0xB64
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2924); //+ 0xB6C
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	ZZ_CLOCKCYCLES(6,0x8002240C);
ZZ_221A8_264:
	RA = 0x80022414; //ZZ_221A8_26C
	A3 = R0;
	ZZ_CLOCKCYCLES(2,0x80020304);
	goto ZZ_20304;
ZZ_221A8_26C:
	RA = 0x8002241C; //ZZ_221A8_274
	A0 = SP + 48;
	ZZ_CLOCKCYCLES(2,0x80023424);
	goto ZZ_23424;
ZZ_221A8_274:
	RA = EMU_ReadU32(SP + 100); //+ 0x64
	S2 = EMU_ReadU32(SP + 96); //+ 0x60
	S1 = EMU_ReadU32(SP + 92); //+ 0x5C
	S0 = EMU_ReadU32(SP + 88); //+ 0x58
	SP += 104;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x800270FC,ZZ_26F14_1E8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800221A8,ZZ_221A8);
ZZ_MARK(0x800221AC);
ZZ_MARK(0x800221B0);
ZZ_MARK(0x800221B4);
ZZ_MARK(0x800221B8);
ZZ_MARK(0x800221BC);
ZZ_MARK(0x800221C0);
ZZ_MARK(0x800221C4);
ZZ_MARK(0x800221C8);
ZZ_MARK_TARGET(0x800221CC,ZZ_221A8_24);
ZZ_MARK(0x800221D0);
ZZ_MARK(0x800221D4);
ZZ_MARK(0x800221D8);
ZZ_MARK(0x800221DC);
ZZ_MARK(0x800221E0);
ZZ_MARK(0x800221E4);
ZZ_MARK(0x800221E8);
ZZ_MARK(0x800221EC);
ZZ_MARK(0x800221F0);
ZZ_MARK(0x800221F4);
ZZ_MARK(0x800221F8);
ZZ_MARK(0x800221FC);
ZZ_MARK(0x80022200);
ZZ_MARK(0x80022204);
ZZ_MARK_TARGET(0x80022208,ZZ_221A8_60);
ZZ_MARK(0x8002220C);
ZZ_MARK(0x80022210);
ZZ_MARK(0x80022214);
ZZ_MARK(0x80022218);
ZZ_MARK(0x8002221C);
ZZ_MARK(0x80022220);
ZZ_MARK(0x80022224);
ZZ_MARK(0x80022228);
ZZ_MARK(0x8002222C);
ZZ_MARK_TARGET(0x80022230,ZZ_221A8_88);
ZZ_MARK(0x80022234);
ZZ_MARK(0x80022238);
ZZ_MARK_TARGET(0x8002223C,ZZ_221A8_94);
ZZ_MARK(0x80022240);
ZZ_MARK(0x80022244);
ZZ_MARK(0x80022248);
ZZ_MARK(0x8002224C);
ZZ_MARK(0x80022250);
ZZ_MARK(0x80022254);
ZZ_MARK(0x80022258);
ZZ_MARK(0x8002225C);
ZZ_MARK(0x80022260);
ZZ_MARK(0x80022264);
ZZ_MARK_TARGET(0x80022268,ZZ_221A8_C0);
ZZ_MARK_TARGET(0x8002226C,ZZ_221A8_C4);
ZZ_MARK(0x80022270);
ZZ_MARK(0x80022274);
ZZ_MARK(0x80022278);
ZZ_MARK(0x8002227C);
ZZ_MARK(0x80022280);
ZZ_MARK(0x80022284);
ZZ_MARK(0x80022288);
ZZ_MARK(0x8002228C);
ZZ_MARK(0x80022290);
ZZ_MARK(0x80022294);
ZZ_MARK(0x80022298);
ZZ_MARK_TARGET(0x8002229C,ZZ_221A8_F4);
ZZ_MARK(0x800222A0);
ZZ_MARK(0x800222A4);
ZZ_MARK(0x800222A8);
ZZ_MARK(0x800222AC);
ZZ_MARK(0x800222B0);
ZZ_MARK(0x800222B4);
ZZ_MARK_TARGET(0x800222B8,ZZ_221A8_110);
ZZ_MARK(0x800222BC);
ZZ_MARK(0x800222C0);
ZZ_MARK(0x800222C4);
ZZ_MARK_TARGET(0x800222C8,ZZ_221A8_120);
ZZ_MARK(0x800222CC);
ZZ_MARK(0x800222D0);
ZZ_MARK(0x800222D4);
ZZ_MARK(0x800222D8);
ZZ_MARK(0x800222DC);
ZZ_MARK(0x800222E0);
ZZ_MARK(0x800222E4);
ZZ_MARK(0x800222E8);
ZZ_MARK(0x800222EC);
ZZ_MARK_TARGET(0x800222F0,ZZ_221A8_148);
ZZ_MARK(0x800222F4);
ZZ_MARK(0x800222F8);
ZZ_MARK(0x800222FC);
ZZ_MARK_TARGET(0x80022300,ZZ_221A8_158);
ZZ_MARK(0x80022304);
ZZ_MARK_TARGET(0x80022308,ZZ_221A8_160);
ZZ_MARK(0x8002230C);
ZZ_MARK(0x80022310);
ZZ_MARK(0x80022314);
ZZ_MARK(0x80022318);
ZZ_MARK(0x8002231C);
ZZ_MARK(0x80022320);
ZZ_MARK(0x80022324);
ZZ_MARK(0x80022328);
ZZ_MARK_TARGET(0x8002232C,ZZ_221A8_184);
ZZ_MARK(0x80022330);
ZZ_MARK(0x80022334);
ZZ_MARK(0x80022338);
ZZ_MARK(0x8002233C);
ZZ_MARK(0x80022340);
ZZ_MARK(0x80022344);
ZZ_MARK(0x80022348);
ZZ_MARK(0x8002234C);
ZZ_MARK(0x80022350);
ZZ_MARK(0x80022354);
ZZ_MARK(0x80022358);
ZZ_MARK(0x8002235C);
ZZ_MARK(0x80022360);
ZZ_MARK(0x80022364);
ZZ_MARK(0x80022368);
ZZ_MARK(0x8002236C);
ZZ_MARK(0x80022370);
ZZ_MARK(0x80022374);
ZZ_MARK(0x80022378);
ZZ_MARK(0x8002237C);
ZZ_MARK(0x80022380);
ZZ_MARK(0x80022384);
ZZ_MARK(0x80022388);
ZZ_MARK_TARGET(0x8002238C,ZZ_221A8_1E4);
ZZ_MARK(0x80022390);
ZZ_MARK(0x80022394);
ZZ_MARK(0x80022398);
ZZ_MARK(0x8002239C);
ZZ_MARK(0x800223A0);
ZZ_MARK_TARGET(0x800223A4,ZZ_221A8_1FC);
ZZ_MARK(0x800223A8);
ZZ_MARK(0x800223AC);
ZZ_MARK(0x800223B0);
ZZ_MARK(0x800223B4);
ZZ_MARK(0x800223B8);
ZZ_MARK(0x800223BC);
ZZ_MARK(0x800223C0);
ZZ_MARK_TARGET(0x800223C4,ZZ_221A8_21C);
ZZ_MARK(0x800223C8);
ZZ_MARK(0x800223CC);
ZZ_MARK(0x800223D0);
ZZ_MARK(0x800223D4);
ZZ_MARK_TARGET(0x800223D8,ZZ_221A8_230);
ZZ_MARK(0x800223DC);
ZZ_MARK(0x800223E0);
ZZ_MARK(0x800223E4);
ZZ_MARK(0x800223E8);
ZZ_MARK(0x800223EC);
ZZ_MARK(0x800223F0);
ZZ_MARK_TARGET(0x800223F4,ZZ_221A8_24C);
ZZ_MARK(0x800223F8);
ZZ_MARK(0x800223FC);
ZZ_MARK(0x80022400);
ZZ_MARK(0x80022404);
ZZ_MARK(0x80022408);
ZZ_MARK_TARGET(0x8002240C,ZZ_221A8_264);
ZZ_MARK(0x80022410);
ZZ_MARK_TARGET(0x80022414,ZZ_221A8_26C);
ZZ_MARK(0x80022418);
ZZ_MARK_TARGET(0x8002241C,ZZ_221A8_274);
ZZ_MARK(0x80022420);
ZZ_MARK(0x80022424);
ZZ_MARK(0x80022428);
ZZ_MARK(0x8002242C);
ZZ_MARK(0x80022430);
ZZ_MARK(0x80022434);
