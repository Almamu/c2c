#ifdef ZZ_INCLUDE_CODE
ZZ_48410:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12992); //+ 0xFFFFCD40
	V0 = EMU_ReadU16(V1 + 440); //+ 0x1B8
	if (V0)
	{
		SP -= 8;
		ZZ_CLOCKCYCLES(7,0x8004844C);
		goto ZZ_48410_3C;
	}
	SP -= 8;
	V0 = EMU_ReadU16(V1 + 442); //+ 0x1BA
	if (V0)
	{
		V0 = 16383;
		ZZ_CLOCKCYCLES(11,0x80048450);
		goto ZZ_48410_40;
	}
	V0 = 16383;
	EMU_Write16(V1 + 384,V0); //+ 0x180
	EMU_Write16(V1 + 386,V0); //+ 0x182
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12992); //+ 0xFFFFCD40
	ZZ_CLOCKCYCLES(15,0x8004844C);
ZZ_48410_3C:
	V0 = 16383;
	ZZ_CLOCKCYCLES(1,0x80048450);
ZZ_48410_40:
	EMU_Write16(V1 + 432,V0); //+ 0x1B0
	EMU_Write16(V1 + 434,V0); //+ 0x1B2
	V0 = 0xC001;
	EMU_Write16(V1 + 426,V0); //+ 0x1AA
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13012); //+ 0xFFFFCD2C
	V0 = 128;
	EMU_Write8(SP + 2,V0); //+ 0x2
	EMU_Write8(SP,V0);
	V0 = 2;
	EMU_Write8(SP + 3,R0); //+ 0x3
	EMU_Write8(SP + 1,R0); //+ 0x1
	EMU_Write8(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13004); //+ 0xFFFFCD34
	V0 = EMU_ReadU8(SP);
	EMU_Write8(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13000); //+ 0xFFFFCD38
	V0 = EMU_ReadU8(SP + 1); //+ 0x1
	EMU_Write8(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13012); //+ 0xFFFFCD2C
	V0 = 3;
	EMU_Write8(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13008); //+ 0xFFFFCD30
	V0 = EMU_ReadU8(SP + 2); //+ 0x2
	EMU_Write8(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13004); //+ 0xFFFFCD34
	V0 = EMU_ReadU8(SP + 3); //+ 0x3
	EMU_Write8(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13000); //+ 0xFFFFCD38
	V0 = 32;
	EMU_Write8(V1,V0);
	V0 = R0;
	SP += 8;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(45);
	ZZ_JUMPREGISTER(0x80046CB8,ZZ_46C6C_4C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80048410,0x8004844C,ZZ_48410);
ZZ_MARK_TARGET(0x8004844C,0x80048450,ZZ_48410_3C);
ZZ_MARK_TARGET(0x80048450,0x80048504,ZZ_48410_40);
