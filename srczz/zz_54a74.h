#ifdef ZZ_INCLUDE_CODE
ZZ_54A74:
	SP -= 32;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0 << 16;
	V0 = 0x80070000;
	V0 -= 15268;
	S1 = (int32_t)S1 >> 14;
	S1 += V0;
	V0 = A1 << 16;
	V0 = (int32_t)V0 >> 16;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = V0 << 1;
	S0 += V0;
	S0 <<= 2;
	S0 = S0 - V0;
	S0 <<= 4;
	A1 <<= 8;
	A0 |= A1;
	A0 <<= 16;
	EMU_Write32(SP + 24,RA); //+ 0x18
	A2 = EMU_ReadU32(S1);
	A0 = (int32_t)A0 >> 16;
	A2 += S0;
	A1 = A2 + 92;
	RA = 0x80054AD8; //ZZ_54A74_64
	A2 += 94;
	ZZ_CLOCKCYCLES(25,0x80059DDC);
	goto ZZ_59DDC;
ZZ_54A74_64:
	V1 = EMU_ReadU32(S1);
	V1 += S0;
	V0 = EMU_ReadU32(V1 + 152); //+ 0x98
	A0 = -2;
	V0 &= A0;
	EMU_Write32(V1 + 152,V0); //+ 0x98
	V1 = EMU_ReadU32(S1);
	V1 += S0;
	V0 = EMU_ReadU32(V1 + 152); //+ 0x98
	A0 = -9;
	V0 &= A0;
	EMU_Write32(V1 + 152,V0); //+ 0x98
	V0 = EMU_ReadU32(S1);
	S0 += V0;
	V0 = EMU_ReadU32(S0 + 152); //+ 0x98
	V0 |= 0x2;
	EMU_Write32(S0 + 152,V0); //+ 0x98
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(27);
	ZZ_JUMPREGISTER(0x80054B88,ZZ_54B6C_1C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80054A74,ZZ_54A74);
ZZ_MARK(0x80054A78);
ZZ_MARK(0x80054A7C);
ZZ_MARK(0x80054A80);
ZZ_MARK(0x80054A84);
ZZ_MARK(0x80054A88);
ZZ_MARK(0x80054A8C);
ZZ_MARK(0x80054A90);
ZZ_MARK(0x80054A94);
ZZ_MARK(0x80054A98);
ZZ_MARK(0x80054A9C);
ZZ_MARK(0x80054AA0);
ZZ_MARK(0x80054AA4);
ZZ_MARK(0x80054AA8);
ZZ_MARK(0x80054AAC);
ZZ_MARK(0x80054AB0);
ZZ_MARK(0x80054AB4);
ZZ_MARK(0x80054AB8);
ZZ_MARK(0x80054ABC);
ZZ_MARK(0x80054AC0);
ZZ_MARK(0x80054AC4);
ZZ_MARK(0x80054AC8);
ZZ_MARK(0x80054ACC);
ZZ_MARK(0x80054AD0);
ZZ_MARK(0x80054AD4);
ZZ_MARK_TARGET(0x80054AD8,ZZ_54A74_64);
ZZ_MARK(0x80054ADC);
ZZ_MARK(0x80054AE0);
ZZ_MARK(0x80054AE4);
ZZ_MARK(0x80054AE8);
ZZ_MARK(0x80054AEC);
ZZ_MARK(0x80054AF0);
ZZ_MARK(0x80054AF4);
ZZ_MARK(0x80054AF8);
ZZ_MARK(0x80054AFC);
ZZ_MARK(0x80054B00);
ZZ_MARK(0x80054B04);
ZZ_MARK(0x80054B08);
ZZ_MARK(0x80054B0C);
ZZ_MARK(0x80054B10);
ZZ_MARK(0x80054B14);
ZZ_MARK(0x80054B18);
ZZ_MARK(0x80054B1C);
ZZ_MARK(0x80054B20);
ZZ_MARK(0x80054B24);
ZZ_MARK(0x80054B28);
ZZ_MARK(0x80054B2C);
ZZ_MARK(0x80054B30);
ZZ_MARK(0x80054B34);
ZZ_MARK(0x80054B38);
ZZ_MARK(0x80054B3C);
ZZ_MARK(0x80054B40);
