#ifdef ZZ_INCLUDE_CODE
ZZ_4D9A0:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 8268); //+ 0xFFFFDFB4
	V0 = 1;
	if (V1 == V0)
	{
		V0 = 2;
		ZZ_CLOCKCYCLES(5,0x8004D9C4);
		goto ZZ_4D9A0_24;
	}
	V0 = 2;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8004D9EC);
		goto ZZ_4D9A0_4C;
	}
	ZZ_CLOCKCYCLES(9,0x8004DA44);
	goto ZZ_4D9A0_A4;
ZZ_4D9A0_24:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 8265); //+ 0xFFFFDFB7
	if (!V0)
	{
		V0 = 1024;
		ZZ_CLOCKCYCLES(5,0x8004DA44);
		goto ZZ_4D9A0_A4;
	}
	V0 = 1024;
	V1 = EMU_ReadS16(A0 + 4); //+ 0x4
	A0 = EMU_ReadS16(A0);
	ZZ_CLOCKCYCLES(7,0x8004D9E0);
ZZ_4D9A0_40:
	V0 = V0 - V1;
	V0 = V0 - A0;
	ZZ_CLOCKCYCLES(3,0x8004DA48);
	goto ZZ_4D9A0_A8;
ZZ_4D9A0_4C:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 8265); //+ 0xFFFFDFB7
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004DA24);
		goto ZZ_4D9A0_84;
	}
	V0 = EMU_ReadU16(A0 + 4); //+ 0x4
	A0 = EMU_ReadS16(A0);
	V0 <<= 16;
	V1 = (int32_t)V0 >> 16;
	V0 >>= 31;
	V1 += V0;
	V1 = (int32_t)V1 >> 1;
	V0 = 1024;
	ZZ_CLOCKCYCLES(14,0x8004D9E0);
	goto ZZ_4D9A0_40;
ZZ_4D9A0_84:
	V0 = EMU_ReadU16(A0);
	V0 <<= 16;
	V1 = (int32_t)V0 >> 16;
	V0 >>= 31;
	V1 += V0;
	V0 = (int32_t)V1 >> 1;
	ZZ_CLOCKCYCLES(8,0x8004DA48);
	goto ZZ_4D9A0_A8;
ZZ_4D9A0_A4:
	V0 = EMU_ReadS16(A0);
	ZZ_CLOCKCYCLES(1,0x8004DA48);
ZZ_4D9A0_A8:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8004CC18,ZZ_4CBA8_70);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004D9A0,ZZ_4D9A0);
ZZ_MARK(0x8004D9A4);
ZZ_MARK(0x8004D9A8);
ZZ_MARK(0x8004D9AC);
ZZ_MARK(0x8004D9B0);
ZZ_MARK(0x8004D9B4);
ZZ_MARK(0x8004D9B8);
ZZ_MARK(0x8004D9BC);
ZZ_MARK(0x8004D9C0);
ZZ_MARK_TARGET(0x8004D9C4,ZZ_4D9A0_24);
ZZ_MARK(0x8004D9C8);
ZZ_MARK(0x8004D9CC);
ZZ_MARK(0x8004D9D0);
ZZ_MARK(0x8004D9D4);
ZZ_MARK(0x8004D9D8);
ZZ_MARK(0x8004D9DC);
ZZ_MARK_TARGET(0x8004D9E0,ZZ_4D9A0_40);
ZZ_MARK(0x8004D9E4);
ZZ_MARK(0x8004D9E8);
ZZ_MARK_TARGET(0x8004D9EC,ZZ_4D9A0_4C);
ZZ_MARK(0x8004D9F0);
ZZ_MARK(0x8004D9F4);
ZZ_MARK(0x8004D9F8);
ZZ_MARK(0x8004D9FC);
ZZ_MARK(0x8004DA00);
ZZ_MARK(0x8004DA04);
ZZ_MARK(0x8004DA08);
ZZ_MARK(0x8004DA0C);
ZZ_MARK(0x8004DA10);
ZZ_MARK(0x8004DA14);
ZZ_MARK(0x8004DA18);
ZZ_MARK(0x8004DA1C);
ZZ_MARK(0x8004DA20);
ZZ_MARK_TARGET(0x8004DA24,ZZ_4D9A0_84);
ZZ_MARK(0x8004DA28);
ZZ_MARK(0x8004DA2C);
ZZ_MARK(0x8004DA30);
ZZ_MARK(0x8004DA34);
ZZ_MARK(0x8004DA38);
ZZ_MARK(0x8004DA3C);
ZZ_MARK(0x8004DA40);
ZZ_MARK_TARGET(0x8004DA44,ZZ_4D9A0_A4);
ZZ_MARK_TARGET(0x8004DA48,ZZ_4D9A0_A8);
ZZ_MARK(0x8004DA4C);
