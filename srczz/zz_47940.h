#ifdef ZZ_INCLUDE_CODE
ZZ_47940:
	SP -= 56;
	EMU_Write32(SP + 44,S5); //+ 0x2C
	S5 = A0;
	EMU_Write32(SP + 48,S6); //+ 0x30
	S6 = A1;
	A0 = -1;
	EMU_Write32(SP + 52,RA); //+ 0x34
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	RA = 0x80047974; //ZZ_47940_34
	EMU_Write32(SP + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(13,0x8004A71C);
	goto ZZ_4A71C;
ZZ_47940_34:
	S3 = 0x80060000;
	S3 -= 13556;
	S2 = 0x80060000;
	S2 -= 12988;
	S4 = S2 + 1;
	V0 += 960;
	AT = 0x80060000;
	EMU_Write32(AT + 264,V0); //+ 0x108
	V0 = 0x80010000;
	V0 += 2868;
	AT = 0x80060000;
	EMU_Write32(AT + 268,R0); //+ 0x10C
	AT = 0x80060000;
	EMU_Write32(AT + 272,V0); //+ 0x110
	ZZ_CLOCKCYCLES(14,0x800479AC);
ZZ_47940_6C:
	RA = 0x800479B4; //ZZ_47940_74
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004A71C);
	goto ZZ_4A71C;
ZZ_47940_74:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 264); //+ 0x108
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x800479F4);
		goto ZZ_47940_B4;
	}
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 268); //+ 0x10C
	V0 = V1 + 1;
	AT = 0x80060000;
	EMU_Write32(AT + 268,V0); //+ 0x10C
	V0 = 0x3C0000;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x80047A68);
		goto ZZ_47940_128;
	}
	ZZ_CLOCKCYCLES(16,0x800479F4);
ZZ_47940_B4:
	A0 = 0x80010000;
	A0 += 2732;
	RA = 0x80047A04; //ZZ_47940_C4
	ZZ_CLOCKCYCLES(4,0x80049424);
	goto ZZ_49424;
ZZ_47940_C4:
	A0 = EMU_ReadU8(S2);
	V0 = EMU_ReadU8(S2 + 1); //+ 0x1
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 272); //+ 0x110
	V0 <<= 2;
	V0 += S3;
	A0 <<= 2;
	V1 = EMU_ReadU32(V0);
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 13691); //+ 0xFFFFCA85
	A0 += S3;
	V0 <<= 2;
	EMU_Write32(SP + 16,V1); //+ 0x10
	AT = 0x80060000;
	AT += V0;
	A2 = EMU_ReadU32(AT - 13684); //+ 0xFFFFCA8C
	A3 = EMU_ReadU32(A0);
	A0 = 0x80010000;
	A0 += 2748;
	RA = 0x80047A58; //ZZ_47940_118
	ZZ_CLOCKCYCLES(21,0x800494DC);
	goto ZZ_494DC;
ZZ_47940_118:
	RA = 0x80047A60; //ZZ_47940_120
	ZZ_CLOCKCYCLES(2,0x80048330);
	goto ZZ_48330;
ZZ_47940_120:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x80047A6C);
	goto ZZ_47940_12C;
ZZ_47940_128:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80047A6C);
ZZ_47940_12C:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80047B94);
		goto ZZ_47940_254;
	}
	V0 = -1;
	RA = 0x80047A7C; //ZZ_47940_13C
	ZZ_CLOCKCYCLES(4,0x8004AA64);
	goto ZZ_4AA64;
ZZ_47940_13C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80047B2C);
		goto ZZ_47940_1EC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 13012); //+ 0xFFFFCD2C
	V0 = EMU_ReadU8(V0);
	S1 = V0 & 0x3;
	ZZ_CLOCKCYCLES(8,0x80047A9C);
ZZ_47940_15C:
	RA = 0x80047AA4; //ZZ_47940_164
	ZZ_CLOCKCYCLES(2,0x800473B8);
	goto ZZ_473B8;
ZZ_47940_164:
	S0 = V0;
	if (!S0)
	{
		V0 = S0 & 0x4;
		ZZ_CLOCKCYCLES(3,0x80047B1C);
		goto ZZ_47940_1DC;
	}
	V0 = S0 & 0x4;
	if (!V0)
	{
		V0 = S0 & 0x2;
		ZZ_CLOCKCYCLES(5,0x80047AE4);
		goto ZZ_47940_1A4;
	}
	V0 = S0 & 0x2;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 13720); //+ 0xFFFFCA68
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80047AE0);
		goto ZZ_47940_1A0;
	}
	A0 = EMU_ReadU8(S4);
	A1 = 0x80060000;
	A1 += 248;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80047AE0; //ZZ_47940_1A0
	ZZ_CLOCKCYCLES_JR(15);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80047AD8)
	ZZ_JUMPREGISTER_END();
ZZ_47940_1A0:
	V0 = S0 & 0x2;
	ZZ_CLOCKCYCLES(1,0x80047AE4);
ZZ_47940_1A4:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80047A9C);
		goto ZZ_47940_15C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 13724); //+ 0xFFFFCA64
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80047A9C);
		goto ZZ_47940_15C;
	}
	A0 = EMU_ReadU8(S2);
	A1 = 0x80060000;
	A1 += 240;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80047B14; //ZZ_47940_1D4
	ZZ_CLOCKCYCLES_JR(12);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,80047B0C)
	ZZ_JUMPREGISTER_END();
ZZ_47940_1D4:
	ZZ_CLOCKCYCLES(2,0x80047A9C);
	goto ZZ_47940_15C;
ZZ_47940_1DC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 13012); //+ 0xFFFFCD2C
	EMU_Write8(V0,S1);
	ZZ_CLOCKCYCLES(4,0x80047B2C);
ZZ_47940_1EC:
	V0 = EMU_ReadU8(S2);
	A2 = V0 & 0xFF;
	V0 = 2;
	if (A2 == V0)
	{
		V0 = 5;
		ZZ_CLOCKCYCLES(6,0x80047B4C);
		goto ZZ_47940_20C;
	}
	V0 = 5;
	if (A2 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x80047B8C);
		goto ZZ_47940_24C;
	}
	ZZ_CLOCKCYCLES(8,0x80047B4C);
ZZ_47940_20C:
	V0 = 2;
	EMU_Write8(S2,V0);
	A1 = S6;
	A0 = 0x80060000;
	A0 += 240;
	if (!A1)
	{
		V1 = 7;
		ZZ_CLOCKCYCLES(7,0x80047B84);
		goto ZZ_47940_244;
	}
	V1 = 7;
	A3 = -1;
	ZZ_CLOCKCYCLES(8,0x80047B6C);
ZZ_47940_22C:
	V0 = EMU_ReadU8(A0);
	A0 += 1;
	V1 -= 1;
	EMU_Write8(A1,V0);
	if (V1 != A3)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(6,0x80047B6C);
		goto ZZ_47940_22C;
	}
	A1 += 1;
	ZZ_CLOCKCYCLES(6,0x80047B84);
ZZ_47940_244:
	V0 = A2;
	ZZ_CLOCKCYCLES(2,0x80047B94);
	goto ZZ_47940_254;
ZZ_47940_24C:
	if (!S5)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x800479AC);
		goto ZZ_47940_6C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x80047B94);
ZZ_47940_254:
	RA = EMU_ReadU32(SP + 52); //+ 0x34
	S6 = EMU_ReadU32(SP + 48); //+ 0x30
	S5 = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80047F58,ZZ_47E8C_CC);
	ZZ_JUMPREGISTER(0x80046D88,ZZ_46D78_10);
	ZZ_JUMPREGISTER(0x80048724,ZZ_48554_1D0);
	ZZ_JUMPREGISTER(0x80047154,ZZ_4704C_108);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80047940,ZZ_47940);
ZZ_MARK(0x80047944);
ZZ_MARK(0x80047948);
ZZ_MARK(0x8004794C);
ZZ_MARK(0x80047950);
ZZ_MARK(0x80047954);
ZZ_MARK(0x80047958);
ZZ_MARK(0x8004795C);
ZZ_MARK(0x80047960);
ZZ_MARK(0x80047964);
ZZ_MARK(0x80047968);
ZZ_MARK(0x8004796C);
ZZ_MARK(0x80047970);
ZZ_MARK_TARGET(0x80047974,ZZ_47940_34);
ZZ_MARK(0x80047978);
ZZ_MARK(0x8004797C);
ZZ_MARK(0x80047980);
ZZ_MARK(0x80047984);
ZZ_MARK(0x80047988);
ZZ_MARK(0x8004798C);
ZZ_MARK(0x80047990);
ZZ_MARK(0x80047994);
ZZ_MARK(0x80047998);
ZZ_MARK(0x8004799C);
ZZ_MARK(0x800479A0);
ZZ_MARK(0x800479A4);
ZZ_MARK(0x800479A8);
ZZ_MARK_TARGET(0x800479AC,ZZ_47940_6C);
ZZ_MARK(0x800479B0);
ZZ_MARK_TARGET(0x800479B4,ZZ_47940_74);
ZZ_MARK(0x800479B8);
ZZ_MARK(0x800479BC);
ZZ_MARK(0x800479C0);
ZZ_MARK(0x800479C4);
ZZ_MARK(0x800479C8);
ZZ_MARK(0x800479CC);
ZZ_MARK(0x800479D0);
ZZ_MARK(0x800479D4);
ZZ_MARK(0x800479D8);
ZZ_MARK(0x800479DC);
ZZ_MARK(0x800479E0);
ZZ_MARK(0x800479E4);
ZZ_MARK(0x800479E8);
ZZ_MARK(0x800479EC);
ZZ_MARK(0x800479F0);
ZZ_MARK_TARGET(0x800479F4,ZZ_47940_B4);
ZZ_MARK(0x800479F8);
ZZ_MARK(0x800479FC);
ZZ_MARK(0x80047A00);
ZZ_MARK_TARGET(0x80047A04,ZZ_47940_C4);
ZZ_MARK(0x80047A08);
ZZ_MARK(0x80047A0C);
ZZ_MARK(0x80047A10);
ZZ_MARK(0x80047A14);
ZZ_MARK(0x80047A18);
ZZ_MARK(0x80047A1C);
ZZ_MARK(0x80047A20);
ZZ_MARK(0x80047A24);
ZZ_MARK(0x80047A28);
ZZ_MARK(0x80047A2C);
ZZ_MARK(0x80047A30);
ZZ_MARK(0x80047A34);
ZZ_MARK(0x80047A38);
ZZ_MARK(0x80047A3C);
ZZ_MARK(0x80047A40);
ZZ_MARK(0x80047A44);
ZZ_MARK(0x80047A48);
ZZ_MARK(0x80047A4C);
ZZ_MARK(0x80047A50);
ZZ_MARK(0x80047A54);
ZZ_MARK_TARGET(0x80047A58,ZZ_47940_118);
ZZ_MARK(0x80047A5C);
ZZ_MARK_TARGET(0x80047A60,ZZ_47940_120);
ZZ_MARK(0x80047A64);
ZZ_MARK_TARGET(0x80047A68,ZZ_47940_128);
ZZ_MARK_TARGET(0x80047A6C,ZZ_47940_12C);
ZZ_MARK(0x80047A70);
ZZ_MARK(0x80047A74);
ZZ_MARK(0x80047A78);
ZZ_MARK_TARGET(0x80047A7C,ZZ_47940_13C);
ZZ_MARK(0x80047A80);
ZZ_MARK(0x80047A84);
ZZ_MARK(0x80047A88);
ZZ_MARK(0x80047A8C);
ZZ_MARK(0x80047A90);
ZZ_MARK(0x80047A94);
ZZ_MARK(0x80047A98);
ZZ_MARK_TARGET(0x80047A9C,ZZ_47940_15C);
ZZ_MARK(0x80047AA0);
ZZ_MARK_TARGET(0x80047AA4,ZZ_47940_164);
ZZ_MARK(0x80047AA8);
ZZ_MARK(0x80047AAC);
ZZ_MARK(0x80047AB0);
ZZ_MARK(0x80047AB4);
ZZ_MARK(0x80047AB8);
ZZ_MARK(0x80047ABC);
ZZ_MARK(0x80047AC0);
ZZ_MARK(0x80047AC4);
ZZ_MARK(0x80047AC8);
ZZ_MARK(0x80047ACC);
ZZ_MARK(0x80047AD0);
ZZ_MARK(0x80047AD4);
ZZ_MARK(0x80047AD8);
ZZ_MARK(0x80047ADC);
ZZ_MARK_TARGET(0x80047AE0,ZZ_47940_1A0);
ZZ_MARK_TARGET(0x80047AE4,ZZ_47940_1A4);
ZZ_MARK(0x80047AE8);
ZZ_MARK(0x80047AEC);
ZZ_MARK(0x80047AF0);
ZZ_MARK(0x80047AF4);
ZZ_MARK(0x80047AF8);
ZZ_MARK(0x80047AFC);
ZZ_MARK(0x80047B00);
ZZ_MARK(0x80047B04);
ZZ_MARK(0x80047B08);
ZZ_MARK(0x80047B0C);
ZZ_MARK(0x80047B10);
ZZ_MARK_TARGET(0x80047B14,ZZ_47940_1D4);
ZZ_MARK(0x80047B18);
ZZ_MARK_TARGET(0x80047B1C,ZZ_47940_1DC);
ZZ_MARK(0x80047B20);
ZZ_MARK(0x80047B24);
ZZ_MARK(0x80047B28);
ZZ_MARK_TARGET(0x80047B2C,ZZ_47940_1EC);
ZZ_MARK(0x80047B30);
ZZ_MARK(0x80047B34);
ZZ_MARK(0x80047B38);
ZZ_MARK(0x80047B3C);
ZZ_MARK(0x80047B40);
ZZ_MARK(0x80047B44);
ZZ_MARK(0x80047B48);
ZZ_MARK_TARGET(0x80047B4C,ZZ_47940_20C);
ZZ_MARK(0x80047B50);
ZZ_MARK(0x80047B54);
ZZ_MARK(0x80047B58);
ZZ_MARK(0x80047B5C);
ZZ_MARK(0x80047B60);
ZZ_MARK(0x80047B64);
ZZ_MARK(0x80047B68);
ZZ_MARK_TARGET(0x80047B6C,ZZ_47940_22C);
ZZ_MARK(0x80047B70);
ZZ_MARK(0x80047B74);
ZZ_MARK(0x80047B78);
ZZ_MARK(0x80047B7C);
ZZ_MARK(0x80047B80);
ZZ_MARK_TARGET(0x80047B84,ZZ_47940_244);
ZZ_MARK(0x80047B88);
ZZ_MARK_TARGET(0x80047B8C,ZZ_47940_24C);
ZZ_MARK(0x80047B90);
ZZ_MARK_TARGET(0x80047B94,ZZ_47940_254);
ZZ_MARK(0x80047B98);
ZZ_MARK(0x80047B9C);
ZZ_MARK(0x80047BA0);
ZZ_MARK(0x80047BA4);
ZZ_MARK(0x80047BA8);
ZZ_MARK(0x80047BAC);
ZZ_MARK(0x80047BB0);
ZZ_MARK(0x80047BB4);
ZZ_MARK(0x80047BB8);
ZZ_MARK(0x80047BBC);
