#ifdef ZZ_INCLUDE_CODE
ZZ_313F8:
	V1 = EMU_ReadU32(A1);
	V0 = EMU_ReadU32(A2);
	T2 = EMU_ReadU32(SP + 16); //+ 0x10
	T3 = EMU_ReadU32(SP + 20); //+ 0x14
	V1 = V1 - V0;
	V0 = -A3;
	T0 = -T2;
	A3 = (int32_t)A3 < (int32_t)V1;
	if (A3)
	{
		T1 = -T3;
		ZZ_CLOCKCYCLES(10,0x80031474);
		goto ZZ_313F8_7C;
	}
	T1 = -T3;
	V0 = (int32_t)V1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x80031474);
		goto ZZ_313F8_7C;
	}
	V0 = EMU_ReadU32(A1 + 4); //+ 0x4
	V1 = EMU_ReadU32(A2 + 4); //+ 0x4
	V1 = V0 - V1;
	V0 = (int32_t)T2 < (int32_t)V1;
	if (V0)
	{
		V0 = (int32_t)V1 < (int32_t)T0;
		ZZ_CLOCKCYCLES(20,0x80031474);
		goto ZZ_313F8_7C;
	}
	V0 = (int32_t)V1 < (int32_t)T0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(22,0x80031474);
		goto ZZ_313F8_7C;
	}
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	V1 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = V0 - V1;
	V0 = (int32_t)T3 < (int32_t)V1;
	if (V0)
	{
		V0 = (int32_t)V1 < (int32_t)T1;
		ZZ_CLOCKCYCLES(29,0x80031474);
		goto ZZ_313F8_7C;
	}
	V0 = (int32_t)V1 < (int32_t)T1;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(31,0x80031490);
		goto ZZ_313F8_98;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(31,0x80031474);
ZZ_313F8_7C:
	if (!A0)
	{
		ZZ_CLOCKCYCLES(2,0x8003148C);
		goto ZZ_313F8_94;
	}
	V0 = EMU_ReadU32(A0 + 168); //+ 0xA8
	V0 |= 0x8000;
	EMU_Write32(A0 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(6,0x8003148C);
ZZ_313F8_94:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80031490);
ZZ_313F8_98:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8001E574,ZZ_1D860_D14);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800313F8,0x80031474,ZZ_313F8);
ZZ_MARK_TARGET(0x80031474,0x8003148C,ZZ_313F8_7C);
ZZ_MARK_TARGET(0x8003148C,0x80031490,ZZ_313F8_94);
ZZ_MARK_TARGET(0x80031490,0x80031498,ZZ_313F8_98);
