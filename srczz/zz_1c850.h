#ifdef ZZ_INCLUDE_CODE
ZZ_1C850:
	SP -= 64;
	EMU_Write32(SP + 48,S0); //+ 0x30
	S0 = A0;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	V0 = 0x3;
	if (V1 != V0)
	{
		S1 = A1;
		ZZ_CLOCKCYCLES(9,0x8001CD2C);
		goto ZZ_1C850_4DC;
	}
	S1 = A1;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(14,0x8001C890);
		goto ZZ_1C850_40;
	}
	RA = 0x8001C890; //ZZ_1C850_40
	ZZ_CLOCKCYCLES(16,0x80015A04);
	goto ZZ_15A04;
ZZ_1C850_40:
	A2 = 0x80070000;
	A2 = EMU_ReadU32(A2 - 12756); //+ 0xFFFFCE2C
	AT = 0x80070000;
	EMU_Write32(AT - 12808,S0); //+ 0xFFFFCDF8
	A0 = A2 & 0x8;
	if (!A0)
	{
		V0 = 0x100000;
		ZZ_CLOCKCYCLES(7,0x8001C9CC);
		goto ZZ_1C850_17C;
	}
	V0 = 0x100000;
	A1 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001C8C4);
		goto ZZ_1C850_74;
	}
	S1 = 0x1;
	ZZ_CLOCKCYCLES(13,0x8001C8C4);
ZZ_1C850_74:
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0x2000000;
	V0 &= V1;
	if (V0)
	{
		V0 = A2 & 0x8000;
		ZZ_CLOCKCYCLES(5,0x8001C8E8);
		goto ZZ_1C850_98;
	}
	V0 = A2 & 0x8000;
	V0 = 0x20000;
	V0 &= A1;
	if (!V0)
	{
		V0 = A2 & 0x8000;
		ZZ_CLOCKCYCLES(9,0x8001C8F8);
		goto ZZ_1C850_A8;
	}
	V0 = A2 & 0x8000;
	ZZ_CLOCKCYCLES(9,0x8001C8E8);
ZZ_1C850_98:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001C8F8);
		goto ZZ_1C850_A8;
	}
	A0 = 0x1;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_A8:
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x400;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 1025;
		ZZ_CLOCKCYCLES(8,0x8001C9BC);
		goto ZZ_1C850_16C;
	}
	V0 = (int32_t)V1 < 1025;
	if (!V0)
	{
		V0 = 0x200;
		ZZ_CLOCKCYCLES(10,0x8001C954);
		goto ZZ_1C850_104;
	}
	V0 = 0x200;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 513;
		ZZ_CLOCKCYCLES(12,0x8001C9AC);
		goto ZZ_1C850_15C;
	}
	V0 = (int32_t)V1 < 513;
	if (!V0)
	{
		V0 = 0x100;
		ZZ_CLOCKCYCLES(14,0x8001C940);
		goto ZZ_1C850_F0;
	}
	V0 = 0x100;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(16,0x8001C98C);
		goto ZZ_1C850_13C;
	}
	ZZ_CLOCKCYCLES(18,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_F0:
	V0 = 0x300;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001C99C);
		goto ZZ_1C850_14C;
	}
	ZZ_CLOCKCYCLES(5,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_104:
	V0 = 0x600;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 1537;
		ZZ_CLOCKCYCLES(3,0x8001C99C);
		goto ZZ_1C850_14C;
	}
	V0 = (int32_t)V1 < 1537;
	if (!V0)
	{
		V0 = 0x500;
		ZZ_CLOCKCYCLES(5,0x8001C978);
		goto ZZ_1C850_128;
	}
	V0 = 0x500;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8001C99C);
		goto ZZ_1C850_14C;
	}
	ZZ_CLOCKCYCLES(9,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_128:
	V0 = 0x900;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001C9BC);
		goto ZZ_1C850_16C;
	}
	ZZ_CLOCKCYCLES(5,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_13C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x20;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_14C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x80;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_15C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x100;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_16C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x400;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
ZZ_1C850_17C:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x8001CB38);
		goto ZZ_1C850_2E8;
	}
	if (!A0)
	{
		V1 = 0x10000000;
		ZZ_CLOCKCYCLES(4,0x8001CB38);
		goto ZZ_1C850_2E8;
	}
	V1 = 0x10000000;
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8001CA20);
		goto ZZ_1C850_1D0;
	}
	V0 = EMU_ReadU32(S0 + 228); //+ 0xE4
	if (!V0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(13,0x8001CA20);
		goto ZZ_1C850_1D0;
	}
	V0 -= 1;
	if (V0)
	{
		EMU_Write32(S0 + 228,V0); //+ 0xE4
		ZZ_CLOCKCYCLES(15,0x8001CB38);
		goto ZZ_1C850_2E8;
	}
	EMU_Write32(S0 + 228,V0); //+ 0xE4
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0xEFFF0000;
	V1 |= 0xFFFF;
	V0 &= V1;
	EMU_Write32(S0 + 172,V0); //+ 0xAC
	ZZ_CLOCKCYCLES(21,0x8001CB38);
	goto ZZ_1C850_2E8;
ZZ_1C850_1D0:
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12804); //+ 0xFFFFCDFC
	V0 &= 0x10;
	if (!V0)
	{
		EMU_Write32(S0 + 220,V1); //+ 0xDC
		ZZ_CLOCKCYCLES(6,0x8001CA68);
		goto ZZ_1C850_218;
	}
	EMU_Write32(S0 + 220,V1); //+ 0xDC
	V0 = EMU_ReadU32(S0 + 96); //+ 0x60
	V1 = EMU_ReadU32(S0 + 100); //+ 0x64
	A0 = EMU_ReadU32(S0 + 104); //+ 0x68
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,V1); //+ 0x1C
	EMU_Write32(SP + 32,A0); //+ 0x20
	V0 = EMU_ReadU32(S0 + 108); //+ 0x6C
	V1 = EMU_ReadU32(S0 + 112); //+ 0x70
	A0 = EMU_ReadU32(S0 + 116); //+ 0x74
	EMU_Write32(SP + 36,V0); //+ 0x24
	EMU_Write32(SP + 40,V1); //+ 0x28
	EMU_Write32(SP + 44,A0); //+ 0x2C
	ZZ_CLOCKCYCLES(18,0x8001CA68);
ZZ_1C850_218:
	V0 = EMU_ReadU32(S0 + 200); //+ 0xC8
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x8001CAAC);
		goto ZZ_1C850_25C;
	}
	A0 = S0;
	A1 = R0;
	RA = 0x8001CA84; //ZZ_1C850_234
	A2 = 0xFFFF;
	ZZ_CLOCKCYCLES(7,0x8001C758);
	goto ZZ_1C758;
ZZ_1C850_234:
	V0 = EMU_ReadU32(S0 + 200); //+ 0xC8
	A0 = S0;
	A1 = 0x3;
	A2 = R0;
	RA = 0x8001CA9C; //ZZ_1C850_24C
	EMU_Write32(S0 + 192,V0); //+ 0xC0
	ZZ_CLOCKCYCLES(6,0x8003A2AC);
	goto ZZ_3A2AC;
ZZ_1C850_24C:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (!V0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(4,0x8001CD30);
		goto ZZ_1C850_4E0;
	}
	V0 = V1;
	ZZ_CLOCKCYCLES(4,0x8001CAAC);
ZZ_1C850_25C:
	A1 = EMU_ReadU32(S0 + 188); //+ 0xBC
	A0 = EMU_ReadU32(A1 - 4); //+ 0xFFFFFFFC
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12804); //+ 0xFFFFCDFC
	V0 = 0xFF0000;
	V0 |= 0xFFFF;
	V0 &= A0;
	V1 = V1 - V0;
	A0 >>= 24;
	V1 = V1 < A0;
	if (V1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(13,0x8001CB0C);
		goto ZZ_1C850_2BC;
	}
	A0 = S0;
	V0 = A1 - 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	A1 = 0x4;
	RA = 0x8001CAF4; //ZZ_1C850_2A4
	A2 = R0;
	ZZ_CLOCKCYCLES(18,0x8003A2AC);
	goto ZZ_3A2AC;
ZZ_1C850_2A4:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x8001CB0C);
		goto ZZ_1C850_2BC;
	}
	A0 = S0;
	V0 = V1;
	ZZ_CLOCKCYCLES(6,0x8001CD30);
	goto ZZ_1C850_4E0;
ZZ_1C850_2BC:
	RA = 0x8001CB14; //ZZ_1C850_2C4
	A1 = S1;
	ZZ_CLOCKCYCLES(2,0x8001C114);
	goto ZZ_1C114;
ZZ_1C850_2C4:
	A0 = S0;
	A1 = SP + 24;
	RA = 0x8001CB24; //ZZ_1C850_2D4
	A2 = SP + 16;
	ZZ_CLOCKCYCLES(4,0x8001D860);
	goto ZZ_1D860;
ZZ_1C850_2D4:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V1 = -33;
	V0 &= V1;
	EMU_Write32(S0 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(5,0x8001CB44);
	goto ZZ_1C850_2F4;
ZZ_1C850_2E8:
	A0 = S0;
	RA = 0x8001CB44; //ZZ_1C850_2F4
	A1 = SP + 16;
	ZZ_CLOCKCYCLES(3,0x8001ABB8);
	goto ZZ_1ABB8;
ZZ_1C850_2F4:
	V0 = EMU_ReadU32(S0 + 232); //+ 0xE8
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	V0 = 0x1;
	V1 = EMU_ReadU8(S0 + 288); //+ 0x120
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	V1 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 = V1 & 0x100;
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12756); //+ 0xFFFFCE2C
	V0 = A0 & 0x4;
	if (!V0)
	{
		V0 = 0x2000000;
		ZZ_CLOCKCYCLES(19,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	V0 = 0x2000000;
	V0 &= V1;
	if (V0)
	{
		V0 = A0 & 0x4000;
		ZZ_CLOCKCYCLES(22,0x8001CBB0);
		goto ZZ_1C850_360;
	}
	V0 = A0 & 0x4000;
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		V0 = A0 & 0x4000;
		ZZ_CLOCKCYCLES(27,0x8001CBB8);
		goto ZZ_1C850_368;
	}
	V0 = A0 & 0x4000;
	ZZ_CLOCKCYCLES(27,0x8001CBB0);
ZZ_1C850_360:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001CCA4);
		goto ZZ_1C850_454;
	}
	ZZ_CLOCKCYCLES(2,0x8001CBB8);
ZZ_1C850_368:
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x400;
	if (V1 == V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(8,0x8001CCCC);
		goto ZZ_1C850_47C;
	}
	A0 = R0;
	V0 = (int32_t)V1 < 1025;
	if (!V0)
	{
		V0 = 0x200;
		ZZ_CLOCKCYCLES(11,0x8001CC18);
		goto ZZ_1C850_3C8;
	}
	V0 = 0x200;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 513;
		ZZ_CLOCKCYCLES(13,0x8001CCBC);
		goto ZZ_1C850_46C;
	}
	V0 = (int32_t)V1 < 513;
	if (!V0)
	{
		V0 = 0x100;
		ZZ_CLOCKCYCLES(15,0x8001CC04);
		goto ZZ_1C850_3B4;
	}
	V0 = 0x100;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(17,0x8001CC50);
		goto ZZ_1C850_400;
	}
	ZZ_CLOCKCYCLES(19,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_3B4:
	V0 = 0x300;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001CCAC);
		goto ZZ_1C850_45C;
	}
	ZZ_CLOCKCYCLES(5,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_3C8:
	V0 = 0x600;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 1537;
		ZZ_CLOCKCYCLES(3,0x8001CCAC);
		goto ZZ_1C850_45C;
	}
	V0 = (int32_t)V1 < 1537;
	if (!V0)
	{
		V0 = 0x500;
		ZZ_CLOCKCYCLES(5,0x8001CC3C);
		goto ZZ_1C850_3EC;
	}
	V0 = 0x500;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8001CCAC);
		goto ZZ_1C850_45C;
	}
	ZZ_CLOCKCYCLES(9,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_3EC:
	V0 = 0x900;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001CCCC);
		goto ZZ_1C850_47C;
	}
	ZZ_CLOCKCYCLES(5,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_400:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001CCDC);
		goto ZZ_1C850_48C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3036); //+ 0xBDC
	V0 &= 0x1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001CCA4);
		goto ZZ_1C850_454;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 3048); //+ 0xFFFFF418
	if (V0)
	{
		V0 = 0x4;
		ZZ_CLOCKCYCLES(17,0x8001CCA4);
		goto ZZ_1C850_454;
	}
	V0 = 0x4;
	V1 = EMU_ReadU32(S0 + 264); //+ 0x108
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(21,0x8001CCDC);
		goto ZZ_1C850_48C;
	}
	ZZ_CLOCKCYCLES(21,0x8001CCA4);
ZZ_1C850_454:
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_45C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x40;
	ZZ_CLOCKCYCLES(4,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_46C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x200;
	ZZ_CLOCKCYCLES(4,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_47C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x800;
	ZZ_CLOCKCYCLES(4,0x8001CCDC);
ZZ_1C850_48C:
	if (S1)
	{
		V1 = 0x8000000;
		ZZ_CLOCKCYCLES(2,0x8001CD14);
		goto ZZ_1C850_4C4;
	}
	V1 = 0x8000000;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= V1;
	if (V0)
	{
		V1 = 0x100000;
		ZZ_CLOCKCYCLES(8,0x8001CD14);
		goto ZZ_1C850_4C4;
	}
	V1 = 0x100000;
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x8001CD14);
		goto ZZ_1C850_4C4;
	}
	A0 = R0;
	ZZ_CLOCKCYCLES(14,0x8001CD14);
ZZ_1C850_4C4:
	if (!A0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(2,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	A0 = S0;
	RA = 0x8001CD24; //ZZ_1C850_4D4
	A1 = SP + 16;
	ZZ_CLOCKCYCLES(4,0x8001AD30);
	goto ZZ_1AD30;
ZZ_1C850_4D4:
	AT = 0x80070000;
	EMU_Write32(AT - 12808,R0); //+ 0xFFFFCDF8
	ZZ_CLOCKCYCLES(2,0x8001CD2C);
ZZ_1C850_4DC:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001CD30);
ZZ_1C850_4E0:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001C850,0x8001C890,ZZ_1C850);
ZZ_MARK_TARGET(0x8001C890,0x8001C8C4,ZZ_1C850_40);
ZZ_MARK_TARGET(0x8001C8C4,0x8001C8E8,ZZ_1C850_74);
ZZ_MARK_TARGET(0x8001C8E8,0x8001C8F8,ZZ_1C850_98);
ZZ_MARK_TARGET(0x8001C8F8,0x8001C940,ZZ_1C850_A8);
ZZ_MARK_TARGET(0x8001C940,0x8001C954,ZZ_1C850_F0);
ZZ_MARK_TARGET(0x8001C954,0x8001C978,ZZ_1C850_104);
ZZ_MARK_TARGET(0x8001C978,0x8001C98C,ZZ_1C850_128);
ZZ_MARK_TARGET(0x8001C98C,0x8001C99C,ZZ_1C850_13C);
ZZ_MARK_TARGET(0x8001C99C,0x8001C9AC,ZZ_1C850_14C);
ZZ_MARK_TARGET(0x8001C9AC,0x8001C9BC,ZZ_1C850_15C);
ZZ_MARK_TARGET(0x8001C9BC,0x8001C9CC,ZZ_1C850_16C);
ZZ_MARK_TARGET(0x8001C9CC,0x8001CA20,ZZ_1C850_17C);
ZZ_MARK_TARGET(0x8001CA20,0x8001CA68,ZZ_1C850_1D0);
ZZ_MARK_TARGET(0x8001CA68,0x8001CA84,ZZ_1C850_218);
ZZ_MARK_TARGET(0x8001CA84,0x8001CA9C,ZZ_1C850_234);
ZZ_MARK_TARGET(0x8001CA9C,0x8001CAAC,ZZ_1C850_24C);
ZZ_MARK_TARGET(0x8001CAAC,0x8001CAF4,ZZ_1C850_25C);
ZZ_MARK_TARGET(0x8001CAF4,0x8001CB0C,ZZ_1C850_2A4);
ZZ_MARK_TARGET(0x8001CB0C,0x8001CB14,ZZ_1C850_2BC);
ZZ_MARK_TARGET(0x8001CB14,0x8001CB24,ZZ_1C850_2C4);
ZZ_MARK_TARGET(0x8001CB24,0x8001CB38,ZZ_1C850_2D4);
ZZ_MARK_TARGET(0x8001CB38,0x8001CB44,ZZ_1C850_2E8);
ZZ_MARK_TARGET(0x8001CB44,0x8001CBB0,ZZ_1C850_2F4);
ZZ_MARK_TARGET(0x8001CBB0,0x8001CBB8,ZZ_1C850_360);
ZZ_MARK_TARGET(0x8001CBB8,0x8001CC04,ZZ_1C850_368);
ZZ_MARK_TARGET(0x8001CC04,0x8001CC18,ZZ_1C850_3B4);
ZZ_MARK_TARGET(0x8001CC18,0x8001CC3C,ZZ_1C850_3C8);
ZZ_MARK_TARGET(0x8001CC3C,0x8001CC50,ZZ_1C850_3EC);
ZZ_MARK_TARGET(0x8001CC50,0x8001CCA4,ZZ_1C850_400);
ZZ_MARK_TARGET(0x8001CCA4,0x8001CCAC,ZZ_1C850_454);
ZZ_MARK_TARGET(0x8001CCAC,0x8001CCBC,ZZ_1C850_45C);
ZZ_MARK_TARGET(0x8001CCBC,0x8001CCCC,ZZ_1C850_46C);
ZZ_MARK_TARGET(0x8001CCCC,0x8001CCDC,ZZ_1C850_47C);
ZZ_MARK_TARGET(0x8001CCDC,0x8001CD14,ZZ_1C850_48C);
ZZ_MARK_TARGET(0x8001CD14,0x8001CD24,ZZ_1C850_4C4);
ZZ_MARK_TARGET(0x8001CD24,0x8001CD2C,ZZ_1C850_4D4);
ZZ_MARK_TARGET(0x8001CD2C,0x8001CD30,ZZ_1C850_4DC);
ZZ_MARK_TARGET(0x8001CD30,0x8001CD48,ZZ_1C850_4E0);
