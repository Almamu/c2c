#ifdef ZZ_INCLUDE_CODE
ZZ_13FB4:
	SP -= 32;
	EMU_Write32(SP + 24,RA); //+ 0x18
	V0 = EMU_ReadS8(A0 + 14); //+ 0xE
	if (!V0)
	{
		V1 = V0;
		ZZ_CLOCKCYCLES(6,0x8001401C);
		goto ZZ_13FB4_68;
	}
	V1 = V0;
	V0 = EMU_ReadU8(A0 + 15); //+ 0xF
	V0 = V0 - V1;
	EMU_Write8(A0 + 15,V0); //+ 0xF
	V0 = EMU_ReadS8(A0 + 15); //+ 0xF
	if ((int32_t)V0 > 0)
	{
		EMU_Write8(A0 + 14,R0); //+ 0xE
		ZZ_CLOCKCYCLES(14,0x8001401C);
		goto ZZ_13FB4_68;
	}
	EMU_Write8(A0 + 14,R0); //+ 0xE
	V0 = EMU_ReadS16(A0 + 6); //+ 0x6
	if (V0)
	{
		ZZ_CLOCKCYCLES(18,0x8001401C);
		goto ZZ_13FB4_68;
	}
	RA = 0x80014004; //ZZ_13FB4_50
	ZZ_CLOCKCYCLES(20,0x8001402C);
	goto ZZ_1402C;
ZZ_13FB4_50:
	V1 = 0x80070000;
	V1 -= 32184;
	V0 = EMU_ReadU32(V1);
	V0 -= 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(6,0x8001401C);
ZZ_13FB4_68:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8001493C,ZZ_14894_A8);
	ZZ_JUMPREGISTER(0x800149E4,ZZ_14894_150);
	ZZ_JUMPREGISTER(0x8001457C,ZZ_14524_58);
	ZZ_JUMPREGISTER(0x800145CC,ZZ_14524_A8);
	ZZ_JUMPREGISTER(0x8001460C,ZZ_14524_E8);
	ZZ_JUMPREGISTER(0x80014644,ZZ_14524_120);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013FB4,0x80014004,ZZ_13FB4);
ZZ_MARK_TARGET(0x80014004,0x8001401C,ZZ_13FB4_50);
ZZ_MARK_TARGET(0x8001401C,0x8001402C,ZZ_13FB4_68);
