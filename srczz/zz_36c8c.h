#ifdef ZZ_INCLUDE_CODE
ZZ_36C8C:
	SP -= 32;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = EMU_ReadU32(GP + 232); //+ 0xE8
	A1 = 0x2A4;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	A2 = EMU_ReadU32(S2 + 2388); //+ 0x954
	A3 = R0;
	S0 = S2 + 1780;
	RA = 0x80036CBC; //ZZ_36C8C_30
	A0 = S0;
	ZZ_CLOCKCYCLES(12,0x80036D1C);
	goto ZZ_36D1C;
ZZ_36C8C_30:
	S1 = EMU_ReadU32(S2 + 1816); //+ 0x718
	A0 = S0;
	A1 = 0x2A4;
	RA = 0x80036CD0; //ZZ_36C8C_44
	EMU_Write32(S2 + 1816,R0); //+ 0x718
	ZZ_CLOCKCYCLES(5,0x80036D24);
	goto ZZ_36D24;
ZZ_36C8C_44:
	if (S1 != V0)
	{
		V0 = 0x8;
		ZZ_CLOCKCYCLES(2,0x80036CF0);
		goto ZZ_36C8C_64;
	}
	V0 = 0x8;
	V1 = EMU_ReadU32(S2 + 1780); //+ 0x6F4
	if (V1 != V0)
	{
		S0 = 0x2;
		ZZ_CLOCKCYCLES(6,0x80036CF4);
		goto ZZ_36C8C_68;
	}
	S0 = 0x2;
	V0 = R0;
	ZZ_CLOCKCYCLES(8,0x80036D00);
	goto ZZ_36C8C_74;
ZZ_36C8C_64:
	S0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80036CF4);
ZZ_36C8C_68:
	RA = 0x80036CFC; //ZZ_36C8C_70
	ZZ_CLOCKCYCLES(2,0x80036B58);
	goto ZZ_36B58;
ZZ_36C8C_70:
	V0 = S0;
	ZZ_CLOCKCYCLES(1,0x80036D00);
ZZ_36C8C_74:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80035328,ZZ_34F00_428);
	ZZ_JUMPREGISTER(0x80035CE4,ZZ_3578C_558);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80036C8C,0x80036CBC,ZZ_36C8C);
ZZ_MARK_TARGET(0x80036CBC,0x80036CD0,ZZ_36C8C_30);
ZZ_MARK_TARGET(0x80036CD0,0x80036CF0,ZZ_36C8C_44);
ZZ_MARK_TARGET(0x80036CF0,0x80036CF4,ZZ_36C8C_64);
ZZ_MARK_TARGET(0x80036CF4,0x80036CFC,ZZ_36C8C_68);
ZZ_MARK_TARGET(0x80036CFC,0x80036D00,ZZ_36C8C_70);
ZZ_MARK_TARGET(0x80036D00,0x80036D1C,ZZ_36C8C_74);
