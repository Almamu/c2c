#ifdef ZZ_INCLUDE_CODE
ZZ_2BF4C:
	SP -= 56;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	EMU_Write32(SP + 44,S3); //+ 0x2C
	S3 = A1;
	EMU_Write32(SP + 36,S1); //+ 0x24
	S1 = A2;
	EMU_Write32(SP + 48,RA); //+ 0x30
	EMU_Write32(SP + 40,S2); //+ 0x28
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	S2 = A3;
	A0 = 0x100000;
	V0 &= A0;
	if (!V0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(15,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	A3 = R0;
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V1 + 76); //+ 0x4C
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(22,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 80); //+ 0x50
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(27,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 84); //+ 0x54
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(32,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 88); //+ 0x58
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(37,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 92); //+ 0x5C
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(42,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 96); //+ 0x60
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(47,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 100); //+ 0x64
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(52,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V0 = EMU_ReadU32(V1 + 104); //+ 0x68
	V0 &= A0;
	if (!V0)
	{
		V1 = 0x40000000;
		ZZ_CLOCKCYCLES(57,0x8002C040);
		goto ZZ_2BF4C_F4;
	}
	V1 = 0x40000000;
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= V1;
	A3 = V0 < 1;
	ZZ_CLOCKCYCLES(61,0x8002C040);
ZZ_2BF4C_F4:
	A0 = S0;
	A1 = S1;
	RA = 0x8002C050; //ZZ_2BF4C_104
	A2 = S2;
	ZZ_CLOCKCYCLES(4,0x8002B890);
	goto ZZ_2B890;
ZZ_2BF4C_104:
	V1 = 0xC4650000;
	V1 |= 0x3601;
	A1 = V0;
	if (A1 != V1)
	{
		ZZ_CLOCKCYCLES(5,0x8002C06C);
		goto ZZ_2BF4C_120;
	}
	EMU_Write32(S2 + 4156,R0); //+ 0x103C
	ZZ_CLOCKCYCLES(7,0x8002C070);
	goto ZZ_2BF4C_124;
ZZ_2BF4C_120:
	EMU_Write32(S2 + 4156,A1); //+ 0x103C
	ZZ_CLOCKCYCLES(1,0x8002C070);
ZZ_2BF4C_124:
	V0 = 0xC4650000;
	V0 |= 0x3601;
	if (A1 == V0)
	{
		V0 = 0x40000000;
		ZZ_CLOCKCYCLES(4,0x8002C1B8);
		goto ZZ_2BF4C_26C;
	}
	V0 = 0x40000000;
	V1 = EMU_ReadU32(S0 + 256); //+ 0x100
	A0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 &= V0;
	if (V1)
	{
		A2 = A1 - 1;
		ZZ_CLOCKCYCLES(9,0x8002C0BC);
		goto ZZ_2BF4C_170;
	}
	A2 = A1 - 1;
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 += A0;
	V0 = (int32_t)A2 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(17,0x8002C1B8);
		goto ZZ_2BF4C_26C;
	}
	ZZ_CLOCKCYCLES(19,0x8002C0D4);
	goto ZZ_2BF4C_188;
ZZ_2BF4C_170:
	V0 = 0x20000;
	V0 |= 0x9900;
	V0 += A0;
	V0 = (int32_t)A2 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002C1B8);
		goto ZZ_2BF4C_26C;
	}
	ZZ_CLOCKCYCLES(6,0x8002C0D4);
ZZ_2BF4C_188:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V0 &= 0x1;
	if (V0)
	{
		V1 = 0x40000000;
		ZZ_CLOCKCYCLES(5,0x8002C1B8);
		goto ZZ_2BF4C_26C;
	}
	V1 = 0x40000000;
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= V1;
	if (V0)
	{
		V0 = 0xFFFD0000;
		ZZ_CLOCKCYCLES(10,0x8002C118);
		goto ZZ_2BF4C_1CC;
	}
	V0 = 0xFFFD0000;
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 = A1 - V0;
	A1 = V0 - 1;
	ZZ_CLOCKCYCLES(17,0x8002C120);
	goto ZZ_2BF4C_1D4;
ZZ_2BF4C_1CC:
	V0 |= 0x66FF;
	A1 += V0;
	ZZ_CLOCKCYCLES(2,0x8002C120);
ZZ_2BF4C_1D4:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002C160);
		goto ZZ_2BF4C_214;
	}
	V1 = EMU_ReadU32(S1 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8002C14C);
		goto ZZ_2BF4C_200;
	}
	A1 = V1;
	ZZ_CLOCKCYCLES(11,0x8002C14C);
ZZ_2BF4C_200:
	A0 = EMU_ReadU32(S3 + 4); //+ 0x4
	RA = 0x8002C158; //ZZ_2BF4C_20C
	A2 = 0x4E20;
	ZZ_CLOCKCYCLES(3,0x8001E844);
	goto ZZ_1E844;
ZZ_2BF4C_20C:
	EMU_Write32(S1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(2,0x8002C19C);
	goto ZZ_2BF4C_250;
ZZ_2BF4C_214:
	A0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		V0 = (int32_t)A1 < (int32_t)V1;
		ZZ_CLOCKCYCLES(6,0x8002C188);
		goto ZZ_2BF4C_23C;
	}
	V0 = (int32_t)A1 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002C198);
		goto ZZ_2BF4C_24C;
	}
	A1 = V1;
	ZZ_CLOCKCYCLES(10,0x8002C198);
	goto ZZ_2BF4C_24C;
ZZ_2BF4C_23C:
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002C198);
		goto ZZ_2BF4C_24C;
	}
	A1 = A0;
	ZZ_CLOCKCYCLES(4,0x8002C198);
ZZ_2BF4C_24C:
	EMU_Write32(S1 + 4,A1); //+ 0x4
	ZZ_CLOCKCYCLES(1,0x8002C19C);
ZZ_2BF4C_250:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V1 = EMU_ReadU32(S0 + 136); //+ 0x88
	V0 |= 0x80;
	if ((int32_t)V1 <= 0)
	{
		EMU_Write32(S0 + 168,V0); //+ 0xA8
		ZZ_CLOCKCYCLES(5,0x8002C24C);
		goto ZZ_2BF4C_300;
	}
	EMU_Write32(S0 + 168,V0); //+ 0xA8
	EMU_Write32(S0 + 136,R0); //+ 0x88
	ZZ_CLOCKCYCLES(7,0x8002C24C);
	goto ZZ_2BF4C_300;
ZZ_2BF4C_26C:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= 0x40;
	if (!V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(5,0x8002C24C);
		goto ZZ_2BF4C_300;
	}
	V0 = 0xC4650000;
	V0 |= 0x3601;
	if (A1 != V0)
	{
		V1 = 0x40000000;
		ZZ_CLOCKCYCLES(8,0x8002C1E4);
		goto ZZ_2BF4C_298;
	}
	V1 = 0x40000000;
	V0 = EMU_ReadU32(S3 + 4); //+ 0x4
	EMU_Write32(S1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(11,0x8002C24C);
	goto ZZ_2BF4C_300;
ZZ_2BF4C_298:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= V1;
	if (V0)
	{
		EMU_Write32(SP + 24,R0); //+ 0x18
		ZZ_CLOCKCYCLES(5,0x8002C214);
		goto ZZ_2BF4C_2C8;
	}
	EMU_Write32(SP + 24,R0); //+ 0x18
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 = A1 - V0;
	A1 = V0 - 1;
	ZZ_CLOCKCYCLES(12,0x8002C220);
	goto ZZ_2BF4C_2D4;
ZZ_2BF4C_2C8:
	V0 = 0xFFFD0000;
	V0 |= 0x66FF;
	A1 += V0;
	ZZ_CLOCKCYCLES(3,0x8002C220);
ZZ_2BF4C_2D4:
	A0 = EMU_ReadU32(S3 + 4); //+ 0x4
	RA = 0x8002C22C; //ZZ_2BF4C_2E0
	A2 = 0x4E20;
	ZZ_CLOCKCYCLES(3,0x8001E844);
	goto ZZ_1E844;
ZZ_2BF4C_2E0:
	A0 = R0;
	A1 = S0;
	A2 = 0x3300;
	A3 = 0x1;
	EMU_Write32(S1 + 4,V0); //+ 0x4
	V0 = SP + 24;
	RA = 0x8002C24C; //ZZ_2BF4C_300
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(8,0x8001CD48);
	goto ZZ_1CD48;
ZZ_2BF4C_300:
	RA = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 56;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8002C5E0,ZZ_2C404_1DC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002BF4C,0x8002C040,ZZ_2BF4C);
ZZ_MARK_TARGET(0x8002C040,0x8002C050,ZZ_2BF4C_F4);
ZZ_MARK_TARGET(0x8002C050,0x8002C06C,ZZ_2BF4C_104);
ZZ_MARK_TARGET(0x8002C06C,0x8002C070,ZZ_2BF4C_120);
ZZ_MARK_TARGET(0x8002C070,0x8002C0BC,ZZ_2BF4C_124);
ZZ_MARK_TARGET(0x8002C0BC,0x8002C0D4,ZZ_2BF4C_170);
ZZ_MARK_TARGET(0x8002C0D4,0x8002C118,ZZ_2BF4C_188);
ZZ_MARK_TARGET(0x8002C118,0x8002C120,ZZ_2BF4C_1CC);
ZZ_MARK_TARGET(0x8002C120,0x8002C14C,ZZ_2BF4C_1D4);
ZZ_MARK_TARGET(0x8002C14C,0x8002C158,ZZ_2BF4C_200);
ZZ_MARK_TARGET(0x8002C158,0x8002C160,ZZ_2BF4C_20C);
ZZ_MARK_TARGET(0x8002C160,0x8002C188,ZZ_2BF4C_214);
ZZ_MARK_TARGET(0x8002C188,0x8002C198,ZZ_2BF4C_23C);
ZZ_MARK_TARGET(0x8002C198,0x8002C19C,ZZ_2BF4C_24C);
ZZ_MARK_TARGET(0x8002C19C,0x8002C1B8,ZZ_2BF4C_250);
ZZ_MARK_TARGET(0x8002C1B8,0x8002C1E4,ZZ_2BF4C_26C);
ZZ_MARK_TARGET(0x8002C1E4,0x8002C214,ZZ_2BF4C_298);
ZZ_MARK_TARGET(0x8002C214,0x8002C220,ZZ_2BF4C_2C8);
ZZ_MARK_TARGET(0x8002C220,0x8002C22C,ZZ_2BF4C_2D4);
ZZ_MARK_TARGET(0x8002C22C,0x8002C24C,ZZ_2BF4C_2E0);
ZZ_MARK_TARGET(0x8002C24C,0x8002C26C,ZZ_2BF4C_300);
