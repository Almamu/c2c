#ifdef ZZ_INCLUDE_CODE
ZZ_126BC:
	V0 = A0 << 1;
	V0 += A0;
	V0 <<= 2;
	V0 = V0 - A0;
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 32180); //+ 0xFFFF824C
	SP -= 64;
	V0 <<= 2;
	V1 = 0x80060000;
	V1 += 30796;
	EMU_Write32(SP + 36,S1); //+ 0x24
	S1 = V0 + V1;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S5); //+ 0x34
	EMU_Write32(SP + 48,S4); //+ 0x30
	EMU_Write32(SP + 44,S3); //+ 0x2C
	EMU_Write32(SP + 40,S2); //+ 0x28
	if (A0 != S1)
	{
		EMU_Write32(SP + 32,S0); //+ 0x20
		ZZ_CLOCKCYCLES(19,0x80012710);
		goto ZZ_126BC_54;
	}
	EMU_Write32(SP + 32,S0); //+ 0x20
	AT = 0x80070000;
	EMU_Write32(AT - 32180,R0); //+ 0xFFFF824C
	ZZ_CLOCKCYCLES(21,0x80012710);
ZZ_126BC_54:
	V0 = EMU_ReadU32(S1);
	V1 = 0x1E;
	EMU_Write16(S1 + 4,V1); //+ 0x4
	V1 = EMU_ReadU16(V0 + 2); //+ 0x2
	V0 = V1 < 6;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(8,0x80012AB0);
		goto ZZ_126BC_3F4;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 288); //+ 0x120
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x80012748,ZZ_126BC_8C);
	ZZ_JUMPREGISTER(0x8001282C,ZZ_126BC_170);
	ZZ_JUMPREGISTER(0x80012AB0,ZZ_126BC_3F4);
	ZZ_JUMPREGISTER(0x80012940,ZZ_126BC_284);
	ZZ_JUMPREGISTER_END();
ZZ_126BC_8C:
	A1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(A1 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 30760); //+ 0x7828
	A0 = EMU_ReadU32(A1 + 8); //+ 0x8
	V0 >>= 13;
	V0 &= 0x3FC;
	V0 += V1;
	S3 = EMU_ReadU32(V0);
	if (!A0)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(14,0x80012AB0);
		goto ZZ_126BC_3F4;
	}
	S2 = R0;
	S0 = S3 + 4;
	V0 = S2 << 2;
	ZZ_CLOCKCYCLES(16,0x80012788);
ZZ_126BC_CC:
	V0 += A1;
	A1 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x800127B8);
		goto ZZ_126BC_FC;
	}
	ZZ_CLOCKCYCLES(7,0x800127A4);
ZZ_126BC_E8:
	S0 += 8;
	V0 = EMU_ReadU32(S0);
	if (V0 != V1)
	{
		S3 += 8;
		ZZ_CLOCKCYCLES(5,0x800127A4);
		goto ZZ_126BC_E8;
	}
	S3 += 8;
	ZZ_CLOCKCYCLES(5,0x800127B8);
ZZ_126BC_FC:
	EMU_Write32(S3,A1);
	V0 = EMU_ReadU8(S1 + 15); //+ 0xF
	V0 += 1;
	EMU_Write8(S1 + 15,V0); //+ 0xF
	V1 = EMU_ReadU32(A1 + 8); //+ 0x8
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 19328); //+ 0xFFFFB480
	if (!V0)
	{
		ZZ_CLOCKCYCLES(16,0x80012800);
		goto ZZ_126BC_144;
	}
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80012800; //ZZ_126BC_144
	A0 = A1;
	ZZ_CLOCKCYCLES_JR(18);
	ZZ_JUMPREGISTER(0x8001747C,ZZ_1747C);
	ZZ_JUMPREGISTER(0x800172BC,ZZ_172BC);
	ZZ_JUMPREGISTER(0x80020024,ZZ_20024);
	ZZ_JUMPREGISTER(0x80018AE8,ZZ_18AE8);
	ZZ_JUMPREGISTER_END();
ZZ_126BC_144:
	V0 = EMU_ReadU8(S1 + 15); //+ 0xF
	A1 = EMU_ReadU32(S1);
	V0 -= 1;
	EMU_Write8(S1 + 15,V0); //+ 0xF
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	S2 += 1;
	V0 = S2 < V0;
	if (V0)
	{
		V0 = S2 << 2;
		ZZ_CLOCKCYCLES(9,0x80012788);
		goto ZZ_126BC_CC;
	}
	V0 = S2 << 2;
	ZZ_CLOCKCYCLES(11,0x80012AB0);
	goto ZZ_126BC_3F4;
ZZ_126BC_170:
	A0 = EMU_ReadU32(S1 + 24); //+ 0x18
	RA = 0x80012838; //ZZ_126BC_17C
	ZZ_CLOCKCYCLES(3,0x8001398C);
	goto ZZ_1398C;
ZZ_126BC_17C:
	S2 = V0;
	V0 = -12;
	if (S2 != V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(4,0x80012858);
		goto ZZ_126BC_19C;
	}
	A0 = S2;
	RA = 0x80012850; //ZZ_126BC_194
	A0 = S1;
	ZZ_CLOCKCYCLES(6,0x80012AE4);
	goto ZZ_12AE4;
ZZ_126BC_194:
	V0 = 0x1E;
	ZZ_CLOCKCYCLES(2,0x80012ABC);
	goto ZZ_126BC_400;
ZZ_126BC_19C:
	S3 = S2 << 1;
	V0 = S3 + S2;
	V0 <<= 2;
	V0 = V0 - S2;
	V0 <<= 2;
	V1 = 0x80060000;
	V1 += 12292;
	if ((int32_t)S2 >= 0)
	{
		S0 = V0 + V1;
		ZZ_CLOCKCYCLES(9,0x80012880);
		goto ZZ_126BC_1C4;
	}
	S0 = V0 + V1;
	A0 = S2 + 3;
	ZZ_CLOCKCYCLES(10,0x80012880);
ZZ_126BC_1C4:
	V1 = (int32_t)A0 >> 2;
	V0 = V1 << 2;
	V0 = S2 - V0;
	V0 <<= 8;
	V1 <<= 7;
	EMU_Write16(GP + 52,V0); //+ 0x34
	EMU_Write16(GP + 54,V1); //+ 0x36
	A1 = EMU_ReadU32(S1);
	A0 = 0x80060000;
	A0 -= 3000;
	RA = 0x800128B0; //ZZ_126BC_1F4
	ZZ_CLOCKCYCLES(12,0x8004C5A0);
	goto ZZ_4C5A0;
ZZ_126BC_1F4:
	V0 = 0x14;
	EMU_Write16(S0 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	EMU_Write32(S0 + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	A0 = EMU_ReadU32(S0 + 24); //+ 0x18
	RA = 0x800128DC; //ZZ_126BC_220
	EMU_Write32(S0 + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(11,0x80014C48);
	goto ZZ_14C48;
ZZ_126BC_220:
	EMU_Write32(S0 + 32,V0); //+ 0x20
	V0 = EMU_ReadU8(S1 + 15); //+ 0xF
	A0 = EMU_ReadU32(S0 + 32); //+ 0x20
	EMU_Write8(S0 + 15,V0); //+ 0xF
	V1 = EMU_ReadU8(S1 + 14); //+ 0xE
	V0 = EMU_ReadU32(S0 + 28); //+ 0x1C
	EMU_Write8(S0 + 14,V1); //+ 0xE
	EMU_Write32(A0,V0);
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	V1 = 0x1;
	EMU_Write16(S1 + 4,V1); //+ 0x4
	EMU_Write8(S1 + 15,R0); //+ 0xF
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 32164); //+ 0xFFFF825C
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	EMU_Write32(V0,S0);
	V0 = EMU_ReadU32(S1);
	A0 = EMU_ReadU32(V0 + 4); //+ 0x4
	RA = 0x80012938; //ZZ_126BC_27C
	A1 = 0x1;
	ZZ_CLOCKCYCLES(23,0x800171D8);
	goto ZZ_171D8;
ZZ_126BC_27C:
	V0 = S3;
	ZZ_CLOCKCYCLES(2,0x80012ABC);
	goto ZZ_126BC_400;
ZZ_126BC_284:
	A1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(A1 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 30760); //+ 0x7828
	S4 = EMU_ReadU32(S1 + 36); //+ 0x24
	A0 = EMU_ReadU32(A1 + 8); //+ 0x8
	V0 >>= 13;
	V0 &= 0x3FC;
	V0 += V1;
	S3 = EMU_ReadU32(V0);
	if (!A0)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(15,0x80012A74);
		goto ZZ_126BC_3B8;
	}
	S2 = R0;
	S5 = 0x80060000;
	S5 += 1000;
	S0 = S3 + 4;
	V0 = S2 << 2;
	ZZ_CLOCKCYCLES(19,0x8001298C);
ZZ_126BC_2D0:
	V0 += A1;
	A1 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A2 = EMU_ReadU32(A1 + 16); //+ 0x10
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x800129BC);
		goto ZZ_126BC_300;
	}
	ZZ_CLOCKCYCLES(7,0x800129A8);
ZZ_126BC_2EC:
	S0 += 8;
	V0 = EMU_ReadU32(S0);
	if (V0 != V1)
	{
		S3 += 8;
		ZZ_CLOCKCYCLES(5,0x800129A8);
		goto ZZ_126BC_2EC;
	}
	S3 += 8;
	ZZ_CLOCKCYCLES(5,0x800129BC);
ZZ_126BC_300:
	if (S2)
	{
		ZZ_CLOCKCYCLES(2,0x80012A00);
		goto ZZ_126BC_344;
	}
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU16(V0 + 2); //+ 0x2
	V0 = 0x4;
	if (V1 != V0)
	{
		V1 = 0x63960000;
		ZZ_CLOCKCYCLES(8,0x800129EC);
		goto ZZ_126BC_330;
	}
	V1 = 0x63960000;
	V0 = EMU_ReadS16(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(S0);
	V0 <<= 2;
	ZZ_CLOCKCYCLES(12,0x800129F8);
	goto ZZ_126BC_33C;
ZZ_126BC_330:
	V0 = EMU_ReadS16(S4 + 12); //+ 0xC
	V1 |= 0x347F;
	V0 <<= 2;
	ZZ_CLOCKCYCLES(3,0x800129F8);
ZZ_126BC_33C:
	V0 += S5;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(2,0x80012A00);
ZZ_126BC_344:
	V0 = EMU_ReadU32(S1);
	V1 = EMU_ReadU32(S4 + 28); //+ 0x1C
	A0 = 0xC0000000;
	A0 |= 0x2;
	V0 = A2 - V0;
	V0 += V1;
	V0 <<= 2;
	V0 |= A0;
	EMU_Write32(S3,V0);
	V1 = EMU_ReadU32(A1 + 8); //+ 0x8
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 19328); //+ 0xFFFFB480
	if (!V0)
	{
		ZZ_CLOCKCYCLES(20,0x80012A58);
		goto ZZ_126BC_39C;
	}
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x80012A58; //ZZ_126BC_39C
	A0 = A1;
	ZZ_CLOCKCYCLES_JR(22);
	ZZ_JUMPREGISTER(0x8001747C,ZZ_1747C);
	ZZ_JUMPREGISTER(0x800172BC,ZZ_172BC);
	ZZ_JUMPREGISTER(0x80020024,ZZ_20024);
	ZZ_JUMPREGISTER(0x80018AE8,ZZ_18AE8);
	ZZ_JUMPREGISTER_END();
ZZ_126BC_39C:
	A1 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	S2 += 1;
	V0 = S2 < V0;
	if (V0)
	{
		V0 = S2 << 2;
		ZZ_CLOCKCYCLES(7,0x8001298C);
		goto ZZ_126BC_2D0;
	}
	V0 = S2 << 2;
	ZZ_CLOCKCYCLES(7,0x80012A74);
ZZ_126BC_3B8:
	V0 = 0x14;
	EMU_Write16(S4 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S1 + 20); //+ 0x14
	V1 = 0x1;
	EMU_Write16(S1 + 4,V1); //+ 0x4
	EMU_Write8(S1 + 15,R0); //+ 0xF
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 32164); //+ 0xFFFF825C
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	EMU_Write32(V0,S4);
	V0 = EMU_ReadU32(S4 + 28); //+ 0x1C
	ZZ_CLOCKCYCLES(15,0x80012ABC);
	goto ZZ_126BC_400;
ZZ_126BC_3F4:
	V0 = EMU_ReadU32(S1);
	V1 = 0x14;
	EMU_Write16(S1 + 4,V1); //+ 0x4
	ZZ_CLOCKCYCLES(3,0x80012ABC);
ZZ_126BC_400:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S5 = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80013544,ZZ_13304_240);
	ZZ_JUMPREGISTER(0x8001377C,ZZ_13304_478);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800126BC,0x80012710,ZZ_126BC);
ZZ_MARK_TARGET(0x80012710,0x80012748,ZZ_126BC_54);
ZZ_MARK_TARGET(0x80012748,0x80012788,ZZ_126BC_8C);
ZZ_MARK_TARGET(0x80012788,0x800127A4,ZZ_126BC_CC);
ZZ_MARK_TARGET(0x800127A4,0x800127B8,ZZ_126BC_E8);
ZZ_MARK_TARGET(0x800127B8,0x80012800,ZZ_126BC_FC);
ZZ_MARK_TARGET(0x80012800,0x8001282C,ZZ_126BC_144);
ZZ_MARK_TARGET(0x8001282C,0x80012838,ZZ_126BC_170);
ZZ_MARK_TARGET(0x80012838,0x80012850,ZZ_126BC_17C);
ZZ_MARK_TARGET(0x80012850,0x80012858,ZZ_126BC_194);
ZZ_MARK_TARGET(0x80012858,0x80012880,ZZ_126BC_19C);
ZZ_MARK_TARGET(0x80012880,0x800128B0,ZZ_126BC_1C4);
ZZ_MARK_TARGET(0x800128B0,0x800128DC,ZZ_126BC_1F4);
ZZ_MARK_TARGET(0x800128DC,0x80012938,ZZ_126BC_220);
ZZ_MARK_TARGET(0x80012938,0x80012940,ZZ_126BC_27C);
ZZ_MARK_TARGET(0x80012940,0x8001298C,ZZ_126BC_284);
ZZ_MARK_TARGET(0x8001298C,0x800129A8,ZZ_126BC_2D0);
ZZ_MARK_TARGET(0x800129A8,0x800129BC,ZZ_126BC_2EC);
ZZ_MARK_TARGET(0x800129BC,0x800129EC,ZZ_126BC_300);
ZZ_MARK_TARGET(0x800129EC,0x800129F8,ZZ_126BC_330);
ZZ_MARK_TARGET(0x800129F8,0x80012A00,ZZ_126BC_33C);
ZZ_MARK_TARGET(0x80012A00,0x80012A58,ZZ_126BC_344);
ZZ_MARK_TARGET(0x80012A58,0x80012A74,ZZ_126BC_39C);
ZZ_MARK_TARGET(0x80012A74,0x80012AB0,ZZ_126BC_3B8);
ZZ_MARK_TARGET(0x80012AB0,0x80012ABC,ZZ_126BC_3F4);
ZZ_MARK_TARGET(0x80012ABC,0x80012AE4,ZZ_126BC_400);
