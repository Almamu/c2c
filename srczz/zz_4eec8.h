#ifdef ZZ_INCLUDE_CODE
ZZ_4EEC8:
	AT = 0x80060000;
	EMU_Write32(AT - 7596,RA); //+ 0xFFFFE254
	RA = 0x8004EED8; //ZZ_4EEC8_10
	ZZ_CLOCKCYCLES(4,0x8004F490);
	goto ZZ_4F490;
ZZ_4EEC8_10:
	RA = 0x80060000;
	RA = EMU_ReadU32(RA - 7596); //+ 0xFFFFE254
	V0 = COP0_GetRegister(12);
	V1 = 0x40000000;
	V0 |= V1;
	COP0_SetRegister(12,V0);
	T0 = 341;
	GTE_SetControlRegister(GTE_CREG_ZSF3,T0);
	T0 = 256;
	GTE_SetControlRegister(GTE_CREG_ZSF4,T0);
	T0 = 1000;
	GTE_SetControlRegister(GTE_CREG_H,T0);
	T0 = -4194;
	GTE_SetControlRegister(GTE_CREG_DQA,T0);
	T0 = 0x1400000;
	GTE_SetControlRegister(GTE_CREG_DQB,T0);
	GTE_SetControlRegister(GTE_CREG_OFX,R0);
	GTE_SetControlRegister(GTE_CREG_OFY,R0);
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(28);
	ZZ_JUMPREGISTER(0x8001576C,ZZ_15738_34);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004EEC8,ZZ_4EEC8);
ZZ_MARK(0x8004EECC);
ZZ_MARK(0x8004EED0);
ZZ_MARK(0x8004EED4);
ZZ_MARK_TARGET(0x8004EED8,ZZ_4EEC8_10);
ZZ_MARK(0x8004EEDC);
ZZ_MARK(0x8004EEE0);
ZZ_MARK(0x8004EEE4);
ZZ_MARK(0x8004EEE8);
ZZ_MARK(0x8004EEEC);
ZZ_MARK(0x8004EEF0);
ZZ_MARK(0x8004EEF4);
ZZ_MARK(0x8004EEF8);
ZZ_MARK(0x8004EEFC);
ZZ_MARK(0x8004EF00);
ZZ_MARK(0x8004EF04);
ZZ_MARK(0x8004EF08);
ZZ_MARK(0x8004EF0C);
ZZ_MARK(0x8004EF10);
ZZ_MARK(0x8004EF14);
ZZ_MARK(0x8004EF18);
ZZ_MARK(0x8004EF1C);
ZZ_MARK(0x8004EF20);
ZZ_MARK(0x8004EF24);
ZZ_MARK(0x8004EF28);
ZZ_MARK(0x8004EF2C);
ZZ_MARK(0x8004EF30);
ZZ_MARK(0x8004EF34);
ZZ_MARK(0x8004EF38);
ZZ_MARK(0x8004EF3C);
ZZ_MARK(0x8004EF40);
ZZ_MARK(0x8004EF44);
