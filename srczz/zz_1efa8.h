#ifdef ZZ_INCLUDE_CODE
ZZ_1EFA8:
	SP -= 80;
	EMU_Write32(SP + 76,RA); //+ 0x4C
	EMU_Write32(SP + 72,S0); //+ 0x48
	V0 = EMU_ReadU32(A0);
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	S0 = A1;
	A0 = 0x80060000;
	A0 += 2572;
	RA = 0x8001EFE4; //ZZ_1EFA8_3C
	EMU_Write32(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(15,0x8004F1C0);
	goto ZZ_4F1C0;
ZZ_1EFA8_3C:
	A0 = 0x80060000;
	A0 += 968;
	RA = 0x8001EFF4; //ZZ_1EFA8_4C
	ZZ_CLOCKCYCLES(4,0x8004F220);
	goto ZZ_4F220;
ZZ_1EFA8_4C:
	A0 = SP + 16;
	A1 = SP + 40;
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	T0 = 0x80060000;
	T0 = EMU_ReadU32(T0 + 2700); //+ 0xA8C
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	T1 = 0x80060000;
	T1 = EMU_ReadU32(T1 + 2704); //+ 0xA90
	A3 = EMU_ReadU32(SP + 32); //+ 0x20
	T2 = 0x80060000;
	T2 = EMU_ReadU32(T2 + 2708); //+ 0xA94
	A2 = SP + 44;
	V0 = V0 - T0;
	V0 = (int32_t)V0 >> 8;
	V1 = V1 - T1;
	V1 = (int32_t)V1 >> 8;
	A3 = A3 - T2;
	A3 = (int32_t)A3 >> 8;
	EMU_Write16(SP + 20,A3); //+ 0x14
	A3 = SP + 48;
	EMU_Write16(SP + 16,V0); //+ 0x10
	RA = 0x8001F050; //ZZ_1EFA8_A8
	EMU_Write16(SP + 18,V1); //+ 0x12
	ZZ_CLOCKCYCLES(23,0x8004F2B0);
	goto ZZ_4F2B0;
ZZ_1EFA8_A8:
	A0 = SP + 52;
	V0 = EMU_ReadS16(SP + 40); //+ 0x28
	A1 = SP + 56;
	V1 = EMU_ReadU32(SP + 40); //+ 0x28
	A2 = SP + 60;
	V0 -= 256;
	V0 <<= 8;
	V1 = (int32_t)V1 >> 16;
	EMU_Write32(S0,V0);
	V0 = 0x80;
	V0 = V0 - V1;
	V0 <<= 8;
	RA = 0x8001F088; //ZZ_1EFA8_E0
	EMU_Write32(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(14,0x8004F240);
	goto ZZ_4F240;
ZZ_1EFA8_E0:
	V1 = EMU_ReadU32(SP + 60); //+ 0x3C
	V0 = -255;
	V1 <<= 8;
	EMU_Write32(S0 + 8,V1); //+ 0x8
	RA = EMU_ReadU32(SP + 76); //+ 0x4C
	S0 = EMU_ReadU32(SP + 72); //+ 0x48
	SP += 80;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x80038850,ZZ_38414_43C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001EFA8,0x8001EFE4,ZZ_1EFA8);
ZZ_MARK_TARGET(0x8001EFE4,0x8001EFF4,ZZ_1EFA8_3C);
ZZ_MARK_TARGET(0x8001EFF4,0x8001F050,ZZ_1EFA8_4C);
ZZ_MARK_TARGET(0x8001F050,0x8001F088,ZZ_1EFA8_A8);
ZZ_MARK_TARGET(0x8001F088,0x8001F0AC,ZZ_1EFA8_E0);
