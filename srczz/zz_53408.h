#ifdef ZZ_INCLUDE_CODE
ZZ_53408:
	SP -= 216;
	A3 = A0;
	T0 = A1;
	EMU_Write32(SP + 192,S4); //+ 0xC0
	S4 = A2;
	A2 = SP + 56;
	V0 = A3 << 16;
	EMU_Write32(SP + 188,S3); //+ 0xBC
	S3 = (int32_t)V0 >> 16;
	V1 = S3 << 2;
	V0 = T0 << 16;
	EMU_Write32(SP + 180,S1); //+ 0xB4
	S1 = (int32_t)V0 >> 16;
	V0 = S1 << 1;
	V0 += S1;
	V0 <<= 2;
	V0 = V0 - S1;
	V0 <<= 4;
	EMU_Write32(SP + 212,RA); //+ 0xD4
	EMU_Write32(SP + 208,FP); //+ 0xD0
	EMU_Write32(SP + 204,S7); //+ 0xCC
	EMU_Write32(SP + 200,S6); //+ 0xC8
	EMU_Write32(SP + 196,S5); //+ 0xC4
	EMU_Write32(SP + 184,S2); //+ 0xB8
	EMU_Write32(SP + 176,S0); //+ 0xB0
	AT = 0x80070000;
	AT += V1;
	V1 = EMU_ReadU32(AT - 15268); //+ 0xFFFFC45C
	S7 = A3;
	S0 = V1 + V0;
	S2 = EMU_ReadU8(S0 + 23); //+ 0x17
	A0 = EMU_ReadU8(S0 + 38); //+ 0x26
	V0 = S2 + S0;
	A1 = EMU_ReadU8(V0 + 55); //+ 0x37
	RA = 0x80053498; //ZZ_53408_90
	FP = T0;
	ZZ_CLOCKCYCLES(36,0x80056CD8);
	goto ZZ_56CD8;
ZZ_53408_90:
	V1 = EMU_ReadU8(S0 + 28); //+ 0x1C
	V0 = 1;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x800534D0);
		goto ZZ_53408_C8;
	}
	V0 = EMU_ReadU8(S0 + 21); //+ 0x15
	if (V0)
	{
		A0 = S3;
		ZZ_CLOCKCYCLES(8,0x800534D0);
		goto ZZ_53408_C8;
	}
	A0 = S3;
	A1 = S1;
	V0 = 1;
	EMU_Write8(S0 + 29,S4); //+ 0x1D
	EMU_Write8(S0 + 28,R0); //+ 0x1C
	EMU_Write8(S0 + 21,V0); //+ 0x15
	ZZ_CLOCKCYCLES(14,0x800537F0);
	goto ZZ_53408_3E8;
ZZ_53408_C8:
	V0 = EMU_ReadU8(S0 + 30); //+ 0x1E
	V1 = 2;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(4,0x80053614);
		goto ZZ_53408_20C;
	}
	V0 = EMU_ReadU8(S0 + 25); //+ 0x19
	if (V0)
	{
		A0 = S7 << 16;
		ZZ_CLOCKCYCLES(8,0x800535F8);
		goto ZZ_53408_1F0;
	}
	A0 = S7 << 16;
	V0 = EMU_ReadU8(SP + 56); //+ 0x38
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(12,0x800535F8);
		goto ZZ_53408_1F0;
	}
	S1 = R0;
	S6 = S2 + S0;
	S3 = S4 & 0xFF;
	V0 = S3 << 1;
	V0 += S3;
	V0 <<= 3;
	S5 = V0 + S3;
	T1 = S5 << 8;
	EMU_Write32(SP + 104,T1); //+ 0x68
	S2 = R0;
	ZZ_CLOCKCYCLES(21,0x80053524);
ZZ_53408_11C:
	A2 = (int32_t)S2 >> 16;
	A0 = EMU_ReadU8(S0 + 38); //+ 0x26
	A1 = EMU_ReadU8(S6 + 55); //+ 0x37
	RA = 0x80053538; //ZZ_53408_130
	A3 = SP + 72;
	ZZ_CLOCKCYCLES(5,0x80056DE0);
	goto ZZ_56DE0;
ZZ_53408_130:
	V1 = EMU_ReadU8(S0 + 24); //+ 0x18
	V0 = 1;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 2;
		ZZ_CLOCKCYCLES(4,0x80053580);
		goto ZZ_53408_178;
	}
	V0 = (int32_t)V1 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80053560);
		goto ZZ_53408_158;
	}
	if (!V1)
	{
		V0 = S4 & 0x7F;
		ZZ_CLOCKCYCLES(8,0x80053574);
		goto ZZ_53408_16C;
	}
	V0 = S4 & 0x7F;
	A2 = (int32_t)S2 >> 16;
	ZZ_CLOCKCYCLES(10,0x800535C8);
	goto ZZ_53408_1C0;
ZZ_53408_158:
	V0 = 2;
	if (V1 == V0)
	{
		A2 = (int32_t)S2 >> 16;
		ZZ_CLOCKCYCLES(3,0x800535B8);
		goto ZZ_53408_1B0;
	}
	A2 = (int32_t)S2 >> 16;
	ZZ_CLOCKCYCLES(5,0x800535C8);
	goto ZZ_53408_1C0;
ZZ_53408_16C:
	EMU_Write8(SP + 85,V0); //+ 0x55
	EMU_Write8(SP + 84,V0); //+ 0x54
	ZZ_CLOCKCYCLES(3,0x800535C4);
	goto ZZ_53408_1BC;
ZZ_53408_178:
	V0 = S4 - 65;
	V0 &= 0xFF;
	V0 = V0 < 63;
	if (!V0)
	{
		V0 = S5 << 2;
		ZZ_CLOCKCYCLES(5,0x800535A8);
		goto ZZ_53408_1A0;
	}
	V0 = S5 << 2;
	if ((int32_t)V0 >= 0)
	{
		V1 = V0 & 0xE000;
		ZZ_CLOCKCYCLES(7,0x800535AC);
		goto ZZ_53408_1A4;
	}
	V1 = V0 & 0xE000;
	V0 += 8191;
	V1 = V0 & 0xE000;
	ZZ_CLOCKCYCLES(10,0x800535AC);
	goto ZZ_53408_1A4;
ZZ_53408_1A0:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x800535AC);
ZZ_53408_1A4:
	V0 = EMU_ReadU8(SP + 77); //+ 0x4D
	EMU_Write8(SP + 77,V0); //+ 0x4D
	ZZ_CLOCKCYCLES(3,0x800535C4);
	goto ZZ_53408_1BC;
ZZ_53408_1B0:
	V0 = EMU_ReadU8(SP + 76); //+ 0x4C
	EMU_Write8(SP + 76,V0); //+ 0x4C
	ZZ_CLOCKCYCLES(3,0x800535C4);
ZZ_53408_1BC:
	A2 = (int32_t)S2 >> 16;
	ZZ_CLOCKCYCLES(1,0x800535C8);
ZZ_53408_1C0:
	A3 = SP + 72;
	A0 = EMU_ReadU8(S0 + 38); //+ 0x26
	A1 = EMU_ReadU8(S6 + 55); //+ 0x37
	RA = 0x800535DC; //ZZ_53408_1D4
	S1 += 1;
	ZZ_CLOCKCYCLES(5,0x800570D4);
	goto ZZ_570D4;
ZZ_53408_1D4:
	V1 = 0x10000;
	V0 = EMU_ReadU8(SP + 56); //+ 0x38
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S2 += V1;
		ZZ_CLOCKCYCLES(6,0x80053524);
		goto ZZ_53408_11C;
	}
	S2 += V1;
	A0 = S7 << 16;
	ZZ_CLOCKCYCLES(7,0x800535F8);
ZZ_53408_1F0:
	A0 = (int32_t)A0 >> 16;
	A1 = FP << 16;
	RA = 0x80053608; //ZZ_53408_200
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES(4,0x800545DC);
	goto ZZ_545DC;
ZZ_53408_200:
	EMU_Write32(S0 + 144,V0); //+ 0x90
	EMU_Write8(S0 + 30,R0); //+ 0x1E
	ZZ_CLOCKCYCLES(3,0x800537FC);
	goto ZZ_53408_3F4;
ZZ_53408_20C:
	V0 = EMU_ReadU8(S0 + 31); //+ 0x1F
	if (V0 != V1)
	{
		A0 = S7 << 16;
		ZZ_CLOCKCYCLES(4,0x800537E4);
		goto ZZ_53408_3DC;
	}
	A0 = S7 << 16;
	A2 = EMU_ReadU8(S0 + 27); //+ 0x1B
	V0 = 16;
	if (A2 != V0)
	{
		V0 = S2 + S0;
		ZZ_CLOCKCYCLES(8,0x80053718);
		goto ZZ_53408_310;
	}
	V0 = S2 + S0;
	V0 = EMU_ReadU8(SP + 56); //+ 0x38
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(12,0x800537C8);
		goto ZZ_53408_3C0;
	}
	S1 = R0;
	S3 = 0x80060000;
	S3 += 1108;
	S2 += S0;
	A2 = S1;
	ZZ_CLOCKCYCLES(16,0x80053654);
ZZ_53408_24C:
	V1 = EMU_ReadU8(S0 + 26); //+ 0x1A
	A0 = EMU_ReadU8(S0 + 38); //+ 0x26
	A1 = EMU_ReadU8(S2 + 55); //+ 0x37
	V0 = S4 & 0xFF;
	EMU_Write32(SP + 48,V0); //+ 0x30
	EMU_Write32(SP + 44,V1); //+ 0x2C
	T3 = EMU_ReadU16(SP + 72); //+ 0x48
	A3 = EMU_ReadU16(SP + 74); //+ 0x4A
	EMU_ReadLeft(SP + 79,&V0); //+ 0x4F
	EMU_ReadRight(SP + 76,&V0); //+ 0x4C
	EMU_ReadLeft(SP + 83,&T0); //+ 0x53
	EMU_ReadRight(SP + 80,&T0); //+ 0x50
	EMU_ReadLeft(SP + 87,&T1); //+ 0x57
	EMU_ReadRight(SP + 84,&T1); //+ 0x54
	EMU_ReadLeft(SP + 91,&T2); //+ 0x5B
	EMU_ReadRight(SP + 88,&T2); //+ 0x58
	EMU_WriteLeft(SP + 19,V0); //+ 0x13
	EMU_WriteRight(SP + 16,V0); //+ 0x10
	EMU_WriteLeft(SP + 23,T0); //+ 0x17
	EMU_WriteRight(SP + 20,T0); //+ 0x14
	EMU_WriteLeft(SP + 27,T1); //+ 0x1B
	EMU_WriteRight(SP + 24,T1); //+ 0x18
	EMU_WriteLeft(SP + 31,T2); //+ 0x1F
	EMU_WriteRight(SP + 28,T2); //+ 0x1C
	EMU_ReadLeft(SP + 95,&V0); //+ 0x5F
	EMU_ReadRight(SP + 92,&V0); //+ 0x5C
	EMU_ReadLeft(SP + 99,&T0); //+ 0x63
	EMU_ReadRight(SP + 96,&T0); //+ 0x60
	EMU_ReadLeft(SP + 103,&T1); //+ 0x67
	EMU_ReadRight(SP + 100,&T1); //+ 0x64
	EMU_WriteLeft(SP + 35,V0); //+ 0x23
	EMU_WriteRight(SP + 32,V0); //+ 0x20
	EMU_WriteLeft(SP + 39,T0); //+ 0x27
	EMU_WriteRight(SP + 36,T0); //+ 0x24
	EMU_WriteLeft(SP + 43,T1); //+ 0x2B
	EMU_WriteRight(SP + 40,T1); //+ 0x28
	V1 <<= 2;
	V1 += S3;
	V0 = EMU_ReadU32(V1);
	A3 <<= 16;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800536FC; //ZZ_53408_2F4
	A3 |= T3;
	ZZ_CLOCKCYCLES_JR(42);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800536F4)
	ZZ_JUMPREGISTER_END();
ZZ_53408_2F4:
	V0 = EMU_ReadU8(SP + 56); //+ 0x38
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		A2 = S1;
		ZZ_CLOCKCYCLES(5,0x80053654);
		goto ZZ_53408_24C;
	}
	A2 = S1;
	A0 = S7 << 16;
	ZZ_CLOCKCYCLES(7,0x800537C8);
	goto ZZ_53408_3C0;
ZZ_53408_310:
	V1 = EMU_ReadU8(S0 + 26); //+ 0x1A
	A0 = EMU_ReadU8(S0 + 38); //+ 0x26
	A1 = EMU_ReadU8(V0 + 55); //+ 0x37
	V0 = S4 & 0xFF;
	EMU_Write32(SP + 48,V0); //+ 0x30
	EMU_Write32(SP + 44,V1); //+ 0x2C
	T3 = EMU_ReadU16(SP + 72); //+ 0x48
	A3 = EMU_ReadU16(SP + 74); //+ 0x4A
	EMU_ReadLeft(SP + 79,&V0); //+ 0x4F
	EMU_ReadRight(SP + 76,&V0); //+ 0x4C
	EMU_ReadLeft(SP + 83,&T0); //+ 0x53
	EMU_ReadRight(SP + 80,&T0); //+ 0x50
	EMU_ReadLeft(SP + 87,&T1); //+ 0x57
	EMU_ReadRight(SP + 84,&T1); //+ 0x54
	EMU_ReadLeft(SP + 91,&T2); //+ 0x5B
	EMU_ReadRight(SP + 88,&T2); //+ 0x58
	EMU_WriteLeft(SP + 19,V0); //+ 0x13
	EMU_WriteRight(SP + 16,V0); //+ 0x10
	EMU_WriteLeft(SP + 23,T0); //+ 0x17
	EMU_WriteRight(SP + 20,T0); //+ 0x14
	EMU_WriteLeft(SP + 27,T1); //+ 0x1B
	EMU_WriteRight(SP + 24,T1); //+ 0x18
	EMU_WriteLeft(SP + 31,T2); //+ 0x1F
	EMU_WriteRight(SP + 28,T2); //+ 0x1C
	EMU_ReadLeft(SP + 95,&V0); //+ 0x5F
	EMU_ReadRight(SP + 92,&V0); //+ 0x5C
	EMU_ReadLeft(SP + 99,&T0); //+ 0x63
	EMU_ReadRight(SP + 96,&T0); //+ 0x60
	EMU_ReadLeft(SP + 103,&T1); //+ 0x67
	EMU_ReadRight(SP + 100,&T1); //+ 0x64
	EMU_WriteLeft(SP + 35,V0); //+ 0x23
	EMU_WriteRight(SP + 32,V0); //+ 0x20
	EMU_WriteLeft(SP + 39,T0); //+ 0x27
	EMU_WriteRight(SP + 36,T0); //+ 0x24
	EMU_WriteLeft(SP + 43,T1); //+ 0x2B
	EMU_WriteRight(SP + 40,T1); //+ 0x28
	V1 <<= 2;
	AT = 0x80060000;
	AT += V1;
	V0 = EMU_ReadU32(AT + 1108); //+ 0x454
	A3 <<= 16;
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800537C4; //ZZ_53408_3BC
	A3 |= T3;
	ZZ_CLOCKCYCLES_JR(43);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,800537BC)
	ZZ_JUMPREGISTER_END();
ZZ_53408_3BC:
	A0 = S7 << 16;
	ZZ_CLOCKCYCLES(1,0x800537C8);
ZZ_53408_3C0:
	A0 = (int32_t)A0 >> 16;
	A1 = FP << 16;
	RA = 0x800537D8; //ZZ_53408_3D0
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES(4,0x800545DC);
	goto ZZ_545DC;
ZZ_53408_3D0:
	EMU_Write32(S0 + 144,V0); //+ 0x90
	EMU_Write8(S0 + 31,R0); //+ 0x1F
	ZZ_CLOCKCYCLES(3,0x800537FC);
	goto ZZ_53408_3F4;
ZZ_53408_3DC:
	A0 = (int32_t)A0 >> 16;
	A1 = FP << 16;
	A1 = (int32_t)A1 >> 16;
	ZZ_CLOCKCYCLES(3,0x800537F0);
ZZ_53408_3E8:
	RA = 0x800537F8; //ZZ_53408_3F0
	ZZ_CLOCKCYCLES(2,0x800545DC);
	goto ZZ_545DC;
ZZ_53408_3F0:
	EMU_Write32(S0 + 144,V0); //+ 0x90
	ZZ_CLOCKCYCLES(1,0x800537FC);
ZZ_53408_3F4:
	RA = EMU_ReadU32(SP + 212); //+ 0xD4
	FP = EMU_ReadU32(SP + 208); //+ 0xD0
	S7 = EMU_ReadU32(SP + 204); //+ 0xCC
	S6 = EMU_ReadU32(SP + 200); //+ 0xC8
	S5 = EMU_ReadU32(SP + 196); //+ 0xC4
	S4 = EMU_ReadU32(SP + 192); //+ 0xC0
	S3 = EMU_ReadU32(SP + 188); //+ 0xBC
	S2 = EMU_ReadU32(SP + 184); //+ 0xB8
	S1 = EMU_ReadU32(SP + 180); //+ 0xB4
	S0 = EMU_ReadU32(SP + 176); //+ 0xB0
	SP += 216;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80053408,ZZ_53408);
ZZ_MARK(0x8005340C);
ZZ_MARK(0x80053410);
ZZ_MARK(0x80053414);
ZZ_MARK(0x80053418);
ZZ_MARK(0x8005341C);
ZZ_MARK(0x80053420);
ZZ_MARK(0x80053424);
ZZ_MARK(0x80053428);
ZZ_MARK(0x8005342C);
ZZ_MARK(0x80053430);
ZZ_MARK(0x80053434);
ZZ_MARK(0x80053438);
ZZ_MARK(0x8005343C);
ZZ_MARK(0x80053440);
ZZ_MARK(0x80053444);
ZZ_MARK(0x80053448);
ZZ_MARK(0x8005344C);
ZZ_MARK(0x80053450);
ZZ_MARK(0x80053454);
ZZ_MARK(0x80053458);
ZZ_MARK(0x8005345C);
ZZ_MARK(0x80053460);
ZZ_MARK(0x80053464);
ZZ_MARK(0x80053468);
ZZ_MARK(0x8005346C);
ZZ_MARK(0x80053470);
ZZ_MARK(0x80053474);
ZZ_MARK(0x80053478);
ZZ_MARK(0x8005347C);
ZZ_MARK(0x80053480);
ZZ_MARK(0x80053484);
ZZ_MARK(0x80053488);
ZZ_MARK(0x8005348C);
ZZ_MARK(0x80053490);
ZZ_MARK(0x80053494);
ZZ_MARK_TARGET(0x80053498,ZZ_53408_90);
ZZ_MARK(0x8005349C);
ZZ_MARK(0x800534A0);
ZZ_MARK(0x800534A4);
ZZ_MARK(0x800534A8);
ZZ_MARK(0x800534AC);
ZZ_MARK(0x800534B0);
ZZ_MARK(0x800534B4);
ZZ_MARK(0x800534B8);
ZZ_MARK(0x800534BC);
ZZ_MARK(0x800534C0);
ZZ_MARK(0x800534C4);
ZZ_MARK(0x800534C8);
ZZ_MARK(0x800534CC);
ZZ_MARK_TARGET(0x800534D0,ZZ_53408_C8);
ZZ_MARK(0x800534D4);
ZZ_MARK(0x800534D8);
ZZ_MARK(0x800534DC);
ZZ_MARK(0x800534E0);
ZZ_MARK(0x800534E4);
ZZ_MARK(0x800534E8);
ZZ_MARK(0x800534EC);
ZZ_MARK(0x800534F0);
ZZ_MARK(0x800534F4);
ZZ_MARK(0x800534F8);
ZZ_MARK(0x800534FC);
ZZ_MARK(0x80053500);
ZZ_MARK(0x80053504);
ZZ_MARK(0x80053508);
ZZ_MARK(0x8005350C);
ZZ_MARK(0x80053510);
ZZ_MARK(0x80053514);
ZZ_MARK(0x80053518);
ZZ_MARK(0x8005351C);
ZZ_MARK(0x80053520);
ZZ_MARK_TARGET(0x80053524,ZZ_53408_11C);
ZZ_MARK(0x80053528);
ZZ_MARK(0x8005352C);
ZZ_MARK(0x80053530);
ZZ_MARK(0x80053534);
ZZ_MARK_TARGET(0x80053538,ZZ_53408_130);
ZZ_MARK(0x8005353C);
ZZ_MARK(0x80053540);
ZZ_MARK(0x80053544);
ZZ_MARK(0x80053548);
ZZ_MARK(0x8005354C);
ZZ_MARK(0x80053550);
ZZ_MARK(0x80053554);
ZZ_MARK(0x80053558);
ZZ_MARK(0x8005355C);
ZZ_MARK_TARGET(0x80053560,ZZ_53408_158);
ZZ_MARK(0x80053564);
ZZ_MARK(0x80053568);
ZZ_MARK(0x8005356C);
ZZ_MARK(0x80053570);
ZZ_MARK_TARGET(0x80053574,ZZ_53408_16C);
ZZ_MARK(0x80053578);
ZZ_MARK(0x8005357C);
ZZ_MARK_TARGET(0x80053580,ZZ_53408_178);
ZZ_MARK(0x80053584);
ZZ_MARK(0x80053588);
ZZ_MARK(0x8005358C);
ZZ_MARK(0x80053590);
ZZ_MARK(0x80053594);
ZZ_MARK(0x80053598);
ZZ_MARK(0x8005359C);
ZZ_MARK(0x800535A0);
ZZ_MARK(0x800535A4);
ZZ_MARK_TARGET(0x800535A8,ZZ_53408_1A0);
ZZ_MARK_TARGET(0x800535AC,ZZ_53408_1A4);
ZZ_MARK(0x800535B0);
ZZ_MARK(0x800535B4);
ZZ_MARK_TARGET(0x800535B8,ZZ_53408_1B0);
ZZ_MARK(0x800535BC);
ZZ_MARK(0x800535C0);
ZZ_MARK_TARGET(0x800535C4,ZZ_53408_1BC);
ZZ_MARK_TARGET(0x800535C8,ZZ_53408_1C0);
ZZ_MARK(0x800535CC);
ZZ_MARK(0x800535D0);
ZZ_MARK(0x800535D4);
ZZ_MARK(0x800535D8);
ZZ_MARK_TARGET(0x800535DC,ZZ_53408_1D4);
ZZ_MARK(0x800535E0);
ZZ_MARK(0x800535E4);
ZZ_MARK(0x800535E8);
ZZ_MARK(0x800535EC);
ZZ_MARK(0x800535F0);
ZZ_MARK(0x800535F4);
ZZ_MARK_TARGET(0x800535F8,ZZ_53408_1F0);
ZZ_MARK(0x800535FC);
ZZ_MARK(0x80053600);
ZZ_MARK(0x80053604);
ZZ_MARK_TARGET(0x80053608,ZZ_53408_200);
ZZ_MARK(0x8005360C);
ZZ_MARK(0x80053610);
ZZ_MARK_TARGET(0x80053614,ZZ_53408_20C);
ZZ_MARK(0x80053618);
ZZ_MARK(0x8005361C);
ZZ_MARK(0x80053620);
ZZ_MARK(0x80053624);
ZZ_MARK(0x80053628);
ZZ_MARK(0x8005362C);
ZZ_MARK(0x80053630);
ZZ_MARK(0x80053634);
ZZ_MARK(0x80053638);
ZZ_MARK(0x8005363C);
ZZ_MARK(0x80053640);
ZZ_MARK(0x80053644);
ZZ_MARK(0x80053648);
ZZ_MARK(0x8005364C);
ZZ_MARK(0x80053650);
ZZ_MARK_TARGET(0x80053654,ZZ_53408_24C);
ZZ_MARK(0x80053658);
ZZ_MARK(0x8005365C);
ZZ_MARK(0x80053660);
ZZ_MARK(0x80053664);
ZZ_MARK(0x80053668);
ZZ_MARK(0x8005366C);
ZZ_MARK(0x80053670);
ZZ_MARK(0x80053674);
ZZ_MARK(0x80053678);
ZZ_MARK(0x8005367C);
ZZ_MARK(0x80053680);
ZZ_MARK(0x80053684);
ZZ_MARK(0x80053688);
ZZ_MARK(0x8005368C);
ZZ_MARK(0x80053690);
ZZ_MARK(0x80053694);
ZZ_MARK(0x80053698);
ZZ_MARK(0x8005369C);
ZZ_MARK(0x800536A0);
ZZ_MARK(0x800536A4);
ZZ_MARK(0x800536A8);
ZZ_MARK(0x800536AC);
ZZ_MARK(0x800536B0);
ZZ_MARK(0x800536B4);
ZZ_MARK(0x800536B8);
ZZ_MARK(0x800536BC);
ZZ_MARK(0x800536C0);
ZZ_MARK(0x800536C4);
ZZ_MARK(0x800536C8);
ZZ_MARK(0x800536CC);
ZZ_MARK(0x800536D0);
ZZ_MARK(0x800536D4);
ZZ_MARK(0x800536D8);
ZZ_MARK(0x800536DC);
ZZ_MARK(0x800536E0);
ZZ_MARK(0x800536E4);
ZZ_MARK(0x800536E8);
ZZ_MARK(0x800536EC);
ZZ_MARK(0x800536F0);
ZZ_MARK(0x800536F4);
ZZ_MARK(0x800536F8);
ZZ_MARK_TARGET(0x800536FC,ZZ_53408_2F4);
ZZ_MARK(0x80053700);
ZZ_MARK(0x80053704);
ZZ_MARK(0x80053708);
ZZ_MARK(0x8005370C);
ZZ_MARK(0x80053710);
ZZ_MARK(0x80053714);
ZZ_MARK_TARGET(0x80053718,ZZ_53408_310);
ZZ_MARK(0x8005371C);
ZZ_MARK(0x80053720);
ZZ_MARK(0x80053724);
ZZ_MARK(0x80053728);
ZZ_MARK(0x8005372C);
ZZ_MARK(0x80053730);
ZZ_MARK(0x80053734);
ZZ_MARK(0x80053738);
ZZ_MARK(0x8005373C);
ZZ_MARK(0x80053740);
ZZ_MARK(0x80053744);
ZZ_MARK(0x80053748);
ZZ_MARK(0x8005374C);
ZZ_MARK(0x80053750);
ZZ_MARK(0x80053754);
ZZ_MARK(0x80053758);
ZZ_MARK(0x8005375C);
ZZ_MARK(0x80053760);
ZZ_MARK(0x80053764);
ZZ_MARK(0x80053768);
ZZ_MARK(0x8005376C);
ZZ_MARK(0x80053770);
ZZ_MARK(0x80053774);
ZZ_MARK(0x80053778);
ZZ_MARK(0x8005377C);
ZZ_MARK(0x80053780);
ZZ_MARK(0x80053784);
ZZ_MARK(0x80053788);
ZZ_MARK(0x8005378C);
ZZ_MARK(0x80053790);
ZZ_MARK(0x80053794);
ZZ_MARK(0x80053798);
ZZ_MARK(0x8005379C);
ZZ_MARK(0x800537A0);
ZZ_MARK(0x800537A4);
ZZ_MARK(0x800537A8);
ZZ_MARK(0x800537AC);
ZZ_MARK(0x800537B0);
ZZ_MARK(0x800537B4);
ZZ_MARK(0x800537B8);
ZZ_MARK(0x800537BC);
ZZ_MARK(0x800537C0);
ZZ_MARK_TARGET(0x800537C4,ZZ_53408_3BC);
ZZ_MARK_TARGET(0x800537C8,ZZ_53408_3C0);
ZZ_MARK(0x800537CC);
ZZ_MARK(0x800537D0);
ZZ_MARK(0x800537D4);
ZZ_MARK_TARGET(0x800537D8,ZZ_53408_3D0);
ZZ_MARK(0x800537DC);
ZZ_MARK(0x800537E0);
ZZ_MARK_TARGET(0x800537E4,ZZ_53408_3DC);
ZZ_MARK(0x800537E8);
ZZ_MARK(0x800537EC);
ZZ_MARK_TARGET(0x800537F0,ZZ_53408_3E8);
ZZ_MARK(0x800537F4);
ZZ_MARK_TARGET(0x800537F8,ZZ_53408_3F0);
ZZ_MARK_TARGET(0x800537FC,ZZ_53408_3F4);
ZZ_MARK(0x80053800);
ZZ_MARK(0x80053804);
ZZ_MARK(0x80053808);
ZZ_MARK(0x8005380C);
ZZ_MARK(0x80053810);
ZZ_MARK(0x80053814);
ZZ_MARK(0x80053818);
ZZ_MARK(0x8005381C);
ZZ_MARK(0x80053820);
ZZ_MARK(0x80053824);
ZZ_MARK(0x80053828);
ZZ_MARK(0x8005382C);
