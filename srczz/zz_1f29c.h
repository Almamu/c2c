#ifdef ZZ_INCLUDE_CODE
ZZ_1F29C:
	SP -= 168;
	EMU_Write32(SP + 136,S2); //+ 0x88
	S2 = A0;
	EMU_Write32(SP + 132,S1); //+ 0x84
	S1 = A1;
	EMU_Write32(SP + 140,S3); //+ 0x8C
	EMU_Write32(SP + 164,RA); //+ 0xA4
	EMU_Write32(SP + 160,FP); //+ 0xA0
	EMU_Write32(SP + 156,S7); //+ 0x9C
	EMU_Write32(SP + 152,S6); //+ 0x98
	EMU_Write32(SP + 148,S5); //+ 0x94
	EMU_Write32(SP + 144,S4); //+ 0x90
	EMU_Write32(SP + 128,S0); //+ 0x80
	S6 = EMU_ReadU32(S2 + 240); //+ 0xF0
	if (!S2)
	{
		S3 = A2;
		ZZ_CLOCKCYCLES(16,0x8001F2E4);
		goto ZZ_1F29C_48;
	}
	S3 = A2;
	if (S6)
	{
		V0 = 0x7;
		ZZ_CLOCKCYCLES(18,0x8001F2EC);
		goto ZZ_1F29C_50;
	}
	V0 = 0x7;
	ZZ_CLOCKCYCLES(18,0x8001F2E4);
ZZ_1F29C_48:
	V0 = -14;
	ZZ_CLOCKCYCLES(2,0x8001FA6C);
	goto ZZ_1F29C_7D0;
ZZ_1F29C_50:
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001F30C);
		goto ZZ_1F29C_70;
	}
	S5 = EMU_ReadU32(A0 + 20); //+ 0x14
	S7 = 0x2;
	ZZ_CLOCKCYCLES(8,0x8001F30C);
ZZ_1F29C_70:
	A0 = S6;
	A1 = 0x4B;
	A2 = R0;
	RA = 0x8001F320; //ZZ_1F29C_84
	A3 = 0x2;
	ZZ_CLOCKCYCLES(5,0x800325CC);
	goto ZZ_325CC;
ZZ_1F29C_84:
	FP = V0;
	ZZ_CLOCKCYCLES(1,0x8001F324);
ZZ_1F29C_88:
	if ((int32_t)S1 >= 0)
	{
		S0 = (int32_t)S1 >> 8;
		ZZ_CLOCKCYCLES(2,0x8001F334);
		goto ZZ_1F29C_98;
	}
	S0 = (int32_t)S1 >> 8;
	V0 = -S1;
	S0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(4,0x8001F334);
ZZ_1F29C_98:
	A0 = S6;
	A1 = 0x4B;
	A2 = R0;
	RA = 0x8001F348; //ZZ_1F29C_AC
	A3 = 0x2;
	ZZ_CLOCKCYCLES(5,0x800325CC);
	goto ZZ_325CC;
ZZ_1F29C_AC:
	V1 = V0;
	V0 = V1 - 1;
	if (S0 != V0)
	{
		S4 = S1 & 0xFF;
		ZZ_CLOCKCYCLES(4,0x8001F368);
		goto ZZ_1F29C_CC;
	}
	S4 = S1 & 0xFF;
	if (!S0)
	{
		V0 = S1 & 0xFF;
		ZZ_CLOCKCYCLES(6,0x8001F368);
		goto ZZ_1F29C_CC;
	}
	V0 = S1 & 0xFF;
	S4 = V0 + 256;
	S0 = V1 - 2;
	ZZ_CLOCKCYCLES(8,0x8001F368);
ZZ_1F29C_CC:
	A0 = S6;
	A1 = 0x4B;
	A2 = R0;
	A3 = R0;
	V0 = 0x2;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x8001F394; //ZZ_1F29C_F8
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(11,0x80031DF4);
	goto ZZ_31DF4;
ZZ_1F29C_F8:
	A0 = S0 << 8;
	A0 = (int32_t)A0 >> 8;
	V1 = A0 << 1;
	V1 += A0;
	V1 <<= 1;
	A0 = V0 + V1;
	V0 = EMU_ReadS16(A0);
	V1 = EMU_ReadU32(S5);
	V0 <<= S7;
	V0 += V1;
	V0 <<= 8;
	EMU_Write32(S3,V0);
	V0 = EMU_ReadS16(A0 + 2); //+ 0x2
	V1 = EMU_ReadU32(S5 + 4); //+ 0x4
	V0 <<= S7;
	V0 += V1;
	V0 <<= 8;
	EMU_Write32(S3 + 4,V0); //+ 0x4
	V0 = EMU_ReadS16(A0 + 4); //+ 0x4
	V1 = EMU_ReadU32(S5 + 8); //+ 0x8
	V0 <<= S7;
	V0 += V1;
	V0 <<= 8;
	EMU_Write32(S3 + 8,V0); //+ 0x8
	V0 = 0x1;
	if (FP == V0)
	{
		A0 += 6;
		ZZ_CLOCKCYCLES(27,0x8001FA6C);
		goto ZZ_1F29C_7D0;
	}
	A0 += 6;
	V0 = EMU_ReadS16(A0);
	V1 = EMU_ReadU32(S5);
	V0 <<= S7;
	V0 += V1;
	A1 = V0 << 8;
	EMU_Write32(SP + 40,A1); //+ 0x28
	V1 = EMU_ReadS16(A0 + 2); //+ 0x2
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	V1 <<= S7;
	V1 += V0;
	V1 <<= 8;
	EMU_Write32(SP + 44,V1); //+ 0x2C
	V0 = EMU_ReadS16(A0 + 4); //+ 0x4
	A0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V0 <<= S7;
	V0 += A0;
	A0 = V0 << 8;
	EMU_Write32(SP + 48,A0); //+ 0x30
	V0 = EMU_ReadU32(S3);
	V0 = A1 - V0;
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadU32(S3 + 4); //+ 0x4
	V1 = V1 - V0;
	EMU_Write32(SP + 60,V1); //+ 0x3C
	V0 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = A0 - V0;
	EMU_Write32(SP + 64,V0); //+ 0x40
	V0 = EMU_ReadU32(S2 + 172); //+ 0xAC
	V0 &= 0x8000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(62,0x8001F80C);
		goto ZZ_1F29C_570;
	}
	V0 = EMU_ReadU32(S3);
	V0 = A1 - V0;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	V0 = EMU_ReadU32(S3 + 8); //+ 0x8
	V1 = LO;
	V0 = A0 - V0;
	A0 = (int32_t)V0 >> 8;
	EMU_SMultiply(A0,A0);
	T0 = LO;
	RA = 0x8001F4C0; //ZZ_1F29C_224
	A0 = V1 + T0;
	ZZ_CLOCKCYCLES(75,0x80041D10);
	goto ZZ_41D10;
ZZ_1F29C_224:
	A2 = V0;
	if (!A2)
	{
		ZZ_CLOCKCYCLES(3,0x8001F7CC);
		goto ZZ_1F29C_530;
	}
	A1 = 0x80060000;
	A1 -= 2936;
	EMU_ReadLeft(A1 + 3,&V0); //+ 0x3
	EMU_ReadRight(A1,&V0);
	EMU_WriteLeft(SP + 123,V0); //+ 0x7B
	EMU_WriteRight(SP + 120,V0); //+ 0x78
	V1 = EMU_ReadU32(S2 + 96); //+ 0x60
	A0 = EMU_ReadU32(S3);
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 4;
	V0 = V0 - A0;
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V1,V0);
	V1 = EMU_ReadU32(S2 + 104); //+ 0x68
	A0 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = EMU_ReadU32(SP + 48); //+ 0x30
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 4;
	A1 = LO;
	V0 = V0 - A0;
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V1,V0);
	V1 = LO;
	V0 = A1 + V1;
	EMU_SDivide(V0,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(33,0x8001F548);
		goto ZZ_1F29C_2AC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(34,0x8001F548);
ZZ_1F29C_2AC:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001F560);
		goto ZZ_1F29C_2C4;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001F560);
		goto ZZ_1F29C_2C4;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001F560);
ZZ_1F29C_2C4:
	A0 = LO;
	EMU_SDivide(A0,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(6,0x8001F57C);
		goto ZZ_1F29C_2E0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x8001F57C);
ZZ_1F29C_2E0:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001F594);
		goto ZZ_1F29C_2F8;
	}
	AT = 0x80000000;
	if (A0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001F594);
		goto ZZ_1F29C_2F8;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001F594);
ZZ_1F29C_2F8:
	S4 = LO;
	V0 = (int32_t)S4 < 256;
	if (V0)
	{
		V0 = (int32_t)S1 >> 8;
		ZZ_CLOCKCYCLES(5,0x8001F5C0);
		goto ZZ_1F29C_324;
	}
	V0 = (int32_t)S1 >> 8;
	V1 = FP - 1;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		V0 = S0 + 1;
		ZZ_CLOCKCYCLES(9,0x8001F5C0);
		goto ZZ_1F29C_324;
	}
	V0 = S0 + 1;
	S1 = V0 << 8;
	ZZ_CLOCKCYCLES(11,0x8001F324);
	goto ZZ_1F29C_88;
ZZ_1F29C_324:
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = EMU_ReadU32(S3);
	A0 = (int32_t)A0 >> 4;
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	EMU_SDivide(V0,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(12,0x8001F5F4);
		goto ZZ_1F29C_358;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(13,0x8001F5F4);
ZZ_1F29C_358:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001F60C);
		goto ZZ_1F29C_370;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001F60C);
		goto ZZ_1F29C_370;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001F60C);
ZZ_1F29C_370:
	V0 = LO;
	A1 = V0 + V1;
	V0 = EMU_ReadU32(SP + 48); //+ 0x30
	EMU_Write32(SP + 104,A1); //+ 0x68
	V1 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	EMU_SDivide(V0,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(16,0x8001F650);
		goto ZZ_1F29C_3B4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(17,0x8001F650);
ZZ_1F29C_3B4:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001F668);
		goto ZZ_1F29C_3CC;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001F668);
		goto ZZ_1F29C_3CC;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001F668);
ZZ_1F29C_3CC:
	V0 = LO;
	V0 += V1;
	EMU_Write32(SP + 112,V0); //+ 0x70
	V1 = EMU_ReadU32(S2 + 96); //+ 0x60
	A0 = A1 - V1;
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(9,0x8001F690);
		goto ZZ_1F29C_3F4;
	}
	A0 = V1 - A1;
	ZZ_CLOCKCYCLES(10,0x8001F690);
ZZ_1F29C_3F4:
	A1 = EMU_ReadU32(S2 + 104); //+ 0x68
	V1 = V0 - A1;
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(5,0x8001F6A8);
		goto ZZ_1F29C_40C;
	}
	V1 = A1 - V0;
	ZZ_CLOCKCYCLES(6,0x8001F6A8);
ZZ_1F29C_40C:
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		V0 = V1 >> 31;
		ZZ_CLOCKCYCLES(3,0x8001F6C4);
		goto ZZ_1F29C_428;
	}
	V0 = V1 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	ZZ_CLOCKCYCLES(7,0x8001F6D4);
	goto ZZ_1F29C_438;
ZZ_1F29C_428:
	V0 = A0 >> 31;
	V0 += A0;
	V0 = (int32_t)V0 >> 1;
	V0 += V1;
	ZZ_CLOCKCYCLES(4,0x8001F6D4);
ZZ_1F29C_438:
	EMU_Write32(S2 + 160,V0); //+ 0xA0
	V1 = EMU_ReadU32(S2 + 160); //+ 0xA0
	V0 = EMU_ReadU32(S2 + 308); //+ 0x134
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		EMU_Write32(S2 + 160,V1); //+ 0xA0
		ZZ_CLOCKCYCLES(7,0x8001F70C);
		goto ZZ_1F29C_470;
	}
	EMU_Write32(S2 + 160,V1); //+ 0xA0
	if ((int32_t)S4 >= 0)
	{
		ZZ_CLOCKCYCLES(9,0x8001F700);
		goto ZZ_1F29C_464;
	}
	if (!S0)
	{
		ZZ_CLOCKCYCLES(11,0x8001F70C);
		goto ZZ_1F29C_470;
	}
	ZZ_CLOCKCYCLES(11,0x8001F700);
ZZ_1F29C_464:
	V0 = (int32_t)S4 < 256;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001F71C);
		goto ZZ_1F29C_480;
	}
	ZZ_CLOCKCYCLES(3,0x8001F70C);
ZZ_1F29C_470:
	V0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V0 |= 0x200;
	EMU_Write32(S2 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(4,0x8001F71C);
ZZ_1F29C_480:
	A3 = EMU_ReadU32(SP + 48); //+ 0x30
	A1 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = EMU_ReadU32(S2 + 96); //+ 0x60
	V1 = A3 - A1;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V1,V0);
	A2 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = EMU_ReadU32(S3);
	V0 = EMU_ReadU32(S2 + 104); //+ 0x68
	T0 = LO;
	A0 = A2 - V1;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	V1 = (int32_t)V1 >> 8;
	EMU_SMultiply(A3,V1);
	V1 = LO;
	A1 = (int32_t)A1 >> 8;
	EMU_SMultiply(A2,A1);
	V0 = T0 - V0;
	V0 = V0 - V1;
	T2 = LO;
	V0 += T2;
	if ((int32_t)V0 >= 0)
	{
		V0 = -256;
		ZZ_CLOCKCYCLES(27,0x8001F79C);
		goto ZZ_1F29C_500;
	}
	V0 = -256;
	V0 = EMU_ReadU32(S2 + 160); //+ 0xA0
	V0 = -V0;
	EMU_Write32(S2 + 160,V0); //+ 0xA0
	V0 = -256;
	ZZ_CLOCKCYCLES(32,0x8001F79C);
ZZ_1F29C_500:
	V1 = S1 & V0;
	V0 = (int32_t)S4 < 255;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001F7C0);
		goto ZZ_1F29C_524;
	}
	if ((int32_t)S4 < 0)
	{
		EMU_Write32(S2 + 212,V1); //+ 0xD4
		ZZ_CLOCKCYCLES(6,0x8001F80C);
		goto ZZ_1F29C_570;
	}
	EMU_Write32(S2 + 212,V1); //+ 0xD4
	V0 = V1 + S4;
	EMU_Write32(S2 + 212,V0); //+ 0xD4
	ZZ_CLOCKCYCLES(9,0x8001F80C);
	goto ZZ_1F29C_570;
ZZ_1F29C_524:
	V0 = V1 + 255;
	EMU_Write32(S2 + 212,V0); //+ 0xD4
	ZZ_CLOCKCYCLES(3,0x8001F80C);
	goto ZZ_1F29C_570;
ZZ_1F29C_530:
	V0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V0 |= 0x200;
	EMU_Write32(S2 + 168,V0); //+ 0xA8
	V0 = -256;
	V1 = S1 & V0;
	V0 = (int32_t)S4 < 255;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8001F800);
		goto ZZ_1F29C_564;
	}
	if ((int32_t)S4 < 0)
	{
		EMU_Write32(S2 + 212,V1); //+ 0xD4
		ZZ_CLOCKCYCLES(11,0x8001F808);
		goto ZZ_1F29C_56C;
	}
	EMU_Write32(S2 + 212,V1); //+ 0xD4
	V0 = V1 + S4;
	ZZ_CLOCKCYCLES(13,0x8001F804);
	goto ZZ_1F29C_568;
ZZ_1F29C_564:
	V0 = V1 + 255;
	ZZ_CLOCKCYCLES(1,0x8001F804);
ZZ_1F29C_568:
	EMU_Write32(S2 + 212,V0); //+ 0xD4
	ZZ_CLOCKCYCLES(1,0x8001F808);
ZZ_1F29C_56C:
	EMU_Write32(S2 + 160,R0); //+ 0xA0
	ZZ_CLOCKCYCLES(1,0x8001F80C);
ZZ_1F29C_570:
	V0 = EMU_ReadU32(S2 + 244); //+ 0xF4
	A1 = EMU_ReadU32(S2 + 168); //+ 0xA8
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)S1 >> 8;
		ZZ_CLOCKCYCLES(4,0x8001F82C);
		goto ZZ_1F29C_590;
	}
	V0 = (int32_t)S1 >> 8;
	V1 = FP - 1;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = -5;
		ZZ_CLOCKCYCLES(8,0x8001F834);
		goto ZZ_1F29C_598;
	}
	V0 = -5;
	ZZ_CLOCKCYCLES(8,0x8001F82C);
ZZ_1F29C_590:
	V0 = A1 | 0x4;
	ZZ_CLOCKCYCLES(2,0x8001F838);
	goto ZZ_1F29C_59C;
ZZ_1F29C_598:
	V0 &= A1;
	ZZ_CLOCKCYCLES(1,0x8001F838);
ZZ_1F29C_59C:
	EMU_Write32(S2 + 168,V0); //+ 0xA8
	A0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V0 = A1 & 0x4;
	V1 = A0 & 0x4;
	if (V1 == V0)
	{
		V0 = A0 & 0x10;
		ZZ_CLOCKCYCLES(6,0x8001F858);
		goto ZZ_1F29C_5BC;
	}
	V0 = A0 & 0x10;
	if (!V0)
	{
		V0 = A0 | 0x10;
		ZZ_CLOCKCYCLES(8,0x8001F864);
		goto ZZ_1F29C_5C8;
	}
	V0 = A0 | 0x10;
	ZZ_CLOCKCYCLES(8,0x8001F858);
ZZ_1F29C_5BC:
	V0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V1 = -17;
	V0 &= V1;
	ZZ_CLOCKCYCLES(3,0x8001F864);
ZZ_1F29C_5C8:
	EMU_Write32(S2 + 168,V0); //+ 0xA8
	V1 = EMU_ReadU32(S2 + 172); //+ 0xAC
	V0 = V1 & 0x4;
	if (!V0)
	{
		V0 = V1 & 0x2;
		ZZ_CLOCKCYCLES(6,0x8001F94C);
		goto ZZ_1F29C_6B0;
	}
	V0 = V1 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001F8AC);
		goto ZZ_1F29C_610;
	}
	V0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V0 &= 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x8001F8AC);
		goto ZZ_1F29C_610;
	}
	A0 = EMU_ReadU32(SP + 56); //+ 0x38
	A1 = EMU_ReadU32(SP + 64); //+ 0x40
	A0 = -A0;
	A1 = -A1;
	ZZ_CLOCKCYCLES(18,0x8001F8B4);
	goto ZZ_1F29C_618;
ZZ_1F29C_610:
	A0 = EMU_ReadU32(SP + 56); //+ 0x38
	A1 = EMU_ReadU32(SP + 64); //+ 0x40
	ZZ_CLOCKCYCLES(2,0x8001F8B4);
ZZ_1F29C_618:
	RA = 0x8001F8BC; //ZZ_1F29C_620
	ZZ_CLOCKCYCLES(2,0x8004F310);
	goto ZZ_4F310;
ZZ_1F29C_620:
	EMU_Write32(S2 + 148,V0); //+ 0x94
	V0 = EMU_ReadU32(S2 + 172); //+ 0xAC
	V0 &= 0x800;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001F9D4);
		goto ZZ_1F29C_738;
	}
	S1 = EMU_ReadU32(SP + 56); //+ 0x38
	if ((int32_t)S1 >= 0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(10,0x8001F8E8);
		goto ZZ_1F29C_64C;
	}
	A0 = S1;
	S1 = -S1;
	ZZ_CLOCKCYCLES(11,0x8001F8E8);
ZZ_1F29C_64C:
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	if ((int32_t)S0 >= 0)
	{
		A1 = S0;
		ZZ_CLOCKCYCLES(4,0x8001F8FC);
		goto ZZ_1F29C_660;
	}
	A1 = S0;
	S0 = -S0;
	ZZ_CLOCKCYCLES(5,0x8001F8FC);
ZZ_1F29C_660:
	RA = 0x8001F904; //ZZ_1F29C_668
	ZZ_CLOCKCYCLES(2,0x8004F310);
	goto ZZ_4F310;
ZZ_1F29C_668:
	EMU_Write32(S2 + 116,V0); //+ 0x74
	V0 = (int32_t)S0 < (int32_t)S1;
	if (!V0)
	{
		V0 = S0 >> 31;
		ZZ_CLOCKCYCLES(4,0x8001F924);
		goto ZZ_1F29C_688;
	}
	V0 = S0 >> 31;
	V0 += S0;
	V0 = (int32_t)V0 >> 1;
	A1 = S1 + V0;
	ZZ_CLOCKCYCLES(8,0x8001F934);
	goto ZZ_1F29C_698;
ZZ_1F29C_688:
	V0 = S1 >> 31;
	V0 += S1;
	V0 = (int32_t)V0 >> 1;
	A1 = S0 + V0;
	ZZ_CLOCKCYCLES(4,0x8001F934);
ZZ_1F29C_698:
	A0 = EMU_ReadU32(SP + 60); //+ 0x3C
	RA = 0x8001F940; //ZZ_1F29C_6A4
	ZZ_CLOCKCYCLES(3,0x8004F310);
	goto ZZ_4F310;
ZZ_1F29C_6A4:
	V0 = -V0;
	EMU_Write32(S2 + 152,V0); //+ 0x98
	ZZ_CLOCKCYCLES(3,0x8001F9D4);
	goto ZZ_1F29C_738;
ZZ_1F29C_6B0:
	V0 = V1 & 0x800;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001F9D4);
		goto ZZ_1F29C_738;
	}
	V1 = EMU_ReadU32(SP + 56); //+ 0x38
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(7,0x8001F96C);
		goto ZZ_1F29C_6D0;
	}
	V1 = -V1;
	ZZ_CLOCKCYCLES(8,0x8001F96C);
ZZ_1F29C_6D0:
	A1 = EMU_ReadU32(SP + 64); //+ 0x40
	if ((int32_t)A1 >= 0)
	{
		V0 = (int32_t)A1 < (int32_t)V1;
		ZZ_CLOCKCYCLES(4,0x8001F984);
		goto ZZ_1F29C_6E8;
	}
	V0 = (int32_t)A1 < (int32_t)V1;
	A1 = -A1;
	V0 = (int32_t)A1 < (int32_t)V1;
	ZZ_CLOCKCYCLES(6,0x8001F984);
ZZ_1F29C_6E8:
	if (!V0)
	{
		V0 = A1 >> 31;
		ZZ_CLOCKCYCLES(2,0x8001F99C);
		goto ZZ_1F29C_700;
	}
	V0 = A1 >> 31;
	V0 += A1;
	V0 = (int32_t)V0 >> 1;
	A1 = V1 + V0;
	ZZ_CLOCKCYCLES(6,0x8001F9AC);
	goto ZZ_1F29C_710;
ZZ_1F29C_700:
	V0 = V1 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	A1 += V0;
	ZZ_CLOCKCYCLES(4,0x8001F9AC);
ZZ_1F29C_710:
	A0 = EMU_ReadU32(SP + 60); //+ 0x3C
	RA = 0x8001F9B8; //ZZ_1F29C_71C
	ZZ_CLOCKCYCLES(3,0x8004F310);
	goto ZZ_4F310;
ZZ_1F29C_71C:
	EMU_Write32(S2 + 152,V0); //+ 0x98
	A0 = EMU_ReadU32(SP + 56); //+ 0x38
	A1 = EMU_ReadU32(SP + 64); //+ 0x40
	A0 = -A0;
	RA = 0x8001F9D0; //ZZ_1F29C_734
	A1 = -A1;
	ZZ_CLOCKCYCLES(6,0x8004F310);
	goto ZZ_4F310;
ZZ_1F29C_734:
	EMU_Write32(S2 + 116,V0); //+ 0x74
	ZZ_CLOCKCYCLES(1,0x8001F9D4);
ZZ_1F29C_738:
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = EMU_ReadU32(S3);
	V0 = V0 - V1;
	EMU_SMultiply(V0,S4);
	V0 = EMU_ReadU32(SP + 44); //+ 0x2C
	T1 = LO;
	A0 = (int32_t)T1 >> 8;
	EMU_Write32(SP + 40,A0); //+ 0x28
	V1 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 = V0 - V1;
	EMU_SMultiply(V0,S4);
	T1 = LO;
	V0 = (int32_t)T1 >> 8;
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(SP + 48); //+ 0x30
	V1 = EMU_ReadU32(S3 + 8); //+ 0x8
	V0 = V0 - V1;
	EMU_SMultiply(V0,S4);
	T1 = LO;
	V0 = (int32_t)T1 >> 8;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(S3);
	V0 += A0;
	EMU_Write32(S3,V0);
	V0 = EMU_ReadU32(S3 + 4); //+ 0x4
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	V0 += V1;
	V1 = EMU_ReadU32(S3 + 8); //+ 0x8
	EMU_Write32(S3 + 4,V0); //+ 0x4
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	V0 = FP;
	V1 += A0;
	EMU_Write32(S3 + 8,V1); //+ 0x8
	ZZ_CLOCKCYCLES(38,0x8001FA6C);
ZZ_1F29C_7D0:
	RA = EMU_ReadU32(SP + 164); //+ 0xA4
	FP = EMU_ReadU32(SP + 160); //+ 0xA0
	S7 = EMU_ReadU32(SP + 156); //+ 0x9C
	S6 = EMU_ReadU32(SP + 152); //+ 0x98
	S5 = EMU_ReadU32(SP + 148); //+ 0x94
	S4 = EMU_ReadU32(SP + 144); //+ 0x90
	S3 = EMU_ReadU32(SP + 140); //+ 0x8C
	S2 = EMU_ReadU32(SP + 136); //+ 0x88
	S1 = EMU_ReadU32(SP + 132); //+ 0x84
	S0 = EMU_ReadU32(SP + 128); //+ 0x80
	SP += 168;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80038510,ZZ_38414_FC);
	ZZ_JUMPREGISTER(0x800197B0,ZZ_191D4_5DC);
	ZZ_JUMPREGISTER(0x8001E234,ZZ_1D860_9D4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001F29C,ZZ_1F29C);
ZZ_MARK(0x8001F2A0);
ZZ_MARK(0x8001F2A4);
ZZ_MARK(0x8001F2A8);
ZZ_MARK(0x8001F2AC);
ZZ_MARK(0x8001F2B0);
ZZ_MARK(0x8001F2B4);
ZZ_MARK(0x8001F2B8);
ZZ_MARK(0x8001F2BC);
ZZ_MARK(0x8001F2C0);
ZZ_MARK(0x8001F2C4);
ZZ_MARK(0x8001F2C8);
ZZ_MARK(0x8001F2CC);
ZZ_MARK(0x8001F2D0);
ZZ_MARK(0x8001F2D4);
ZZ_MARK(0x8001F2D8);
ZZ_MARK(0x8001F2DC);
ZZ_MARK(0x8001F2E0);
ZZ_MARK_TARGET(0x8001F2E4,ZZ_1F29C_48);
ZZ_MARK(0x8001F2E8);
ZZ_MARK_TARGET(0x8001F2EC,ZZ_1F29C_50);
ZZ_MARK(0x8001F2F0);
ZZ_MARK(0x8001F2F4);
ZZ_MARK(0x8001F2F8);
ZZ_MARK(0x8001F2FC);
ZZ_MARK(0x8001F300);
ZZ_MARK(0x8001F304);
ZZ_MARK(0x8001F308);
ZZ_MARK_TARGET(0x8001F30C,ZZ_1F29C_70);
ZZ_MARK(0x8001F310);
ZZ_MARK(0x8001F314);
ZZ_MARK(0x8001F318);
ZZ_MARK(0x8001F31C);
ZZ_MARK_TARGET(0x8001F320,ZZ_1F29C_84);
ZZ_MARK_TARGET(0x8001F324,ZZ_1F29C_88);
ZZ_MARK(0x8001F328);
ZZ_MARK(0x8001F32C);
ZZ_MARK(0x8001F330);
ZZ_MARK_TARGET(0x8001F334,ZZ_1F29C_98);
ZZ_MARK(0x8001F338);
ZZ_MARK(0x8001F33C);
ZZ_MARK(0x8001F340);
ZZ_MARK(0x8001F344);
ZZ_MARK_TARGET(0x8001F348,ZZ_1F29C_AC);
ZZ_MARK(0x8001F34C);
ZZ_MARK(0x8001F350);
ZZ_MARK(0x8001F354);
ZZ_MARK(0x8001F358);
ZZ_MARK(0x8001F35C);
ZZ_MARK(0x8001F360);
ZZ_MARK(0x8001F364);
ZZ_MARK_TARGET(0x8001F368,ZZ_1F29C_CC);
ZZ_MARK(0x8001F36C);
ZZ_MARK(0x8001F370);
ZZ_MARK(0x8001F374);
ZZ_MARK(0x8001F378);
ZZ_MARK(0x8001F37C);
ZZ_MARK(0x8001F380);
ZZ_MARK(0x8001F384);
ZZ_MARK(0x8001F388);
ZZ_MARK(0x8001F38C);
ZZ_MARK(0x8001F390);
ZZ_MARK_TARGET(0x8001F394,ZZ_1F29C_F8);
ZZ_MARK(0x8001F398);
ZZ_MARK(0x8001F39C);
ZZ_MARK(0x8001F3A0);
ZZ_MARK(0x8001F3A4);
ZZ_MARK(0x8001F3A8);
ZZ_MARK(0x8001F3AC);
ZZ_MARK(0x8001F3B0);
ZZ_MARK(0x8001F3B4);
ZZ_MARK(0x8001F3B8);
ZZ_MARK(0x8001F3BC);
ZZ_MARK(0x8001F3C0);
ZZ_MARK(0x8001F3C4);
ZZ_MARK(0x8001F3C8);
ZZ_MARK(0x8001F3CC);
ZZ_MARK(0x8001F3D0);
ZZ_MARK(0x8001F3D4);
ZZ_MARK(0x8001F3D8);
ZZ_MARK(0x8001F3DC);
ZZ_MARK(0x8001F3E0);
ZZ_MARK(0x8001F3E4);
ZZ_MARK(0x8001F3E8);
ZZ_MARK(0x8001F3EC);
ZZ_MARK(0x8001F3F0);
ZZ_MARK(0x8001F3F4);
ZZ_MARK(0x8001F3F8);
ZZ_MARK(0x8001F3FC);
ZZ_MARK(0x8001F400);
ZZ_MARK(0x8001F404);
ZZ_MARK(0x8001F408);
ZZ_MARK(0x8001F40C);
ZZ_MARK(0x8001F410);
ZZ_MARK(0x8001F414);
ZZ_MARK(0x8001F418);
ZZ_MARK(0x8001F41C);
ZZ_MARK(0x8001F420);
ZZ_MARK(0x8001F424);
ZZ_MARK(0x8001F428);
ZZ_MARK(0x8001F42C);
ZZ_MARK(0x8001F430);
ZZ_MARK(0x8001F434);
ZZ_MARK(0x8001F438);
ZZ_MARK(0x8001F43C);
ZZ_MARK(0x8001F440);
ZZ_MARK(0x8001F444);
ZZ_MARK(0x8001F448);
ZZ_MARK(0x8001F44C);
ZZ_MARK(0x8001F450);
ZZ_MARK(0x8001F454);
ZZ_MARK(0x8001F458);
ZZ_MARK(0x8001F45C);
ZZ_MARK(0x8001F460);
ZZ_MARK(0x8001F464);
ZZ_MARK(0x8001F468);
ZZ_MARK(0x8001F46C);
ZZ_MARK(0x8001F470);
ZZ_MARK(0x8001F474);
ZZ_MARK(0x8001F478);
ZZ_MARK(0x8001F47C);
ZZ_MARK(0x8001F480);
ZZ_MARK(0x8001F484);
ZZ_MARK(0x8001F488);
ZZ_MARK(0x8001F48C);
ZZ_MARK(0x8001F490);
ZZ_MARK(0x8001F494);
ZZ_MARK(0x8001F498);
ZZ_MARK(0x8001F49C);
ZZ_MARK(0x8001F4A0);
ZZ_MARK(0x8001F4A4);
ZZ_MARK(0x8001F4A8);
ZZ_MARK(0x8001F4AC);
ZZ_MARK(0x8001F4B0);
ZZ_MARK(0x8001F4B4);
ZZ_MARK(0x8001F4B8);
ZZ_MARK(0x8001F4BC);
ZZ_MARK_TARGET(0x8001F4C0,ZZ_1F29C_224);
ZZ_MARK(0x8001F4C4);
ZZ_MARK(0x8001F4C8);
ZZ_MARK(0x8001F4CC);
ZZ_MARK(0x8001F4D0);
ZZ_MARK(0x8001F4D4);
ZZ_MARK(0x8001F4D8);
ZZ_MARK(0x8001F4DC);
ZZ_MARK(0x8001F4E0);
ZZ_MARK(0x8001F4E4);
ZZ_MARK(0x8001F4E8);
ZZ_MARK(0x8001F4EC);
ZZ_MARK(0x8001F4F0);
ZZ_MARK(0x8001F4F4);
ZZ_MARK(0x8001F4F8);
ZZ_MARK(0x8001F4FC);
ZZ_MARK(0x8001F500);
ZZ_MARK(0x8001F504);
ZZ_MARK(0x8001F508);
ZZ_MARK(0x8001F50C);
ZZ_MARK(0x8001F510);
ZZ_MARK(0x8001F514);
ZZ_MARK(0x8001F518);
ZZ_MARK(0x8001F51C);
ZZ_MARK(0x8001F520);
ZZ_MARK(0x8001F524);
ZZ_MARK(0x8001F528);
ZZ_MARK(0x8001F52C);
ZZ_MARK(0x8001F530);
ZZ_MARK(0x8001F534);
ZZ_MARK(0x8001F538);
ZZ_MARK(0x8001F53C);
ZZ_MARK(0x8001F540);
ZZ_MARK(0x8001F544);
ZZ_MARK_TARGET(0x8001F548,ZZ_1F29C_2AC);
ZZ_MARK(0x8001F54C);
ZZ_MARK(0x8001F550);
ZZ_MARK(0x8001F554);
ZZ_MARK(0x8001F558);
ZZ_MARK(0x8001F55C);
ZZ_MARK_TARGET(0x8001F560,ZZ_1F29C_2C4);
ZZ_MARK(0x8001F564);
ZZ_MARK(0x8001F568);
ZZ_MARK(0x8001F56C);
ZZ_MARK(0x8001F570);
ZZ_MARK(0x8001F574);
ZZ_MARK(0x8001F578);
ZZ_MARK_TARGET(0x8001F57C,ZZ_1F29C_2E0);
ZZ_MARK(0x8001F580);
ZZ_MARK(0x8001F584);
ZZ_MARK(0x8001F588);
ZZ_MARK(0x8001F58C);
ZZ_MARK(0x8001F590);
ZZ_MARK_TARGET(0x8001F594,ZZ_1F29C_2F8);
ZZ_MARK(0x8001F598);
ZZ_MARK(0x8001F59C);
ZZ_MARK(0x8001F5A0);
ZZ_MARK(0x8001F5A4);
ZZ_MARK(0x8001F5A8);
ZZ_MARK(0x8001F5AC);
ZZ_MARK(0x8001F5B0);
ZZ_MARK(0x8001F5B4);
ZZ_MARK(0x8001F5B8);
ZZ_MARK(0x8001F5BC);
ZZ_MARK_TARGET(0x8001F5C0,ZZ_1F29C_324);
ZZ_MARK(0x8001F5C4);
ZZ_MARK(0x8001F5C8);
ZZ_MARK(0x8001F5CC);
ZZ_MARK(0x8001F5D0);
ZZ_MARK(0x8001F5D4);
ZZ_MARK(0x8001F5D8);
ZZ_MARK(0x8001F5DC);
ZZ_MARK(0x8001F5E0);
ZZ_MARK(0x8001F5E4);
ZZ_MARK(0x8001F5E8);
ZZ_MARK(0x8001F5EC);
ZZ_MARK(0x8001F5F0);
ZZ_MARK_TARGET(0x8001F5F4,ZZ_1F29C_358);
ZZ_MARK(0x8001F5F8);
ZZ_MARK(0x8001F5FC);
ZZ_MARK(0x8001F600);
ZZ_MARK(0x8001F604);
ZZ_MARK(0x8001F608);
ZZ_MARK_TARGET(0x8001F60C,ZZ_1F29C_370);
ZZ_MARK(0x8001F610);
ZZ_MARK(0x8001F614);
ZZ_MARK(0x8001F618);
ZZ_MARK(0x8001F61C);
ZZ_MARK(0x8001F620);
ZZ_MARK(0x8001F624);
ZZ_MARK(0x8001F628);
ZZ_MARK(0x8001F62C);
ZZ_MARK(0x8001F630);
ZZ_MARK(0x8001F634);
ZZ_MARK(0x8001F638);
ZZ_MARK(0x8001F63C);
ZZ_MARK(0x8001F640);
ZZ_MARK(0x8001F644);
ZZ_MARK(0x8001F648);
ZZ_MARK(0x8001F64C);
ZZ_MARK_TARGET(0x8001F650,ZZ_1F29C_3B4);
ZZ_MARK(0x8001F654);
ZZ_MARK(0x8001F658);
ZZ_MARK(0x8001F65C);
ZZ_MARK(0x8001F660);
ZZ_MARK(0x8001F664);
ZZ_MARK_TARGET(0x8001F668,ZZ_1F29C_3CC);
ZZ_MARK(0x8001F66C);
ZZ_MARK(0x8001F670);
ZZ_MARK(0x8001F674);
ZZ_MARK(0x8001F678);
ZZ_MARK(0x8001F67C);
ZZ_MARK(0x8001F680);
ZZ_MARK(0x8001F684);
ZZ_MARK(0x8001F688);
ZZ_MARK(0x8001F68C);
ZZ_MARK_TARGET(0x8001F690,ZZ_1F29C_3F4);
ZZ_MARK(0x8001F694);
ZZ_MARK(0x8001F698);
ZZ_MARK(0x8001F69C);
ZZ_MARK(0x8001F6A0);
ZZ_MARK(0x8001F6A4);
ZZ_MARK_TARGET(0x8001F6A8,ZZ_1F29C_40C);
ZZ_MARK(0x8001F6AC);
ZZ_MARK(0x8001F6B0);
ZZ_MARK(0x8001F6B4);
ZZ_MARK(0x8001F6B8);
ZZ_MARK(0x8001F6BC);
ZZ_MARK(0x8001F6C0);
ZZ_MARK_TARGET(0x8001F6C4,ZZ_1F29C_428);
ZZ_MARK(0x8001F6C8);
ZZ_MARK(0x8001F6CC);
ZZ_MARK(0x8001F6D0);
ZZ_MARK_TARGET(0x8001F6D4,ZZ_1F29C_438);
ZZ_MARK(0x8001F6D8);
ZZ_MARK(0x8001F6DC);
ZZ_MARK(0x8001F6E0);
ZZ_MARK(0x8001F6E4);
ZZ_MARK(0x8001F6E8);
ZZ_MARK(0x8001F6EC);
ZZ_MARK(0x8001F6F0);
ZZ_MARK(0x8001F6F4);
ZZ_MARK(0x8001F6F8);
ZZ_MARK(0x8001F6FC);
ZZ_MARK_TARGET(0x8001F700,ZZ_1F29C_464);
ZZ_MARK(0x8001F704);
ZZ_MARK(0x8001F708);
ZZ_MARK_TARGET(0x8001F70C,ZZ_1F29C_470);
ZZ_MARK(0x8001F710);
ZZ_MARK(0x8001F714);
ZZ_MARK(0x8001F718);
ZZ_MARK_TARGET(0x8001F71C,ZZ_1F29C_480);
ZZ_MARK(0x8001F720);
ZZ_MARK(0x8001F724);
ZZ_MARK(0x8001F728);
ZZ_MARK(0x8001F72C);
ZZ_MARK(0x8001F730);
ZZ_MARK(0x8001F734);
ZZ_MARK(0x8001F738);
ZZ_MARK(0x8001F73C);
ZZ_MARK(0x8001F740);
ZZ_MARK(0x8001F744);
ZZ_MARK(0x8001F748);
ZZ_MARK(0x8001F74C);
ZZ_MARK(0x8001F750);
ZZ_MARK(0x8001F754);
ZZ_MARK(0x8001F758);
ZZ_MARK(0x8001F75C);
ZZ_MARK(0x8001F760);
ZZ_MARK(0x8001F764);
ZZ_MARK(0x8001F768);
ZZ_MARK(0x8001F76C);
ZZ_MARK(0x8001F770);
ZZ_MARK(0x8001F774);
ZZ_MARK(0x8001F778);
ZZ_MARK(0x8001F77C);
ZZ_MARK(0x8001F780);
ZZ_MARK(0x8001F784);
ZZ_MARK(0x8001F788);
ZZ_MARK(0x8001F78C);
ZZ_MARK(0x8001F790);
ZZ_MARK(0x8001F794);
ZZ_MARK(0x8001F798);
ZZ_MARK_TARGET(0x8001F79C,ZZ_1F29C_500);
ZZ_MARK(0x8001F7A0);
ZZ_MARK(0x8001F7A4);
ZZ_MARK(0x8001F7A8);
ZZ_MARK(0x8001F7AC);
ZZ_MARK(0x8001F7B0);
ZZ_MARK(0x8001F7B4);
ZZ_MARK(0x8001F7B8);
ZZ_MARK(0x8001F7BC);
ZZ_MARK_TARGET(0x8001F7C0,ZZ_1F29C_524);
ZZ_MARK(0x8001F7C4);
ZZ_MARK(0x8001F7C8);
ZZ_MARK_TARGET(0x8001F7CC,ZZ_1F29C_530);
ZZ_MARK(0x8001F7D0);
ZZ_MARK(0x8001F7D4);
ZZ_MARK(0x8001F7D8);
ZZ_MARK(0x8001F7DC);
ZZ_MARK(0x8001F7E0);
ZZ_MARK(0x8001F7E4);
ZZ_MARK(0x8001F7E8);
ZZ_MARK(0x8001F7EC);
ZZ_MARK(0x8001F7F0);
ZZ_MARK(0x8001F7F4);
ZZ_MARK(0x8001F7F8);
ZZ_MARK(0x8001F7FC);
ZZ_MARK_TARGET(0x8001F800,ZZ_1F29C_564);
ZZ_MARK_TARGET(0x8001F804,ZZ_1F29C_568);
ZZ_MARK_TARGET(0x8001F808,ZZ_1F29C_56C);
ZZ_MARK_TARGET(0x8001F80C,ZZ_1F29C_570);
ZZ_MARK(0x8001F810);
ZZ_MARK(0x8001F814);
ZZ_MARK(0x8001F818);
ZZ_MARK(0x8001F81C);
ZZ_MARK(0x8001F820);
ZZ_MARK(0x8001F824);
ZZ_MARK(0x8001F828);
ZZ_MARK_TARGET(0x8001F82C,ZZ_1F29C_590);
ZZ_MARK(0x8001F830);
ZZ_MARK_TARGET(0x8001F834,ZZ_1F29C_598);
ZZ_MARK_TARGET(0x8001F838,ZZ_1F29C_59C);
ZZ_MARK(0x8001F83C);
ZZ_MARK(0x8001F840);
ZZ_MARK(0x8001F844);
ZZ_MARK(0x8001F848);
ZZ_MARK(0x8001F84C);
ZZ_MARK(0x8001F850);
ZZ_MARK(0x8001F854);
ZZ_MARK_TARGET(0x8001F858,ZZ_1F29C_5BC);
ZZ_MARK(0x8001F85C);
ZZ_MARK(0x8001F860);
ZZ_MARK_TARGET(0x8001F864,ZZ_1F29C_5C8);
ZZ_MARK(0x8001F868);
ZZ_MARK(0x8001F86C);
ZZ_MARK(0x8001F870);
ZZ_MARK(0x8001F874);
ZZ_MARK(0x8001F878);
ZZ_MARK(0x8001F87C);
ZZ_MARK(0x8001F880);
ZZ_MARK(0x8001F884);
ZZ_MARK(0x8001F888);
ZZ_MARK(0x8001F88C);
ZZ_MARK(0x8001F890);
ZZ_MARK(0x8001F894);
ZZ_MARK(0x8001F898);
ZZ_MARK(0x8001F89C);
ZZ_MARK(0x8001F8A0);
ZZ_MARK(0x8001F8A4);
ZZ_MARK(0x8001F8A8);
ZZ_MARK_TARGET(0x8001F8AC,ZZ_1F29C_610);
ZZ_MARK(0x8001F8B0);
ZZ_MARK_TARGET(0x8001F8B4,ZZ_1F29C_618);
ZZ_MARK(0x8001F8B8);
ZZ_MARK_TARGET(0x8001F8BC,ZZ_1F29C_620);
ZZ_MARK(0x8001F8C0);
ZZ_MARK(0x8001F8C4);
ZZ_MARK(0x8001F8C8);
ZZ_MARK(0x8001F8CC);
ZZ_MARK(0x8001F8D0);
ZZ_MARK(0x8001F8D4);
ZZ_MARK(0x8001F8D8);
ZZ_MARK(0x8001F8DC);
ZZ_MARK(0x8001F8E0);
ZZ_MARK(0x8001F8E4);
ZZ_MARK_TARGET(0x8001F8E8,ZZ_1F29C_64C);
ZZ_MARK(0x8001F8EC);
ZZ_MARK(0x8001F8F0);
ZZ_MARK(0x8001F8F4);
ZZ_MARK(0x8001F8F8);
ZZ_MARK_TARGET(0x8001F8FC,ZZ_1F29C_660);
ZZ_MARK(0x8001F900);
ZZ_MARK_TARGET(0x8001F904,ZZ_1F29C_668);
ZZ_MARK(0x8001F908);
ZZ_MARK(0x8001F90C);
ZZ_MARK(0x8001F910);
ZZ_MARK(0x8001F914);
ZZ_MARK(0x8001F918);
ZZ_MARK(0x8001F91C);
ZZ_MARK(0x8001F920);
ZZ_MARK_TARGET(0x8001F924,ZZ_1F29C_688);
ZZ_MARK(0x8001F928);
ZZ_MARK(0x8001F92C);
ZZ_MARK(0x8001F930);
ZZ_MARK_TARGET(0x8001F934,ZZ_1F29C_698);
ZZ_MARK(0x8001F938);
ZZ_MARK(0x8001F93C);
ZZ_MARK_TARGET(0x8001F940,ZZ_1F29C_6A4);
ZZ_MARK(0x8001F944);
ZZ_MARK(0x8001F948);
ZZ_MARK_TARGET(0x8001F94C,ZZ_1F29C_6B0);
ZZ_MARK(0x8001F950);
ZZ_MARK(0x8001F954);
ZZ_MARK(0x8001F958);
ZZ_MARK(0x8001F95C);
ZZ_MARK(0x8001F960);
ZZ_MARK(0x8001F964);
ZZ_MARK(0x8001F968);
ZZ_MARK_TARGET(0x8001F96C,ZZ_1F29C_6D0);
ZZ_MARK(0x8001F970);
ZZ_MARK(0x8001F974);
ZZ_MARK(0x8001F978);
ZZ_MARK(0x8001F97C);
ZZ_MARK(0x8001F980);
ZZ_MARK_TARGET(0x8001F984,ZZ_1F29C_6E8);
ZZ_MARK(0x8001F988);
ZZ_MARK(0x8001F98C);
ZZ_MARK(0x8001F990);
ZZ_MARK(0x8001F994);
ZZ_MARK(0x8001F998);
ZZ_MARK_TARGET(0x8001F99C,ZZ_1F29C_700);
ZZ_MARK(0x8001F9A0);
ZZ_MARK(0x8001F9A4);
ZZ_MARK(0x8001F9A8);
ZZ_MARK_TARGET(0x8001F9AC,ZZ_1F29C_710);
ZZ_MARK(0x8001F9B0);
ZZ_MARK(0x8001F9B4);
ZZ_MARK_TARGET(0x8001F9B8,ZZ_1F29C_71C);
ZZ_MARK(0x8001F9BC);
ZZ_MARK(0x8001F9C0);
ZZ_MARK(0x8001F9C4);
ZZ_MARK(0x8001F9C8);
ZZ_MARK(0x8001F9CC);
ZZ_MARK_TARGET(0x8001F9D0,ZZ_1F29C_734);
ZZ_MARK_TARGET(0x8001F9D4,ZZ_1F29C_738);
ZZ_MARK(0x8001F9D8);
ZZ_MARK(0x8001F9DC);
ZZ_MARK(0x8001F9E0);
ZZ_MARK(0x8001F9E4);
ZZ_MARK(0x8001F9E8);
ZZ_MARK(0x8001F9EC);
ZZ_MARK(0x8001F9F0);
ZZ_MARK(0x8001F9F4);
ZZ_MARK(0x8001F9F8);
ZZ_MARK(0x8001F9FC);
ZZ_MARK(0x8001FA00);
ZZ_MARK(0x8001FA04);
ZZ_MARK(0x8001FA08);
ZZ_MARK(0x8001FA0C);
ZZ_MARK(0x8001FA10);
ZZ_MARK(0x8001FA14);
ZZ_MARK(0x8001FA18);
ZZ_MARK(0x8001FA1C);
ZZ_MARK(0x8001FA20);
ZZ_MARK(0x8001FA24);
ZZ_MARK(0x8001FA28);
ZZ_MARK(0x8001FA2C);
ZZ_MARK(0x8001FA30);
ZZ_MARK(0x8001FA34);
ZZ_MARK(0x8001FA38);
ZZ_MARK(0x8001FA3C);
ZZ_MARK(0x8001FA40);
ZZ_MARK(0x8001FA44);
ZZ_MARK(0x8001FA48);
ZZ_MARK(0x8001FA4C);
ZZ_MARK(0x8001FA50);
ZZ_MARK(0x8001FA54);
ZZ_MARK(0x8001FA58);
ZZ_MARK(0x8001FA5C);
ZZ_MARK(0x8001FA60);
ZZ_MARK(0x8001FA64);
ZZ_MARK(0x8001FA68);
ZZ_MARK_TARGET(0x8001FA6C,ZZ_1F29C_7D0);
ZZ_MARK(0x8001FA70);
ZZ_MARK(0x8001FA74);
ZZ_MARK(0x8001FA78);
ZZ_MARK(0x8001FA7C);
ZZ_MARK(0x8001FA80);
ZZ_MARK(0x8001FA84);
ZZ_MARK(0x8001FA88);
ZZ_MARK(0x8001FA8C);
ZZ_MARK(0x8001FA90);
ZZ_MARK(0x8001FA94);
ZZ_MARK(0x8001FA98);
ZZ_MARK(0x8001FA9C);
