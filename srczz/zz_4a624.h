#ifdef ZZ_INCLUDE_CODE
ZZ_4A624:
	AT = 0x80060000;
	EMU_Write32(AT - 2612,RA); //+ 0xFFFFF5CC
	RA = 0x8004A634; //ZZ_4A624_10
	ZZ_CLOCKCYCLES(4,0x80049FB4);
	goto ZZ_49FB4;
ZZ_4A624_10:
	T2 = 176;
	ZZ_JUMPREGISTER_BEGIN(T2);
	RA = 0x8004A640; //ZZ_4A624_1C
	T1 = 87;
	ZZ_CLOCKCYCLES_JR(3);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T2,8004A638)
	ZZ_JUMPREGISTER_END();
ZZ_4A624_1C:
	V0 = EMU_ReadU32(V0 + 364); //+ 0x16C
	T2 = 0x80050000;
	T1 = 0x80050000;
	AT = 0x80060000;
	V1 = EMU_CheckedAdd(V0,1952);
	T2 -= 22880;
	T1 -= 22864;
	EMU_Write32(AT - 2608,V1); //+ 0xFFFFF5D0
	ZZ_CLOCKCYCLES(8,0x8004A660);
ZZ_4A624_3C:
	V1 = EMU_ReadU32(T2);
	T2 += 4;
	EMU_Write32(V0 + 984,V1); //+ 0x3D8
	V0 += 4;
	if (T2 != T1)
	{
		EMU_Write32(V0 + 1244,V1); //+ 0x4DC
		ZZ_CLOCKCYCLES(6,0x8004A660);
		goto ZZ_4A624_3C;
	}
	EMU_Write32(V0 + 1244,V1); //+ 0x4DC
	RA = 0x8004A680; //ZZ_4A624_5C
	ZZ_CLOCKCYCLES(8,0x8004A5EC);
	goto ZZ_4A5EC;
ZZ_4A624_5C:
	RA = 0x8004A688; //ZZ_4A624_64
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_4A624_64:
	RA = 0x80060000;
	RA = EMU_ReadU32(RA - 2612); //+ 0xFFFFF5CC
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2608); //+ 0xFFFFF5D0
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8004A308,ZZ_4A298_70);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004A624,0x8004A634,ZZ_4A624);
ZZ_MARK_TARGET(0x8004A634,0x8004A640,ZZ_4A624_10);
ZZ_MARK_TARGET(0x8004A640,0x8004A660,ZZ_4A624_1C);
ZZ_MARK_TARGET(0x8004A660,0x8004A680,ZZ_4A624_3C);
ZZ_MARK_TARGET(0x8004A680,0x8004A688,ZZ_4A624_5C);
ZZ_MARK_TARGET(0x8004A688,0x8004A6A0,ZZ_4A624_64);
