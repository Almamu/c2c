#ifdef ZZ_INCLUDE_CODE
ZZ_22AD4:
	SP -= 112;
	EMU_Write32(SP + 104,RA); //+ 0x68
	EMU_Write32(SP + 100,S3); //+ 0x64
	EMU_Write32(SP + 96,S2); //+ 0x60
	EMU_Write32(SP + 92,S1); //+ 0x5C
	EMU_Write32(SP + 88,S0); //+ 0x58
	V0 = EMU_ReadU32(A0);
	EMU_Write32(SP + 64,V0); //+ 0x40
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	A1 = 0x80060000;
	A1 += 2960;
	EMU_Write32(SP + 68,V0); //+ 0x44
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = EMU_ReadU32(A1);
	if (V0)
	{
		EMU_Write32(SP + 72,V1); //+ 0x48
		ZZ_CLOCKCYCLES(18,0x80022B44);
		goto ZZ_22AD4_70;
	}
	EMU_Write32(SP + 72,V1); //+ 0x48
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2944); //+ 0xB80
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2948); //+ 0xB84
	V0 <<= 1;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (!V1)
	{
		A0 = 0x2;
		ZZ_CLOCKCYCLES(26,0x80022B40);
		goto ZZ_22AD4_6C;
	}
	A0 = 0x2;
	A0 = 0x1;
	ZZ_CLOCKCYCLES(27,0x80022B40);
ZZ_22AD4_6C:
	EMU_Write32(A1,A0);
	ZZ_CLOCKCYCLES(1,0x80022B44);
ZZ_22AD4_70:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x160;
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = 0x100;
	EMU_Write32(SP + 16,R0); //+ 0x10
	RA = 0x80022B74; //ZZ_22AD4_A0
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(12,0x800324E0);
	goto ZZ_324E0;
ZZ_22AD4_A0:
	V1 = V0 << 3;
	V1 += V0;
	A0 = V1 << 4;
	V1 += A0;
	V1 <<= 1;
	V1 += V0;
	A1 = (int32_t)V1 >> 8;
	if ((int32_t)A1 >= 0)
	{
		V1 = 0x1;
		ZZ_CLOCKCYCLES(9,0x80022BB8);
		goto ZZ_22AD4_E4;
	}
	V1 = 0x1;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2960); //+ 0xB90
	if (V0 != V1)
	{
		A1 = -A1;
		ZZ_CLOCKCYCLES(14,0x80022BB0);
		goto ZZ_22AD4_DC;
	}
	A1 = -A1;
	V1 = 0x2;
	ZZ_CLOCKCYCLES(15,0x80022BB0);
ZZ_22AD4_DC:
	AT = 0x80060000;
	EMU_Write32(AT + 2960,V1); //+ 0xB90
	ZZ_CLOCKCYCLES(2,0x80022BB8);
ZZ_22AD4_E4:
	S0 = 0x80060000;
	S0 += 2916;
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 + 2936); //+ 0xB78
	T0 = 0x80060000;
	T0 = EMU_ReadU32(T0 + 2960); //+ 0xB90
	A0 = SP + 32;
	S3 = SP + 80;
	A2 = S3;
	EMU_Write32(SP + 32,V0); //+ 0x20
	EMU_Write32(SP + 36,V1); //+ 0x24
	EMU_Write32(SP + 40,A3); //+ 0x28
	RA = 0x80022BF8; //ZZ_22AD4_124
	EMU_Write32(SP + 44,T0); //+ 0x2C
	ZZ_CLOCKCYCLES(16,0x800244DC);
	goto ZZ_244DC;
ZZ_22AD4_124:
	S2 = V0;
	if (!S2)
	{
		S1 = SP + 48;
		ZZ_CLOCKCYCLES(3,0x80022C88);
		goto ZZ_22AD4_1B4;
	}
	S1 = SP + 48;
	A0 = SP + 32;
	RA = 0x80022C10; //ZZ_22AD4_13C
	A1 = S1;
	ZZ_CLOCKCYCLES(6,0x800269D8);
	goto ZZ_269D8;
ZZ_22AD4_13C:
	if (!V0)
	{
		A1 = 0x29;
		ZZ_CLOCKCYCLES(2,0x80022C88);
		goto ZZ_22AD4_1B4;
	}
	A1 = 0x29;
	V0 = EMU_ReadU32(SP + 56); //+ 0x38
	V1 = EMU_ReadU32(SP + 60); //+ 0x3C
	S0 = 0x2;
	EMU_Write32(SP + 80,V0); //+ 0x50
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	A0 = EMU_ReadU32(SP + 52); //+ 0x34
	A2 = R0;
	AT = 0x80060000;
	EMU_Write32(AT + 2960,V1); //+ 0xB90
	RA = 0x80022C4C; //ZZ_22AD4_178
	A3 = R0;
	ZZ_CLOCKCYCLES(15,0x800324E0);
	goto ZZ_324E0;
ZZ_22AD4_178:
	if (V0 != S0)
	{
		A1 = S2;
		ZZ_CLOCKCYCLES(2,0x80022C68);
		goto ZZ_22AD4_194;
	}
	A1 = S2;
	A0 = S1;
	RA = 0x80022C60; //ZZ_22AD4_18C
	A2 = S3;
	ZZ_CLOCKCYCLES(5,0x800244DC);
	goto ZZ_244DC;
ZZ_22AD4_18C:
	ZZ_CLOCKCYCLES(2,0x80022C78);
	goto ZZ_22AD4_1A4;
ZZ_22AD4_194:
	A0 = EMU_ReadU32(SP + 52); //+ 0x34
	A1 = EMU_ReadU32(SP + 56); //+ 0x38
	RA = 0x80022C78; //ZZ_22AD4_1A4
	ZZ_CLOCKCYCLES(4,0x800232F8);
	goto ZZ_232F8;
ZZ_22AD4_1A4:
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	A1 = EMU_ReadU32(SP + 52); //+ 0x34
	ZZ_CLOCKCYCLES(4,0x80022C90);
	goto ZZ_22AD4_1BC;
ZZ_22AD4_1B4:
	A0 = EMU_ReadU32(S0);
	A1 = EMU_ReadU32(S0 + 8); //+ 0x8
	ZZ_CLOCKCYCLES(2,0x80022C90);
ZZ_22AD4_1BC:
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	RA = 0x80022C9C; //ZZ_22AD4_1C8
	A3 = R0;
	ZZ_CLOCKCYCLES(3,0x80020304);
	goto ZZ_20304;
ZZ_22AD4_1C8:
	S0 = SP + 64;
	RA = 0x80022CA8; //ZZ_22AD4_1D4
	A0 = S0;
	ZZ_CLOCKCYCLES(3,0x800226FC);
	goto ZZ_226FC;
ZZ_22AD4_1D4:
	RA = 0x80022CB0; //ZZ_22AD4_1DC
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80023424);
	goto ZZ_23424;
ZZ_22AD4_1DC:
	RA = EMU_ReadU32(SP + 104); //+ 0x68
	S3 = EMU_ReadU32(SP + 100); //+ 0x64
	S2 = EMU_ReadU32(SP + 96); //+ 0x60
	S1 = EMU_ReadU32(SP + 92); //+ 0x5C
	S0 = EMU_ReadU32(SP + 88); //+ 0x58
	SP += 112;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x800270D4,ZZ_26F14_1C0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80022AD4,ZZ_22AD4);
ZZ_MARK(0x80022AD8);
ZZ_MARK(0x80022ADC);
ZZ_MARK(0x80022AE0);
ZZ_MARK(0x80022AE4);
ZZ_MARK(0x80022AE8);
ZZ_MARK(0x80022AEC);
ZZ_MARK(0x80022AF0);
ZZ_MARK(0x80022AF4);
ZZ_MARK(0x80022AF8);
ZZ_MARK(0x80022AFC);
ZZ_MARK(0x80022B00);
ZZ_MARK(0x80022B04);
ZZ_MARK(0x80022B08);
ZZ_MARK(0x80022B0C);
ZZ_MARK(0x80022B10);
ZZ_MARK(0x80022B14);
ZZ_MARK(0x80022B18);
ZZ_MARK(0x80022B1C);
ZZ_MARK(0x80022B20);
ZZ_MARK(0x80022B24);
ZZ_MARK(0x80022B28);
ZZ_MARK(0x80022B2C);
ZZ_MARK(0x80022B30);
ZZ_MARK(0x80022B34);
ZZ_MARK(0x80022B38);
ZZ_MARK(0x80022B3C);
ZZ_MARK_TARGET(0x80022B40,ZZ_22AD4_6C);
ZZ_MARK_TARGET(0x80022B44,ZZ_22AD4_70);
ZZ_MARK(0x80022B48);
ZZ_MARK(0x80022B4C);
ZZ_MARK(0x80022B50);
ZZ_MARK(0x80022B54);
ZZ_MARK(0x80022B58);
ZZ_MARK(0x80022B5C);
ZZ_MARK(0x80022B60);
ZZ_MARK(0x80022B64);
ZZ_MARK(0x80022B68);
ZZ_MARK(0x80022B6C);
ZZ_MARK(0x80022B70);
ZZ_MARK_TARGET(0x80022B74,ZZ_22AD4_A0);
ZZ_MARK(0x80022B78);
ZZ_MARK(0x80022B7C);
ZZ_MARK(0x80022B80);
ZZ_MARK(0x80022B84);
ZZ_MARK(0x80022B88);
ZZ_MARK(0x80022B8C);
ZZ_MARK(0x80022B90);
ZZ_MARK(0x80022B94);
ZZ_MARK(0x80022B98);
ZZ_MARK(0x80022B9C);
ZZ_MARK(0x80022BA0);
ZZ_MARK(0x80022BA4);
ZZ_MARK(0x80022BA8);
ZZ_MARK(0x80022BAC);
ZZ_MARK_TARGET(0x80022BB0,ZZ_22AD4_DC);
ZZ_MARK(0x80022BB4);
ZZ_MARK_TARGET(0x80022BB8,ZZ_22AD4_E4);
ZZ_MARK(0x80022BBC);
ZZ_MARK(0x80022BC0);
ZZ_MARK(0x80022BC4);
ZZ_MARK(0x80022BC8);
ZZ_MARK(0x80022BCC);
ZZ_MARK(0x80022BD0);
ZZ_MARK(0x80022BD4);
ZZ_MARK(0x80022BD8);
ZZ_MARK(0x80022BDC);
ZZ_MARK(0x80022BE0);
ZZ_MARK(0x80022BE4);
ZZ_MARK(0x80022BE8);
ZZ_MARK(0x80022BEC);
ZZ_MARK(0x80022BF0);
ZZ_MARK(0x80022BF4);
ZZ_MARK_TARGET(0x80022BF8,ZZ_22AD4_124);
ZZ_MARK(0x80022BFC);
ZZ_MARK(0x80022C00);
ZZ_MARK(0x80022C04);
ZZ_MARK(0x80022C08);
ZZ_MARK(0x80022C0C);
ZZ_MARK_TARGET(0x80022C10,ZZ_22AD4_13C);
ZZ_MARK(0x80022C14);
ZZ_MARK(0x80022C18);
ZZ_MARK(0x80022C1C);
ZZ_MARK(0x80022C20);
ZZ_MARK(0x80022C24);
ZZ_MARK(0x80022C28);
ZZ_MARK(0x80022C2C);
ZZ_MARK(0x80022C30);
ZZ_MARK(0x80022C34);
ZZ_MARK(0x80022C38);
ZZ_MARK(0x80022C3C);
ZZ_MARK(0x80022C40);
ZZ_MARK(0x80022C44);
ZZ_MARK(0x80022C48);
ZZ_MARK_TARGET(0x80022C4C,ZZ_22AD4_178);
ZZ_MARK(0x80022C50);
ZZ_MARK(0x80022C54);
ZZ_MARK(0x80022C58);
ZZ_MARK(0x80022C5C);
ZZ_MARK_TARGET(0x80022C60,ZZ_22AD4_18C);
ZZ_MARK(0x80022C64);
ZZ_MARK_TARGET(0x80022C68,ZZ_22AD4_194);
ZZ_MARK(0x80022C6C);
ZZ_MARK(0x80022C70);
ZZ_MARK(0x80022C74);
ZZ_MARK_TARGET(0x80022C78,ZZ_22AD4_1A4);
ZZ_MARK(0x80022C7C);
ZZ_MARK(0x80022C80);
ZZ_MARK(0x80022C84);
ZZ_MARK_TARGET(0x80022C88,ZZ_22AD4_1B4);
ZZ_MARK(0x80022C8C);
ZZ_MARK_TARGET(0x80022C90,ZZ_22AD4_1BC);
ZZ_MARK(0x80022C94);
ZZ_MARK(0x80022C98);
ZZ_MARK_TARGET(0x80022C9C,ZZ_22AD4_1C8);
ZZ_MARK(0x80022CA0);
ZZ_MARK(0x80022CA4);
ZZ_MARK_TARGET(0x80022CA8,ZZ_22AD4_1D4);
ZZ_MARK(0x80022CAC);
ZZ_MARK_TARGET(0x80022CB0,ZZ_22AD4_1DC);
ZZ_MARK(0x80022CB4);
ZZ_MARK(0x80022CB8);
ZZ_MARK(0x80022CBC);
ZZ_MARK(0x80022CC0);
ZZ_MARK(0x80022CC4);
ZZ_MARK(0x80022CC8);
ZZ_MARK(0x80022CCC);
