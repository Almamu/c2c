#ifdef ZZ_INCLUDE_CODE
ZZ_4E678:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU32(V0);
	S0 = 0x1000000;
	V0 &= S0;
	if (V0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(10,0x8004E950);
		goto ZZ_4E678_2D8;
	}
	V0 = 1;
	RA = 0x8004E6A8; //ZZ_4E678_30
	A0 = R0;
	ZZ_CLOCKCYCLES(12,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E678_30:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 8008); //+ 0xFFFFE0B8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	AT = 0x80060000;
	EMU_Write32(AT - 7996,V0); //+ 0xFFFFE0C4
	if (A0 == V1)
	{
		ZZ_CLOCKCYCLES(8,0x8004E8B0);
		goto ZZ_4E678_238;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	V0 = EMU_ReadU32(V0);
	V0 &= S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(16,0x8004E8B0);
		goto ZZ_4E678_238;
	}
	S0 = 0x80060000;
	S0 -= 8024;
	ZZ_CLOCKCYCLES(18,0x8004E6F0);
ZZ_4E678_78:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8004); //+ 0xFFFFE0BC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 += 1;
	V0 &= 0x3F;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(8,0x8004E72C);
		goto ZZ_4E678_B4;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8256); //+ 0xFFFFDFC0
	if (V0)
	{
		A0 = 2;
		ZZ_CLOCKCYCLES(13,0x8004E72C);
		goto ZZ_4E678_B4;
	}
	A0 = 2;
	RA = 0x8004E72C; //ZZ_4E678_B4
	A1 = R0;
	ZZ_CLOCKCYCLES(15,0x8004A970);
	goto ZZ_4A970;
ZZ_4E678_B4:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 8056); //+ 0xFFFFE088
	V0 = EMU_ReadU32(A0);
	V1 = 0x4000000;
	V0 &= V1;
	if (V0)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(8,0x8004E764);
		goto ZZ_4E678_EC;
	}
	V1 = A0;
	A0 = 0x4000000;
	ZZ_CLOCKCYCLES(9,0x8004E750);
ZZ_4E678_D8:
	V0 = EMU_ReadU32(V1);
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004E750);
		goto ZZ_4E678_D8;
	}
	ZZ_CLOCKCYCLES(5,0x8004E764);
ZZ_4E678_EC:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 8004); //+ 0xFFFFE0BC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	V1 = A1 << 1;
	V1 += A1;
	AT = 0x80070000;
	AT += V0;
	A0 = EMU_ReadU32(AT - 25512); //+ 0xFFFF9C58
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 8004); //+ 0xFFFFE0BC
	V1 <<= 5;
	V0 = A1 << 1;
	V0 += A1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	A1 = EMU_ReadU32(AT - 25508); //+ 0xFFFF9C5C
	AT = 0x80070000;
	AT += V1;
	V0 = EMU_ReadU32(AT - 25516); //+ 0xFFFF9C54
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004E7D4; //ZZ_4E678_15C
	ZZ_CLOCKCYCLES_JR(28);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004E7CC)
	ZZ_JUMPREGISTER_END();
ZZ_4E678_15C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 25516); //+ 0xFFFF9C54
	EMU_Write32(S0,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 25512); //+ 0xFFFF9C58
	AT = 0x80060000;
	EMU_Write32(AT - 8020,V0); //+ 0xFFFFE0AC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 25508); //+ 0xFFFF9C5C
	AT = 0x80060000;
	EMU_Write32(AT - 8016,V0); //+ 0xFFFFE0B0
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8004); //+ 0xFFFFE0BC
	V0 += 1;
	V0 &= 0x3F;
	AT = 0x80060000;
	EMU_Write32(AT - 8004,V0); //+ 0xFFFFE0BC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8004); //+ 0xFFFFE0BC
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(47,0x8004E8B0);
		goto ZZ_4E678_238;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(55,0x8004E6F0);
		goto ZZ_4E678_78;
	}
	ZZ_CLOCKCYCLES(55,0x8004E8B0);
ZZ_4E678_238:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 7996); //+ 0xFFFFE0C4
	RA = 0x8004E8C0; //ZZ_4E678_248
	ZZ_CLOCKCYCLES(4,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E678_248:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8004); //+ 0xFFFFE0BC
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(7,0x8004E934);
		goto ZZ_4E678_2BC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x8004E934);
		goto ZZ_4E678_2BC;
	}
	V1 = 0x80060000;
	V1 -= 8260;
	V0 = EMU_ReadU32(V1);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(21,0x8004E934);
		goto ZZ_4E678_2BC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8256); //+ 0xFFFFDFC0
	if (!V0)
	{
		ZZ_CLOCKCYCLES(26,0x8004E934);
		goto ZZ_4E678_2BC;
	}
	EMU_Write32(V1,R0);
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004E934; //ZZ_4E678_2BC
	ZZ_CLOCKCYCLES_JR(29);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004E92C)
	ZZ_JUMPREGISTER_END();
ZZ_4E678_2BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8008); //+ 0xFFFFE0B8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V0 - V1;
	V0 &= 0x3F;
	ZZ_CLOCKCYCLES(7,0x8004E950);
ZZ_4E678_2D8:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8004EBA0,ZZ_4EAC0_E0);
	ZZ_JUMPREGISTER(0x8004EAE8,ZZ_4EAC0_28);
	ZZ_JUMPREGISTER(0x8004E3E4,ZZ_4E398_4C);
	ZZ_JUMPREGISTER(0x8004E63C,ZZ_4E398_2A4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004E678,ZZ_4E678);
ZZ_MARK(0x8004E67C);
ZZ_MARK(0x8004E680);
ZZ_MARK(0x8004E684);
ZZ_MARK(0x8004E688);
ZZ_MARK(0x8004E68C);
ZZ_MARK(0x8004E690);
ZZ_MARK(0x8004E694);
ZZ_MARK(0x8004E698);
ZZ_MARK(0x8004E69C);
ZZ_MARK(0x8004E6A0);
ZZ_MARK(0x8004E6A4);
ZZ_MARK_TARGET(0x8004E6A8,ZZ_4E678_30);
ZZ_MARK(0x8004E6AC);
ZZ_MARK(0x8004E6B0);
ZZ_MARK(0x8004E6B4);
ZZ_MARK(0x8004E6B8);
ZZ_MARK(0x8004E6BC);
ZZ_MARK(0x8004E6C0);
ZZ_MARK(0x8004E6C4);
ZZ_MARK(0x8004E6C8);
ZZ_MARK(0x8004E6CC);
ZZ_MARK(0x8004E6D0);
ZZ_MARK(0x8004E6D4);
ZZ_MARK(0x8004E6D8);
ZZ_MARK(0x8004E6DC);
ZZ_MARK(0x8004E6E0);
ZZ_MARK(0x8004E6E4);
ZZ_MARK(0x8004E6E8);
ZZ_MARK(0x8004E6EC);
ZZ_MARK_TARGET(0x8004E6F0,ZZ_4E678_78);
ZZ_MARK(0x8004E6F4);
ZZ_MARK(0x8004E6F8);
ZZ_MARK(0x8004E6FC);
ZZ_MARK(0x8004E700);
ZZ_MARK(0x8004E704);
ZZ_MARK(0x8004E708);
ZZ_MARK(0x8004E70C);
ZZ_MARK(0x8004E710);
ZZ_MARK(0x8004E714);
ZZ_MARK(0x8004E718);
ZZ_MARK(0x8004E71C);
ZZ_MARK(0x8004E720);
ZZ_MARK(0x8004E724);
ZZ_MARK(0x8004E728);
ZZ_MARK_TARGET(0x8004E72C,ZZ_4E678_B4);
ZZ_MARK(0x8004E730);
ZZ_MARK(0x8004E734);
ZZ_MARK(0x8004E738);
ZZ_MARK(0x8004E73C);
ZZ_MARK(0x8004E740);
ZZ_MARK(0x8004E744);
ZZ_MARK(0x8004E748);
ZZ_MARK(0x8004E74C);
ZZ_MARK_TARGET(0x8004E750,ZZ_4E678_D8);
ZZ_MARK(0x8004E754);
ZZ_MARK(0x8004E758);
ZZ_MARK(0x8004E75C);
ZZ_MARK(0x8004E760);
ZZ_MARK_TARGET(0x8004E764,ZZ_4E678_EC);
ZZ_MARK(0x8004E768);
ZZ_MARK(0x8004E76C);
ZZ_MARK(0x8004E770);
ZZ_MARK(0x8004E774);
ZZ_MARK(0x8004E778);
ZZ_MARK(0x8004E77C);
ZZ_MARK(0x8004E780);
ZZ_MARK(0x8004E784);
ZZ_MARK(0x8004E788);
ZZ_MARK(0x8004E78C);
ZZ_MARK(0x8004E790);
ZZ_MARK(0x8004E794);
ZZ_MARK(0x8004E798);
ZZ_MARK(0x8004E79C);
ZZ_MARK(0x8004E7A0);
ZZ_MARK(0x8004E7A4);
ZZ_MARK(0x8004E7A8);
ZZ_MARK(0x8004E7AC);
ZZ_MARK(0x8004E7B0);
ZZ_MARK(0x8004E7B4);
ZZ_MARK(0x8004E7B8);
ZZ_MARK(0x8004E7BC);
ZZ_MARK(0x8004E7C0);
ZZ_MARK(0x8004E7C4);
ZZ_MARK(0x8004E7C8);
ZZ_MARK(0x8004E7CC);
ZZ_MARK(0x8004E7D0);
ZZ_MARK_TARGET(0x8004E7D4,ZZ_4E678_15C);
ZZ_MARK(0x8004E7D8);
ZZ_MARK(0x8004E7DC);
ZZ_MARK(0x8004E7E0);
ZZ_MARK(0x8004E7E4);
ZZ_MARK(0x8004E7E8);
ZZ_MARK(0x8004E7EC);
ZZ_MARK(0x8004E7F0);
ZZ_MARK(0x8004E7F4);
ZZ_MARK(0x8004E7F8);
ZZ_MARK(0x8004E7FC);
ZZ_MARK(0x8004E800);
ZZ_MARK(0x8004E804);
ZZ_MARK(0x8004E808);
ZZ_MARK(0x8004E80C);
ZZ_MARK(0x8004E810);
ZZ_MARK(0x8004E814);
ZZ_MARK(0x8004E818);
ZZ_MARK(0x8004E81C);
ZZ_MARK(0x8004E820);
ZZ_MARK(0x8004E824);
ZZ_MARK(0x8004E828);
ZZ_MARK(0x8004E82C);
ZZ_MARK(0x8004E830);
ZZ_MARK(0x8004E834);
ZZ_MARK(0x8004E838);
ZZ_MARK(0x8004E83C);
ZZ_MARK(0x8004E840);
ZZ_MARK(0x8004E844);
ZZ_MARK(0x8004E848);
ZZ_MARK(0x8004E84C);
ZZ_MARK(0x8004E850);
ZZ_MARK(0x8004E854);
ZZ_MARK(0x8004E858);
ZZ_MARK(0x8004E85C);
ZZ_MARK(0x8004E860);
ZZ_MARK(0x8004E864);
ZZ_MARK(0x8004E868);
ZZ_MARK(0x8004E86C);
ZZ_MARK(0x8004E870);
ZZ_MARK(0x8004E874);
ZZ_MARK(0x8004E878);
ZZ_MARK(0x8004E87C);
ZZ_MARK(0x8004E880);
ZZ_MARK(0x8004E884);
ZZ_MARK(0x8004E888);
ZZ_MARK(0x8004E88C);
ZZ_MARK(0x8004E890);
ZZ_MARK(0x8004E894);
ZZ_MARK(0x8004E898);
ZZ_MARK(0x8004E89C);
ZZ_MARK(0x8004E8A0);
ZZ_MARK(0x8004E8A4);
ZZ_MARK(0x8004E8A8);
ZZ_MARK(0x8004E8AC);
ZZ_MARK_TARGET(0x8004E8B0,ZZ_4E678_238);
ZZ_MARK(0x8004E8B4);
ZZ_MARK(0x8004E8B8);
ZZ_MARK(0x8004E8BC);
ZZ_MARK_TARGET(0x8004E8C0,ZZ_4E678_248);
ZZ_MARK(0x8004E8C4);
ZZ_MARK(0x8004E8C8);
ZZ_MARK(0x8004E8CC);
ZZ_MARK(0x8004E8D0);
ZZ_MARK(0x8004E8D4);
ZZ_MARK(0x8004E8D8);
ZZ_MARK(0x8004E8DC);
ZZ_MARK(0x8004E8E0);
ZZ_MARK(0x8004E8E4);
ZZ_MARK(0x8004E8E8);
ZZ_MARK(0x8004E8EC);
ZZ_MARK(0x8004E8F0);
ZZ_MARK(0x8004E8F4);
ZZ_MARK(0x8004E8F8);
ZZ_MARK(0x8004E8FC);
ZZ_MARK(0x8004E900);
ZZ_MARK(0x8004E904);
ZZ_MARK(0x8004E908);
ZZ_MARK(0x8004E90C);
ZZ_MARK(0x8004E910);
ZZ_MARK(0x8004E914);
ZZ_MARK(0x8004E918);
ZZ_MARK(0x8004E91C);
ZZ_MARK(0x8004E920);
ZZ_MARK(0x8004E924);
ZZ_MARK(0x8004E928);
ZZ_MARK(0x8004E92C);
ZZ_MARK(0x8004E930);
ZZ_MARK_TARGET(0x8004E934,ZZ_4E678_2BC);
ZZ_MARK(0x8004E938);
ZZ_MARK(0x8004E93C);
ZZ_MARK(0x8004E940);
ZZ_MARK(0x8004E944);
ZZ_MARK(0x8004E948);
ZZ_MARK(0x8004E94C);
ZZ_MARK_TARGET(0x8004E950,ZZ_4E678_2D8);
ZZ_MARK(0x8004E954);
ZZ_MARK(0x8004E958);
ZZ_MARK(0x8004E95C);
ZZ_MARK(0x8004E960);
