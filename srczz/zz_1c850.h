#ifdef ZZ_INCLUDE_CODE
ZZ_1C850:
	SP -= 64;
	EMU_Write32(SP + 48,S0); //+ 0x30
	S0 = A0;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	V0 = 0x3;
	if (V1 != V0)
	{
		S1 = A1;
		ZZ_CLOCKCYCLES(9,0x8001CD2C);
		goto ZZ_1C850_4DC;
	}
	S1 = A1;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(14,0x8001C890);
		goto ZZ_1C850_40;
	}
	RA = 0x8001C890; //ZZ_1C850_40
	ZZ_CLOCKCYCLES(16,0x80015A04);
	goto ZZ_15A04;
ZZ_1C850_40:
	A2 = 0x80070000;
	A2 = EMU_ReadU32(A2 - 12756); //+ 0xFFFFCE2C
	AT = 0x80070000;
	EMU_Write32(AT - 12808,S0); //+ 0xFFFFCDF8
	A0 = A2 & 0x8;
	if (!A0)
	{
		V0 = 0x100000;
		ZZ_CLOCKCYCLES(7,0x8001C9CC);
		goto ZZ_1C850_17C;
	}
	V0 = 0x100000;
	A1 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001C8C4);
		goto ZZ_1C850_74;
	}
	S1 = 0x1;
	ZZ_CLOCKCYCLES(13,0x8001C8C4);
ZZ_1C850_74:
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0x2000000;
	V0 &= V1;
	if (V0)
	{
		V0 = A2 & 0x8000;
		ZZ_CLOCKCYCLES(5,0x8001C8E8);
		goto ZZ_1C850_98;
	}
	V0 = A2 & 0x8000;
	V0 = 0x20000;
	V0 &= A1;
	if (!V0)
	{
		V0 = A2 & 0x8000;
		ZZ_CLOCKCYCLES(9,0x8001C8F8);
		goto ZZ_1C850_A8;
	}
	V0 = A2 & 0x8000;
	ZZ_CLOCKCYCLES(9,0x8001C8E8);
ZZ_1C850_98:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001C8F8);
		goto ZZ_1C850_A8;
	}
	A0 = 0x1;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_A8:
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x400;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 1025;
		ZZ_CLOCKCYCLES(8,0x8001C9BC);
		goto ZZ_1C850_16C;
	}
	V0 = (int32_t)V1 < 1025;
	if (!V0)
	{
		V0 = 0x200;
		ZZ_CLOCKCYCLES(10,0x8001C954);
		goto ZZ_1C850_104;
	}
	V0 = 0x200;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 513;
		ZZ_CLOCKCYCLES(12,0x8001C9AC);
		goto ZZ_1C850_15C;
	}
	V0 = (int32_t)V1 < 513;
	if (!V0)
	{
		V0 = 0x100;
		ZZ_CLOCKCYCLES(14,0x8001C940);
		goto ZZ_1C850_F0;
	}
	V0 = 0x100;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(16,0x8001C98C);
		goto ZZ_1C850_13C;
	}
	ZZ_CLOCKCYCLES(18,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_F0:
	V0 = 0x300;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001C99C);
		goto ZZ_1C850_14C;
	}
	ZZ_CLOCKCYCLES(5,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_104:
	V0 = 0x600;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 1537;
		ZZ_CLOCKCYCLES(3,0x8001C99C);
		goto ZZ_1C850_14C;
	}
	V0 = (int32_t)V1 < 1537;
	if (!V0)
	{
		V0 = 0x500;
		ZZ_CLOCKCYCLES(5,0x8001C978);
		goto ZZ_1C850_128;
	}
	V0 = 0x500;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8001C99C);
		goto ZZ_1C850_14C;
	}
	ZZ_CLOCKCYCLES(9,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_128:
	V0 = 0x900;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001C9BC);
		goto ZZ_1C850_16C;
	}
	ZZ_CLOCKCYCLES(5,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_13C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x20;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_14C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x80;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_15C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x100;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
	goto ZZ_1C850_17C;
ZZ_1C850_16C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x400;
	ZZ_CLOCKCYCLES(4,0x8001C9CC);
ZZ_1C850_17C:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x8001CB38);
		goto ZZ_1C850_2E8;
	}
	if (!A0)
	{
		V1 = 0x10000000;
		ZZ_CLOCKCYCLES(4,0x8001CB38);
		goto ZZ_1C850_2E8;
	}
	V1 = 0x10000000;
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8001CA20);
		goto ZZ_1C850_1D0;
	}
	V0 = EMU_ReadU32(S0 + 228); //+ 0xE4
	if (!V0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(13,0x8001CA20);
		goto ZZ_1C850_1D0;
	}
	V0 -= 1;
	if (V0)
	{
		EMU_Write32(S0 + 228,V0); //+ 0xE4
		ZZ_CLOCKCYCLES(15,0x8001CB38);
		goto ZZ_1C850_2E8;
	}
	EMU_Write32(S0 + 228,V0); //+ 0xE4
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0xEFFF0000;
	V1 |= 0xFFFF;
	V0 &= V1;
	EMU_Write32(S0 + 172,V0); //+ 0xAC
	ZZ_CLOCKCYCLES(21,0x8001CB38);
	goto ZZ_1C850_2E8;
ZZ_1C850_1D0:
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12804); //+ 0xFFFFCDFC
	V0 &= 0x10;
	if (!V0)
	{
		EMU_Write32(S0 + 220,V1); //+ 0xDC
		ZZ_CLOCKCYCLES(6,0x8001CA68);
		goto ZZ_1C850_218;
	}
	EMU_Write32(S0 + 220,V1); //+ 0xDC
	V0 = EMU_ReadU32(S0 + 96); //+ 0x60
	V1 = EMU_ReadU32(S0 + 100); //+ 0x64
	A0 = EMU_ReadU32(S0 + 104); //+ 0x68
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,V1); //+ 0x1C
	EMU_Write32(SP + 32,A0); //+ 0x20
	V0 = EMU_ReadU32(S0 + 108); //+ 0x6C
	V1 = EMU_ReadU32(S0 + 112); //+ 0x70
	A0 = EMU_ReadU32(S0 + 116); //+ 0x74
	EMU_Write32(SP + 36,V0); //+ 0x24
	EMU_Write32(SP + 40,V1); //+ 0x28
	EMU_Write32(SP + 44,A0); //+ 0x2C
	ZZ_CLOCKCYCLES(18,0x8001CA68);
ZZ_1C850_218:
	V0 = EMU_ReadU32(S0 + 200); //+ 0xC8
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x8001CAAC);
		goto ZZ_1C850_25C;
	}
	A0 = S0;
	A1 = R0;
	RA = 0x8001CA84; //ZZ_1C850_234
	A2 = 0xFFFF;
	ZZ_CLOCKCYCLES(7,0x8001C758);
	goto ZZ_1C758;
ZZ_1C850_234:
	V0 = EMU_ReadU32(S0 + 200); //+ 0xC8
	A0 = S0;
	A1 = 0x3;
	A2 = R0;
	RA = 0x8001CA9C; //ZZ_1C850_24C
	EMU_Write32(S0 + 192,V0); //+ 0xC0
	ZZ_CLOCKCYCLES(6,0x8003A2AC);
	goto ZZ_3A2AC;
ZZ_1C850_24C:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (!V0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(4,0x8001CD30);
		goto ZZ_1C850_4E0;
	}
	V0 = V1;
	ZZ_CLOCKCYCLES(4,0x8001CAAC);
ZZ_1C850_25C:
	A1 = EMU_ReadU32(S0 + 188); //+ 0xBC
	A0 = EMU_ReadU32(A1 - 4); //+ 0xFFFFFFFC
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12804); //+ 0xFFFFCDFC
	V0 = 0xFF0000;
	V0 |= 0xFFFF;
	V0 &= A0;
	V1 = V1 - V0;
	A0 >>= 24;
	V1 = V1 < A0;
	if (V1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(13,0x8001CB0C);
		goto ZZ_1C850_2BC;
	}
	A0 = S0;
	V0 = A1 - 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	A1 = 0x4;
	RA = 0x8001CAF4; //ZZ_1C850_2A4
	A2 = R0;
	ZZ_CLOCKCYCLES(18,0x8003A2AC);
	goto ZZ_3A2AC;
ZZ_1C850_2A4:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x8001CB0C);
		goto ZZ_1C850_2BC;
	}
	A0 = S0;
	V0 = V1;
	ZZ_CLOCKCYCLES(6,0x8001CD30);
	goto ZZ_1C850_4E0;
ZZ_1C850_2BC:
	RA = 0x8001CB14; //ZZ_1C850_2C4
	A1 = S1;
	ZZ_CLOCKCYCLES(2,0x8001C114);
	goto ZZ_1C114;
ZZ_1C850_2C4:
	A0 = S0;
	A1 = SP + 24;
	RA = 0x8001CB24; //ZZ_1C850_2D4
	A2 = SP + 16;
	ZZ_CLOCKCYCLES(4,0x8001D860);
	goto ZZ_1D860;
ZZ_1C850_2D4:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V1 = -33;
	V0 &= V1;
	EMU_Write32(S0 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(5,0x8001CB44);
	goto ZZ_1C850_2F4;
ZZ_1C850_2E8:
	A0 = S0;
	RA = 0x8001CB44; //ZZ_1C850_2F4
	A1 = SP + 16;
	ZZ_CLOCKCYCLES(3,0x8001ABB8);
	goto ZZ_1ABB8;
ZZ_1C850_2F4:
	V0 = EMU_ReadU32(S0 + 232); //+ 0xE8
	if (!V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(4,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	V0 = 0x1;
	V1 = EMU_ReadU8(S0 + 288); //+ 0x120
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	V1 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 = V1 & 0x100;
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12756); //+ 0xFFFFCE2C
	V0 = A0 & 0x4;
	if (!V0)
	{
		V0 = 0x2000000;
		ZZ_CLOCKCYCLES(19,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	V0 = 0x2000000;
	V0 &= V1;
	if (V0)
	{
		V0 = A0 & 0x4000;
		ZZ_CLOCKCYCLES(22,0x8001CBB0);
		goto ZZ_1C850_360;
	}
	V0 = A0 & 0x4000;
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		V0 = A0 & 0x4000;
		ZZ_CLOCKCYCLES(27,0x8001CBB8);
		goto ZZ_1C850_368;
	}
	V0 = A0 & 0x4000;
	ZZ_CLOCKCYCLES(27,0x8001CBB0);
ZZ_1C850_360:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001CCA4);
		goto ZZ_1C850_454;
	}
	ZZ_CLOCKCYCLES(2,0x8001CBB8);
ZZ_1C850_368:
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x400;
	if (V1 == V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(8,0x8001CCCC);
		goto ZZ_1C850_47C;
	}
	A0 = R0;
	V0 = (int32_t)V1 < 1025;
	if (!V0)
	{
		V0 = 0x200;
		ZZ_CLOCKCYCLES(11,0x8001CC18);
		goto ZZ_1C850_3C8;
	}
	V0 = 0x200;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 513;
		ZZ_CLOCKCYCLES(13,0x8001CCBC);
		goto ZZ_1C850_46C;
	}
	V0 = (int32_t)V1 < 513;
	if (!V0)
	{
		V0 = 0x100;
		ZZ_CLOCKCYCLES(15,0x8001CC04);
		goto ZZ_1C850_3B4;
	}
	V0 = 0x100;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(17,0x8001CC50);
		goto ZZ_1C850_400;
	}
	ZZ_CLOCKCYCLES(19,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_3B4:
	V0 = 0x300;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001CCAC);
		goto ZZ_1C850_45C;
	}
	ZZ_CLOCKCYCLES(5,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_3C8:
	V0 = 0x600;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 1537;
		ZZ_CLOCKCYCLES(3,0x8001CCAC);
		goto ZZ_1C850_45C;
	}
	V0 = (int32_t)V1 < 1537;
	if (!V0)
	{
		V0 = 0x500;
		ZZ_CLOCKCYCLES(5,0x8001CC3C);
		goto ZZ_1C850_3EC;
	}
	V0 = 0x500;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8001CCAC);
		goto ZZ_1C850_45C;
	}
	ZZ_CLOCKCYCLES(9,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_3EC:
	V0 = 0x900;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001CCCC);
		goto ZZ_1C850_47C;
	}
	ZZ_CLOCKCYCLES(5,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_400:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001CCDC);
		goto ZZ_1C850_48C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 3036); //+ 0xBDC
	V0 &= 0x1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001CCA4);
		goto ZZ_1C850_454;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 3048); //+ 0xFFFFF418
	if (V0)
	{
		V0 = 0x4;
		ZZ_CLOCKCYCLES(17,0x8001CCA4);
		goto ZZ_1C850_454;
	}
	V0 = 0x4;
	V1 = EMU_ReadU32(S0 + 264); //+ 0x108
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(21,0x8001CCDC);
		goto ZZ_1C850_48C;
	}
	ZZ_CLOCKCYCLES(21,0x8001CCA4);
ZZ_1C850_454:
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_45C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x40;
	ZZ_CLOCKCYCLES(4,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_46C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x200;
	ZZ_CLOCKCYCLES(4,0x8001CCDC);
	goto ZZ_1C850_48C;
ZZ_1C850_47C:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	A0 = V0 & 0x800;
	ZZ_CLOCKCYCLES(4,0x8001CCDC);
ZZ_1C850_48C:
	if (S1)
	{
		V1 = 0x8000000;
		ZZ_CLOCKCYCLES(2,0x8001CD14);
		goto ZZ_1C850_4C4;
	}
	V1 = 0x8000000;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= V1;
	if (V0)
	{
		V1 = 0x100000;
		ZZ_CLOCKCYCLES(8,0x8001CD14);
		goto ZZ_1C850_4C4;
	}
	V1 = 0x100000;
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x8001CD14);
		goto ZZ_1C850_4C4;
	}
	A0 = R0;
	ZZ_CLOCKCYCLES(14,0x8001CD14);
ZZ_1C850_4C4:
	if (!A0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(2,0x8001CD24);
		goto ZZ_1C850_4D4;
	}
	A0 = S0;
	RA = 0x8001CD24; //ZZ_1C850_4D4
	A1 = SP + 16;
	ZZ_CLOCKCYCLES(4,0x8001AD30);
	goto ZZ_1AD30;
ZZ_1C850_4D4:
	AT = 0x80070000;
	EMU_Write32(AT - 12808,R0); //+ 0xFFFFCDF8
	ZZ_CLOCKCYCLES(2,0x8001CD2C);
ZZ_1C850_4DC:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001CD30);
ZZ_1C850_4E0:
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001C850,ZZ_1C850);
ZZ_MARK(0x8001C854);
ZZ_MARK(0x8001C858);
ZZ_MARK(0x8001C85C);
ZZ_MARK(0x8001C860);
ZZ_MARK(0x8001C864);
ZZ_MARK(0x8001C868);
ZZ_MARK(0x8001C86C);
ZZ_MARK(0x8001C870);
ZZ_MARK(0x8001C874);
ZZ_MARK(0x8001C878);
ZZ_MARK(0x8001C87C);
ZZ_MARK(0x8001C880);
ZZ_MARK(0x8001C884);
ZZ_MARK(0x8001C888);
ZZ_MARK(0x8001C88C);
ZZ_MARK_TARGET(0x8001C890,ZZ_1C850_40);
ZZ_MARK(0x8001C894);
ZZ_MARK(0x8001C898);
ZZ_MARK(0x8001C89C);
ZZ_MARK(0x8001C8A0);
ZZ_MARK(0x8001C8A4);
ZZ_MARK(0x8001C8A8);
ZZ_MARK(0x8001C8AC);
ZZ_MARK(0x8001C8B0);
ZZ_MARK(0x8001C8B4);
ZZ_MARK(0x8001C8B8);
ZZ_MARK(0x8001C8BC);
ZZ_MARK(0x8001C8C0);
ZZ_MARK_TARGET(0x8001C8C4,ZZ_1C850_74);
ZZ_MARK(0x8001C8C8);
ZZ_MARK(0x8001C8CC);
ZZ_MARK(0x8001C8D0);
ZZ_MARK(0x8001C8D4);
ZZ_MARK(0x8001C8D8);
ZZ_MARK(0x8001C8DC);
ZZ_MARK(0x8001C8E0);
ZZ_MARK(0x8001C8E4);
ZZ_MARK_TARGET(0x8001C8E8,ZZ_1C850_98);
ZZ_MARK(0x8001C8EC);
ZZ_MARK(0x8001C8F0);
ZZ_MARK(0x8001C8F4);
ZZ_MARK_TARGET(0x8001C8F8,ZZ_1C850_A8);
ZZ_MARK(0x8001C8FC);
ZZ_MARK(0x8001C900);
ZZ_MARK(0x8001C904);
ZZ_MARK(0x8001C908);
ZZ_MARK(0x8001C90C);
ZZ_MARK(0x8001C910);
ZZ_MARK(0x8001C914);
ZZ_MARK(0x8001C918);
ZZ_MARK(0x8001C91C);
ZZ_MARK(0x8001C920);
ZZ_MARK(0x8001C924);
ZZ_MARK(0x8001C928);
ZZ_MARK(0x8001C92C);
ZZ_MARK(0x8001C930);
ZZ_MARK(0x8001C934);
ZZ_MARK(0x8001C938);
ZZ_MARK(0x8001C93C);
ZZ_MARK_TARGET(0x8001C940,ZZ_1C850_F0);
ZZ_MARK(0x8001C944);
ZZ_MARK(0x8001C948);
ZZ_MARK(0x8001C94C);
ZZ_MARK(0x8001C950);
ZZ_MARK_TARGET(0x8001C954,ZZ_1C850_104);
ZZ_MARK(0x8001C958);
ZZ_MARK(0x8001C95C);
ZZ_MARK(0x8001C960);
ZZ_MARK(0x8001C964);
ZZ_MARK(0x8001C968);
ZZ_MARK(0x8001C96C);
ZZ_MARK(0x8001C970);
ZZ_MARK(0x8001C974);
ZZ_MARK_TARGET(0x8001C978,ZZ_1C850_128);
ZZ_MARK(0x8001C97C);
ZZ_MARK(0x8001C980);
ZZ_MARK(0x8001C984);
ZZ_MARK(0x8001C988);
ZZ_MARK_TARGET(0x8001C98C,ZZ_1C850_13C);
ZZ_MARK(0x8001C990);
ZZ_MARK(0x8001C994);
ZZ_MARK(0x8001C998);
ZZ_MARK_TARGET(0x8001C99C,ZZ_1C850_14C);
ZZ_MARK(0x8001C9A0);
ZZ_MARK(0x8001C9A4);
ZZ_MARK(0x8001C9A8);
ZZ_MARK_TARGET(0x8001C9AC,ZZ_1C850_15C);
ZZ_MARK(0x8001C9B0);
ZZ_MARK(0x8001C9B4);
ZZ_MARK(0x8001C9B8);
ZZ_MARK_TARGET(0x8001C9BC,ZZ_1C850_16C);
ZZ_MARK(0x8001C9C0);
ZZ_MARK(0x8001C9C4);
ZZ_MARK(0x8001C9C8);
ZZ_MARK_TARGET(0x8001C9CC,ZZ_1C850_17C);
ZZ_MARK(0x8001C9D0);
ZZ_MARK(0x8001C9D4);
ZZ_MARK(0x8001C9D8);
ZZ_MARK(0x8001C9DC);
ZZ_MARK(0x8001C9E0);
ZZ_MARK(0x8001C9E4);
ZZ_MARK(0x8001C9E8);
ZZ_MARK(0x8001C9EC);
ZZ_MARK(0x8001C9F0);
ZZ_MARK(0x8001C9F4);
ZZ_MARK(0x8001C9F8);
ZZ_MARK(0x8001C9FC);
ZZ_MARK(0x8001CA00);
ZZ_MARK(0x8001CA04);
ZZ_MARK(0x8001CA08);
ZZ_MARK(0x8001CA0C);
ZZ_MARK(0x8001CA10);
ZZ_MARK(0x8001CA14);
ZZ_MARK(0x8001CA18);
ZZ_MARK(0x8001CA1C);
ZZ_MARK_TARGET(0x8001CA20,ZZ_1C850_1D0);
ZZ_MARK(0x8001CA24);
ZZ_MARK(0x8001CA28);
ZZ_MARK(0x8001CA2C);
ZZ_MARK(0x8001CA30);
ZZ_MARK(0x8001CA34);
ZZ_MARK(0x8001CA38);
ZZ_MARK(0x8001CA3C);
ZZ_MARK(0x8001CA40);
ZZ_MARK(0x8001CA44);
ZZ_MARK(0x8001CA48);
ZZ_MARK(0x8001CA4C);
ZZ_MARK(0x8001CA50);
ZZ_MARK(0x8001CA54);
ZZ_MARK(0x8001CA58);
ZZ_MARK(0x8001CA5C);
ZZ_MARK(0x8001CA60);
ZZ_MARK(0x8001CA64);
ZZ_MARK_TARGET(0x8001CA68,ZZ_1C850_218);
ZZ_MARK(0x8001CA6C);
ZZ_MARK(0x8001CA70);
ZZ_MARK(0x8001CA74);
ZZ_MARK(0x8001CA78);
ZZ_MARK(0x8001CA7C);
ZZ_MARK(0x8001CA80);
ZZ_MARK_TARGET(0x8001CA84,ZZ_1C850_234);
ZZ_MARK(0x8001CA88);
ZZ_MARK(0x8001CA8C);
ZZ_MARK(0x8001CA90);
ZZ_MARK(0x8001CA94);
ZZ_MARK(0x8001CA98);
ZZ_MARK_TARGET(0x8001CA9C,ZZ_1C850_24C);
ZZ_MARK(0x8001CAA0);
ZZ_MARK(0x8001CAA4);
ZZ_MARK(0x8001CAA8);
ZZ_MARK_TARGET(0x8001CAAC,ZZ_1C850_25C);
ZZ_MARK(0x8001CAB0);
ZZ_MARK(0x8001CAB4);
ZZ_MARK(0x8001CAB8);
ZZ_MARK(0x8001CABC);
ZZ_MARK(0x8001CAC0);
ZZ_MARK(0x8001CAC4);
ZZ_MARK(0x8001CAC8);
ZZ_MARK(0x8001CACC);
ZZ_MARK(0x8001CAD0);
ZZ_MARK(0x8001CAD4);
ZZ_MARK(0x8001CAD8);
ZZ_MARK(0x8001CADC);
ZZ_MARK(0x8001CAE0);
ZZ_MARK(0x8001CAE4);
ZZ_MARK(0x8001CAE8);
ZZ_MARK(0x8001CAEC);
ZZ_MARK(0x8001CAF0);
ZZ_MARK_TARGET(0x8001CAF4,ZZ_1C850_2A4);
ZZ_MARK(0x8001CAF8);
ZZ_MARK(0x8001CAFC);
ZZ_MARK(0x8001CB00);
ZZ_MARK(0x8001CB04);
ZZ_MARK(0x8001CB08);
ZZ_MARK_TARGET(0x8001CB0C,ZZ_1C850_2BC);
ZZ_MARK(0x8001CB10);
ZZ_MARK_TARGET(0x8001CB14,ZZ_1C850_2C4);
ZZ_MARK(0x8001CB18);
ZZ_MARK(0x8001CB1C);
ZZ_MARK(0x8001CB20);
ZZ_MARK_TARGET(0x8001CB24,ZZ_1C850_2D4);
ZZ_MARK(0x8001CB28);
ZZ_MARK(0x8001CB2C);
ZZ_MARK(0x8001CB30);
ZZ_MARK(0x8001CB34);
ZZ_MARK_TARGET(0x8001CB38,ZZ_1C850_2E8);
ZZ_MARK(0x8001CB3C);
ZZ_MARK(0x8001CB40);
ZZ_MARK_TARGET(0x8001CB44,ZZ_1C850_2F4);
ZZ_MARK(0x8001CB48);
ZZ_MARK(0x8001CB4C);
ZZ_MARK(0x8001CB50);
ZZ_MARK(0x8001CB54);
ZZ_MARK(0x8001CB58);
ZZ_MARK(0x8001CB5C);
ZZ_MARK(0x8001CB60);
ZZ_MARK(0x8001CB64);
ZZ_MARK(0x8001CB68);
ZZ_MARK(0x8001CB6C);
ZZ_MARK(0x8001CB70);
ZZ_MARK(0x8001CB74);
ZZ_MARK(0x8001CB78);
ZZ_MARK(0x8001CB7C);
ZZ_MARK(0x8001CB80);
ZZ_MARK(0x8001CB84);
ZZ_MARK(0x8001CB88);
ZZ_MARK(0x8001CB8C);
ZZ_MARK(0x8001CB90);
ZZ_MARK(0x8001CB94);
ZZ_MARK(0x8001CB98);
ZZ_MARK(0x8001CB9C);
ZZ_MARK(0x8001CBA0);
ZZ_MARK(0x8001CBA4);
ZZ_MARK(0x8001CBA8);
ZZ_MARK(0x8001CBAC);
ZZ_MARK_TARGET(0x8001CBB0,ZZ_1C850_360);
ZZ_MARK(0x8001CBB4);
ZZ_MARK_TARGET(0x8001CBB8,ZZ_1C850_368);
ZZ_MARK(0x8001CBBC);
ZZ_MARK(0x8001CBC0);
ZZ_MARK(0x8001CBC4);
ZZ_MARK(0x8001CBC8);
ZZ_MARK(0x8001CBCC);
ZZ_MARK(0x8001CBD0);
ZZ_MARK(0x8001CBD4);
ZZ_MARK(0x8001CBD8);
ZZ_MARK(0x8001CBDC);
ZZ_MARK(0x8001CBE0);
ZZ_MARK(0x8001CBE4);
ZZ_MARK(0x8001CBE8);
ZZ_MARK(0x8001CBEC);
ZZ_MARK(0x8001CBF0);
ZZ_MARK(0x8001CBF4);
ZZ_MARK(0x8001CBF8);
ZZ_MARK(0x8001CBFC);
ZZ_MARK(0x8001CC00);
ZZ_MARK_TARGET(0x8001CC04,ZZ_1C850_3B4);
ZZ_MARK(0x8001CC08);
ZZ_MARK(0x8001CC0C);
ZZ_MARK(0x8001CC10);
ZZ_MARK(0x8001CC14);
ZZ_MARK_TARGET(0x8001CC18,ZZ_1C850_3C8);
ZZ_MARK(0x8001CC1C);
ZZ_MARK(0x8001CC20);
ZZ_MARK(0x8001CC24);
ZZ_MARK(0x8001CC28);
ZZ_MARK(0x8001CC2C);
ZZ_MARK(0x8001CC30);
ZZ_MARK(0x8001CC34);
ZZ_MARK(0x8001CC38);
ZZ_MARK_TARGET(0x8001CC3C,ZZ_1C850_3EC);
ZZ_MARK(0x8001CC40);
ZZ_MARK(0x8001CC44);
ZZ_MARK(0x8001CC48);
ZZ_MARK(0x8001CC4C);
ZZ_MARK_TARGET(0x8001CC50,ZZ_1C850_400);
ZZ_MARK(0x8001CC54);
ZZ_MARK(0x8001CC58);
ZZ_MARK(0x8001CC5C);
ZZ_MARK(0x8001CC60);
ZZ_MARK(0x8001CC64);
ZZ_MARK(0x8001CC68);
ZZ_MARK(0x8001CC6C);
ZZ_MARK(0x8001CC70);
ZZ_MARK(0x8001CC74);
ZZ_MARK(0x8001CC78);
ZZ_MARK(0x8001CC7C);
ZZ_MARK(0x8001CC80);
ZZ_MARK(0x8001CC84);
ZZ_MARK(0x8001CC88);
ZZ_MARK(0x8001CC8C);
ZZ_MARK(0x8001CC90);
ZZ_MARK(0x8001CC94);
ZZ_MARK(0x8001CC98);
ZZ_MARK(0x8001CC9C);
ZZ_MARK(0x8001CCA0);
ZZ_MARK_TARGET(0x8001CCA4,ZZ_1C850_454);
ZZ_MARK(0x8001CCA8);
ZZ_MARK_TARGET(0x8001CCAC,ZZ_1C850_45C);
ZZ_MARK(0x8001CCB0);
ZZ_MARK(0x8001CCB4);
ZZ_MARK(0x8001CCB8);
ZZ_MARK_TARGET(0x8001CCBC,ZZ_1C850_46C);
ZZ_MARK(0x8001CCC0);
ZZ_MARK(0x8001CCC4);
ZZ_MARK(0x8001CCC8);
ZZ_MARK_TARGET(0x8001CCCC,ZZ_1C850_47C);
ZZ_MARK(0x8001CCD0);
ZZ_MARK(0x8001CCD4);
ZZ_MARK(0x8001CCD8);
ZZ_MARK_TARGET(0x8001CCDC,ZZ_1C850_48C);
ZZ_MARK(0x8001CCE0);
ZZ_MARK(0x8001CCE4);
ZZ_MARK(0x8001CCE8);
ZZ_MARK(0x8001CCEC);
ZZ_MARK(0x8001CCF0);
ZZ_MARK(0x8001CCF4);
ZZ_MARK(0x8001CCF8);
ZZ_MARK(0x8001CCFC);
ZZ_MARK(0x8001CD00);
ZZ_MARK(0x8001CD04);
ZZ_MARK(0x8001CD08);
ZZ_MARK(0x8001CD0C);
ZZ_MARK(0x8001CD10);
ZZ_MARK_TARGET(0x8001CD14,ZZ_1C850_4C4);
ZZ_MARK(0x8001CD18);
ZZ_MARK(0x8001CD1C);
ZZ_MARK(0x8001CD20);
ZZ_MARK_TARGET(0x8001CD24,ZZ_1C850_4D4);
ZZ_MARK(0x8001CD28);
ZZ_MARK_TARGET(0x8001CD2C,ZZ_1C850_4DC);
ZZ_MARK_TARGET(0x8001CD30,ZZ_1C850_4E0);
ZZ_MARK(0x8001CD34);
ZZ_MARK(0x8001CD38);
ZZ_MARK(0x8001CD3C);
ZZ_MARK(0x8001CD40);
ZZ_MARK(0x8001CD44);
