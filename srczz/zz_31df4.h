#ifdef ZZ_INCLUDE_CODE
ZZ_31DF4:
	SP -= 8;
	T8 = EMU_ReadU32(SP + 24); //+ 0x18
	T7 = EMU_ReadU32(SP + 28); //+ 0x1C
	T9 = EMU_ReadU32(SP + 32); //+ 0x20
	T4 = EMU_ReadU32(SP + 40); //+ 0x28
	EMU_Write32(SP,S0);
	ZZ_CLOCKCYCLES(6,0x80031E0C);
ZZ_31DF4_18:
	T0 = EMU_ReadS16(A0 + 12); //+ 0xC
	if ((int32_t)T0 <= 0)
	{
		T3 = A0 + 12;
		ZZ_CLOCKCYCLES(4,0x800324BC);
		goto ZZ_31DF4_6C8;
	}
	T3 = A0 + 12;
	T0 -= 1;
	T1 = R0;
	T2 = A0 + 16;
	V0 = T1 + T0;
	ZZ_CLOCKCYCLES(8,0x80031E2C);
ZZ_31DF4_38:
	V1 = (int32_t)V0 >> 1;
	V0 = V1 << 3;
	T5 = T2 + V0;
	V0 = EMU_ReadS16(T5);
	if (A1 == V0)
	{
		V0 = (int32_t)V0 < (int32_t)A1;
		ZZ_CLOCKCYCLES(7,0x80031E70);
		goto ZZ_31DF4_7C;
	}
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80031E58);
		goto ZZ_31DF4_64;
	}
	T1 = V1 + 1;
	ZZ_CLOCKCYCLES(11,0x80031E5C);
	goto ZZ_31DF4_68;
ZZ_31DF4_64:
	T0 = V1 - 1;
	ZZ_CLOCKCYCLES(1,0x80031E5C);
ZZ_31DF4_68:
	V0 = (int32_t)T0 < (int32_t)T1;
	if (V0)
	{
		V0 = T1 + T0;
		ZZ_CLOCKCYCLES(3,0x800324BC);
		goto ZZ_31DF4_6C8;
	}
	V0 = T1 + T0;
	ZZ_CLOCKCYCLES(5,0x80031E2C);
	goto ZZ_31DF4_38;
ZZ_31DF4_7C:
	if (!T4)
	{
		ZZ_CLOCKCYCLES(2,0x80031E7C);
		goto ZZ_31DF4_88;
	}
	EMU_Write32(T4,T5);
	ZZ_CLOCKCYCLES(3,0x80031E7C);
ZZ_31DF4_88:
	V1 = EMU_ReadU16(T5 + 2); //+ 0x2
	V0 = EMU_ReadU8(T5 + 4); //+ 0x4
	A0 = EMU_ReadU16(T5 + 6); //+ 0x6
	V0 &= 0x40;
	if (!V0)
	{
		T3 += V1;
		ZZ_CLOCKCYCLES(6,0x80031EA0);
		goto ZZ_31DF4_AC;
	}
	T3 += V1;
	V0 = A0 << 1;
	T4 = T3 + V0;
	ZZ_CLOCKCYCLES(9,0x80031EAC);
	goto ZZ_31DF4_B8;
ZZ_31DF4_AC:
	T4 = T3 + 2;
	T6 = EMU_ReadU16(T3);
	T3 = R0;
	ZZ_CLOCKCYCLES(3,0x80031EAC);
ZZ_31DF4_B8:
	V0 = EMU_ReadU8(T5 + 4); //+ 0x4
	V0 &= 0x20;
	if (!V0)
	{
		V0 = A0 << 1;
		ZZ_CLOCKCYCLES(5,0x80031EC8);
		goto ZZ_31DF4_D4;
	}
	V0 = A0 << 1;
	T2 = T4 + V0;
	ZZ_CLOCKCYCLES(7,0x80031ED0);
	goto ZZ_31DF4_DC;
ZZ_31DF4_D4:
	T2 = T4;
	T4 = R0;
	ZZ_CLOCKCYCLES(2,0x80031ED0);
ZZ_31DF4_DC:
	V0 = T2 + 3;
	V1 = -4;
	T2 = V0 & V1;
	V0 = 0x2;
	if (T7 != V0)
	{
		V0 = (int32_t)A2 < (int32_t)A0;
		ZZ_CLOCKCYCLES(6,0x80031EF8);
		goto ZZ_31DF4_104;
	}
	V0 = (int32_t)A2 < (int32_t)A0;
	if (!V0)
	{
		T1 = A2;
		ZZ_CLOCKCYCLES(8,0x800324CC);
		goto ZZ_31DF4_6D8;
	}
	T1 = A2;
	ZZ_CLOCKCYCLES(10,0x8003242C);
	goto ZZ_31DF4_638;
ZZ_31DF4_104:
	if (!T4)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x800324D0);
		goto ZZ_31DF4_6DC;
	}
	V0 = R0;
	V0 = EMU_ReadS16(T4);
	A1 = (int32_t)A2 >> 8;
	V0 = (int32_t)A1 < (int32_t)V0;
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(7,0x800324D0);
		goto ZZ_31DF4_6DC;
	}
	V0 = R0;
	V0 = EMU_ReadU16(T5 + 6); //+ 0x6
	T0 = V0 - 1;
	V0 = T0 << 1;
	V0 += T4;
	V0 = EMU_ReadS16(V0);
	V0 = (int32_t)A1 < (int32_t)V0;
	if (V0)
	{
		T1 = R0;
		ZZ_CLOCKCYCLES(17,0x80031F4C);
		goto ZZ_31DF4_158;
	}
	T1 = R0;
	T1 = T0;
	ZZ_CLOCKCYCLES(19,0x80031F94);
	goto ZZ_31DF4_1A0;
ZZ_31DF4_150:
	T1 = V1;
	ZZ_CLOCKCYCLES(2,0x80031F94);
	goto ZZ_31DF4_1A0;
ZZ_31DF4_158:
	V0 = T1 + T0;
	ZZ_CLOCKCYCLES(1,0x80031F50);
ZZ_31DF4_15C:
	V1 = (int32_t)V0 >> 1;
	V0 = V1 << 1;
	A0 = V0 + T4;
	V0 = EMU_ReadS16(A0);
	V0 = (int32_t)A1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x80031F8C);
		goto ZZ_31DF4_198;
	}
	V0 = EMU_ReadS16(A0 + 2); //+ 0x2
	V0 = (int32_t)A1 < (int32_t)V0;
	if (V0)
	{
		T1 = V1 + 1;
		ZZ_CLOCKCYCLES(13,0x80031F44);
		goto ZZ_31DF4_150;
	}
	T1 = V1 + 1;
	V0 = T1 + T0;
	ZZ_CLOCKCYCLES(15,0x80031F50);
	goto ZZ_31DF4_15C;
ZZ_31DF4_198:
	T0 = V1;
	ZZ_CLOCKCYCLES(2,0x80031F4C);
	goto ZZ_31DF4_158;
ZZ_31DF4_1A0:
	if (!T7)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8003242C);
		goto ZZ_31DF4_638;
	}
	V0 = 0x1;
	if (T7 != V0)
	{
		V0 = T1 << 1;
		ZZ_CLOCKCYCLES(4,0x80031FC0);
		goto ZZ_31DF4_1CC;
	}
	V0 = T1 << 1;
	V0 += T4;
	V0 = EMU_ReadS16(V0);
	if (V0 == A1)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(9,0x8003242C);
		goto ZZ_31DF4_638;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(11,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_1CC:
	if (!T3)
	{
		V0 += T3;
		ZZ_CLOCKCYCLES(2,0x80031FCC);
		goto ZZ_31DF4_1D8;
	}
	V0 += T3;
	T6 = EMU_ReadU16(V0);
	ZZ_CLOCKCYCLES(3,0x80031FCC);
ZZ_31DF4_1D8:
	A1 = EMU_ReadU32(SP + 36); //+ 0x24
	if (A1)
	{
		V0 = A3 + A1;
		ZZ_CLOCKCYCLES(4,0x80031FE4);
		goto ZZ_31DF4_1F0;
	}
	V0 = A3 + A1;
	A1 = T6;
	V0 = A3 + A1;
	ZZ_CLOCKCYCLES(6,0x80031FE4);
ZZ_31DF4_1F0:
	V0 = (int32_t)T6 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x800324CC);
		goto ZZ_31DF4_6D8;
	}
	if (!T8)
	{
		ZZ_CLOCKCYCLES(5,0x80031FFC);
		goto ZZ_31DF4_208;
	}
	EMU_Write32(T8,T6);
	ZZ_CLOCKCYCLES(6,0x80031FFC);
ZZ_31DF4_208:
	if ((int32_t)T1 <= 0)
	{
		V1 = A3;
		ZZ_CLOCKCYCLES(2,0x8003203C);
		goto ZZ_31DF4_248;
	}
	V1 = A3;
	if (!T3)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(4,0x80032030);
		goto ZZ_31DF4_23C;
	}
	A0 = R0;
	V1 = R0;
	ZZ_CLOCKCYCLES(5,0x80032010);
ZZ_31DF4_21C:
	V0 = EMU_ReadU16(T3);
	A0 += 1;
	V1 += V0;
	V0 = (int32_t)A0 < (int32_t)T1;
	if (V0)
	{
		T3 += 2;
		ZZ_CLOCKCYCLES(6,0x80032010);
		goto ZZ_31DF4_21C;
	}
	T3 += 2;
	V1 += A3;
	ZZ_CLOCKCYCLES(8,0x8003203C);
	goto ZZ_31DF4_248;
ZZ_31DF4_23C:
	EMU_SMultiply(T6,T1);
	V1 = LO;
	V1 += A3;
	ZZ_CLOCKCYCLES(3,0x8003203C);
ZZ_31DF4_248:
	if (!V1)
	{
		ZZ_CLOCKCYCLES(2,0x80032058);
		goto ZZ_31DF4_264;
	}
	V0 = EMU_ReadU8(T5 + 5); //+ 0x5
	EMU_SMultiply(V1,V0);
	S0 = LO;
	T2 += S0;
	ZZ_CLOCKCYCLES(7,0x80032058);
ZZ_31DF4_264:
	V0 = EMU_ReadU16(T5 + 6); //+ 0x6
	V0 -= 1;
	if (T1 == V0)
	{
		A3 = T9;
		ZZ_CLOCKCYCLES(5,0x800323EC);
		goto ZZ_31DF4_5F8;
	}
	A3 = T9;
	if (!T3)
	{
		ZZ_CLOCKCYCLES(7,0x80032084);
		goto ZZ_31DF4_290;
	}
	V0 = EMU_ReadU16(T3 + 2); //+ 0x2
	if (T6 != V0)
	{
		ZZ_CLOCKCYCLES(11,0x800323EC);
		goto ZZ_31DF4_5F8;
	}
	ZZ_CLOCKCYCLES(11,0x80032084);
ZZ_31DF4_290:
	V0 = EMU_ReadU8(T5 + 5); //+ 0x5
	EMU_SMultiply(T6,V0);
	V0 = T1 << 1;
	V0 += T4;
	V1 = EMU_ReadS16(V0);
	V0 = EMU_ReadS16(V0 + 2); //+ 0x2
	A0 = V1 << 8;
	V0 <<= 8;
	T4 = V0 - A0;
	A0 = A2 - A0;
	S0 = LO;
	if (!A0)
	{
		A2 = T2 + S0;
		ZZ_CLOCKCYCLES(14,0x800323EC);
		goto ZZ_31DF4_5F8;
	}
	A2 = T2 + S0;
	V1 = EMU_ReadU8(T5 + 4); //+ 0x4
	V0 = A0 << 8;
	EMU_SDivide(V0,T4);
	if (T4)
	{
		ZZ_CLOCKCYCLES(19,0x800320D4);
		goto ZZ_31DF4_2E0;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(20,0x800320D4);
ZZ_31DF4_2E0:
	AT = -1;
	if (T4 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800320EC);
		goto ZZ_31DF4_2F8;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800320EC);
		goto ZZ_31DF4_2F8;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800320EC);
ZZ_31DF4_2F8:
	T4 = LO;
	T0 = V1 & 0x1F;
	V1 = T0 - 1;
	V0 = V1 < 19;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(6,0x80032424);
		goto ZZ_31DF4_630;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1348); //+ 0x544
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x8003211C,ZZ_31DF4_328);
	ZZ_JUMPREGISTER(0x80032190,ZZ_31DF4_39C);
	ZZ_JUMPREGISTER(0x80032204,ZZ_31DF4_410);
	ZZ_JUMPREGISTER(0x8003225C,ZZ_31DF4_468);
	ZZ_JUMPREGISTER(0x80032324,ZZ_31DF4_530);
	ZZ_JUMPREGISTER(0x80032424,ZZ_31DF4_630);
	ZZ_JUMPREGISTER_END();
ZZ_31DF4_328:
	V0 = A1;
	if (!V0)
	{
		A1 -= 1;
		ZZ_CLOCKCYCLES(3,0x80032424);
		goto ZZ_31DF4_630;
	}
	A1 -= 1;
	T1 = 0x1;
	ZZ_CLOCKCYCLES(4,0x8003212C);
ZZ_31DF4_338:
	if (T0 != T1)
	{
		ZZ_CLOCKCYCLES(2,0x80032144);
		goto ZZ_31DF4_350;
	}
	A0 = EMU_ReadU8(T2);
	V0 = EMU_ReadU8(A2);
	V0 = V0 - A0;
	ZZ_CLOCKCYCLES(6,0x80032154);
	goto ZZ_31DF4_360;
ZZ_31DF4_350:
	A0 = EMU_ReadS8(T2);
	V0 = EMU_ReadS8(A2);
	V0 = V0 - A0;
	ZZ_CLOCKCYCLES(4,0x80032154);
ZZ_31DF4_360:
	EMU_SMultiply(V0,T4);
	T2 += 1;
	A2 += 1;
	V1 = A1;
	A1 -= 1;
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write8(A3,V0);
	if (V1)
	{
		A3 += 1;
		ZZ_CLOCKCYCLES(13,0x8003212C);
		goto ZZ_31DF4_338;
	}
	A3 += 1;
	V0 = T9;
	ZZ_CLOCKCYCLES(15,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_39C:
	V0 = A1;
	if (!V0)
	{
		A1 -= 1;
		ZZ_CLOCKCYCLES(3,0x80032424);
		goto ZZ_31DF4_630;
	}
	A1 -= 1;
	T1 = 0x2;
	ZZ_CLOCKCYCLES(4,0x800321A0);
ZZ_31DF4_3AC:
	if (T0 != T1)
	{
		ZZ_CLOCKCYCLES(2,0x800321B8);
		goto ZZ_31DF4_3C4;
	}
	A0 = EMU_ReadU16(T2);
	V0 = EMU_ReadU16(A2);
	V0 = V0 - A0;
	ZZ_CLOCKCYCLES(6,0x800321C8);
	goto ZZ_31DF4_3D4;
ZZ_31DF4_3C4:
	A0 = EMU_ReadS16(T2);
	V0 = EMU_ReadS16(A2);
	V0 = V0 - A0;
	ZZ_CLOCKCYCLES(4,0x800321C8);
ZZ_31DF4_3D4:
	EMU_SMultiply(V0,T4);
	T2 += 2;
	A2 += 2;
	V1 = A1;
	A1 -= 1;
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write16(A3,V0);
	if (V1)
	{
		A3 += 2;
		ZZ_CLOCKCYCLES(13,0x800321A0);
		goto ZZ_31DF4_3AC;
	}
	A3 += 2;
	V0 = T9;
	ZZ_CLOCKCYCLES(15,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_410:
	V0 = A1;
	if (!V0)
	{
		A1 -= 1;
		ZZ_CLOCKCYCLES(3,0x80032424);
		goto ZZ_31DF4_630;
	}
	A1 -= 1;
	ZZ_CLOCKCYCLES(3,0x80032210);
ZZ_31DF4_41C:
	A0 = EMU_ReadU32(T2);
	V0 = EMU_ReadU32(A2);
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	T2 += 4;
	A2 += 4;
	V1 = A1;
	A1 -= 1;
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write32(A3,V0);
	if (V1)
	{
		A3 += 4;
		ZZ_CLOCKCYCLES(17,0x80032210);
		goto ZZ_31DF4_41C;
	}
	A3 += 4;
	V0 = T9;
	ZZ_CLOCKCYCLES(19,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_468:
	V0 = A1;
	if (!V0)
	{
		A1 -= 1;
		ZZ_CLOCKCYCLES(3,0x80032424);
		goto ZZ_31DF4_630;
	}
	A1 -= 1;
	T3 = A2 + 4;
	T1 = T2 + 4;
	T0 = A3 + 4;
	ZZ_CLOCKCYCLES(6,0x80032274);
ZZ_31DF4_480:
	A0 = EMU_ReadS16(T2);
	V0 = EMU_ReadS16(A2);
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write16(A3,V0);
	A0 = EMU_ReadS16(T1 - 2); //+ 0xFFFFFFFE
	V0 = EMU_ReadS16(T3 - 2); //+ 0xFFFFFFFE
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write16(T0 - 2,V0); //+ 0xFFFFFFFE
	A0 = EMU_ReadS16(T1);
	V0 = EMU_ReadS16(T3);
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	T2 += 6;
	A2 += 6;
	V1 = A1;
	A1 -= 1;
	A3 += 6;
	T1 += 6;
	T3 += 6;
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write16(T0,V0);
	if (V1)
	{
		T0 += 6;
		ZZ_CLOCKCYCLES(42,0x80032274);
		goto ZZ_31DF4_480;
	}
	T0 += 6;
	V0 = T9;
	ZZ_CLOCKCYCLES(44,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_530:
	V0 = A1;
	if (!V0)
	{
		A1 -= 1;
		ZZ_CLOCKCYCLES(3,0x80032424);
		goto ZZ_31DF4_630;
	}
	A1 -= 1;
	T3 = A2 + 8;
	T1 = T2 + 8;
	T0 = A3 + 8;
	ZZ_CLOCKCYCLES(6,0x8003233C);
ZZ_31DF4_548:
	A0 = EMU_ReadU32(T2);
	V0 = EMU_ReadU32(A2);
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write32(A3,V0);
	A0 = EMU_ReadU32(T1 - 4); //+ 0xFFFFFFFC
	V0 = EMU_ReadU32(T3 - 4); //+ 0xFFFFFFFC
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write32(T0 - 4,V0); //+ 0xFFFFFFFC
	A0 = EMU_ReadU32(T1);
	V0 = EMU_ReadU32(T3);
	V0 = V0 - A0;
	EMU_SMultiply(V0,T4);
	T2 += 12;
	A2 += 12;
	V1 = A1;
	A1 -= 1;
	A3 += 12;
	T1 += 12;
	T3 += 12;
	S0 = LO;
	V0 = (int32_t)S0 >> 7;
	V0 += 1;
	V0 = (int32_t)V0 >> 1;
	V0 += A0;
	EMU_Write32(T0,V0);
	if (V1)
	{
		T0 += 12;
		ZZ_CLOCKCYCLES(42,0x8003233C);
		goto ZZ_31DF4_548;
	}
	T0 += 12;
	V0 = T9;
	ZZ_CLOCKCYCLES(44,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_5F8:
	V0 = EMU_ReadU8(T5 + 5); //+ 0x5
	EMU_SMultiply(A1,V0);
	A0 = LO;
	V0 = A0;
	if (!V0)
	{
		A0 -= 1;
		ZZ_CLOCKCYCLES(7,0x80032424);
		goto ZZ_31DF4_630;
	}
	A0 -= 1;
	ZZ_CLOCKCYCLES(7,0x80032408);
ZZ_31DF4_614:
	V0 = EMU_ReadU8(T2);
	T2 += 1;
	V1 = A0;
	A0 -= 1;
	EMU_Write8(A3,V0);
	if (V1)
	{
		A3 += 1;
		ZZ_CLOCKCYCLES(7,0x80032408);
		goto ZZ_31DF4_614;
	}
	A3 += 1;
	ZZ_CLOCKCYCLES(7,0x80032424);
ZZ_31DF4_630:
	V0 = T9;
	ZZ_CLOCKCYCLES(2,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_638:
	if (!T3)
	{
		V0 = T1 << 1;
		ZZ_CLOCKCYCLES(2,0x8003243C);
		goto ZZ_31DF4_648;
	}
	V0 = T1 << 1;
	V0 += T3;
	T6 = EMU_ReadU16(V0);
	ZZ_CLOCKCYCLES(4,0x8003243C);
ZZ_31DF4_648:
	V0 = (int32_t)A3 < (int32_t)T6;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800324CC);
		goto ZZ_31DF4_6D8;
	}
	if (!T8)
	{
		ZZ_CLOCKCYCLES(6,0x80032458);
		goto ZZ_31DF4_664;
	}
	EMU_Write32(T8,T6);
	ZZ_CLOCKCYCLES(7,0x80032458);
ZZ_31DF4_664:
	if ((int32_t)T1 <= 0)
	{
		V1 = A3;
		ZZ_CLOCKCYCLES(2,0x80032498);
		goto ZZ_31DF4_6A4;
	}
	V1 = A3;
	if (!T3)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(4,0x8003248C);
		goto ZZ_31DF4_698;
	}
	A0 = R0;
	V1 = R0;
	ZZ_CLOCKCYCLES(5,0x8003246C);
ZZ_31DF4_678:
	V0 = EMU_ReadU16(T3);
	A0 += 1;
	V1 += V0;
	V0 = (int32_t)A0 < (int32_t)T1;
	if (V0)
	{
		T3 += 2;
		ZZ_CLOCKCYCLES(6,0x8003246C);
		goto ZZ_31DF4_678;
	}
	T3 += 2;
	V1 += A3;
	ZZ_CLOCKCYCLES(8,0x80032498);
	goto ZZ_31DF4_6A4;
ZZ_31DF4_698:
	EMU_SMultiply(T6,T1);
	V1 = LO;
	V1 += A3;
	ZZ_CLOCKCYCLES(3,0x80032498);
ZZ_31DF4_6A4:
	if (!V1)
	{
		ZZ_CLOCKCYCLES(2,0x800324B4);
		goto ZZ_31DF4_6C0;
	}
	V0 = EMU_ReadU8(T5 + 5); //+ 0x5
	EMU_SMultiply(V1,V0);
	S0 = LO;
	T2 += S0;
	ZZ_CLOCKCYCLES(7,0x800324B4);
ZZ_31DF4_6C0:
	V0 = T2;
	ZZ_CLOCKCYCLES(2,0x800324D0);
	goto ZZ_31DF4_6DC;
ZZ_31DF4_6C8:
	A0 = EMU_ReadU32(A0 + 8); //+ 0x8
	if (A0)
	{
		ZZ_CLOCKCYCLES(4,0x80031E0C);
		goto ZZ_31DF4_18;
	}
	ZZ_CLOCKCYCLES(4,0x800324CC);
ZZ_31DF4_6D8:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x800324D0);
ZZ_31DF4_6DC:
	S0 = EMU_ReadU32(SP);
	SP += 8;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80032518,ZZ_324E0_38);
	ZZ_JUMPREGISTER(0x800325FC,ZZ_325CC_30);
	ZZ_JUMPREGISTER(0x8001F394,ZZ_1F29C_F8);
	ZZ_JUMPREGISTER(0x80025FEC,ZZ_25F8C_60);
	ZZ_JUMPREGISTER(0x80026088,ZZ_25F8C_FC);
	ZZ_JUMPREGISTER(0x80020D84,ZZ_20C80_104);
	ZZ_JUMPREGISTER(0x8001671C,ZZ_1658C_190);
	ZZ_JUMPREGISTER(0x800381DC,ZZ_37930_8AC);
	ZZ_JUMPREGISTER(0x800260E0,ZZ_25F8C_154);
	ZZ_JUMPREGISTER(0x80026618,ZZ_265A8_70);
	ZZ_JUMPREGISTER(0x80026AA0,ZZ_26A38_68);
	ZZ_JUMPREGISTER(0x80026698,ZZ_265A8_F0);
	ZZ_JUMPREGISTER(0x80016774,ZZ_1658C_1E8);
	ZZ_JUMPREGISTER(0x80026B0C,ZZ_26A38_D4);
	ZZ_JUMPREGISTER(0x80020E08,ZZ_20C80_188);
	ZZ_JUMPREGISTER(0x80020ECC,ZZ_20C80_24C);
	ZZ_JUMPREGISTER(0x80022744,ZZ_226FC_48);
	ZZ_JUMPREGISTER(0x800205C8,ZZ_20304_2C4);
	ZZ_JUMPREGISTER(0x8002352C,ZZ_23424_108);
	ZZ_JUMPREGISTER(0x80020F3C,ZZ_20C80_2BC);
	ZZ_JUMPREGISTER(0x800237C8,ZZ_23424_3A4);
	ZZ_JUMPREGISTER(0x8002277C,ZZ_226FC_80);
	ZZ_JUMPREGISTER(0x80020FD4,ZZ_20C80_354);
	ZZ_JUMPREGISTER(0x800246E4,ZZ_245B0_134);
	ZZ_JUMPREGISTER(0x80023564,ZZ_23424_140);
	ZZ_JUMPREGISTER(0x800211CC,ZZ_20C80_54C);
	ZZ_JUMPREGISTER(0x80023E90,ZZ_23D78_118);
	ZZ_JUMPREGISTER(0x80026848,ZZ_26700_148);
	ZZ_JUMPREGISTER(0x80021144,ZZ_20C80_4C4);
	ZZ_JUMPREGISTER(0x800207BC,ZZ_20304_4B8);
	ZZ_JUMPREGISTER(0x8002163C,ZZ_20C80_9BC);
	ZZ_JUMPREGISTER(0x8002333C,ZZ_232F8_44);
	ZZ_JUMPREGISTER(0x80021704,ZZ_20C80_A84);
	ZZ_JUMPREGISTER(0x80023F18,ZZ_23D78_1A0);
	ZZ_JUMPREGISTER(0x80026CE8,ZZ_26C7C_6C);
	ZZ_JUMPREGISTER(0x80024078,ZZ_24038_40);
	ZZ_JUMPREGISTER(0x80021854,ZZ_20C80_BD4);
	ZZ_JUMPREGISTER(0x80021ABC,ZZ_21A54_68);
	ZZ_JUMPREGISTER(0x80020A18,ZZ_20304_714);
	ZZ_JUMPREGISTER(0x8001A2DC,ZZ_1A274_68);
	ZZ_JUMPREGISTER(0x80026D18,ZZ_26C7C_9C);
	ZZ_JUMPREGISTER(0x8001932C,ZZ_191D4_158);
	ZZ_JUMPREGISTER(0x80021B1C,ZZ_21A54_C8);
	ZZ_JUMPREGISTER(0x8001A338,ZZ_1A274_C4);
	ZZ_JUMPREGISTER(0x80020A60,ZZ_20304_75C);
	ZZ_JUMPREGISTER(0x800247B8,ZZ_245B0_208);
	ZZ_JUMPREGISTER(0x80019358,ZZ_191D4_184);
	ZZ_JUMPREGISTER(0x80024EA4,ZZ_24DE0_C4);
	ZZ_JUMPREGISTER(0x8002580C,ZZ_25748_C4);
	ZZ_JUMPREGISTER(0x8002543C,ZZ_24DE0_65C);
	ZZ_JUMPREGISTER(0x80025DA4,ZZ_25748_65C);
	ZZ_JUMPREGISTER(0x800251C0,ZZ_24DE0_3E0);
	ZZ_JUMPREGISTER(0x800196B0,ZZ_191D4_4DC);
	ZZ_JUMPREGISTER(0x80025B28,ZZ_25748_3E0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80031DF4,0x80031E0C,ZZ_31DF4);
ZZ_MARK_TARGET(0x80031E0C,0x80031E2C,ZZ_31DF4_18);
ZZ_MARK_TARGET(0x80031E2C,0x80031E58,ZZ_31DF4_38);
ZZ_MARK_TARGET(0x80031E58,0x80031E5C,ZZ_31DF4_64);
ZZ_MARK_TARGET(0x80031E5C,0x80031E70,ZZ_31DF4_68);
ZZ_MARK_TARGET(0x80031E70,0x80031E7C,ZZ_31DF4_7C);
ZZ_MARK_TARGET(0x80031E7C,0x80031EA0,ZZ_31DF4_88);
ZZ_MARK_TARGET(0x80031EA0,0x80031EAC,ZZ_31DF4_AC);
ZZ_MARK_TARGET(0x80031EAC,0x80031EC8,ZZ_31DF4_B8);
ZZ_MARK_TARGET(0x80031EC8,0x80031ED0,ZZ_31DF4_D4);
ZZ_MARK_TARGET(0x80031ED0,0x80031EF8,ZZ_31DF4_DC);
ZZ_MARK_TARGET(0x80031EF8,0x80031F44,ZZ_31DF4_104);
ZZ_MARK_TARGET(0x80031F44,0x80031F4C,ZZ_31DF4_150);
ZZ_MARK_TARGET(0x80031F4C,0x80031F50,ZZ_31DF4_158);
ZZ_MARK_TARGET(0x80031F50,0x80031F8C,ZZ_31DF4_15C);
ZZ_MARK_TARGET(0x80031F8C,0x80031F94,ZZ_31DF4_198);
ZZ_MARK_TARGET(0x80031F94,0x80031FC0,ZZ_31DF4_1A0);
ZZ_MARK_TARGET(0x80031FC0,0x80031FCC,ZZ_31DF4_1CC);
ZZ_MARK_TARGET(0x80031FCC,0x80031FE4,ZZ_31DF4_1D8);
ZZ_MARK_TARGET(0x80031FE4,0x80031FFC,ZZ_31DF4_1F0);
ZZ_MARK_TARGET(0x80031FFC,0x80032010,ZZ_31DF4_208);
ZZ_MARK_TARGET(0x80032010,0x80032030,ZZ_31DF4_21C);
ZZ_MARK_TARGET(0x80032030,0x8003203C,ZZ_31DF4_23C);
ZZ_MARK_TARGET(0x8003203C,0x80032058,ZZ_31DF4_248);
ZZ_MARK_TARGET(0x80032058,0x80032084,ZZ_31DF4_264);
ZZ_MARK_TARGET(0x80032084,0x800320D4,ZZ_31DF4_290);
ZZ_MARK_TARGET(0x800320D4,0x800320EC,ZZ_31DF4_2E0);
ZZ_MARK_TARGET(0x800320EC,0x8003211C,ZZ_31DF4_2F8);
ZZ_MARK_TARGET(0x8003211C,0x8003212C,ZZ_31DF4_328);
ZZ_MARK_TARGET(0x8003212C,0x80032144,ZZ_31DF4_338);
ZZ_MARK_TARGET(0x80032144,0x80032154,ZZ_31DF4_350);
ZZ_MARK_TARGET(0x80032154,0x80032190,ZZ_31DF4_360);
ZZ_MARK_TARGET(0x80032190,0x800321A0,ZZ_31DF4_39C);
ZZ_MARK_TARGET(0x800321A0,0x800321B8,ZZ_31DF4_3AC);
ZZ_MARK_TARGET(0x800321B8,0x800321C8,ZZ_31DF4_3C4);
ZZ_MARK_TARGET(0x800321C8,0x80032204,ZZ_31DF4_3D4);
ZZ_MARK_TARGET(0x80032204,0x80032210,ZZ_31DF4_410);
ZZ_MARK_TARGET(0x80032210,0x8003225C,ZZ_31DF4_41C);
ZZ_MARK_TARGET(0x8003225C,0x80032274,ZZ_31DF4_468);
ZZ_MARK_TARGET(0x80032274,0x80032324,ZZ_31DF4_480);
ZZ_MARK_TARGET(0x80032324,0x8003233C,ZZ_31DF4_530);
ZZ_MARK_TARGET(0x8003233C,0x800323EC,ZZ_31DF4_548);
ZZ_MARK_TARGET(0x800323EC,0x80032408,ZZ_31DF4_5F8);
ZZ_MARK_TARGET(0x80032408,0x80032424,ZZ_31DF4_614);
ZZ_MARK_TARGET(0x80032424,0x8003242C,ZZ_31DF4_630);
ZZ_MARK_TARGET(0x8003242C,0x8003243C,ZZ_31DF4_638);
ZZ_MARK_TARGET(0x8003243C,0x80032458,ZZ_31DF4_648);
ZZ_MARK_TARGET(0x80032458,0x8003246C,ZZ_31DF4_664);
ZZ_MARK_TARGET(0x8003246C,0x8003248C,ZZ_31DF4_678);
ZZ_MARK_TARGET(0x8003248C,0x80032498,ZZ_31DF4_698);
ZZ_MARK_TARGET(0x80032498,0x800324B4,ZZ_31DF4_6A4);
ZZ_MARK_TARGET(0x800324B4,0x800324BC,ZZ_31DF4_6C0);
ZZ_MARK_TARGET(0x800324BC,0x800324CC,ZZ_31DF4_6C8);
ZZ_MARK_TARGET(0x800324CC,0x800324D0,ZZ_31DF4_6D8);
ZZ_MARK_TARGET(0x800324D0,0x800324E0,ZZ_31DF4_6DC);
