#ifdef ZZ_INCLUDE_CODE
ZZ_39D3C:
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	A2 = A1 & 0xFFF;
	V1 = A1 & 0xE00;
	V0 = 0xE00;
	if (V1 != V0)
	{
		A3 = A2;
		ZZ_CLOCKCYCLES(7,0x80039D88);
		goto ZZ_39D3C_4C;
	}
	A3 = A2;
	V0 = 0xE1F;
	if (A2 != V0)
	{
		V0 = A1 & 0x1FF;
		ZZ_CLOCKCYCLES(10,0x80039D78);
		goto ZZ_39D3C_3C;
	}
	V0 = A1 & 0x1FF;
	V0 = EMU_ReadU32(A0 + 188); //+ 0xBC
	V0 -= 4;
	EMU_Write32(A0 + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(15,0x80039D90);
	goto ZZ_39D3C_54;
ZZ_39D3C_3C:
	V0 <<= 2;
	V0 += 64;
	V0 += A0;
	ZZ_CLOCKCYCLES(4,0x80039D90);
	goto ZZ_39D3C_54;
ZZ_39D3C_4C:
	RA = 0x80039D90; //ZZ_39D3C_54
	A1 = A3;
	ZZ_CLOCKCYCLES(2,0x80036FA4);
	goto ZZ_36FA4;
ZZ_39D3C_54:
	A0 = EMU_ReadU32(V0);
	RA = 0x80039D9C; //ZZ_39D3C_60
	ZZ_CLOCKCYCLES(3,0x80027B6C);
	goto ZZ_27B6C;
ZZ_39D3C_60:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8003A26C,ZZ_3A234_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80039D3C,ZZ_39D3C);
ZZ_MARK(0x80039D40);
ZZ_MARK(0x80039D44);
ZZ_MARK(0x80039D48);
ZZ_MARK(0x80039D4C);
ZZ_MARK(0x80039D50);
ZZ_MARK(0x80039D54);
ZZ_MARK(0x80039D58);
ZZ_MARK(0x80039D5C);
ZZ_MARK(0x80039D60);
ZZ_MARK(0x80039D64);
ZZ_MARK(0x80039D68);
ZZ_MARK(0x80039D6C);
ZZ_MARK(0x80039D70);
ZZ_MARK(0x80039D74);
ZZ_MARK_TARGET(0x80039D78,ZZ_39D3C_3C);
ZZ_MARK(0x80039D7C);
ZZ_MARK(0x80039D80);
ZZ_MARK(0x80039D84);
ZZ_MARK_TARGET(0x80039D88,ZZ_39D3C_4C);
ZZ_MARK(0x80039D8C);
ZZ_MARK_TARGET(0x80039D90,ZZ_39D3C_54);
ZZ_MARK(0x80039D94);
ZZ_MARK(0x80039D98);
ZZ_MARK_TARGET(0x80039D9C,ZZ_39D3C_60);
ZZ_MARK(0x80039DA0);
ZZ_MARK(0x80039DA4);
ZZ_MARK(0x80039DA8);
