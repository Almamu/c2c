#ifdef ZZ_INCLUDE_CODE
ZZ_25F8C:
	SP -= 88;
	EMU_Write32(SP + 48,S0); //+ 0x30
	S0 = A0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x1E3;
	A3 = R0;
	EMU_Write32(SP + 84,RA); //+ 0x54
	EMU_Write32(SP + 80,FP); //+ 0x50
	EMU_Write32(SP + 76,S7); //+ 0x4C
	EMU_Write32(SP + 72,S6); //+ 0x48
	EMU_Write32(SP + 68,S5); //+ 0x44
	EMU_Write32(SP + 64,S4); //+ 0x40
	EMU_Write32(SP + 60,S3); //+ 0x3C
	EMU_Write32(SP + 56,S2); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80025FEC; //ZZ_25F8C_60
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(24,0x80031DF4);
	goto ZZ_31DF4;
ZZ_25F8C_60:
	A0 = V0;
	if (!A0)
	{
		ZZ_CLOCKCYCLES(3,0x80026058);
		goto ZZ_25F8C_CC;
	}
	S5 = EMU_ReadS16(A0);
	S6 = EMU_ReadS16(A0 + 2); //+ 0x2
	V0 = (int32_t)S6 < (int32_t)S5;
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x80026058);
		goto ZZ_25F8C_CC;
	}
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2704); //+ 0xA90
	V1 = V1 - V0;
	V0 = S5 << 8;
	V0 = (int32_t)V1 < (int32_t)V0;
	if (V0)
	{
		V0 = S6 << 8;
		ZZ_CLOCKCYCLES(18,0x80026040);
		goto ZZ_25F8C_B4;
	}
	V0 = S6 << 8;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(21,0x80026058);
		goto ZZ_25F8C_CC;
	}
	ZZ_CLOCKCYCLES(21,0x80026040);
ZZ_25F8C_B4:
	V0 = EMU_ReadS16(A0 + 4); //+ 0x4
	A0 = R0;
	A1 = SP + 40;
	V0 <<= 8;
	RA = 0x80026058; //ZZ_25F8C_CC
	EMU_Write32(SP + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(6,0x80026250);
	goto ZZ_26250;
ZZ_25F8C_CC:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x1E2;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80026088; //ZZ_25F8C_FC
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(12,0x80031DF4);
	goto ZZ_31DF4;
ZZ_25F8C_FC:
	S3 = V0;
	if (!S3)
	{
		ZZ_CLOCKCYCLES(3,0x800260B0);
		goto ZZ_25F8C_124;
	}
	S5 = EMU_ReadS16(S3);
	S6 = EMU_ReadS16(S3 + 2); //+ 0x2
	V0 = (int32_t)S6 < (int32_t)S5;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x800260B0);
		goto ZZ_25F8C_124;
	}
	S3 = R0;
	ZZ_CLOCKCYCLES(10,0x800260B0);
ZZ_25F8C_124:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x1E4;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x800260E0; //ZZ_25F8C_154
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(12,0x80031DF4);
	goto ZZ_31DF4;
ZZ_25F8C_154:
	S2 = V0;
	if (!S2)
	{
		ZZ_CLOCKCYCLES(3,0x80026108);
		goto ZZ_25F8C_17C;
	}
	S7 = EMU_ReadS16(S2);
	FP = EMU_ReadS16(S2 + 2); //+ 0x2
	V0 = (int32_t)FP < (int32_t)S7;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80026108);
		goto ZZ_25F8C_17C;
	}
	S2 = R0;
	ZZ_CLOCKCYCLES(10,0x80026108);
ZZ_25F8C_17C:
	if (S3)
	{
		ZZ_CLOCKCYCLES(2,0x80026118);
		goto ZZ_25F8C_18C;
	}
	if (!S2)
	{
		ZZ_CLOCKCYCLES(4,0x8002621C);
		goto ZZ_25F8C_290;
	}
	ZZ_CLOCKCYCLES(4,0x80026118);
ZZ_25F8C_18C:
	A1 = EMU_ReadU32(S0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2700); //+ 0xA8C
	A0 = EMU_ReadU32(S0 + 8); //+ 0x8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2708); //+ 0xA94
	S0 = 0x80060000;
	S0 = EMU_ReadU32(S0 + 2752); //+ 0xAC0
	S1 = A1 - V1;
	S4 = A0 - V0;
	S0 = -S0;
	RA = 0x8002614C; //ZZ_25F8C_1C0
	A0 = S0;
	ZZ_CLOCKCYCLES(13,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_25F8C_1C0:
	A0 = S0;
	RA = 0x80026158; //ZZ_25F8C_1CC
	S0 = V0;
	ZZ_CLOCKCYCLES(3,0x8003D584);
	goto ZZ_3D584;
ZZ_25F8C_1CC:
	A0 = (int32_t)S4 >> 8;
	EMU_SMultiply(A0,V0);
	A1 = LO;
	V1 = (int32_t)S1 >> 8;
	EMU_SMultiply(V1,S0);
	T1 = LO;
	EMU_SMultiply(V1,V0);
	A2 = LO;
	EMU_SMultiply(A0,S0);
	V1 = (int32_t)A1 >> 4;
	V0 = (int32_t)T1 >> 4;
	S1 = V1 + V0;
	V1 = (int32_t)A2 >> 4;
	A0 = LO;
	V0 = (int32_t)A0 >> 4;
	if (!S3)
	{
		S4 = V1 - V0;
		ZZ_CLOCKCYCLES(22,0x800261E4);
		goto ZZ_25F8C_258;
	}
	S4 = V1 - V0;
	V0 = S5 << 8;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		V0 = S6 << 8;
		ZZ_CLOCKCYCLES(26,0x800261CC);
		goto ZZ_25F8C_240;
	}
	V0 = S6 << 8;
	V0 = (int32_t)V0 < (int32_t)S1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(29,0x800261E4);
		goto ZZ_25F8C_258;
	}
	ZZ_CLOCKCYCLES(29,0x800261CC);
ZZ_25F8C_240:
	V0 = EMU_ReadS16(S3 + 4); //+ 0x4
	A0 = R0;
	A1 = SP + 40;
	V0 <<= 8;
	RA = 0x800261E4; //ZZ_25F8C_258
	EMU_Write32(SP + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(6,0x80026250);
	goto ZZ_26250;
ZZ_25F8C_258:
	if (!S2)
	{
		V0 = S7 << 8;
		ZZ_CLOCKCYCLES(2,0x8002621C);
		goto ZZ_25F8C_290;
	}
	V0 = S7 << 8;
	V0 = (int32_t)S4 < (int32_t)V0;
	if (V0)
	{
		V0 = FP << 8;
		ZZ_CLOCKCYCLES(5,0x80026204);
		goto ZZ_25F8C_278;
	}
	V0 = FP << 8;
	V0 = (int32_t)V0 < (int32_t)S4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002621C);
		goto ZZ_25F8C_290;
	}
	ZZ_CLOCKCYCLES(8,0x80026204);
ZZ_25F8C_278:
	V0 = EMU_ReadS16(S2 + 4); //+ 0x4
	A0 = R0;
	A1 = SP + 40;
	V0 <<= 8;
	RA = 0x8002621C; //ZZ_25F8C_290
	EMU_Write32(SP + 40,V0); //+ 0x28
	ZZ_CLOCKCYCLES(6,0x80026250);
	goto ZZ_26250;
ZZ_25F8C_290:
	RA = EMU_ReadU32(SP + 84); //+ 0x54
	FP = EMU_ReadU32(SP + 80); //+ 0x50
	S7 = EMU_ReadU32(SP + 76); //+ 0x4C
	S6 = EMU_ReadU32(SP + 72); //+ 0x48
	S5 = EMU_ReadU32(SP + 68); //+ 0x44
	S4 = EMU_ReadU32(SP + 64); //+ 0x40
	S3 = EMU_ReadU32(SP + 60); //+ 0x3C
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 88;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80026FD4,ZZ_26F14_C0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80025F8C,0x80025FEC,ZZ_25F8C);
ZZ_MARK_TARGET(0x80025FEC,0x80026040,ZZ_25F8C_60);
ZZ_MARK_TARGET(0x80026040,0x80026058,ZZ_25F8C_B4);
ZZ_MARK_TARGET(0x80026058,0x80026088,ZZ_25F8C_CC);
ZZ_MARK_TARGET(0x80026088,0x800260B0,ZZ_25F8C_FC);
ZZ_MARK_TARGET(0x800260B0,0x800260E0,ZZ_25F8C_124);
ZZ_MARK_TARGET(0x800260E0,0x80026108,ZZ_25F8C_154);
ZZ_MARK_TARGET(0x80026108,0x80026118,ZZ_25F8C_17C);
ZZ_MARK_TARGET(0x80026118,0x8002614C,ZZ_25F8C_18C);
ZZ_MARK_TARGET(0x8002614C,0x80026158,ZZ_25F8C_1C0);
ZZ_MARK_TARGET(0x80026158,0x800261CC,ZZ_25F8C_1CC);
ZZ_MARK_TARGET(0x800261CC,0x800261E4,ZZ_25F8C_240);
ZZ_MARK_TARGET(0x800261E4,0x80026204,ZZ_25F8C_258);
ZZ_MARK_TARGET(0x80026204,0x8002621C,ZZ_25F8C_278);
ZZ_MARK_TARGET(0x8002621C,0x80026250,ZZ_25F8C_290);
