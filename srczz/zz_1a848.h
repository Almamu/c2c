#ifdef ZZ_INCLUDE_CODE
ZZ_1A848:
	SP -= 96;
	EMU_Write32(SP + 68,S1); //+ 0x44
	S1 = A0;
	EMU_Write32(SP + 88,RA); //+ 0x58
	EMU_Write32(SP + 84,S5); //+ 0x54
	EMU_Write32(SP + 80,S4); //+ 0x50
	EMU_Write32(SP + 76,S3); //+ 0x4C
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 64,S0); //+ 0x40
	S2 = EMU_ReadU32(S1 + 88); //+ 0x58
	S5 = A1;
	S3 = A2;
	if (!S2)
	{
		S4 = A3;
		ZZ_CLOCKCYCLES(14,0x8001A8E4);
		goto ZZ_1A848_9C;
	}
	S4 = A3;
	if (S2 == S3)
	{
		ZZ_CLOCKCYCLES(16,0x8001A8E4);
		goto ZZ_1A848_9C;
	}
	V0 = EMU_ReadU32(S3 + 256); //+ 0x100
	V0 &= 0x800;
	if (!V0)
	{
		V0 = -28;
		ZZ_CLOCKCYCLES(21,0x8001A8A4);
		goto ZZ_1A848_5C;
	}
	V0 = -28;
	EMU_Write32(S3 + 88,S1); //+ 0x58
	ZZ_CLOCKCYCLES(23,0x8001AA1C);
	goto ZZ_1A848_1D4;
ZZ_1A848_5C:
	S0 = S1 + 96;
	A0 = S0;
	RA = 0x8001A8B4; //ZZ_1A848_6C
	A1 = S2 + 96;
	ZZ_CLOCKCYCLES(4,0x800312F8);
	goto ZZ_312F8;
ZZ_1A848_6C:
	A0 = S0;
	A1 = S3 + 96;
	RA = 0x8001A8C4; //ZZ_1A848_7C
	S0 = V0;
	ZZ_CLOCKCYCLES(4,0x800312F8);
	goto ZZ_312F8;
ZZ_1A848_7C:
	V0 = (int32_t)V0 < (int32_t)S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001A8E4);
		goto ZZ_1A848_9C;
	}
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V0 &= 0x800;
	if (!V0)
	{
		V0 = -28;
		ZZ_CLOCKCYCLES(8,0x8001AA1C);
		goto ZZ_1A848_1D4;
	}
	V0 = -28;
	ZZ_CLOCKCYCLES(8,0x8001A8E4);
ZZ_1A848_9C:
	EMU_Write32(S1 + 88,S3); //+ 0x58
	if (!S5)
	{
		EMU_Write32(S3 + 88,S1); //+ 0x58
		ZZ_CLOCKCYCLES(3,0x8001AA18);
		goto ZZ_1A848_1D0;
	}
	EMU_Write32(S3 + 88,S1); //+ 0x58
	if (!S4)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(5,0x8001AA1C);
		goto ZZ_1A848_1D4;
	}
	V0 = -255;
	V1 = EMU_ReadU32(S1 + 296); //+ 0x128
	if (!V1)
	{
		A0 = SP + 16;
		ZZ_CLOCKCYCLES(9,0x8001A988);
		goto ZZ_1A848_140;
	}
	A0 = SP + 16;
	V0 = EMU_ReadU32(S5);
	V0 += V1;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S5 + 4); //+ 0x4
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V1 = EMU_ReadU32(S1 + 296); //+ 0x128
	V0 += V1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S5 + 12); //+ 0xC
	V1 = EMU_ReadU32(S1 + 296); //+ 0x128
	V0 = V0 - V1;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S5 + 16); //+ 0x10
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S5 + 20); //+ 0x14
	V1 = EMU_ReadU32(S1 + 296); //+ 0x128
	A1 = S4;
	V0 = V0 - V1;
	RA = 0x8001A970; //ZZ_1A848_128
	EMU_Write32(SP + 36,V0); //+ 0x24
	ZZ_CLOCKCYCLES(35,0x800311CC);
	goto ZZ_311CC;
ZZ_1A848_128:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001A988);
		goto ZZ_1A848_140;
	}
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 |= 0x1000;
	EMU_Write32(S1 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(6,0x8001A988);
ZZ_1A848_140:
	V1 = EMU_ReadU32(S3 + 296); //+ 0x128
	if (!V1)
	{
		A0 = SP + 40;
		ZZ_CLOCKCYCLES(4,0x8001AA18);
		goto ZZ_1A848_1D0;
	}
	A0 = SP + 40;
	V0 = EMU_ReadU32(S4);
	V0 += V1;
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(S3 + 296); //+ 0x128
	V0 += V1;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(S3 + 296); //+ 0x128
	V0 = V0 - V1;
	EMU_Write32(SP + 52,V0); //+ 0x34
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadU32(S4 + 20); //+ 0x14
	V1 = EMU_ReadU32(S3 + 296); //+ 0x128
	A1 = S5;
	V0 = V0 - V1;
	RA = 0x8001AA00; //ZZ_1A848_1B8
	EMU_Write32(SP + 60,V0); //+ 0x3C
	ZZ_CLOCKCYCLES(30,0x800311CC);
	goto ZZ_311CC;
ZZ_1A848_1B8:
	if (!V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(2,0x8001AA1C);
		goto ZZ_1A848_1D4;
	}
	V0 = -255;
	V0 = EMU_ReadU32(S3 + 168); //+ 0xA8
	V0 |= 0x1000;
	EMU_Write32(S3 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(6,0x8001AA18);
ZZ_1A848_1D0:
	V0 = -255;
	ZZ_CLOCKCYCLES(1,0x8001AA1C);
ZZ_1A848_1D4:
	RA = EMU_ReadU32(SP + 88); //+ 0x58
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	S4 = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8002ABAC,ZZ_2A868_344);
	ZZ_JUMPREGISTER(0x8002E0A8,ZZ_2D9F8_6B0);
	ZZ_JUMPREGISTER(0x8002E064,ZZ_2D9F8_66C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001A848,ZZ_1A848);
ZZ_MARK(0x8001A84C);
ZZ_MARK(0x8001A850);
ZZ_MARK(0x8001A854);
ZZ_MARK(0x8001A858);
ZZ_MARK(0x8001A85C);
ZZ_MARK(0x8001A860);
ZZ_MARK(0x8001A864);
ZZ_MARK(0x8001A868);
ZZ_MARK(0x8001A86C);
ZZ_MARK(0x8001A870);
ZZ_MARK(0x8001A874);
ZZ_MARK(0x8001A878);
ZZ_MARK(0x8001A87C);
ZZ_MARK(0x8001A880);
ZZ_MARK(0x8001A884);
ZZ_MARK(0x8001A888);
ZZ_MARK(0x8001A88C);
ZZ_MARK(0x8001A890);
ZZ_MARK(0x8001A894);
ZZ_MARK(0x8001A898);
ZZ_MARK(0x8001A89C);
ZZ_MARK(0x8001A8A0);
ZZ_MARK_TARGET(0x8001A8A4,ZZ_1A848_5C);
ZZ_MARK(0x8001A8A8);
ZZ_MARK(0x8001A8AC);
ZZ_MARK(0x8001A8B0);
ZZ_MARK_TARGET(0x8001A8B4,ZZ_1A848_6C);
ZZ_MARK(0x8001A8B8);
ZZ_MARK(0x8001A8BC);
ZZ_MARK(0x8001A8C0);
ZZ_MARK_TARGET(0x8001A8C4,ZZ_1A848_7C);
ZZ_MARK(0x8001A8C8);
ZZ_MARK(0x8001A8CC);
ZZ_MARK(0x8001A8D0);
ZZ_MARK(0x8001A8D4);
ZZ_MARK(0x8001A8D8);
ZZ_MARK(0x8001A8DC);
ZZ_MARK(0x8001A8E0);
ZZ_MARK_TARGET(0x8001A8E4,ZZ_1A848_9C);
ZZ_MARK(0x8001A8E8);
ZZ_MARK(0x8001A8EC);
ZZ_MARK(0x8001A8F0);
ZZ_MARK(0x8001A8F4);
ZZ_MARK(0x8001A8F8);
ZZ_MARK(0x8001A8FC);
ZZ_MARK(0x8001A900);
ZZ_MARK(0x8001A904);
ZZ_MARK(0x8001A908);
ZZ_MARK(0x8001A90C);
ZZ_MARK(0x8001A910);
ZZ_MARK(0x8001A914);
ZZ_MARK(0x8001A918);
ZZ_MARK(0x8001A91C);
ZZ_MARK(0x8001A920);
ZZ_MARK(0x8001A924);
ZZ_MARK(0x8001A928);
ZZ_MARK(0x8001A92C);
ZZ_MARK(0x8001A930);
ZZ_MARK(0x8001A934);
ZZ_MARK(0x8001A938);
ZZ_MARK(0x8001A93C);
ZZ_MARK(0x8001A940);
ZZ_MARK(0x8001A944);
ZZ_MARK(0x8001A948);
ZZ_MARK(0x8001A94C);
ZZ_MARK(0x8001A950);
ZZ_MARK(0x8001A954);
ZZ_MARK(0x8001A958);
ZZ_MARK(0x8001A95C);
ZZ_MARK(0x8001A960);
ZZ_MARK(0x8001A964);
ZZ_MARK(0x8001A968);
ZZ_MARK(0x8001A96C);
ZZ_MARK_TARGET(0x8001A970,ZZ_1A848_128);
ZZ_MARK(0x8001A974);
ZZ_MARK(0x8001A978);
ZZ_MARK(0x8001A97C);
ZZ_MARK(0x8001A980);
ZZ_MARK(0x8001A984);
ZZ_MARK_TARGET(0x8001A988,ZZ_1A848_140);
ZZ_MARK(0x8001A98C);
ZZ_MARK(0x8001A990);
ZZ_MARK(0x8001A994);
ZZ_MARK(0x8001A998);
ZZ_MARK(0x8001A99C);
ZZ_MARK(0x8001A9A0);
ZZ_MARK(0x8001A9A4);
ZZ_MARK(0x8001A9A8);
ZZ_MARK(0x8001A9AC);
ZZ_MARK(0x8001A9B0);
ZZ_MARK(0x8001A9B4);
ZZ_MARK(0x8001A9B8);
ZZ_MARK(0x8001A9BC);
ZZ_MARK(0x8001A9C0);
ZZ_MARK(0x8001A9C4);
ZZ_MARK(0x8001A9C8);
ZZ_MARK(0x8001A9CC);
ZZ_MARK(0x8001A9D0);
ZZ_MARK(0x8001A9D4);
ZZ_MARK(0x8001A9D8);
ZZ_MARK(0x8001A9DC);
ZZ_MARK(0x8001A9E0);
ZZ_MARK(0x8001A9E4);
ZZ_MARK(0x8001A9E8);
ZZ_MARK(0x8001A9EC);
ZZ_MARK(0x8001A9F0);
ZZ_MARK(0x8001A9F4);
ZZ_MARK(0x8001A9F8);
ZZ_MARK(0x8001A9FC);
ZZ_MARK_TARGET(0x8001AA00,ZZ_1A848_1B8);
ZZ_MARK(0x8001AA04);
ZZ_MARK(0x8001AA08);
ZZ_MARK(0x8001AA0C);
ZZ_MARK(0x8001AA10);
ZZ_MARK(0x8001AA14);
ZZ_MARK_TARGET(0x8001AA18,ZZ_1A848_1D0);
ZZ_MARK_TARGET(0x8001AA1C,ZZ_1A848_1D4);
ZZ_MARK(0x8001AA20);
ZZ_MARK(0x8001AA24);
ZZ_MARK(0x8001AA28);
ZZ_MARK(0x8001AA2C);
ZZ_MARK(0x8001AA30);
ZZ_MARK(0x8001AA34);
ZZ_MARK(0x8001AA38);
ZZ_MARK(0x8001AA3C);
ZZ_MARK(0x8001AA40);
