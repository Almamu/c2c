#ifdef ZZ_INCLUDE_CODE
ZZ_1A0D8:
	SP -= 32;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = 0x3;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 0x80070000;
	S0 -= 12856;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	A0 = S0;
	ZZ_CLOCKCYCLES(10,0x8001A100);
ZZ_1A0D8_28:
	S0 += 8;
	S1 += 1;
	A1 = 0x80020000;
	A1 -= 28796;
	RA = 0x8001A118; //ZZ_1A0D8_40
	A2 = S2;
	ZZ_CLOCKCYCLES(6,0x80018D08);
	goto ZZ_18D08;
ZZ_1A0D8_40:
	V1 = V0;
	if (V1)
	{
		V0 = (int32_t)S1 < 5;
		ZZ_CLOCKCYCLES(3,0x8001A12C);
		goto ZZ_1A0D8_54;
	}
	V0 = (int32_t)S1 < 5;
	if (V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(5,0x8001A100);
		goto ZZ_1A0D8_28;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(5,0x8001A12C);
ZZ_1A0D8_54:
	V0 = V1;
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80038230,ZZ_37930_900);
	ZZ_JUMPREGISTER(0x8001A4FC,ZZ_1A374_188);
	ZZ_JUMPREGISTER(0x8001A4AC,ZZ_1A374_138);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001A0D8,ZZ_1A0D8);
ZZ_MARK(0x8001A0DC);
ZZ_MARK(0x8001A0E0);
ZZ_MARK(0x8001A0E4);
ZZ_MARK(0x8001A0E8);
ZZ_MARK(0x8001A0EC);
ZZ_MARK(0x8001A0F0);
ZZ_MARK(0x8001A0F4);
ZZ_MARK(0x8001A0F8);
ZZ_MARK(0x8001A0FC);
ZZ_MARK_TARGET(0x8001A100,ZZ_1A0D8_28);
ZZ_MARK(0x8001A104);
ZZ_MARK(0x8001A108);
ZZ_MARK(0x8001A10C);
ZZ_MARK(0x8001A110);
ZZ_MARK(0x8001A114);
ZZ_MARK_TARGET(0x8001A118,ZZ_1A0D8_40);
ZZ_MARK(0x8001A11C);
ZZ_MARK(0x8001A120);
ZZ_MARK(0x8001A124);
ZZ_MARK(0x8001A128);
ZZ_MARK_TARGET(0x8001A12C,ZZ_1A0D8_54);
ZZ_MARK(0x8001A130);
ZZ_MARK(0x8001A134);
ZZ_MARK(0x8001A138);
ZZ_MARK(0x8001A13C);
ZZ_MARK(0x8001A140);
ZZ_MARK(0x8001A144);
ZZ_MARK(0x8001A148);
