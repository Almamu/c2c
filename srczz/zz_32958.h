#ifdef ZZ_INCLUDE_CODE
ZZ_32958:
	SP -= 40;
	V0 = A0;
	EMU_Write32(SP + 32,RA); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	A0 = EMU_ReadU32(V0);
	if ((int32_t)A0 >= 0)
	{
		S1 = A1;
		ZZ_CLOCKCYCLES(11,0x80032988);
		goto ZZ_32958_30;
	}
	S1 = A1;
	A0 += 31;
	ZZ_CLOCKCYCLES(12,0x80032988);
ZZ_32958_30:
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = 0xFFFB0000;
	V0 |= 0x5000;
	V1 += V0;
	if ((int32_t)V1 >= 0)
	{
		S3 = (int32_t)A0 >> 5;
		ZZ_CLOCKCYCLES(6,0x800329A4);
		goto ZZ_32958_4C;
	}
	S3 = (int32_t)A0 >> 5;
	V1 += 31;
	ZZ_CLOCKCYCLES(7,0x800329A4);
ZZ_32958_4C:
	A0 = S3;
	S2 = (int32_t)V1 >> 5;
	RA = 0x800329B4; //ZZ_32958_5C
	A1 = S2;
	ZZ_CLOCKCYCLES(4,0x8003C140);
	goto ZZ_3C140;
ZZ_32958_5C:
	S0 = V0;
	V0 = 0x7FFF;
	V0 = (int32_t)V0 < (int32_t)S0;
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(5,0x800329D4);
		goto ZZ_32958_7C;
	}
	A0 = S2;
	EMU_Write16(GP + 360,S1); //+ 0x168
	ZZ_CLOCKCYCLES(8,0x80032AB4);
	goto ZZ_32958_15C;
ZZ_32958_7C:
	RA = 0x800329DC; //ZZ_32958_84
	A1 = S3;
	ZZ_CLOCKCYCLES(2,0x8004F310);
	goto ZZ_4F310;
ZZ_32958_84:
	RA = 0x800329E4; //ZZ_32958_8C
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_32958_8C:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12660); //+ 0xFFFFCE8C
	A1 = V0 + 4096;
	V0 = S1 << 15;
	EMU_SDivide(V0,S0);
	if (S0)
	{
		ZZ_CLOCKCYCLES(7,0x80032A04);
		goto ZZ_32958_AC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(8,0x80032A04);
ZZ_32958_AC:
	AT = -1;
	if (S0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80032A1C);
		goto ZZ_32958_C4;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80032A1C);
		goto ZZ_32958_C4;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80032A1C);
ZZ_32958_C4:
	A0 = LO;
	if (V1)
	{
		V1 = A0;
		ZZ_CLOCKCYCLES(3,0x80032A58);
		goto ZZ_32958_100;
	}
	V1 = A0;
	V0 = 0x2000;
	V0 = V0 - A1;
	EMU_SMultiply(A0,V0);
	V1 = LO;
	EMU_SMultiply(A0,A1);
	V0 = A0 + V1;
	V1 = (int32_t)V0 >> 11;
	A1 = LO;
	V0 = A0 + A1;
	A0 = (int32_t)V0 >> 11;
	ZZ_CLOCKCYCLES(15,0x80032A58);
ZZ_32958_100:
	V0 = (int32_t)V1 < (int32_t)S1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80032A84);
		goto ZZ_32958_12C;
	}
	if ((int32_t)V1 < 0)
	{
		V0 = (int32_t)A0 < (int32_t)S1;
		ZZ_CLOCKCYCLES(5,0x80032A78);
		goto ZZ_32958_120;
	}
	V0 = (int32_t)A0 < (int32_t)S1;
	EMU_Write16(GP + 360,V1); //+ 0x168
	ZZ_CLOCKCYCLES(8,0x80032A8C);
	goto ZZ_32958_134;
ZZ_32958_120:
	EMU_Write16(GP + 360,R0); //+ 0x168
	ZZ_CLOCKCYCLES(3,0x80032A8C);
	goto ZZ_32958_134;
ZZ_32958_12C:
	EMU_Write16(GP + 360,S1); //+ 0x168
	V0 = (int32_t)A0 < (int32_t)S1;
	ZZ_CLOCKCYCLES(2,0x80032A8C);
ZZ_32958_134:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80032AB4);
		goto ZZ_32958_15C;
	}
	if ((int32_t)A0 < 0)
	{
		ZZ_CLOCKCYCLES(4,0x80032AA8);
		goto ZZ_32958_150;
	}
	EMU_Write16(GP + 362,A0); //+ 0x16A
	ZZ_CLOCKCYCLES(7,0x80032AB8);
	goto ZZ_32958_160;
ZZ_32958_150:
	EMU_Write16(GP + 362,R0); //+ 0x16A
	ZZ_CLOCKCYCLES(3,0x80032AB8);
	goto ZZ_32958_160;
ZZ_32958_15C:
	EMU_Write16(GP + 362,S1); //+ 0x16A
	ZZ_CLOCKCYCLES(1,0x80032AB8);
ZZ_32958_160:
	A0 = EMU_ReadS16(GP + 360); //+ 0x168
	V0 = (int32_t)A0 < 16384;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80032AD0);
		goto ZZ_32958_178;
	}
	A0 = 0x3FFF;
	ZZ_CLOCKCYCLES(6,0x80032AD0);
ZZ_32958_178:
	V1 = EMU_ReadS16(GP + 362); //+ 0x16A
	EMU_Write16(GP + 360,A0); //+ 0x168
	V0 = (int32_t)V1 < 16384;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80032AE8);
		goto ZZ_32958_190;
	}
	V1 = 0x3FFF;
	ZZ_CLOCKCYCLES(6,0x80032AE8);
ZZ_32958_190:
	EMU_Write16(GP + 362,V1); //+ 0x16A
	V0 = 0x80060000;
	V0 -= 2692;
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x800335B8,ZZ_3322C_38C);
	ZZ_JUMPREGISTER(0x80033128,ZZ_32E88_2A0);
	ZZ_JUMPREGISTER(0x80033DD4,ZZ_337BC_618);
	ZZ_JUMPREGISTER(0x80033EF8,ZZ_337BC_73C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80032958,ZZ_32958);
ZZ_MARK(0x8003295C);
ZZ_MARK(0x80032960);
ZZ_MARK(0x80032964);
ZZ_MARK(0x80032968);
ZZ_MARK(0x8003296C);
ZZ_MARK(0x80032970);
ZZ_MARK(0x80032974);
ZZ_MARK(0x80032978);
ZZ_MARK(0x8003297C);
ZZ_MARK(0x80032980);
ZZ_MARK(0x80032984);
ZZ_MARK_TARGET(0x80032988,ZZ_32958_30);
ZZ_MARK(0x8003298C);
ZZ_MARK(0x80032990);
ZZ_MARK(0x80032994);
ZZ_MARK(0x80032998);
ZZ_MARK(0x8003299C);
ZZ_MARK(0x800329A0);
ZZ_MARK_TARGET(0x800329A4,ZZ_32958_4C);
ZZ_MARK(0x800329A8);
ZZ_MARK(0x800329AC);
ZZ_MARK(0x800329B0);
ZZ_MARK_TARGET(0x800329B4,ZZ_32958_5C);
ZZ_MARK(0x800329B8);
ZZ_MARK(0x800329BC);
ZZ_MARK(0x800329C0);
ZZ_MARK(0x800329C4);
ZZ_MARK(0x800329C8);
ZZ_MARK(0x800329CC);
ZZ_MARK(0x800329D0);
ZZ_MARK_TARGET(0x800329D4,ZZ_32958_7C);
ZZ_MARK(0x800329D8);
ZZ_MARK_TARGET(0x800329DC,ZZ_32958_84);
ZZ_MARK(0x800329E0);
ZZ_MARK_TARGET(0x800329E4,ZZ_32958_8C);
ZZ_MARK(0x800329E8);
ZZ_MARK(0x800329EC);
ZZ_MARK(0x800329F0);
ZZ_MARK(0x800329F4);
ZZ_MARK(0x800329F8);
ZZ_MARK(0x800329FC);
ZZ_MARK(0x80032A00);
ZZ_MARK_TARGET(0x80032A04,ZZ_32958_AC);
ZZ_MARK(0x80032A08);
ZZ_MARK(0x80032A0C);
ZZ_MARK(0x80032A10);
ZZ_MARK(0x80032A14);
ZZ_MARK(0x80032A18);
ZZ_MARK_TARGET(0x80032A1C,ZZ_32958_C4);
ZZ_MARK(0x80032A20);
ZZ_MARK(0x80032A24);
ZZ_MARK(0x80032A28);
ZZ_MARK(0x80032A2C);
ZZ_MARK(0x80032A30);
ZZ_MARK(0x80032A34);
ZZ_MARK(0x80032A38);
ZZ_MARK(0x80032A3C);
ZZ_MARK(0x80032A40);
ZZ_MARK(0x80032A44);
ZZ_MARK(0x80032A48);
ZZ_MARK(0x80032A4C);
ZZ_MARK(0x80032A50);
ZZ_MARK(0x80032A54);
ZZ_MARK_TARGET(0x80032A58,ZZ_32958_100);
ZZ_MARK(0x80032A5C);
ZZ_MARK(0x80032A60);
ZZ_MARK(0x80032A64);
ZZ_MARK(0x80032A68);
ZZ_MARK(0x80032A6C);
ZZ_MARK(0x80032A70);
ZZ_MARK(0x80032A74);
ZZ_MARK_TARGET(0x80032A78,ZZ_32958_120);
ZZ_MARK(0x80032A7C);
ZZ_MARK(0x80032A80);
ZZ_MARK_TARGET(0x80032A84,ZZ_32958_12C);
ZZ_MARK(0x80032A88);
ZZ_MARK_TARGET(0x80032A8C,ZZ_32958_134);
ZZ_MARK(0x80032A90);
ZZ_MARK(0x80032A94);
ZZ_MARK(0x80032A98);
ZZ_MARK(0x80032A9C);
ZZ_MARK(0x80032AA0);
ZZ_MARK(0x80032AA4);
ZZ_MARK_TARGET(0x80032AA8,ZZ_32958_150);
ZZ_MARK(0x80032AAC);
ZZ_MARK(0x80032AB0);
ZZ_MARK_TARGET(0x80032AB4,ZZ_32958_15C);
ZZ_MARK_TARGET(0x80032AB8,ZZ_32958_160);
ZZ_MARK(0x80032ABC);
ZZ_MARK(0x80032AC0);
ZZ_MARK(0x80032AC4);
ZZ_MARK(0x80032AC8);
ZZ_MARK(0x80032ACC);
ZZ_MARK_TARGET(0x80032AD0,ZZ_32958_178);
ZZ_MARK(0x80032AD4);
ZZ_MARK(0x80032AD8);
ZZ_MARK(0x80032ADC);
ZZ_MARK(0x80032AE0);
ZZ_MARK(0x80032AE4);
ZZ_MARK_TARGET(0x80032AE8,ZZ_32958_190);
ZZ_MARK(0x80032AEC);
ZZ_MARK(0x80032AF0);
ZZ_MARK(0x80032AF4);
ZZ_MARK(0x80032AF8);
ZZ_MARK(0x80032AFC);
ZZ_MARK(0x80032B00);
ZZ_MARK(0x80032B04);
ZZ_MARK(0x80032B08);
ZZ_MARK(0x80032B0C);
ZZ_MARK(0x80032B10);
