#ifdef ZZ_INCLUDE_CODE
ZZ_3631C:
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x8003632C; //ZZ_3631C_10
	ZZ_CLOCKCYCLES(4,0x80036494);
	goto ZZ_36494;
ZZ_3631C_10:
	V0 &= 0xD;
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(3,0x8003635C);
		goto ZZ_3631C_40;
	}
	V0 = 0x1;
	RA = 0x80036340; //ZZ_3631C_24
	ZZ_CLOCKCYCLES(5,0x80036B58);
	goto ZZ_36B58;
ZZ_3631C_24:
	RA = 0x80036348; //ZZ_3631C_2C
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80036410);
	goto ZZ_36410;
ZZ_3631C_2C:
	RA = 0x80036350; //ZZ_3631C_34
	A0 = 0x40;
	ZZ_CLOCKCYCLES(2,0x80035DC0);
	goto ZZ_35DC0;
ZZ_3631C_34:
	V1 = EMU_ReadU32(GP + 232); //+ 0xE8
	V0 = R0;
	EMU_Write32(V1 + 28,R0); //+ 0x1C
	ZZ_CLOCKCYCLES(3,0x8003635C);
ZZ_3631C_40:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80034B80,ZZ_34B44_3C);
	ZZ_JUMPREGISTER(0x80035D08,ZZ_3578C_57C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003631C,ZZ_3631C);
ZZ_MARK(0x80036320);
ZZ_MARK(0x80036324);
ZZ_MARK(0x80036328);
ZZ_MARK_TARGET(0x8003632C,ZZ_3631C_10);
ZZ_MARK(0x80036330);
ZZ_MARK(0x80036334);
ZZ_MARK(0x80036338);
ZZ_MARK(0x8003633C);
ZZ_MARK_TARGET(0x80036340,ZZ_3631C_24);
ZZ_MARK(0x80036344);
ZZ_MARK_TARGET(0x80036348,ZZ_3631C_2C);
ZZ_MARK(0x8003634C);
ZZ_MARK_TARGET(0x80036350,ZZ_3631C_34);
ZZ_MARK(0x80036354);
ZZ_MARK(0x80036358);
ZZ_MARK_TARGET(0x8003635C,ZZ_3631C_40);
ZZ_MARK(0x80036360);
ZZ_MARK(0x80036364);
ZZ_MARK(0x80036368);
