#ifdef ZZ_INCLUDE_CODE
ZZ_58F54:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32144); //+ 0xFFFF8270
	A0 = EMU_ReadU8(V0 + 24); //+ 0x18
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 26624); //+ 0xFFFF9800
	V0 = A0 << 14;
	V0 = V0 - A0;
	EMU_SMultiply(V1,V0);
	V1 = LO;
	V0 = 0x82060000;
	V0 |= 0x1029;
	EMU_SMultiply(V1,V0);
	A0 = 0x80070000;
	A0 = EMU_ReadU8(A0 - 26618); //+ 0xFFFF9806
	V0 = HI;
	V0 += V1;
	V0 = (int32_t)V0 >> 13;
	V1 = (int32_t)V1 >> 31;
	A3 = V0 - V1;
	EMU_SMultiply(A3,A0);
	V1 = LO;
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 26615); //+ 0xFFFF9809
	EMU_SMultiply(V1,V0);
	V0 = LO;
	A0 = 0x40C0000;
	A0 |= 0x2051;
	EMU_UMultiply(V0,A0);
	SP -= 16;
	V1 = 0x80070000;
	V1 = EMU_ReadS16(V1 - 26602); //+ 0xFFFF9816
	T0 = A1;
	T1 = V1 << 3;
	V1 = 0x80070000;
	V1 = EMU_ReadU16(V1 - 26606); //+ 0xFFFF9812
	A0 = HI;
	V0 = V0 - A0;
	V0 >>= 1;
	A0 += V0;
	A2 = A0 >> 13;
	A0 = V1 & 0xFF;
	A0 <<= 2;
	V1 <<= 16;
	A1 = (int32_t)V1 >> 16;
	V1 >>= 24;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	AT = 0x80070000;
	AT += A0;
	V1 = EMU_ReadU32(AT - 15268); //+ 0xFFFFC45C
	V0 <<= 4;
	V1 += V0;
	V0 = 33;
	if (A1 == V0)
	{
		A3 = A2;
		ZZ_CLOCKCYCLES(59,0x800590A0);
		goto ZZ_58F54_14C;
	}
	A3 = A2;
	V0 = EMU_ReadU16(V1 + 88); //+ 0x58
	EMU_SMultiply(A2,V0);
	V0 = LO;
	V1 = EMU_ReadU16(V1 + 90); //+ 0x5A
	EMU_SMultiply(A2,V1);
	V1 = LO;
	A0 = 0x2040000;
	A0 |= 0x811;
	EMU_UMultiply(V0,A0);
	A1 = HI;
	EMU_UMultiply(V1,A0);
	V0 = V0 - A1;
	V0 >>= 1;
	A1 += V0;
	A3 = A1 >> 6;
	A0 = HI;
	V1 = V1 - A0;
	V1 >>= 1;
	A0 += V1;
	A2 = A0 >> 6;
	ZZ_CLOCKCYCLES(83,0x800590A0);
ZZ_58F54_14C:
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 26614); //+ 0xFFFF980A
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A2,V1);
		ZZ_CLOCKCYCLES(6,0x800590E4);
		goto ZZ_58F54_190;
	}
	EMU_SMultiply(A2,V1);
	V0 = LO;
	V1 = 0x4100000;
	V1 |= 0x4105;
	EMU_UMultiply(V0,V1);
	A2 = A3;
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A1 = V1 >> 5;
	ZZ_CLOCKCYCLES(17,0x80059118);
	goto ZZ_58F54_1C4;
ZZ_58F54_190:
	V0 = 127;
	V0 = V0 - V1;
	EMU_SMultiply(A3,V0);
	V0 = LO;
	V1 = 0x4100000;
	V1 |= 0x4105;
	EMU_UMultiply(V0,V1);
	A1 = A2;
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 5;
	ZZ_CLOCKCYCLES(13,0x80059118);
ZZ_58F54_1C4:
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 26617); //+ 0xFFFF9807
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A1,V1);
		ZZ_CLOCKCYCLES(6,0x80059158);
		goto ZZ_58F54_204;
	}
	EMU_SMultiply(A1,V1);
	V0 = LO;
	V1 = 0x4100000;
	V1 |= 0x4105;
	EMU_UMultiply(V0,V1);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A1 = V1 >> 5;
	ZZ_CLOCKCYCLES(16,0x80059188);
	goto ZZ_58F54_234;
ZZ_58F54_204:
	V0 = 127;
	V0 = V0 - V1;
	EMU_SMultiply(A2,V0);
	V0 = LO;
	V1 = 0x4100000;
	V1 |= 0x4105;
	EMU_UMultiply(V0,V1);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 5;
	ZZ_CLOCKCYCLES(12,0x80059188);
ZZ_58F54_234:
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 26623); //+ 0xFFFF9801
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A1,V1);
		ZZ_CLOCKCYCLES(6,0x800591C8);
		goto ZZ_58F54_274;
	}
	EMU_SMultiply(A1,V1);
	V0 = LO;
	V1 = 0x4100000;
	V1 |= 0x4105;
	EMU_UMultiply(V0,V1);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A1 = V1 >> 5;
	ZZ_CLOCKCYCLES(16,0x800591F8);
	goto ZZ_58F54_2A4;
ZZ_58F54_274:
	V0 = 127;
	V0 = V0 - V1;
	EMU_SMultiply(A2,V0);
	V0 = LO;
	V1 = 0x4100000;
	V1 |= 0x4105;
	EMU_UMultiply(V0,V1);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 5;
	ZZ_CLOCKCYCLES(12,0x800591F8);
ZZ_58F54_2A4:
	V1 = 0x80060000;
	V1 = EMU_ReadS16(V1 + 14048); //+ 0x36E0
	V0 = 1;
	if (V1 != V0)
	{
		V0 = A2 < A1;
		ZZ_CLOCKCYCLES(5,0x80059220);
		goto ZZ_58F54_2CC;
	}
	V0 = A2 < A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8005921C);
		goto ZZ_58F54_2C8;
	}
	A2 = A1;
	ZZ_CLOCKCYCLES(9,0x80059220);
	goto ZZ_58F54_2CC;
ZZ_58F54_2C8:
	A1 = A2;
	ZZ_CLOCKCYCLES(1,0x80059220);
ZZ_58F54_2CC:
	V1 = 0x80070000;
	V1 = EMU_ReadS16(V1 - 26606); //+ 0xFFFF9812
	V0 = 33;
	if (V1 == V0)
	{
		V0 = 0x40000;
		ZZ_CLOCKCYCLES(5,0x8005928C);
		goto ZZ_58F54_338;
	}
	V0 = 0x40000;
	EMU_SMultiply(A2,A2);
	A0 = LO;
	EMU_SMultiply(A1,A1);
	A1 = LO;
	V0 |= 0x11;
	EMU_UMultiply(A0,V0);
	V1 = HI;
	EMU_UMultiply(A1,V0);
	A0 = A0 - V1;
	A0 >>= 1;
	V1 += A0;
	A2 = V1 >> 13;
	V0 = HI;
	A1 = A1 - V0;
	A1 >>= 1;
	V0 += A1;
	A1 = V0 >> 13;
	ZZ_CLOCKCYCLES(27,0x8005928C);
ZZ_58F54_338:
	V1 = T1 & 0xFFFF;
	V1 <<= 1;
	A0 = 0x80070000;
	A0 -= 26576;
	V0 = A0 - 4;
	V0 += V1;
	A0 -= 2;
	AT = 0x80070000;
	AT += V1;
	EMU_Write16(AT - 26576,T0); //+ 0xFFFF9830
	V1 += A0;
	EMU_Write16(V0,A2);
	EMU_Write16(V1,A1);
	V1 = 0x80070000;
	V1 = EMU_ReadS16(V1 - 26602); //+ 0xFFFF9816
	AT = 0x80060000;
	AT += V1;
	V0 = EMU_ReadU8(AT + 2508); //+ 0x9CC
	V0 |= 0x7;
	AT = 0x80060000;
	AT += V1;
	EMU_Write8(AT + 2508,V0); //+ 0x9CC
	V1 = 0x80070000;
	V1 = EMU_ReadS16(V1 - 26602); //+ 0xFFFF9816
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 1;
	AT = 0x80060000;
	AT += V0;
	EMU_Write16(AT + 1192,T0); //+ 0x4A8
	V1 = 0x80070000;
	V1 = EMU_ReadS16(V1 - 26602); //+ 0xFFFF9816
	V0 = (int32_t)V1 < 16;
	if (!V0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(40,0x80059338);
		goto ZZ_58F54_3E4;
	}
	V0 = 1;
	A2 = V0 << V1;
	A1 = R0;
	ZZ_CLOCKCYCLES(43,0x80059344);
	goto ZZ_58F54_3F0;
ZZ_58F54_3E4:
	A2 = R0;
	V1 -= 16;
	A1 = V0 << V1;
	ZZ_CLOCKCYCLES(3,0x80059344);
ZZ_58F54_3F0:
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 26608); //+ 0xFFFF9810
	V0 &= 0x4;
	if (!V0)
	{
		V1 = ~A2;
		ZZ_CLOCKCYCLES(6,0x8005938C);
		goto ZZ_58F54_438;
	}
	V1 = ~A2;
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 960); //+ 0x3C0
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 + 964); //+ 0x3C4
	V0 |= A2;
	V1 |= A1;
	AT = 0x80060000;
	EMU_Write16(AT + 960,V0); //+ 0x3C0
	AT = 0x80060000;
	EMU_Write16(AT + 964,V1); //+ 0x3C4
	ZZ_CLOCKCYCLES(18,0x800593BC);
	goto ZZ_58F54_468;
ZZ_58F54_438:
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 960); //+ 0x3C0
	V0 &= V1;
	AT = 0x80060000;
	EMU_Write16(AT + 960,V0); //+ 0x3C0
	V0 = 0x80060000;
	V0 = EMU_ReadU16(V0 + 964); //+ 0x3C4
	V1 = ~A1;
	V0 &= V1;
	AT = 0x80060000;
	EMU_Write16(AT + 964,V0); //+ 0x3C4
	ZZ_CLOCKCYCLES(12,0x800593BC);
ZZ_58F54_468:
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 + 952); //+ 0x3B8
	A0 = 0x80060000;
	A0 = EMU_ReadU16(A0 + 956); //+ 0x3BC
	V0 = 0x80070000;
	V0 = EMU_ReadU16(V0 - 2944); //+ 0xFFFFF480
	V1 |= A2;
	AT = 0x80060000;
	EMU_Write16(AT + 952,V1); //+ 0x3B8
	V1 = ~V1;
	V0 &= V1;
	AT = 0x80070000;
	EMU_Write16(AT - 2944,V0); //+ 0xFFFFF480
	V0 = 0x80070000;
	V0 = EMU_ReadU16(V0 - 2940); //+ 0xFFFFF484
	A0 |= A1;
	AT = 0x80060000;
	EMU_Write16(AT + 956,A0); //+ 0x3BC
	A0 = ~A0;
	V0 &= A0;
	AT = 0x80070000;
	EMU_Write16(AT - 2940,V0); //+ 0xFFFFF484
	SP += 16;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(25);
	ZZ_JUMPREGISTER(0x80057FC4,ZZ_57AAC_518);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80058F54,ZZ_58F54);
ZZ_MARK(0x80058F58);
ZZ_MARK(0x80058F5C);
ZZ_MARK(0x80058F60);
ZZ_MARK(0x80058F64);
ZZ_MARK(0x80058F68);
ZZ_MARK(0x80058F6C);
ZZ_MARK(0x80058F70);
ZZ_MARK(0x80058F74);
ZZ_MARK(0x80058F78);
ZZ_MARK(0x80058F7C);
ZZ_MARK(0x80058F80);
ZZ_MARK(0x80058F84);
ZZ_MARK(0x80058F88);
ZZ_MARK(0x80058F8C);
ZZ_MARK(0x80058F90);
ZZ_MARK(0x80058F94);
ZZ_MARK(0x80058F98);
ZZ_MARK(0x80058F9C);
ZZ_MARK(0x80058FA0);
ZZ_MARK(0x80058FA4);
ZZ_MARK(0x80058FA8);
ZZ_MARK(0x80058FAC);
ZZ_MARK(0x80058FB0);
ZZ_MARK(0x80058FB4);
ZZ_MARK(0x80058FB8);
ZZ_MARK(0x80058FBC);
ZZ_MARK(0x80058FC0);
ZZ_MARK(0x80058FC4);
ZZ_MARK(0x80058FC8);
ZZ_MARK(0x80058FCC);
ZZ_MARK(0x80058FD0);
ZZ_MARK(0x80058FD4);
ZZ_MARK(0x80058FD8);
ZZ_MARK(0x80058FDC);
ZZ_MARK(0x80058FE0);
ZZ_MARK(0x80058FE4);
ZZ_MARK(0x80058FE8);
ZZ_MARK(0x80058FEC);
ZZ_MARK(0x80058FF0);
ZZ_MARK(0x80058FF4);
ZZ_MARK(0x80058FF8);
ZZ_MARK(0x80058FFC);
ZZ_MARK(0x80059000);
ZZ_MARK(0x80059004);
ZZ_MARK(0x80059008);
ZZ_MARK(0x8005900C);
ZZ_MARK(0x80059010);
ZZ_MARK(0x80059014);
ZZ_MARK(0x80059018);
ZZ_MARK(0x8005901C);
ZZ_MARK(0x80059020);
ZZ_MARK(0x80059024);
ZZ_MARK(0x80059028);
ZZ_MARK(0x8005902C);
ZZ_MARK(0x80059030);
ZZ_MARK(0x80059034);
ZZ_MARK(0x80059038);
ZZ_MARK(0x8005903C);
ZZ_MARK(0x80059040);
ZZ_MARK(0x80059044);
ZZ_MARK(0x80059048);
ZZ_MARK(0x8005904C);
ZZ_MARK(0x80059050);
ZZ_MARK(0x80059054);
ZZ_MARK(0x80059058);
ZZ_MARK(0x8005905C);
ZZ_MARK(0x80059060);
ZZ_MARK(0x80059064);
ZZ_MARK(0x80059068);
ZZ_MARK(0x8005906C);
ZZ_MARK(0x80059070);
ZZ_MARK(0x80059074);
ZZ_MARK(0x80059078);
ZZ_MARK(0x8005907C);
ZZ_MARK(0x80059080);
ZZ_MARK(0x80059084);
ZZ_MARK(0x80059088);
ZZ_MARK(0x8005908C);
ZZ_MARK(0x80059090);
ZZ_MARK(0x80059094);
ZZ_MARK(0x80059098);
ZZ_MARK(0x8005909C);
ZZ_MARK_TARGET(0x800590A0,ZZ_58F54_14C);
ZZ_MARK(0x800590A4);
ZZ_MARK(0x800590A8);
ZZ_MARK(0x800590AC);
ZZ_MARK(0x800590B0);
ZZ_MARK(0x800590B4);
ZZ_MARK(0x800590B8);
ZZ_MARK(0x800590BC);
ZZ_MARK(0x800590C0);
ZZ_MARK(0x800590C4);
ZZ_MARK(0x800590C8);
ZZ_MARK(0x800590CC);
ZZ_MARK(0x800590D0);
ZZ_MARK(0x800590D4);
ZZ_MARK(0x800590D8);
ZZ_MARK(0x800590DC);
ZZ_MARK(0x800590E0);
ZZ_MARK_TARGET(0x800590E4,ZZ_58F54_190);
ZZ_MARK(0x800590E8);
ZZ_MARK(0x800590EC);
ZZ_MARK(0x800590F0);
ZZ_MARK(0x800590F4);
ZZ_MARK(0x800590F8);
ZZ_MARK(0x800590FC);
ZZ_MARK(0x80059100);
ZZ_MARK(0x80059104);
ZZ_MARK(0x80059108);
ZZ_MARK(0x8005910C);
ZZ_MARK(0x80059110);
ZZ_MARK(0x80059114);
ZZ_MARK_TARGET(0x80059118,ZZ_58F54_1C4);
ZZ_MARK(0x8005911C);
ZZ_MARK(0x80059120);
ZZ_MARK(0x80059124);
ZZ_MARK(0x80059128);
ZZ_MARK(0x8005912C);
ZZ_MARK(0x80059130);
ZZ_MARK(0x80059134);
ZZ_MARK(0x80059138);
ZZ_MARK(0x8005913C);
ZZ_MARK(0x80059140);
ZZ_MARK(0x80059144);
ZZ_MARK(0x80059148);
ZZ_MARK(0x8005914C);
ZZ_MARK(0x80059150);
ZZ_MARK(0x80059154);
ZZ_MARK_TARGET(0x80059158,ZZ_58F54_204);
ZZ_MARK(0x8005915C);
ZZ_MARK(0x80059160);
ZZ_MARK(0x80059164);
ZZ_MARK(0x80059168);
ZZ_MARK(0x8005916C);
ZZ_MARK(0x80059170);
ZZ_MARK(0x80059174);
ZZ_MARK(0x80059178);
ZZ_MARK(0x8005917C);
ZZ_MARK(0x80059180);
ZZ_MARK(0x80059184);
ZZ_MARK_TARGET(0x80059188,ZZ_58F54_234);
ZZ_MARK(0x8005918C);
ZZ_MARK(0x80059190);
ZZ_MARK(0x80059194);
ZZ_MARK(0x80059198);
ZZ_MARK(0x8005919C);
ZZ_MARK(0x800591A0);
ZZ_MARK(0x800591A4);
ZZ_MARK(0x800591A8);
ZZ_MARK(0x800591AC);
ZZ_MARK(0x800591B0);
ZZ_MARK(0x800591B4);
ZZ_MARK(0x800591B8);
ZZ_MARK(0x800591BC);
ZZ_MARK(0x800591C0);
ZZ_MARK(0x800591C4);
ZZ_MARK_TARGET(0x800591C8,ZZ_58F54_274);
ZZ_MARK(0x800591CC);
ZZ_MARK(0x800591D0);
ZZ_MARK(0x800591D4);
ZZ_MARK(0x800591D8);
ZZ_MARK(0x800591DC);
ZZ_MARK(0x800591E0);
ZZ_MARK(0x800591E4);
ZZ_MARK(0x800591E8);
ZZ_MARK(0x800591EC);
ZZ_MARK(0x800591F0);
ZZ_MARK(0x800591F4);
ZZ_MARK_TARGET(0x800591F8,ZZ_58F54_2A4);
ZZ_MARK(0x800591FC);
ZZ_MARK(0x80059200);
ZZ_MARK(0x80059204);
ZZ_MARK(0x80059208);
ZZ_MARK(0x8005920C);
ZZ_MARK(0x80059210);
ZZ_MARK(0x80059214);
ZZ_MARK(0x80059218);
ZZ_MARK_TARGET(0x8005921C,ZZ_58F54_2C8);
ZZ_MARK_TARGET(0x80059220,ZZ_58F54_2CC);
ZZ_MARK(0x80059224);
ZZ_MARK(0x80059228);
ZZ_MARK(0x8005922C);
ZZ_MARK(0x80059230);
ZZ_MARK(0x80059234);
ZZ_MARK(0x80059238);
ZZ_MARK(0x8005923C);
ZZ_MARK(0x80059240);
ZZ_MARK(0x80059244);
ZZ_MARK(0x80059248);
ZZ_MARK(0x8005924C);
ZZ_MARK(0x80059250);
ZZ_MARK(0x80059254);
ZZ_MARK(0x80059258);
ZZ_MARK(0x8005925C);
ZZ_MARK(0x80059260);
ZZ_MARK(0x80059264);
ZZ_MARK(0x80059268);
ZZ_MARK(0x8005926C);
ZZ_MARK(0x80059270);
ZZ_MARK(0x80059274);
ZZ_MARK(0x80059278);
ZZ_MARK(0x8005927C);
ZZ_MARK(0x80059280);
ZZ_MARK(0x80059284);
ZZ_MARK(0x80059288);
ZZ_MARK_TARGET(0x8005928C,ZZ_58F54_338);
ZZ_MARK(0x80059290);
ZZ_MARK(0x80059294);
ZZ_MARK(0x80059298);
ZZ_MARK(0x8005929C);
ZZ_MARK(0x800592A0);
ZZ_MARK(0x800592A4);
ZZ_MARK(0x800592A8);
ZZ_MARK(0x800592AC);
ZZ_MARK(0x800592B0);
ZZ_MARK(0x800592B4);
ZZ_MARK(0x800592B8);
ZZ_MARK(0x800592BC);
ZZ_MARK(0x800592C0);
ZZ_MARK(0x800592C4);
ZZ_MARK(0x800592C8);
ZZ_MARK(0x800592CC);
ZZ_MARK(0x800592D0);
ZZ_MARK(0x800592D4);
ZZ_MARK(0x800592D8);
ZZ_MARK(0x800592DC);
ZZ_MARK(0x800592E0);
ZZ_MARK(0x800592E4);
ZZ_MARK(0x800592E8);
ZZ_MARK(0x800592EC);
ZZ_MARK(0x800592F0);
ZZ_MARK(0x800592F4);
ZZ_MARK(0x800592F8);
ZZ_MARK(0x800592FC);
ZZ_MARK(0x80059300);
ZZ_MARK(0x80059304);
ZZ_MARK(0x80059308);
ZZ_MARK(0x8005930C);
ZZ_MARK(0x80059310);
ZZ_MARK(0x80059314);
ZZ_MARK(0x80059318);
ZZ_MARK(0x8005931C);
ZZ_MARK(0x80059320);
ZZ_MARK(0x80059324);
ZZ_MARK(0x80059328);
ZZ_MARK(0x8005932C);
ZZ_MARK(0x80059330);
ZZ_MARK(0x80059334);
ZZ_MARK_TARGET(0x80059338,ZZ_58F54_3E4);
ZZ_MARK(0x8005933C);
ZZ_MARK(0x80059340);
ZZ_MARK_TARGET(0x80059344,ZZ_58F54_3F0);
ZZ_MARK(0x80059348);
ZZ_MARK(0x8005934C);
ZZ_MARK(0x80059350);
ZZ_MARK(0x80059354);
ZZ_MARK(0x80059358);
ZZ_MARK(0x8005935C);
ZZ_MARK(0x80059360);
ZZ_MARK(0x80059364);
ZZ_MARK(0x80059368);
ZZ_MARK(0x8005936C);
ZZ_MARK(0x80059370);
ZZ_MARK(0x80059374);
ZZ_MARK(0x80059378);
ZZ_MARK(0x8005937C);
ZZ_MARK(0x80059380);
ZZ_MARK(0x80059384);
ZZ_MARK(0x80059388);
ZZ_MARK_TARGET(0x8005938C,ZZ_58F54_438);
ZZ_MARK(0x80059390);
ZZ_MARK(0x80059394);
ZZ_MARK(0x80059398);
ZZ_MARK(0x8005939C);
ZZ_MARK(0x800593A0);
ZZ_MARK(0x800593A4);
ZZ_MARK(0x800593A8);
ZZ_MARK(0x800593AC);
ZZ_MARK(0x800593B0);
ZZ_MARK(0x800593B4);
ZZ_MARK(0x800593B8);
ZZ_MARK_TARGET(0x800593BC,ZZ_58F54_468);
ZZ_MARK(0x800593C0);
ZZ_MARK(0x800593C4);
ZZ_MARK(0x800593C8);
ZZ_MARK(0x800593CC);
ZZ_MARK(0x800593D0);
ZZ_MARK(0x800593D4);
ZZ_MARK(0x800593D8);
ZZ_MARK(0x800593DC);
ZZ_MARK(0x800593E0);
ZZ_MARK(0x800593E4);
ZZ_MARK(0x800593E8);
ZZ_MARK(0x800593EC);
ZZ_MARK(0x800593F0);
ZZ_MARK(0x800593F4);
ZZ_MARK(0x800593F8);
ZZ_MARK(0x800593FC);
ZZ_MARK(0x80059400);
ZZ_MARK(0x80059404);
ZZ_MARK(0x80059408);
ZZ_MARK(0x8005940C);
ZZ_MARK(0x80059410);
ZZ_MARK(0x80059414);
ZZ_MARK(0x80059418);
ZZ_MARK(0x8005941C);
