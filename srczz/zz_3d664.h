#ifdef ZZ_INCLUDE_CODE
ZZ_3D664:
	AT = 0x1F800000;
	EMU_Write32(AT,S0);
	EMU_Write32(AT + 4,S1); //+ 0x4
	EMU_Write32(AT + 8,S2); //+ 0x8
	EMU_Write32(AT + 12,S3); //+ 0xC
	EMU_Write32(AT + 16,S4); //+ 0x10
	EMU_Write32(AT + 20,S5); //+ 0x14
	EMU_Write32(AT + 24,S6); //+ 0x18
	EMU_Write32(AT + 28,S7); //+ 0x1C
	EMU_Write32(AT + 32,T8); //+ 0x20
	EMU_Write32(AT + 36,T9); //+ 0x24
	EMU_Write32(AT + 40,K0); //+ 0x28
	EMU_Write32(AT + 44,K1); //+ 0x2C
	EMU_Write32(AT + 48,GP); //+ 0x30
	EMU_Write32(AT + 52,SP); //+ 0x34
	EMU_Write32(AT + 56,FP); //+ 0x38
	EMU_Write32(AT + 60,RA); //+ 0x3C
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	V0 = EMU_ReadU32(SP + 20); //+ 0x14
	T9 = EMU_ReadU32(SP + 24); //+ 0x18
	GP = EMU_ReadU32(SP + 28); //+ 0x1C
	T0 = EMU_ReadU32(RA);
	T1 = EMU_ReadU32(RA + 4); //+ 0x4
	T2 = EMU_ReadU32(RA + 8); //+ 0x8
	T3 = EMU_ReadU32(RA + 12); //+ 0xC
	T4 = EMU_ReadU32(RA + 16); //+ 0x10
	GTE_SetRegister(GTE_CREG_RT11_RT12,T0);
	GTE_SetRegister(GTE_CREG_RT13_RT21,T1);
	GTE_SetRegister(GTE_CREG_RT22_RT23,T2);
	GTE_SetRegister(GTE_CREG_RT31_RT32,T3);
	GTE_SetRegister(GTE_CREG_RT33_NONE,T4);
	S0 = EMU_ReadU32(A0);
	if (!A2)
	{
		S1 = EMU_ReadU32(A0 + 4); //+ 0x4
		ZZ_CLOCKCYCLES(34,0x8003D708);
		goto ZZ_3D664_A4;
	}
	S1 = EMU_ReadU32(A0 + 4); //+ 0x4
	S0 = (int32_t)S0 >> 8;
	S1 = -S1;
	S1 = (int32_t)S1 >> 8;
	GTE_SetRegister(GTE_CREG_TRX,S0);
	GTE_SetRegister(GTE_CREG_TRY,S1);
	GTE_SetRegister(GTE_CREG_TRZ,V0);
	ZZ_CLOCKCYCLES(41,0x8003D788);
	goto ZZ_3D664_124;
ZZ_3D664_A4:
	S2 = EMU_ReadU32(A0 + 8); //+ 0x8
	S3 = EMU_ReadU32(A1);
	S4 = EMU_ReadU32(A1 + 4); //+ 0x4
	S5 = EMU_ReadU32(A1 + 8); //+ 0x8
	S0 = S0 - S3;
	S1 = S1 - S4;
	S2 = S2 - S5;
	S0 = (int32_t)S0 >> 8;
	S1 = (int32_t)S1 >> 8;
	S2 = (int32_t)S2 >> 8;
	GTE_SetRegister(GTE_DREG_IR1,S0);
	GTE_SetRegister(GTE_DREG_IR2,S1);
	GTE_SetRegister(GTE_DREG_IR3,S2);
	GTE_Multiply_IR_Rotation();
	S0 = GTE_GetRegister(GTE_DREG_IR1);
	S1 = GTE_GetRegister(GTE_DREG_IR2);
	S2 = GTE_GetRegister(GTE_DREG_IR3);
	GTE_SetRegister(GTE_CREG_TRX,S0);
	GTE_SetRegister(GTE_CREG_TRY,S1);
	GTE_SetRegister(GTE_CREG_TRZ,S2);
	AT = (int32_t)V0 < (int32_t)S2;
	if (!AT)
	{
		AT = 12000;
		ZZ_CLOCKCYCLES(26,0x8003DC48);
		goto ZZ_3D664_5E4;
	}
	AT = 12000;
	AT = (int32_t)AT < (int32_t)S2;
	if (AT)
	{
		AT = (int32_t)T9 < (int32_t)S2;
		ZZ_CLOCKCYCLES(29,0x8003DC48);
		goto ZZ_3D664_5E4;
	}
	AT = (int32_t)T9 < (int32_t)S2;
	if (!T9)
	{
		ZZ_CLOCKCYCLES(31,0x8003D788);
		goto ZZ_3D664_124;
	}
	if (AT)
	{
		FP = EMU_ReadU32(A0 + 16); //+ 0x10
		ZZ_CLOCKCYCLES(33,0x8003DC48);
		goto ZZ_3D664_5E4;
	}
	ZZ_CLOCKCYCLES(32,0x8003D788);
ZZ_3D664_124:
	FP = EMU_ReadU32(A0 + 16); //+ 0x10
	SP = EMU_ReadU32(A0 + 12); //+ 0xC
	if (A2)
	{
		GP = EMU_ReadU32(A0 + 20); //+ 0x14
		ZZ_CLOCKCYCLES(4,0x8003D808);
		goto ZZ_3D664_1A4;
	}
	GP = EMU_ReadU32(A0 + 20); //+ 0x14
	S0 = EMU_ReadU32(A1 + 12); //+ 0xC
	S1 = EMU_ReadU32(A1 + 16); //+ 0x10
	S2 = EMU_ReadU32(A1 + 20); //+ 0x14
	S0 <<= 21;
	S0 = (int32_t)S0 >> 21;
	S1 <<= 21;
	S1 = (int32_t)S1 >> 21;
	S2 <<= 20;
	S2 = (int32_t)S2 >> 20;
	S3 = -S0;
	AT = (int32_t)S0 < -2000;
	if (AT)
	{
		AT = 0x7D0;
		ZZ_CLOCKCYCLES(17,0x8003D7DC);
		goto ZZ_3D664_178;
	}
	AT = 0x7D0;
	AT = (int32_t)S3 < -2000;
	if (AT)
	{
		AT = EMU_CheckedAdd(R0,-2000);
		ZZ_CLOCKCYCLES(20,0x8003D7DC);
		goto ZZ_3D664_178;
	}
	AT = EMU_CheckedAdd(R0,-2000);
	AT = S3;
	ZZ_CLOCKCYCLES(21,0x8003D7DC);
ZZ_3D664_178:
	SP += AT;
	S3 = -S1;
	AT = (int32_t)S1 < -2000;
	if (AT)
	{
		AT = 0x7D0;
		ZZ_CLOCKCYCLES(5,0x8003D800);
		goto ZZ_3D664_19C;
	}
	AT = 0x7D0;
	AT = (int32_t)S3 < -2000;
	if (AT)
	{
		AT = EMU_CheckedAdd(R0,-2000);
		ZZ_CLOCKCYCLES(8,0x8003D800);
		goto ZZ_3D664_19C;
	}
	AT = EMU_CheckedAdd(R0,-2000);
	AT = S3;
	ZZ_CLOCKCYCLES(9,0x8003D800);
ZZ_3D664_19C:
	FP += AT;
	GP = GP - S2;
	ZZ_CLOCKCYCLES(2,0x8003D808);
ZZ_3D664_1A4:
	FP &= 0xFFF;
	SP &= 0xFFF;
	GP &= 0xFFF;
	V1 = 0x80060000;
	V1 -= 16568;
	T6 = (int32_t)GP < 2048;
	if (!T6)
	{
		T6 = (int32_t)GP < 1024;
		ZZ_CLOCKCYCLES(8,0x8003D850);
		goto ZZ_3D664_1EC;
	}
	T6 = (int32_t)GP < 1024;
	if (!T6)
	{
		T6 = GP << 1;
		ZZ_CLOCKCYCLES(10,0x8003D840);
		goto ZZ_3D664_1DC;
	}
	T6 = GP << 1;
	T6 += V1;
	T6 = EMU_ReadS16(T6);
	ZZ_CLOCKCYCLES(13,0x8003D87C);
	goto ZZ_3D664_218;
ZZ_3D664_1DC:
	T6 = V1 - T6;
	T6 = EMU_ReadS16(T6 + 4096); //+ 0x1000
	ZZ_CLOCKCYCLES(3,0x8003D87C);
	goto ZZ_3D664_218;
ZZ_3D664_1EC:
	T6 = (int32_t)GP < 3072;
	if (!T6)
	{
		T6 = GP << 1;
		ZZ_CLOCKCYCLES(3,0x8003D86C);
		goto ZZ_3D664_208;
	}
	T6 = GP << 1;
	T6 += V1;
	T6 = EMU_ReadS16(T6 - 4096); //+ 0xFFFFF000
	T6 = -T6;
	ZZ_CLOCKCYCLES(7,0x8003D87C);
	goto ZZ_3D664_218;
ZZ_3D664_208:
	T6 = V1 - T6;
	T6 = EMU_ReadS16(T6 + 8192); //+ 0x2000
	T6 = -T6;
	ZZ_CLOCKCYCLES(4,0x8003D87C);
	goto ZZ_3D664_218;
ZZ_3D664_218:
	T5 = (int32_t)SP < 2048;
	if (!T5)
	{
		T5 = (int32_t)SP < 1024;
		ZZ_CLOCKCYCLES(3,0x8003D8B0);
		goto ZZ_3D664_24C;
	}
	T5 = (int32_t)SP < 1024;
	if (!T5)
	{
		T5 = SP << 1;
		ZZ_CLOCKCYCLES(5,0x8003D8A0);
		goto ZZ_3D664_23C;
	}
	T5 = SP << 1;
	T5 += V1;
	T5 = EMU_ReadS16(T5);
	ZZ_CLOCKCYCLES(8,0x8003D8DC);
	goto ZZ_3D664_278;
ZZ_3D664_23C:
	T5 = V1 - T5;
	T5 = EMU_ReadS16(T5 + 4096); //+ 0x1000
	ZZ_CLOCKCYCLES(3,0x8003D8DC);
	goto ZZ_3D664_278;
ZZ_3D664_24C:
	T5 = (int32_t)SP < 3072;
	if (!T5)
	{
		T5 = SP << 1;
		ZZ_CLOCKCYCLES(3,0x8003D8CC);
		goto ZZ_3D664_268;
	}
	T5 = SP << 1;
	T5 += V1;
	T5 = EMU_ReadS16(T5 - 4096); //+ 0xFFFFF000
	T5 = -T5;
	ZZ_CLOCKCYCLES(7,0x8003D8DC);
	goto ZZ_3D664_278;
ZZ_3D664_268:
	T5 = V1 - T5;
	T5 = EMU_ReadS16(T5 + 8192); //+ 0x2000
	T5 = -T5;
	ZZ_CLOCKCYCLES(4,0x8003D8DC);
	goto ZZ_3D664_278;
ZZ_3D664_278:
	T7 = (int32_t)FP < 2048;
	if (!T7)
	{
		T7 = (int32_t)FP < 1024;
		ZZ_CLOCKCYCLES(3,0x8003D910);
		goto ZZ_3D664_2AC;
	}
	T7 = (int32_t)FP < 1024;
	if (!T7)
	{
		T7 = FP << 1;
		ZZ_CLOCKCYCLES(5,0x8003D900);
		goto ZZ_3D664_29C;
	}
	T7 = FP << 1;
	T7 += V1;
	T7 = EMU_ReadS16(T7);
	ZZ_CLOCKCYCLES(8,0x8003D93C);
	goto ZZ_3D664_2D8;
ZZ_3D664_29C:
	T7 = V1 - T7;
	T7 = EMU_ReadS16(T7 + 4096); //+ 0x1000
	ZZ_CLOCKCYCLES(3,0x8003D93C);
	goto ZZ_3D664_2D8;
ZZ_3D664_2AC:
	T7 = (int32_t)FP < 3072;
	if (!T7)
	{
		T7 = FP << 1;
		ZZ_CLOCKCYCLES(3,0x8003D92C);
		goto ZZ_3D664_2C8;
	}
	T7 = FP << 1;
	T7 += V1;
	T7 = EMU_ReadS16(T7 - 4096); //+ 0xFFFFF000
	T7 = -T7;
	ZZ_CLOCKCYCLES(7,0x8003D93C);
	goto ZZ_3D664_2D8;
ZZ_3D664_2C8:
	T7 = V1 - T7;
	T7 = EMU_ReadS16(T7 + 8192); //+ 0x2000
	T7 = -T7;
	ZZ_CLOCKCYCLES(4,0x8003D93C);
	goto ZZ_3D664_2D8;
ZZ_3D664_2D8:
	T0 = (int32_t)GP < 2048;
	if (!T0)
	{
		T0 = (int32_t)GP < 1024;
		ZZ_CLOCKCYCLES(3,0x8003D970);
		goto ZZ_3D664_30C;
	}
	T0 = (int32_t)GP < 1024;
	if (!T0)
	{
		T0 = GP << 1;
		ZZ_CLOCKCYCLES(5,0x8003D960);
		goto ZZ_3D664_2FC;
	}
	T0 = GP << 1;
	T0 = V1 - T0;
	T0 = EMU_ReadS16(T0 + 2048); //+ 0x800
	ZZ_CLOCKCYCLES(8,0x8003D994);
	goto ZZ_3D664_330;
ZZ_3D664_2FC:
	T0 += V1;
	T0 = EMU_ReadS16(T0 - 2048); //+ 0xFFFFF800
	T0 = -T0;
	ZZ_CLOCKCYCLES(4,0x8003D994);
	goto ZZ_3D664_330;
ZZ_3D664_30C:
	T0 = (int32_t)GP < 3072;
	if (!T0)
	{
		T0 = GP << 1;
		ZZ_CLOCKCYCLES(3,0x8003D98C);
		goto ZZ_3D664_328;
	}
	T0 = GP << 1;
	T0 = V1 - T0;
	T0 = EMU_ReadS16(T0 + 6144); //+ 0x1800
	T0 = -T0;
	ZZ_CLOCKCYCLES(7,0x8003D994);
	goto ZZ_3D664_330;
ZZ_3D664_328:
	T0 += V1;
	T0 = EMU_ReadS16(T0 - 6144); //+ 0xFFFFE800
	ZZ_CLOCKCYCLES(2,0x8003D994);
ZZ_3D664_330:
	T1 = (int32_t)SP < 2048;
	if (!T1)
	{
		T1 = (int32_t)SP < 1024;
		ZZ_CLOCKCYCLES(3,0x8003D9C8);
		goto ZZ_3D664_364;
	}
	T1 = (int32_t)SP < 1024;
	if (!T1)
	{
		T1 = SP << 1;
		ZZ_CLOCKCYCLES(5,0x8003D9B8);
		goto ZZ_3D664_354;
	}
	T1 = SP << 1;
	T1 = V1 - T1;
	T1 = EMU_ReadS16(T1 + 2048); //+ 0x800
	ZZ_CLOCKCYCLES(8,0x8003D9EC);
	goto ZZ_3D664_388;
ZZ_3D664_354:
	T1 += V1;
	T1 = EMU_ReadS16(T1 - 2048); //+ 0xFFFFF800
	T1 = -T1;
	ZZ_CLOCKCYCLES(4,0x8003D9EC);
	goto ZZ_3D664_388;
ZZ_3D664_364:
	T1 = (int32_t)SP < 3072;
	if (!T1)
	{
		T1 = SP << 1;
		ZZ_CLOCKCYCLES(3,0x8003D9E4);
		goto ZZ_3D664_380;
	}
	T1 = SP << 1;
	T1 = V1 - T1;
	T1 = EMU_ReadS16(T1 + 6144); //+ 0x1800
	T1 = -T1;
	ZZ_CLOCKCYCLES(7,0x8003D9EC);
	goto ZZ_3D664_388;
ZZ_3D664_380:
	T1 += V1;
	T1 = EMU_ReadS16(T1 - 6144); //+ 0xFFFFE800
	ZZ_CLOCKCYCLES(2,0x8003D9EC);
ZZ_3D664_388:
	T3 = (int32_t)FP < 2048;
	if (!T3)
	{
		T3 = (int32_t)FP < 1024;
		ZZ_CLOCKCYCLES(3,0x8003DA20);
		goto ZZ_3D664_3BC;
	}
	T3 = (int32_t)FP < 1024;
	if (!T3)
	{
		T3 = FP << 1;
		ZZ_CLOCKCYCLES(5,0x8003DA10);
		goto ZZ_3D664_3AC;
	}
	T3 = FP << 1;
	T3 = V1 - T3;
	T3 = EMU_ReadS16(T3 + 2048); //+ 0x800
	ZZ_CLOCKCYCLES(8,0x8003DA44);
	goto ZZ_3D664_3E0;
ZZ_3D664_3AC:
	T3 += V1;
	T3 = EMU_ReadS16(T3 - 2048); //+ 0xFFFFF800
	T3 = -T3;
	ZZ_CLOCKCYCLES(4,0x8003DA44);
	goto ZZ_3D664_3E0;
ZZ_3D664_3BC:
	T3 = (int32_t)FP < 3072;
	if (!T3)
	{
		T3 = FP << 1;
		ZZ_CLOCKCYCLES(3,0x8003DA3C);
		goto ZZ_3D664_3D8;
	}
	T3 = FP << 1;
	T3 = V1 - T3;
	T3 = EMU_ReadS16(T3 + 6144); //+ 0x1800
	T3 = -T3;
	ZZ_CLOCKCYCLES(7,0x8003DA44);
	goto ZZ_3D664_3E0;
ZZ_3D664_3D8:
	T3 += V1;
	T3 = EMU_ReadS16(T3 - 6144); //+ 0xFFFFE800
	ZZ_CLOCKCYCLES(2,0x8003DA44);
ZZ_3D664_3E0:
	EMU_SMultiply(T5,T7);
	T4 = T6 & 0xFFFF;
	T5 &= 0xFFFF;
	T7 &= 0xFFFF;
	T0 &= 0xFFFF;
	T2 = T1 & 0xFFFF;
	T3 &= 0xFFFF;
	GTE_SetRegister(GTE_CREG_RT13_RT21,R0);
	GTE_SetRegister(GTE_CREG_RT31_RT32,R0);
	GTE_SetRegister(GTE_DREG_VZ0,T0);
	AT = T3 << 16;
	AT |= T7;
	GTE_SetRegister(GTE_DREG_VXY0,AT);
	GP = LO;
	GTE_SetRegister(GTE_CREG_RT11_RT12,R0);
	GTE_SetRegister(GTE_CREG_RT22_RT23,T5);
	GTE_SetRegister(GTE_CREG_RT33_NONE,T2);
	EMU_SMultiply(T6,T1);
	GP = (int32_t)GP >> 12;
	GTE_Multiply_V0_Rotation();
	GTE_SetRegister(GTE_CREG_RT11_RT12,T0);
	GTE_SetRegister(GTE_CREG_RT22_RT23,T0);
	AT = GP & 0xFFFF;
	GTE_SetRegister(GTE_CREG_RT33_NONE,AT);
	S7 = LO;
	SP = GTE_GetRegister(GTE_DREG_IR2);
	S0 = GTE_GetRegister(GTE_DREG_IR3);
	EMU_SMultiply(T6,GP);
	S7 = (int32_t)S7 >> 12;
	GTE_Multiply_V0_Rotation();
	GTE_SetRegister(GTE_CREG_RT11_RT12,T4);
	GTE_SetRegister(GTE_CREG_RT22_RT23,T4);
	AT = SP & 0xFFFF;
	GTE_SetRegister(GTE_CREG_RT33_NONE,AT);
	T8 = LO;
	S1 = GTE_GetRegister(GTE_DREG_IR1);
	S2 = GTE_GetRegister(GTE_DREG_IR2);
	S3 = GTE_GetRegister(GTE_DREG_IR3);
	EMU_SMultiply(T4,SP);
	GTE_Multiply_V0_Rotation();
	T8 = (int32_t)T8 >> 12;
	S4 = GTE_GetRegister(GTE_DREG_IR1);
	S5 = GTE_GetRegister(GTE_DREG_IR2);
	S6 = GTE_GetRegister(GTE_DREG_IR3);
	AT = LO;
	AT = (int32_t)AT >> 12;
	S2 = S2 - T8;
	S7 = -S7;
	S1 += AT;
	S3 += S5;
	S4 = S4 - S6;
	T2 = EMU_ReadU32(A0 + 24); //+ 0x18
	T3 = EMU_ReadU32(A0 + 28); //+ 0x1C
	T4 = EMU_ReadU32(A0 + 32); //+ 0x20
	T2 = (int32_t)T2 >> A3;
	T3 = (int32_t)T3 >> A3;
	T4 = (int32_t)T4 >> A3;
	GTE_SetRegister(GTE_CREG_RT11_RT12,T2);
	GTE_SetRegister(GTE_CREG_RT13_RT21,R0);
	GTE_SetRegister(GTE_CREG_RT22_RT23,T3);
	GTE_SetRegister(GTE_CREG_RT31_RT32,R0);
	GTE_SetRegister(GTE_CREG_RT33_NONE,T4);
	GTE_SetRegister(GTE_DREG_IR1,S3);
	GTE_SetRegister(GTE_DREG_IR2,S0);
	GTE_SetRegister(GTE_DREG_IR3,S4);
	GTE_Multiply_IR_Rotation();
	S3 = GTE_GetRegister(GTE_DREG_IR1);
	S0 = GTE_GetRegister(GTE_DREG_IR2);
	S4 = GTE_GetRegister(GTE_DREG_IR3);
	GTE_SetRegister(GTE_DREG_IR1,S2);
	GTE_SetRegister(GTE_DREG_IR2,S7);
	GTE_SetRegister(GTE_DREG_IR3,S1);
	T0 = S3;
	GTE_Multiply_IR_Rotation();
	T1 = S0;
	S2 = GTE_GetRegister(GTE_DREG_IR1);
	S7 = GTE_GetRegister(GTE_DREG_IR2);
	S1 = GTE_GetRegister(GTE_DREG_IR3);
	T2 = S4;
	S3 <<= 2;
	S3 = S3 - T0;
	S3 = (int32_t)S3 >> 2;
	S3 = -S3;
	S0 <<= 2;
	S0 = S0 - T1;
	S0 = (int32_t)S0 >> 2;
	S0 = -S0;
	S4 <<= 2;
	S4 = S4 - T2;
	S4 = (int32_t)S4 >> 2;
	S4 = -S4;
	AT = S2 & 0xFFFF;
	T0 = S7 << 16;
	T0 |= AT;
	AT = S1 & 0xFFFF;
	T1 = S3 << 16;
	T1 |= AT;
	AT = S0 & 0xFFFF;
	T2 = S4 << 16;
	T2 |= AT;
	GTE_SetRegister(GTE_CREG_RT11_RT12,T0);
	GTE_SetRegister(GTE_CREG_RT13_RT21,T1);
	GTE_SetRegister(GTE_CREG_RT22_RT23,T2);
	GTE_SetRegister(GTE_CREG_RT31_RT32,R0);
	GTE_SetRegister(GTE_CREG_RT33_NONE,R0);
	AT = 0x1F800000;
	S0 = EMU_ReadU32(AT);
	S1 = EMU_ReadU32(AT + 4); //+ 0x4
	S2 = EMU_ReadU32(AT + 8); //+ 0x8
	S3 = EMU_ReadU32(AT + 12); //+ 0xC
	S4 = EMU_ReadU32(AT + 16); //+ 0x10
	S5 = EMU_ReadU32(AT + 20); //+ 0x14
	S6 = EMU_ReadU32(AT + 24); //+ 0x18
	S7 = EMU_ReadU32(AT + 28); //+ 0x1C
	T8 = EMU_ReadU32(AT + 32); //+ 0x20
	T9 = EMU_ReadU32(AT + 36); //+ 0x24
	K0 = EMU_ReadU32(AT + 40); //+ 0x28
	K1 = EMU_ReadU32(AT + 44); //+ 0x2C
	GP = EMU_ReadU32(AT + 48); //+ 0x30
	SP = EMU_ReadU32(AT + 52); //+ 0x34
	RA = EMU_ReadU32(AT + 60); //+ 0x3C
	FP = EMU_ReadU32(AT + 56); //+ 0x38
	V0 = 1;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(129);
	ZZ_JUMPREGISTER(0x8001BF70,ZZ_1BEBC_B4);
	ZZ_JUMPREGISTER_END();
ZZ_3D664_5E4:
	AT = 0x1F800000;
	S0 = EMU_ReadU32(AT);
	S1 = EMU_ReadU32(AT + 4); //+ 0x4
	S2 = EMU_ReadU32(AT + 8); //+ 0x8
	S3 = EMU_ReadU32(AT + 12); //+ 0xC
	S4 = EMU_ReadU32(AT + 16); //+ 0x10
	S5 = EMU_ReadU32(AT + 20); //+ 0x14
	S6 = EMU_ReadU32(AT + 24); //+ 0x18
	S7 = EMU_ReadU32(AT + 28); //+ 0x1C
	T8 = EMU_ReadU32(AT + 32); //+ 0x20
	T9 = EMU_ReadU32(AT + 36); //+ 0x24
	K0 = EMU_ReadU32(AT + 40); //+ 0x28
	K1 = EMU_ReadU32(AT + 44); //+ 0x2C
	GP = EMU_ReadU32(AT + 48); //+ 0x30
	SP = EMU_ReadU32(AT + 52); //+ 0x34
	RA = EMU_ReadU32(AT + 60); //+ 0x3C
	FP = EMU_ReadU32(AT + 56); //+ 0x38
	V0 = R0;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(20);
	ZZ_JUMPREGISTER(0x8001BF70,ZZ_1BEBC_B4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003D664,0x8003D708,ZZ_3D664);
ZZ_MARK_TARGET(0x8003D708,0x8003D788,ZZ_3D664_A4);
ZZ_MARK_TARGET(0x8003D788,0x8003D7DC,ZZ_3D664_124);
ZZ_MARK_TARGET(0x8003D7DC,0x8003D800,ZZ_3D664_178);
ZZ_MARK_TARGET(0x8003D800,0x8003D808,ZZ_3D664_19C);
ZZ_MARK_TARGET(0x8003D808,0x8003D83C,ZZ_3D664_1A4);
ZZ_MARK_TARGET(0x8003D840,0x8003D84C,ZZ_3D664_1DC);
ZZ_MARK_TARGET(0x8003D850,0x8003D86C,ZZ_3D664_1EC);
ZZ_MARK_TARGET(0x8003D86C,0x8003D87C,ZZ_3D664_208);
ZZ_MARK_TARGET(0x8003D87C,0x8003D89C,ZZ_3D664_218);
ZZ_MARK_TARGET(0x8003D8A0,0x8003D8AC,ZZ_3D664_23C);
ZZ_MARK_TARGET(0x8003D8B0,0x8003D8CC,ZZ_3D664_24C);
ZZ_MARK_TARGET(0x8003D8CC,0x8003D8DC,ZZ_3D664_268);
ZZ_MARK_TARGET(0x8003D8DC,0x8003D8FC,ZZ_3D664_278);
ZZ_MARK_TARGET(0x8003D900,0x8003D90C,ZZ_3D664_29C);
ZZ_MARK_TARGET(0x8003D910,0x8003D92C,ZZ_3D664_2AC);
ZZ_MARK_TARGET(0x8003D92C,0x8003D93C,ZZ_3D664_2C8);
ZZ_MARK_TARGET(0x8003D93C,0x8003D95C,ZZ_3D664_2D8);
ZZ_MARK_TARGET(0x8003D960,0x8003D970,ZZ_3D664_2FC);
ZZ_MARK_TARGET(0x8003D970,0x8003D98C,ZZ_3D664_30C);
ZZ_MARK_TARGET(0x8003D98C,0x8003D994,ZZ_3D664_328);
ZZ_MARK_TARGET(0x8003D994,0x8003D9B4,ZZ_3D664_330);
ZZ_MARK_TARGET(0x8003D9B8,0x8003D9C8,ZZ_3D664_354);
ZZ_MARK_TARGET(0x8003D9C8,0x8003D9E4,ZZ_3D664_364);
ZZ_MARK_TARGET(0x8003D9E4,0x8003D9EC,ZZ_3D664_380);
ZZ_MARK_TARGET(0x8003D9EC,0x8003DA0C,ZZ_3D664_388);
ZZ_MARK_TARGET(0x8003DA10,0x8003DA20,ZZ_3D664_3AC);
ZZ_MARK_TARGET(0x8003DA20,0x8003DA3C,ZZ_3D664_3BC);
ZZ_MARK_TARGET(0x8003DA3C,0x8003DA44,ZZ_3D664_3D8);
ZZ_MARK_TARGET(0x8003DA44,0x8003DC48,ZZ_3D664_3E0);
ZZ_MARK_TARGET(0x8003DC48,0x8003DC98,ZZ_3D664_5E4);
