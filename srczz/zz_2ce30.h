#ifdef ZZ_INCLUDE_CODE
ZZ_2CE30:
	SP -= 24;
	if ((int32_t)A0 >= 0)
	{
		V0 = A0;
		ZZ_CLOCKCYCLES(3,0x8002CE40);
		goto ZZ_2CE30_10;
	}
	V0 = A0;
	V0 = -V0;
	ZZ_CLOCKCYCLES(4,0x8002CE40);
ZZ_2CE30_10:
	V0 = (int32_t)V0 < 32;
	if (!V0)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(3,0x8002CE6C);
		goto ZZ_2CE30_3C;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	if ((int32_t)A1 >= 0)
	{
		V0 = A1;
		ZZ_CLOCKCYCLES(5,0x8002CE58);
		goto ZZ_2CE30_28;
	}
	V0 = A1;
	V0 = -V0;
	ZZ_CLOCKCYCLES(6,0x8002CE58);
ZZ_2CE30_28:
	V0 = (int32_t)V0 < 32;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002CE6C);
		goto ZZ_2CE30_3C;
	}
	RA = 0x8002CE6C; //ZZ_2CE30_3C
	ZZ_CLOCKCYCLES(5,0x8003CE7C);
	goto ZZ_3CE7C;
ZZ_2CE30_3C:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8002DF60,ZZ_2D9F8_568);
	ZZ_JUMPREGISTER(0x8002DF88,ZZ_2D9F8_590);
	ZZ_JUMPREGISTER(0x8002DFB0,ZZ_2D9F8_5B8);
	ZZ_JUMPREGISTER(0x8002DFD8,ZZ_2D9F8_5E0);
	ZZ_JUMPREGISTER(0x8002D488,ZZ_2CF64_524);
	ZZ_JUMPREGISTER(0x8002D4C8,ZZ_2CF64_564);
	ZZ_JUMPREGISTER(0x8002D8D8,ZZ_2CF64_974);
	ZZ_JUMPREGISTER(0x8002D850,ZZ_2CF64_8EC);
	ZZ_JUMPREGISTER(0x8002D618,ZZ_2CF64_6B4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002CE30,ZZ_2CE30);
ZZ_MARK(0x8002CE34);
ZZ_MARK(0x8002CE38);
ZZ_MARK(0x8002CE3C);
ZZ_MARK_TARGET(0x8002CE40,ZZ_2CE30_10);
ZZ_MARK(0x8002CE44);
ZZ_MARK(0x8002CE48);
ZZ_MARK(0x8002CE4C);
ZZ_MARK(0x8002CE50);
ZZ_MARK(0x8002CE54);
ZZ_MARK_TARGET(0x8002CE58,ZZ_2CE30_28);
ZZ_MARK(0x8002CE5C);
ZZ_MARK(0x8002CE60);
ZZ_MARK(0x8002CE64);
ZZ_MARK(0x8002CE68);
ZZ_MARK_TARGET(0x8002CE6C,ZZ_2CE30_3C);
ZZ_MARK(0x8002CE70);
ZZ_MARK(0x8002CE74);
ZZ_MARK(0x8002CE78);
