#ifdef ZZ_INCLUDE_CODE
ZZ_4F490:
	AT = 0x80060000;
	EMU_Write32(AT - 2580,RA); //+ 0xFFFFF5EC
	RA = 0x8004F4A0; //ZZ_4F490_10
	ZZ_CLOCKCYCLES(4,0x80049FB4);
	goto ZZ_49FB4;
ZZ_4F490_10:
	T2 = 176;
	ZZ_JUMPREGISTER_BEGIN(T2);
	RA = 0x8004F4AC; //ZZ_4F490_1C
	T1 = 86;
	ZZ_CLOCKCYCLES_JR(3);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T2,8004F4A4)
	ZZ_JUMPREGISTER_END();
ZZ_4F490_1C:
	T2 = 0x80050000;
	T1 = 0x80050000;
	V0 = EMU_ReadU32(V0 + 24); //+ 0x18
	T2 -= 2824;
	T1 -= 2768;
	ZZ_CLOCKCYCLES(5,0x8004F4C0);
ZZ_4F490_30:
	V1 = EMU_ReadU32(T2);
	T2 += 4;
	V0 += 4;
	if (T2 != T1)
	{
		EMU_Write32(V0 - 4,V1); //+ 0xFFFFFFFC
		ZZ_CLOCKCYCLES(5,0x8004F4C0);
		goto ZZ_4F490_30;
	}
	EMU_Write32(V0 - 4,V1); //+ 0xFFFFFFFC
	RA = 0x8004F4DC; //ZZ_4F490_4C
	ZZ_CLOCKCYCLES(7,0x8004A5EC);
	goto ZZ_4A5EC;
ZZ_4F490_4C:
	RA = 0x8004F4E4; //ZZ_4F490_54
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_4F490_54:
	RA = 0x80060000;
	RA = EMU_ReadU32(RA - 2580); //+ 0xFFFFF5EC
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8004EED8,ZZ_4EEC8_10);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004F490,0x8004F4A0,ZZ_4F490);
ZZ_MARK_TARGET(0x8004F4A0,0x8004F4AC,ZZ_4F490_10);
ZZ_MARK_TARGET(0x8004F4AC,0x8004F4C0,ZZ_4F490_1C);
ZZ_MARK_TARGET(0x8004F4C0,0x8004F4DC,ZZ_4F490_30);
ZZ_MARK_TARGET(0x8004F4DC,0x8004F4E4,ZZ_4F490_4C);
ZZ_MARK_TARGET(0x8004F4E4,0x8004F4F8,ZZ_4F490_54);
