#ifdef ZZ_INCLUDE_CODE
ZZ_50288:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5304); //+ 0xFFFFEB48
	SP -= 24;
	if (V0)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(5,0x800502E8);
		goto ZZ_50288_60;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = 1;
	AT = 0x80060000;
	RA = 0x800502AC; //ZZ_50288_24
	EMU_Write32(AT - 5304,V0); //+ 0xFFFFEB48
	ZZ_CLOCKCYCLES(9,0x80049FB4);
	goto ZZ_49FB4;
ZZ_50288_24:
	A0 = 0x80050000;
	RA = 0x800502B8; //ZZ_50288_30
	A0 -= 1584;
	ZZ_CLOCKCYCLES(3,0x80050300);
	goto ZZ_50300;
ZZ_50288_30:
	A0 = 0xF0000000;
	A0 |= 0x9;
	A1 = 32;
	A2 = 8192;
	RA = 0x800502D0; //ZZ_50288_48
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x80049F64);
	goto ZZ_49F64;
ZZ_50288_48:
	A0 = V0;
	AT = 0x80060000;
	RA = 0x800502E0; //ZZ_50288_58
	EMU_Write32(AT - 5408,A0); //+ 0xFFFFEAE0
	ZZ_CLOCKCYCLES(4,0x80049F94);
	goto ZZ_49F94;
ZZ_50288_58:
	RA = 0x800502E8; //ZZ_50288_60
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_50288_60:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x800501E8,ZZ_501A0_48);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80050288,0x800502AC,ZZ_50288);
ZZ_MARK_TARGET(0x800502AC,0x800502B8,ZZ_50288_24);
ZZ_MARK_TARGET(0x800502B8,0x800502D0,ZZ_50288_30);
ZZ_MARK_TARGET(0x800502D0,0x800502E0,ZZ_50288_48);
ZZ_MARK_TARGET(0x800502E0,0x800502E8,ZZ_50288_58);
ZZ_MARK_TARGET(0x800502E8,0x800502F8,ZZ_50288_60);
