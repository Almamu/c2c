#ifdef ZZ_INCLUDE_CODE
ZZ_2D9F8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	SP -= 224;
	EMU_Write32(SP + 220,RA); //+ 0xDC
	EMU_Write32(SP + 216,FP); //+ 0xD8
	EMU_Write32(SP + 212,S7); //+ 0xD4
	EMU_Write32(SP + 208,S6); //+ 0xD0
	EMU_Write32(SP + 204,S5); //+ 0xCC
	EMU_Write32(SP + 200,S4); //+ 0xC8
	EMU_Write32(SP + 196,S3); //+ 0xC4
	EMU_Write32(SP + 192,S2); //+ 0xC0
	EMU_Write32(SP + 188,S1); //+ 0xBC
	EMU_Write32(SP + 184,S0); //+ 0xB8
	EMU_Write32(SP + 96,A0); //+ 0x60
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	EMU_Write32(SP + 112,R0); //+ 0x70
	T3 = EMU_ReadU32(A0);
	V1 = EMU_ReadU32(V0 + 668); //+ 0x29C
	EMU_Write32(SP + 128,T3); //+ 0x80
	T3 = EMU_ReadU32(A0 + 8); //+ 0x8
	S7 = A2;
	V0 = 0x100000;
	V1 &= V0;
	if (V1)
	{
		EMU_Write32(SP + 136,T3); //+ 0x88
		ZZ_CLOCKCYCLES(25,0x8002DA70);
		goto ZZ_2D9F8_78;
	}
	EMU_Write32(SP + 136,T3); //+ 0x88
	V0 = EMU_ReadU32(S7 + 256); //+ 0x100
	V1 = 0x10000000;
	V0 &= V1;
	V0 = V0 < 1;
	EMU_Write32(SP + 112,V0); //+ 0x70
	ZZ_CLOCKCYCLES(30,0x8002DA70);
ZZ_2D9F8_78:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002E0E8);
		goto ZZ_2D9F8_6F0;
	}
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	T3 = EMU_ReadU32(SP + 136); //+ 0x88
	V0 = V0 - T3;
	T3 = EMU_ReadU32(S7 + 88); //+ 0x58
	V1 = V0 << 2;
	if ((int32_t)V1 >= 0)
	{
		EMU_Write32(SP + 144,T3); //+ 0x90
		ZZ_CLOCKCYCLES(13,0x8002DAA8);
		goto ZZ_2D9F8_B0;
	}
	EMU_Write32(SP + 144,T3); //+ 0x90
	V1 += 8191;
	ZZ_CLOCKCYCLES(14,0x8002DAA8);
ZZ_2D9F8_B0:
	V0 = EMU_ReadU32(A1);
	T3 = EMU_ReadU32(SP + 128); //+ 0x80
	V1 = (int32_t)V1 >> 13;
	V1 += 16;
	V0 = V0 - T3;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(SP + 160,V1); //+ 0xA0
		ZZ_CLOCKCYCLES(8,0x8002DACC);
		goto ZZ_2D9F8_D4;
	}
	EMU_Write32(SP + 160,V1); //+ 0xA0
	V0 += 8191;
	ZZ_CLOCKCYCLES(9,0x8002DACC);
ZZ_2D9F8_D4:
	V0 = (int32_t)V0 >> 13;
	V0 += 16;
	EMU_Write32(SP + 152,V0); //+ 0x98
	V0 = V0 < 32;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002DB20);
		goto ZZ_2D9F8_128;
	}
	T3 = EMU_ReadU32(SP + 160); //+ 0xA0
	V0 = T3 < 32;
	if (!V0)
	{
		V0 = T3 << 2;
		ZZ_CLOCKCYCLES(11,0x8002DB20);
		goto ZZ_2D9F8_128;
	}
	V0 = T3 << 2;
	V1 = EMU_ReadU32(GP + 584); //+ 0x248
	T3 = EMU_ReadU32(SP + 152); //+ 0x98
	V0 += V1;
	V1 = EMU_ReadU32(V0);
	V0 = 0x80000000;
	T3 = V0 >> T3;
	EMU_Write32(SP + 152,T3); //+ 0x98
	V1 &= T3;
	EMU_Write32(SP + 168,V1); //+ 0xA8
	ZZ_CLOCKCYCLES(21,0x8002DB2C);
	goto ZZ_2D9F8_134;
ZZ_2D9F8_128:
	EMU_Write32(SP + 152,R0); //+ 0x98
	EMU_Write32(SP + 160,R0); //+ 0xA0
	EMU_Write32(SP + 168,R0); //+ 0xA8
	ZZ_CLOCKCYCLES(3,0x8002DB2C);
ZZ_2D9F8_134:
	T3 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = EMU_ReadU32(S7 + 8); //+ 0x8
	A0 = EMU_ReadU32(T3);
	V0 = EMU_ReadU32(V0 + 48); //+ 0x30
	A0 += V0;
	EMU_Write32(SP + 24,A0); //+ 0x18
	V0 = EMU_ReadU32(S7 + 8); //+ 0x8
	V1 = EMU_ReadU32(T3 + 4); //+ 0x4
	V0 = EMU_ReadU32(V0 + 52); //+ 0x34
	T1 = V1 + V0;
	EMU_Write32(SP + 28,T1); //+ 0x1C
	V0 = EMU_ReadU32(S7 + 8); //+ 0x8
	V1 = EMU_ReadU32(T3 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 56); //+ 0x38
	T0 = V1 + V0;
	EMU_Write32(SP + 32,T0); //+ 0x20
	V1 = EMU_ReadU32(S7 + 8); //+ 0x8
	V0 = EMU_ReadU32(T3);
	V1 = EMU_ReadU32(V1 + 60); //+ 0x3C
	V0 += V1;
	EMU_Write32(SP + 36,V0); //+ 0x24
	V0 = EMU_ReadU32(S7 + 8); //+ 0x8
	V1 = EMU_ReadU32(T3 + 4); //+ 0x4
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	T2 = V1 + V0;
	EMU_Write32(SP + 40,T2); //+ 0x28
	V0 = EMU_ReadU32(S7 + 8); //+ 0x8
	V1 = EMU_ReadU32(T3 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 68); //+ 0x44
	A2 = V1 + V0;
	EMU_Write32(SP + 44,A2); //+ 0x2C
	V0 = EMU_ReadU32(T3);
	A1 = V0 - 32700;
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(43,0x8002DBDC);
		goto ZZ_2D9F8_1E4;
	}
	A0 = A1;
	ZZ_CLOCKCYCLES(44,0x8002DBDC);
ZZ_2D9F8_1E4:
	T3 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = A0 - 25600;
	EMU_Write32(SP + 48,V0); //+ 0x30
	EMU_Write32(SP + 52,T1); //+ 0x34
	V0 = EMU_ReadU32(T3 + 8); //+ 0x8
	V1 = T0;
	A0 = V0 - 32700;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8002DC08);
		goto ZZ_2D9F8_210;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(11,0x8002DC08);
ZZ_2D9F8_210:
	T3 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = V1 - 25600;
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadU32(T3);
	A0 = V0 + 32700;
	V0 = (int32_t)A2 < (int32_t)A0;
	if (!V0)
	{
		A1 = A2;
		ZZ_CLOCKCYCLES(9,0x8002DC30);
		goto ZZ_2D9F8_238;
	}
	A1 = A2;
	A1 = A0;
	ZZ_CLOCKCYCLES(10,0x8002DC30);
ZZ_2D9F8_238:
	T3 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = A1 + 25600;
	EMU_Write32(SP + 60,V0); //+ 0x3C
	EMU_Write32(SP + 64,T2); //+ 0x40
	V0 = EMU_ReadU32(T3 + 8); //+ 0x8
	V1 = A2;
	A0 = V0 + 32700;
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		V0 = V1 + 25600;
		ZZ_CLOCKCYCLES(10,0x8002DC60);
		goto ZZ_2D9F8_268;
	}
	V0 = V1 + 25600;
	V1 = A0;
	V0 = V1 + 25600;
	ZZ_CLOCKCYCLES(12,0x8002DC60);
ZZ_2D9F8_268:
	EMU_Write32(SP + 68,V0); //+ 0x44
	V0 = EMU_ReadU32(A3 + 4172); //+ 0x104C
	V0 += 256;
	EMU_Write32(A3 + 4172,V0); //+ 0x104C
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	if ((int32_t)V0 <= 0)
	{
		EMU_Write32(SP + 104,R0); //+ 0x68
		ZZ_CLOCKCYCLES(10,0x8002E0C4);
		goto ZZ_2D9F8_6CC;
	}
	EMU_Write32(SP + 104,R0); //+ 0x68
	ZZ_CLOCKCYCLES(10,0x8002DC88);
ZZ_2D9F8_290:
	T3 = EMU_ReadU32(SP + 104); //+ 0x68
	V0 = T3 << 2;
	AT = 0x80070000;
	AT += V0;
	S5 = EMU_ReadU32(AT - 12140); //+ 0xFFFFD094
	V0 = EMU_ReadU32(S5);
	S0 = EMU_ReadU32(S5 + 4); //+ 0x4
	V0 &= 0x7;
	if (V0)
	{
		EMU_Write32(SP + 120,V0); //+ 0x78
		ZZ_CLOCKCYCLES(12,0x8002DCC0);
		goto ZZ_2D9F8_2C8;
	}
	EMU_Write32(SP + 120,V0); //+ 0x78
	FP = S5 + 8;
	ZZ_CLOCKCYCLES(14,0x8002DCC4);
	goto ZZ_2D9F8_2CC;
ZZ_2D9F8_2C8:
	FP = S5 + 44;
	ZZ_CLOCKCYCLES(1,0x8002DCC4);
ZZ_2D9F8_2CC:
	T3 = EMU_ReadU32(SP + 144); //+ 0x90
	if (S0 != T3)
	{
		A0 = SP + 48;
		ZZ_CLOCKCYCLES(4,0x8002DCFC);
		goto ZZ_2D9F8_304;
	}
	A0 = SP + 48;
	T3 = EMU_ReadU32(SP + 240); //+ 0xF0
	if (!T3)
	{
		ZZ_CLOCKCYCLES(8,0x8002DCFC);
		goto ZZ_2D9F8_304;
	}
	V1 = EMU_ReadU32(FP + 16); //+ 0x10
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(14,0x8002E0A8);
		goto ZZ_2D9F8_6B0;
	}
	ZZ_CLOCKCYCLES(14,0x8002DCFC);
ZZ_2D9F8_304:
	RA = 0x8002DD04; //ZZ_2D9F8_30C
	A1 = FP;
	ZZ_CLOCKCYCLES(2,0x800311CC);
	goto ZZ_311CC;
ZZ_2D9F8_30C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002E0A8);
		goto ZZ_2D9F8_6B0;
	}
	T3 = EMU_ReadU32(SP + 112); //+ 0x70
	if (!T3)
	{
		T3 = 0x10000;
		ZZ_CLOCKCYCLES(6,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	T3 = 0x10000;
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V0 &= T3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	V0 = EMU_ReadU32(S7 + 256); //+ 0x100
	V0 &= 0x10;
	if (V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(16,0x8002DD54);
		goto ZZ_2D9F8_35C;
	}
	V0 = 0x5;
	V1 = EMU_ReadU32(S7 + 264); //+ 0x108
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(20,0x8002DD9C);
		goto ZZ_2D9F8_3A4;
	}
	ZZ_CLOCKCYCLES(20,0x8002DD54);
ZZ_2D9F8_35C:
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002DD88);
		goto ZZ_2D9F8_390;
	}
	V0 = EMU_ReadU32(S0 + 176); //+ 0xB0
	V0 &= 0x1012;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x8002DDB0);
		goto ZZ_2D9F8_3B8;
	}
	ZZ_CLOCKCYCLES(13,0x8002DD88);
ZZ_2D9F8_390:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V0 &= 0x20;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002DDB0);
		goto ZZ_2D9F8_3B8;
	}
	ZZ_CLOCKCYCLES(5,0x8002DD9C);
ZZ_2D9F8_3A4:
	V0 = EMU_ReadU32(S7 + 256); //+ 0x100
	T3 = 0x10000;
	V0 &= T3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002DDC4);
		goto ZZ_2D9F8_3CC;
	}
	ZZ_CLOCKCYCLES(5,0x8002DDB0);
ZZ_2D9F8_3B8:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	T3 = 0x10000;
	V0 &= T3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	ZZ_CLOCKCYCLES(5,0x8002DDC4);
ZZ_2D9F8_3CC:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V0 &= 0x4000;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0);
	V0 = 0xE;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(13,0x8002DE10);
		goto ZZ_2D9F8_418;
	}
	V0 = EMU_ReadU32(SP + 52); //+ 0x34
	V1 = EMU_ReadU32(FP + 4); //+ 0x4
	V0 = (int32_t)V0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(19,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	ZZ_CLOCKCYCLES(19,0x8002DE10);
ZZ_2D9F8_418:
	T3 = EMU_ReadU32(SP + 160); //+ 0xA0
	V0 = EMU_ReadU32(GP + 584); //+ 0x248
	A0 = T3 << 2;
	A0 += V0;
	T3 = EMU_ReadU32(SP + 152); //+ 0x98
	V0 = EMU_ReadU32(A0);
	V1 = ~T3;
	V0 &= V1;
	EMU_Write32(A0,V0);
	T3 = EMU_ReadU32(SP + 120); //+ 0x78
	if (!T3)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(13,0x8002DE54);
		goto ZZ_2D9F8_45C;
	}
	V0 = 0x1;
	if (T3 == V0)
	{
		A0 = S5;
		ZZ_CLOCKCYCLES(15,0x8002DFF0);
		goto ZZ_2D9F8_5F8;
	}
	A0 = S5;
	ZZ_CLOCKCYCLES(17,0x8002E000);
	goto ZZ_2D9F8_608;
ZZ_2D9F8_45C:
	A0 = EMU_ReadU32(S5 + 8); //+ 0x8
	V0 = EMU_ReadU32(S0 + 296); //+ 0x128
	A0 += V0;
	EMU_Write32(SP + 72,A0); //+ 0x48
	V0 = EMU_ReadU32(S5 + 12); //+ 0xC
	EMU_Write32(SP + 76,V0); //+ 0x4C
	V1 = EMU_ReadU32(S5 + 16); //+ 0x10
	V0 = EMU_ReadU32(S0 + 296); //+ 0x128
	A3 = V1 + V0;
	EMU_Write32(SP + 80,A3); //+ 0x50
	V1 = EMU_ReadU32(S5 + 20); //+ 0x14
	V0 = EMU_ReadU32(S0 + 296); //+ 0x128
	T3 = EMU_ReadU32(SP + 128); //+ 0x80
	A1 = V1 - V0;
	EMU_Write32(SP + 84,A1); //+ 0x54
	V0 = EMU_ReadU32(S5 + 24); //+ 0x18
	EMU_Write32(SP + 88,V0); //+ 0x58
	V1 = EMU_ReadU32(S5 + 28); //+ 0x1C
	V0 = EMU_ReadU32(S0 + 296); //+ 0x128
	A0 = A0 - T3;
	A0 <<= 2;
	V1 = V1 - V0;
	if ((int32_t)A0 >= 0)
	{
		EMU_Write32(SP + 92,V1); //+ 0x5C
		ZZ_CLOCKCYCLES(28,0x8002DEC8);
		goto ZZ_2D9F8_4D0;
	}
	EMU_Write32(SP + 92,V1); //+ 0x5C
	A0 += 8191;
	ZZ_CLOCKCYCLES(29,0x8002DEC8);
ZZ_2D9F8_4D0:
	T3 = EMU_ReadU32(SP + 128); //+ 0x80
	S1 = (int32_t)A0 >> 13;
	V0 = A1 - T3;
	A2 = V0 << 2;
	if ((int32_t)A2 >= 0)
	{
		S6 = S1;
		ZZ_CLOCKCYCLES(6,0x8002DEE4);
		goto ZZ_2D9F8_4EC;
	}
	S6 = S1;
	A2 += 8191;
	ZZ_CLOCKCYCLES(7,0x8002DEE4);
ZZ_2D9F8_4EC:
	T3 = EMU_ReadU32(SP + 136); //+ 0x88
	V0 = A3 - T3;
	V0 <<= 2;
	if ((int32_t)V0 >= 0)
	{
		S3 = (int32_t)A2 >> 13;
		ZZ_CLOCKCYCLES(6,0x8002DF04);
		goto ZZ_2D9F8_50C;
	}
	S3 = (int32_t)A2 >> 13;
	V0 += 8191;
	T3 = EMU_ReadU32(SP + 136); //+ 0x88
	ZZ_CLOCKCYCLES(8,0x8002DF04);
ZZ_2D9F8_50C:
	S4 = (int32_t)V0 >> 13;
	V0 = V1 - T3;
	A3 = V0 << 2;
	if ((int32_t)A3 >= 0)
	{
		S0 = S4;
		ZZ_CLOCKCYCLES(5,0x8002DF1C);
		goto ZZ_2D9F8_524;
	}
	S0 = S4;
	A3 += 8191;
	ZZ_CLOCKCYCLES(6,0x8002DF1C);
ZZ_2D9F8_524:
	V0 = 0x1;
	A0 = S1;
	A1 = S4;
	A2 = S3;
	S2 = (int32_t)A3 >> 13;
	A3 = S2;
	RA = 0x8002DF3C; //ZZ_2D9F8_544
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(8,0x8002CE7C);
	goto ZZ_2CE7C;
ZZ_2D9F8_544:
	T3 = EMU_ReadU32(SP + 240); //+ 0xF0
	if (!T3)
	{
		V0 = (int32_t)S1 < (int32_t)S3;
		ZZ_CLOCKCYCLES(4,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	V0 = (int32_t)S1 < (int32_t)S3;
	if (!V0)
	{
		V0 = (int32_t)S0 < (int32_t)S2;
		ZZ_CLOCKCYCLES(6,0x8002DF74);
		goto ZZ_2D9F8_57C;
	}
	V0 = (int32_t)S0 < (int32_t)S2;
	A0 = S1;
	ZZ_CLOCKCYCLES(7,0x8002DF58);
ZZ_2D9F8_560:
	RA = 0x8002DF60; //ZZ_2D9F8_568
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2D9F8_568:
	S1 += 8;
	V0 = (int32_t)S1 < (int32_t)S3;
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x8002DF58);
		goto ZZ_2D9F8_560;
	}
	A0 = S1;
	V0 = (int32_t)S0 < (int32_t)S2;
	ZZ_CLOCKCYCLES(5,0x8002DF74);
ZZ_2D9F8_57C:
	if (!V0)
	{
		S1 = S3;
		ZZ_CLOCKCYCLES(2,0x8002DF98);
		goto ZZ_2D9F8_5A0;
	}
	S1 = S3;
	A0 = S1;
	ZZ_CLOCKCYCLES(3,0x8002DF80);
ZZ_2D9F8_588:
	RA = 0x8002DF88; //ZZ_2D9F8_590
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2D9F8_590:
	S0 += 8;
	V0 = (int32_t)S0 < (int32_t)S2;
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x8002DF80);
		goto ZZ_2D9F8_588;
	}
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x8002DF98);
ZZ_2D9F8_5A0:
	V0 = (int32_t)S6 < (int32_t)S1;
	if (!V0)
	{
		S0 = S2;
		ZZ_CLOCKCYCLES(3,0x8002DFC0);
		goto ZZ_2D9F8_5C8;
	}
	S0 = S2;
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x8002DFA8);
ZZ_2D9F8_5B0:
	RA = 0x8002DFB0; //ZZ_2D9F8_5B8
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2D9F8_5B8:
	S1 -= 8;
	V0 = (int32_t)S6 < (int32_t)S1;
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x8002DFA8);
		goto ZZ_2D9F8_5B0;
	}
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x8002DFC0);
ZZ_2D9F8_5C8:
	V0 = (int32_t)S4 < (int32_t)S0;
	if (!V0)
	{
		S1 = S6;
		ZZ_CLOCKCYCLES(3,0x8002E000);
		goto ZZ_2D9F8_608;
	}
	S1 = S6;
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x8002DFD0);
ZZ_2D9F8_5D8:
	RA = 0x8002DFD8; //ZZ_2D9F8_5E0
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x8002CE30);
	goto ZZ_2CE30;
ZZ_2D9F8_5E0:
	S0 -= 8;
	V0 = (int32_t)S4 < (int32_t)S0;
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x8002DFD0);
		goto ZZ_2D9F8_5D8;
	}
	A0 = S1;
	ZZ_CLOCKCYCLES(6,0x8002E000);
	goto ZZ_2D9F8_608;
ZZ_2D9F8_5F8:
	A2 = EMU_ReadU32(SP + 96); //+ 0x60
	A3 = EMU_ReadU32(SP + 240); //+ 0xF0
	RA = 0x8002E000; //ZZ_2D9F8_608
	A1 = SP + 48;
	ZZ_CLOCKCYCLES(4,0x8002CF64);
	goto ZZ_2CF64;
ZZ_2D9F8_608:
	T3 = EMU_ReadU32(SP + 240); //+ 0xF0
	if (!T3)
	{
		ZZ_CLOCKCYCLES(4,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	T3 = EMU_ReadU32(SP + 160); //+ 0xA0
	V0 = EMU_ReadU32(GP + 584); //+ 0x248
	V1 = T3 << 2;
	V1 += V0;
	V0 = EMU_ReadU32(V1);
	T3 = EMU_ReadU32(SP + 152); //+ 0x98
	V0 &= T3;
	T3 = EMU_ReadU32(SP + 168); //+ 0xA8
	T3 |= V0;
	if (!V0)
	{
		EMU_Write32(SP + 168,T3); //+ 0xA8
		ZZ_CLOCKCYCLES(17,0x8002E064);
		goto ZZ_2D9F8_66C;
	}
	EMU_Write32(SP + 168,T3); //+ 0xA8
	T3 = EMU_ReadU32(SP + 120); //+ 0x78
	A0 = S7;
	A1 = SP + 24;
	A2 = EMU_ReadU32(S5 + 4); //+ 0x4
	A3 = T3 < 1;
	A3 = -A3;
	RA = 0x8002E064; //ZZ_2D9F8_66C
	A3 &= FP;
	ZZ_CLOCKCYCLES(25,0x8001A848);
	goto ZZ_1A848;
ZZ_2D9F8_66C:
	T3 = EMU_ReadU32(SP + 120); //+ 0x78
	if (T3)
	{
		ZZ_CLOCKCYCLES(4,0x8002E0A8);
		goto ZZ_2D9F8_6B0;
	}
	T3 = EMU_ReadU32(SP + 240); //+ 0xF0
	if (!T3)
	{
		A0 = SP + 24;
		ZZ_CLOCKCYCLES(8,0x8002E0A8);
		goto ZZ_2D9F8_6B0;
	}
	A0 = SP + 24;
	S0 = S5 + 8;
	RA = 0x8002E090; //ZZ_2D9F8_698
	A1 = S0;
	ZZ_CLOCKCYCLES(11,0x800311CC);
	goto ZZ_311CC;
ZZ_2D9F8_698:
	if (!V0)
	{
		A0 = S7;
		ZZ_CLOCKCYCLES(2,0x8002E0A8);
		goto ZZ_2D9F8_6B0;
	}
	A0 = S7;
	A2 = EMU_ReadU32(S5 + 4); //+ 0x4
	A1 = SP + 24;
	RA = 0x8002E0A8; //ZZ_2D9F8_6B0
	A3 = S0;
	ZZ_CLOCKCYCLES(6,0x8001A848);
	goto ZZ_1A848;
ZZ_2D9F8_6B0:
	T3 = EMU_ReadU32(SP + 104); //+ 0x68
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	T3 += 1;
	V0 = (int32_t)T3 < (int32_t)V0;
	if (V0)
	{
		EMU_Write32(SP + 104,T3); //+ 0x68
		ZZ_CLOCKCYCLES(7,0x8002DC88);
		goto ZZ_2D9F8_290;
	}
	EMU_Write32(SP + 104,T3); //+ 0x68
	ZZ_CLOCKCYCLES(7,0x8002E0C4);
ZZ_2D9F8_6CC:
	T3 = EMU_ReadU32(SP + 160); //+ 0xA0
	V0 = EMU_ReadU32(GP + 584); //+ 0x248
	V1 = T3 << 2;
	V1 += V0;
	V0 = EMU_ReadU32(V1);
	T3 = EMU_ReadU32(SP + 168); //+ 0xA8
	V0 |= T3;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(9,0x8002E0E8);
ZZ_2D9F8_6F0:
	RA = EMU_ReadU32(SP + 220); //+ 0xDC
	FP = EMU_ReadU32(SP + 216); //+ 0xD8
	S7 = EMU_ReadU32(SP + 212); //+ 0xD4
	S6 = EMU_ReadU32(SP + 208); //+ 0xD0
	S5 = EMU_ReadU32(SP + 204); //+ 0xCC
	S4 = EMU_ReadU32(SP + 200); //+ 0xC8
	S3 = EMU_ReadU32(SP + 196); //+ 0xC4
	S2 = EMU_ReadU32(SP + 192); //+ 0xC0
	S1 = EMU_ReadU32(SP + 188); //+ 0xBC
	S0 = EMU_ReadU32(SP + 184); //+ 0xB8
	SP += 224;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002E25C,ZZ_2E11C_140);
	ZZ_JUMPREGISTER(0x8002E86C,ZZ_2E594_2D8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002D9F8,0x8002DA70,ZZ_2D9F8);
ZZ_MARK_TARGET(0x8002DA70,0x8002DAA8,ZZ_2D9F8_78);
ZZ_MARK_TARGET(0x8002DAA8,0x8002DACC,ZZ_2D9F8_B0);
ZZ_MARK_TARGET(0x8002DACC,0x8002DB20,ZZ_2D9F8_D4);
ZZ_MARK_TARGET(0x8002DB20,0x8002DB2C,ZZ_2D9F8_128);
ZZ_MARK_TARGET(0x8002DB2C,0x8002DBDC,ZZ_2D9F8_134);
ZZ_MARK_TARGET(0x8002DBDC,0x8002DC08,ZZ_2D9F8_1E4);
ZZ_MARK_TARGET(0x8002DC08,0x8002DC30,ZZ_2D9F8_210);
ZZ_MARK_TARGET(0x8002DC30,0x8002DC60,ZZ_2D9F8_238);
ZZ_MARK_TARGET(0x8002DC60,0x8002DC88,ZZ_2D9F8_268);
ZZ_MARK_TARGET(0x8002DC88,0x8002DCC0,ZZ_2D9F8_290);
ZZ_MARK_TARGET(0x8002DCC0,0x8002DCC4,ZZ_2D9F8_2C8);
ZZ_MARK_TARGET(0x8002DCC4,0x8002DCFC,ZZ_2D9F8_2CC);
ZZ_MARK_TARGET(0x8002DCFC,0x8002DD04,ZZ_2D9F8_304);
ZZ_MARK_TARGET(0x8002DD04,0x8002DD54,ZZ_2D9F8_30C);
ZZ_MARK_TARGET(0x8002DD54,0x8002DD88,ZZ_2D9F8_35C);
ZZ_MARK_TARGET(0x8002DD88,0x8002DD9C,ZZ_2D9F8_390);
ZZ_MARK_TARGET(0x8002DD9C,0x8002DDB0,ZZ_2D9F8_3A4);
ZZ_MARK_TARGET(0x8002DDB0,0x8002DDC4,ZZ_2D9F8_3B8);
ZZ_MARK_TARGET(0x8002DDC4,0x8002DE10,ZZ_2D9F8_3CC);
ZZ_MARK_TARGET(0x8002DE10,0x8002DE54,ZZ_2D9F8_418);
ZZ_MARK_TARGET(0x8002DE54,0x8002DEC8,ZZ_2D9F8_45C);
ZZ_MARK_TARGET(0x8002DEC8,0x8002DEE4,ZZ_2D9F8_4D0);
ZZ_MARK_TARGET(0x8002DEE4,0x8002DF04,ZZ_2D9F8_4EC);
ZZ_MARK_TARGET(0x8002DF04,0x8002DF1C,ZZ_2D9F8_50C);
ZZ_MARK_TARGET(0x8002DF1C,0x8002DF3C,ZZ_2D9F8_524);
ZZ_MARK_TARGET(0x8002DF3C,0x8002DF58,ZZ_2D9F8_544);
ZZ_MARK_TARGET(0x8002DF58,0x8002DF60,ZZ_2D9F8_560);
ZZ_MARK_TARGET(0x8002DF60,0x8002DF74,ZZ_2D9F8_568);
ZZ_MARK_TARGET(0x8002DF74,0x8002DF80,ZZ_2D9F8_57C);
ZZ_MARK_TARGET(0x8002DF80,0x8002DF88,ZZ_2D9F8_588);
ZZ_MARK_TARGET(0x8002DF88,0x8002DF98,ZZ_2D9F8_590);
ZZ_MARK_TARGET(0x8002DF98,0x8002DFA8,ZZ_2D9F8_5A0);
ZZ_MARK_TARGET(0x8002DFA8,0x8002DFB0,ZZ_2D9F8_5B0);
ZZ_MARK_TARGET(0x8002DFB0,0x8002DFC0,ZZ_2D9F8_5B8);
ZZ_MARK_TARGET(0x8002DFC0,0x8002DFD0,ZZ_2D9F8_5C8);
ZZ_MARK_TARGET(0x8002DFD0,0x8002DFD8,ZZ_2D9F8_5D8);
ZZ_MARK_TARGET(0x8002DFD8,0x8002DFF0,ZZ_2D9F8_5E0);
ZZ_MARK_TARGET(0x8002DFF0,0x8002E000,ZZ_2D9F8_5F8);
ZZ_MARK_TARGET(0x8002E000,0x8002E064,ZZ_2D9F8_608);
ZZ_MARK_TARGET(0x8002E064,0x8002E090,ZZ_2D9F8_66C);
ZZ_MARK_TARGET(0x8002E090,0x8002E0A8,ZZ_2D9F8_698);
ZZ_MARK_TARGET(0x8002E0A8,0x8002E0C4,ZZ_2D9F8_6B0);
ZZ_MARK_TARGET(0x8002E0C4,0x8002E0E8,ZZ_2D9F8_6CC);
ZZ_MARK_TARGET(0x8002E0E8,0x8002E11C,ZZ_2D9F8_6F0);
