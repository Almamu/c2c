#ifdef ZZ_INCLUDE_CODE
ZZ_33764:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,RA); //+ 0x14
	V0 = EMU_ReadU16(S0 + 6); //+ 0x6
	A0 = R0;
	A1 = 0x1;
	RA = 0x80033788; //ZZ_33764_24
	A1 <<= V0;
	ZZ_CLOCKCYCLES(9,0x80051310);
	goto ZZ_51310;
ZZ_33764_24:
	V0 = EMU_ReadU32(S0 + 4); //+ 0x4
	A0 = EMU_ReadU32(S0 + 24); //+ 0x18
	V1 = -9;
	V0 &= V1;
	if (!A0)
	{
		EMU_Write32(S0 + 4,V0); //+ 0x4
		ZZ_CLOCKCYCLES(6,0x800337A8);
		goto ZZ_33764_44;
	}
	EMU_Write32(S0 + 4,V0); //+ 0x4
	RA = 0x800337A8; //ZZ_33764_44
	ZZ_CLOCKCYCLES(8,0x80013F14);
	goto ZZ_13F14;
ZZ_33764_44:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80033D0C,ZZ_337BC_550);
	ZZ_JUMPREGISTER(0x80033F54,ZZ_337BC_798);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80033764,ZZ_33764);
ZZ_MARK(0x80033768);
ZZ_MARK(0x8003376C);
ZZ_MARK(0x80033770);
ZZ_MARK(0x80033774);
ZZ_MARK(0x80033778);
ZZ_MARK(0x8003377C);
ZZ_MARK(0x80033780);
ZZ_MARK(0x80033784);
ZZ_MARK_TARGET(0x80033788,ZZ_33764_24);
ZZ_MARK(0x8003378C);
ZZ_MARK(0x80033790);
ZZ_MARK(0x80033794);
ZZ_MARK(0x80033798);
ZZ_MARK(0x8003379C);
ZZ_MARK(0x800337A0);
ZZ_MARK(0x800337A4);
ZZ_MARK_TARGET(0x800337A8,ZZ_33764_44);
ZZ_MARK(0x800337AC);
ZZ_MARK(0x800337B0);
ZZ_MARK(0x800337B4);
ZZ_MARK(0x800337B8);
