#ifdef ZZ_INCLUDE_CODE
ZZ_23424:
	SP -= 112;
	EMU_Write32(SP + 104,RA); //+ 0x68
	EMU_Write32(SP + 100,S3); //+ 0x64
	EMU_Write32(SP + 96,S2); //+ 0x60
	EMU_Write32(SP + 92,S1); //+ 0x5C
	EMU_Write32(SP + 88,S0); //+ 0x58
	V0 = EMU_ReadU32(A0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	V0 = V0 - V1;
	EMU_Write32(SP + 60,V0); //+ 0x3C
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2752); //+ 0xAC0
	A1 = SP + 56;
	A0 = SP + 40;
	V0 = V0 - V1;
	RA = 0x80023494; //ZZ_23424_70
	EMU_Write32(SP + 64,V0); //+ 0x40
	ZZ_CLOCKCYCLES(28,0x8003164C);
	goto ZZ_3164C;
ZZ_23424_70:
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2848); //+ 0xB20
	A1 = 0x80060000;
	A1 = EMU_ReadS8(A1 - 17361); //+ 0xFFFFBC2F
	V0 += V1;
	A0 = V0 & 0xFFF;
	if (!A1)
	{
		EMU_Write32(SP + 40,A0); //+ 0x28
		ZZ_CLOCKCYCLES(9,0x800234F4);
		goto ZZ_23424_D0;
	}
	EMU_Write32(SP + 40,A0); //+ 0x28
	V0 = 0x1;
	if (A1 != V0)
	{
		ZZ_CLOCKCYCLES(12,0x800234E4);
		goto ZZ_23424_C0;
	}
	S1 = 0x80060000;
	S1 = EMU_ReadU32(S1 + 2748); //+ 0xABC
	S2 = 0x80060000;
	S2 = EMU_ReadU32(S2 + 2752); //+ 0xAC0
	S3 = 0x80060000;
	S3 = EMU_ReadU32(S3 + 2756); //+ 0xAC4
	ZZ_CLOCKCYCLES(20,0x80023790);
	goto ZZ_23424_36C;
ZZ_23424_C0:
	S2 = EMU_ReadU32(SP + 44); //+ 0x2C
	S3 = EMU_ReadU32(SP + 48); //+ 0x30
	S1 = A0;
	ZZ_CLOCKCYCLES(4,0x80023790);
	goto ZZ_23424_36C;
ZZ_23424_D0:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x183;
	A3 = R0;
	S2 = 0x3;
	S1 = SP + 80;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S2); //+ 0x14
	EMU_Write32(SP + 24,S1); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x8002352C; //ZZ_23424_108
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(14,0x80031DF4);
	goto ZZ_31DF4;
ZZ_23424_108:
	S0 = V0;
	if (S0)
	{
		A1 = 0x183;
		ZZ_CLOCKCYCLES(3,0x80023570);
		goto ZZ_23424_14C;
	}
	A1 = 0x183;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S2); //+ 0x14
	EMU_Write32(SP + 24,S1); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80023564; //ZZ_23424_140
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(14,0x80031DF4);
	goto ZZ_31DF4;
ZZ_23424_140:
	S0 = V0;
	if (!S0)
	{
		ZZ_CLOCKCYCLES(3,0x800235C0);
		goto ZZ_23424_19C;
	}
	ZZ_CLOCKCYCLES(3,0x80023570);
ZZ_23424_14C:
	A0 = EMU_ReadU32(SP + 40); //+ 0x28
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2748); //+ 0xABC
	A2 = EMU_ReadS16(S0);
	RA = 0x80023588; //ZZ_23424_164
	ZZ_CLOCKCYCLES(6,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_164:
	A0 = EMU_ReadU32(SP + 44); //+ 0x2C
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2752); //+ 0xAC0
	A2 = EMU_ReadS16(S0 + 2); //+ 0x2
	RA = 0x800235A0; //ZZ_23424_17C
	S1 = V0;
	ZZ_CLOCKCYCLES(6,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_17C:
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2756); //+ 0xAC4
	A2 = EMU_ReadS16(S0 + 4); //+ 0x4
	RA = 0x800235B8; //ZZ_23424_194
	S2 = V0;
	ZZ_CLOCKCYCLES(6,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_194:
	ZZ_CLOCKCYCLES(2,0x800235FC);
	goto ZZ_23424_1D8;
ZZ_23424_19C:
	A0 = EMU_ReadU32(SP + 40); //+ 0x28
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2748); //+ 0xABC
	RA = 0x800235D4; //ZZ_23424_1B0
	ZZ_CLOCKCYCLES(5,0x80031768);
	goto ZZ_31768;
ZZ_23424_1B0:
	A0 = EMU_ReadU32(SP + 44); //+ 0x2C
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2752); //+ 0xAC0
	RA = 0x800235E8; //ZZ_23424_1C4
	S1 = V0;
	ZZ_CLOCKCYCLES(5,0x80031768);
	goto ZZ_31768;
ZZ_23424_1C4:
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2756); //+ 0xAC4
	RA = 0x800235FC; //ZZ_23424_1D8
	S2 = V0;
	ZZ_CLOCKCYCLES(5,0x80031768);
	goto ZZ_31768;
ZZ_23424_1D8:
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 17268); //+ 0xFFFFBC8C
	if (!A2)
	{
		S3 = V0;
		ZZ_CLOCKCYCLES(5,0x80023628);
		goto ZZ_23424_204;
	}
	S3 = V0;
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 17280); //+ 0xFFFFBC80
	A0 = S1;
	RA = 0x80023624; //ZZ_23424_200
	A2 = (int32_t)A2 >> 2;
	ZZ_CLOCKCYCLES(10,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_200:
	S1 = V0;
	ZZ_CLOCKCYCLES(1,0x80023628);
ZZ_23424_204:
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 17248); //+ 0xFFFFBCA0
	if (!A2)
	{
		V0 = A2 << 3;
		ZZ_CLOCKCYCLES(5,0x8002365C);
		goto ZZ_23424_238;
	}
	V0 = A2 << 3;
	V0 = V0 - A2;
	V0 <<= 2;
	V0 += A2;
	V0 <<= 2;
	V0 = V0 - A2;
	V0 <<= 1;
	V0 = (int32_t)V0 >> 10;
	S1 += V0;
	ZZ_CLOCKCYCLES(13,0x8002365C);
ZZ_23424_238:
	RA = 0x80023664; //ZZ_23424_240
	ZZ_CLOCKCYCLES(2,0x80024038);
	goto ZZ_24038;
ZZ_23424_240:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17316); //+ 0xFFFFBC5C
	V0 += S1;
	if (!V1)
	{
		S1 = V0 & 0xFFF;
		ZZ_CLOCKCYCLES(5,0x8002370C);
		goto ZZ_23424_2E8;
	}
	S1 = V0 & 0xFFF;
	V1 = 0x80040000;
	V1 = EMU_ReadU32(V1 - 16068); //+ 0xFFFFC13C
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 17312); //+ 0xFFFFBC60
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 17308); //+ 0xFFFFBC64
	S0 = V1 - V0;
	V0 = S0 < A0;
	if (V0)
	{
		V0 = S0 << 8;
		ZZ_CLOCKCYCLES(15,0x800236B0);
		goto ZZ_23424_28C;
	}
	V0 = S0 << 8;
	AT = 0x80060000;
	EMU_Write32(AT - 17316,R0); //+ 0xFFFFBC5C
	ZZ_CLOCKCYCLES(19,0x8002370C);
	goto ZZ_23424_2E8;
ZZ_23424_28C:
	EMU_UDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(3,0x800236C0);
		goto ZZ_23424_29C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(4,0x800236C0);
ZZ_23424_29C:
	S0 = LO;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 17304); //+ 0xFFFFBC68
	A1 = S1;
	RA = 0x800236D8; //ZZ_23424_2B4
	A2 = S0;
	ZZ_CLOCKCYCLES(6,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_2B4:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 17300); //+ 0xFFFFBC6C
	S1 = V0;
	A1 = S2;
	RA = 0x800236F0; //ZZ_23424_2CC
	A2 = S0;
	ZZ_CLOCKCYCLES(6,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_2CC:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 17296); //+ 0xFFFFBC70
	S2 = V0;
	A1 = S3;
	RA = 0x80023708; //ZZ_23424_2E4
	A2 = S0;
	ZZ_CLOCKCYCLES(6,0x800315D8);
	goto ZZ_315D8;
ZZ_23424_2E4:
	S3 = V0;
	ZZ_CLOCKCYCLES(1,0x8002370C);
ZZ_23424_2E8:
	V0 = 0x80060000;
	V0 = EMU_ReadS8(V0 - 17357); //+ 0xFFFFBC33
	if (V0)
	{
		V0 = 0x1001;
		ZZ_CLOCKCYCLES(5,0x80023790);
		goto ZZ_23424_36C;
	}
	V0 = 0x1001;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2992); //+ 0xBB0
	if (A0 == V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(10,0x80023790);
		goto ZZ_23424_36C;
	}
	V0 = 0x2;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2952); //+ 0xB88
	if (V1 == V0)
	{
		A1 = S1;
		ZZ_CLOCKCYCLES(15,0x80023790);
		goto ZZ_23424_36C;
	}
	A1 = S1;
	A2 = 0x80;
	RA = 0x80023754; //ZZ_23424_330
	A3 = 0x36;
	ZZ_CLOCKCYCLES(18,0x800315FC);
	goto ZZ_315FC;
ZZ_23424_330:
	S1 = V0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2996); //+ 0xBB4
	A1 = S2;
	A2 = 0x80;
	RA = 0x80023770; //ZZ_23424_34C
	A3 = 0x36;
	ZZ_CLOCKCYCLES(7,0x800315FC);
	goto ZZ_315FC;
ZZ_23424_34C:
	S2 = V0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 3000); //+ 0xBB8
	A1 = S3;
	A2 = 0x80;
	RA = 0x8002378C; //ZZ_23424_368
	A3 = 0x36;
	ZZ_CLOCKCYCLES(7,0x800315FC);
	goto ZZ_315FC;
ZZ_23424_368:
	S3 = V0;
	ZZ_CLOCKCYCLES(1,0x80023790);
ZZ_23424_36C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x119;
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = SP + 72;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x800237C8; //ZZ_23424_3A4
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(14,0x80031DF4);
	goto ZZ_31DF4;
ZZ_23424_3A4:
	A1 = V0;
	if (!A1)
	{
		ZZ_CLOCKCYCLES(3,0x800238E4);
		goto ZZ_23424_4C0;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2748); //+ 0xABC
	A2 = V0 & 0xFFF;
	V0 = S1 & 0xFFF;
	A0 = V0 - A2;
	V0 = (int32_t)A0 < 2049;
	if (V0)
	{
		V0 = (int32_t)A0 < -2048;
		ZZ_CLOCKCYCLES(12,0x80023800);
		goto ZZ_23424_3DC;
	}
	V0 = (int32_t)A0 < -2048;
	A0 -= 4096;
	ZZ_CLOCKCYCLES(14,0x8002380C);
	goto ZZ_23424_3E8;
ZZ_23424_3DC:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002380C);
		goto ZZ_23424_3E8;
	}
	A0 += 4096;
	ZZ_CLOCKCYCLES(3,0x8002380C);
ZZ_23424_3E8:
	V1 = EMU_ReadS16(A1 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80023824);
		goto ZZ_23424_400;
	}
	A0 = V1;
	ZZ_CLOCKCYCLES(6,0x80023824);
ZZ_23424_400:
	V0 = EMU_ReadS16(A1 + 6); //+ 0x6
	V1 = -V0;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80023840);
		goto ZZ_23424_41C;
	}
	A0 = V1;
	ZZ_CLOCKCYCLES(7,0x80023840);
ZZ_23424_41C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2752); //+ 0xAC0
	V0 = A2 + A0;
	S1 = V0 & 0xFFF;
	V0 = S2 & 0xFFF;
	A2 = V1 & 0xFFF;
	A0 = V0 - A2;
	V0 = (int32_t)A0 < 2049;
	if (V0)
	{
		V0 = (int32_t)A0 < -2048;
		ZZ_CLOCKCYCLES(10,0x80023870);
		goto ZZ_23424_44C;
	}
	V0 = (int32_t)A0 < -2048;
	A0 -= 4096;
	ZZ_CLOCKCYCLES(12,0x8002387C);
	goto ZZ_23424_458;
ZZ_23424_44C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002387C);
		goto ZZ_23424_458;
	}
	A0 += 4096;
	ZZ_CLOCKCYCLES(3,0x8002387C);
ZZ_23424_458:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30772); //+ 0x7834
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = 0x5;
		ZZ_CLOCKCYCLES(7,0x800238A0);
		goto ZZ_23424_47C;
	}
	V0 = 0x5;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(9,0x800238AC);
		goto ZZ_23424_488;
	}
	ZZ_CLOCKCYCLES(9,0x800238A0);
ZZ_23424_47C:
	A1 = R0;
	V1 = R0;
	ZZ_CLOCKCYCLES(3,0x800238B8);
	goto ZZ_23424_494;
ZZ_23424_488:
	V0 = EMU_ReadS16(A1 + 2); //+ 0x2
	V1 = EMU_ReadS16(A1);
	A1 = -V0;
	ZZ_CLOCKCYCLES(3,0x800238B8);
ZZ_23424_494:
	V0 = (int32_t)V1 < (int32_t)A0;
	if (!V0)
	{
		V0 = (int32_t)A0 < (int32_t)A1;
		ZZ_CLOCKCYCLES(3,0x800238CC);
		goto ZZ_23424_4A8;
	}
	V0 = (int32_t)A0 < (int32_t)A1;
	A0 = V1;
	V0 = (int32_t)A0 < (int32_t)A1;
	ZZ_CLOCKCYCLES(5,0x800238CC);
ZZ_23424_4A8:
	if (!V0)
	{
		V0 = A2 + A0;
		ZZ_CLOCKCYCLES(2,0x800238DC);
		goto ZZ_23424_4B8;
	}
	V0 = A2 + A0;
	A0 = A1;
	V0 = A2 + A0;
	ZZ_CLOCKCYCLES(4,0x800238DC);
ZZ_23424_4B8:
	S2 = V0 & 0xFFF;
	S3 &= 0xFFF;
	ZZ_CLOCKCYCLES(2,0x800238E4);
ZZ_23424_4C0:
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 17248); //+ 0xFFFFBCA0
	if (!A2)
	{
		ZZ_CLOCKCYCLES(5,0x80023918);
		goto ZZ_23424_4F4;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 17256); //+ 0xFFFFBC98
	EMU_SMultiply(V0,A2);
	T0 = LO;
	V0 = (int32_t)T0 >> 10;
	V0 += S2;
	S2 = V0 & 0xFFF;
	ZZ_CLOCKCYCLES(13,0x80023918);
ZZ_23424_4F4:
	AT = 0x80060000;
	EMU_Write32(AT + 2712,S1); //+ 0xA98
	AT = 0x80060000;
	EMU_Write32(AT + 2716,S2); //+ 0xA9C
	AT = 0x80060000;
	EMU_Write32(AT + 2720,S3); //+ 0xAA0
	RA = EMU_ReadU32(SP + 104); //+ 0x68
	S3 = EMU_ReadU32(SP + 100); //+ 0x64
	S2 = EMU_ReadU32(SP + 96); //+ 0x60
	S1 = EMU_ReadU32(SP + 92); //+ 0x5C
	S0 = EMU_ReadU32(SP + 88); //+ 0x58
	SP += 112;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x800231BC,ZZ_230E8_D4);
	ZZ_JUMPREGISTER(0x800232C4,ZZ_231CC_F8);
	ZZ_JUMPREGISTER(0x80022AB8,ZZ_22978_140);
	ZZ_JUMPREGISTER(0x8002295C,ZZ_2281C_140);
	ZZ_JUMPREGISTER(0x800226E0,ZZ_22570_170);
	ZZ_JUMPREGISTER(0x80022CB0,ZZ_22AD4_1DC);
	ZZ_JUMPREGISTER(0x8002241C,ZZ_221A8_274);
	ZZ_JUMPREGISTER(0x80023090,ZZ_22CD0_3C0);
	ZZ_JUMPREGISTER(0x80022090,ZZ_21C64_42C);
	ZZ_JUMPREGISTER(0x80022FE4,ZZ_22CD0_314);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80023424,0x80023494,ZZ_23424);
ZZ_MARK_TARGET(0x80023494,0x800234E4,ZZ_23424_70);
ZZ_MARK_TARGET(0x800234E4,0x800234F4,ZZ_23424_C0);
ZZ_MARK_TARGET(0x800234F4,0x8002352C,ZZ_23424_D0);
ZZ_MARK_TARGET(0x8002352C,0x80023564,ZZ_23424_108);
ZZ_MARK_TARGET(0x80023564,0x80023570,ZZ_23424_140);
ZZ_MARK_TARGET(0x80023570,0x80023588,ZZ_23424_14C);
ZZ_MARK_TARGET(0x80023588,0x800235A0,ZZ_23424_164);
ZZ_MARK_TARGET(0x800235A0,0x800235B8,ZZ_23424_17C);
ZZ_MARK_TARGET(0x800235B8,0x800235C0,ZZ_23424_194);
ZZ_MARK_TARGET(0x800235C0,0x800235D4,ZZ_23424_19C);
ZZ_MARK_TARGET(0x800235D4,0x800235E8,ZZ_23424_1B0);
ZZ_MARK_TARGET(0x800235E8,0x800235FC,ZZ_23424_1C4);
ZZ_MARK_TARGET(0x800235FC,0x80023624,ZZ_23424_1D8);
ZZ_MARK_TARGET(0x80023624,0x80023628,ZZ_23424_200);
ZZ_MARK_TARGET(0x80023628,0x8002365C,ZZ_23424_204);
ZZ_MARK_TARGET(0x8002365C,0x80023664,ZZ_23424_238);
ZZ_MARK_TARGET(0x80023664,0x800236B0,ZZ_23424_240);
ZZ_MARK_TARGET(0x800236B0,0x800236C0,ZZ_23424_28C);
ZZ_MARK_TARGET(0x800236C0,0x800236D8,ZZ_23424_29C);
ZZ_MARK_TARGET(0x800236D8,0x800236F0,ZZ_23424_2B4);
ZZ_MARK_TARGET(0x800236F0,0x80023708,ZZ_23424_2CC);
ZZ_MARK_TARGET(0x80023708,0x8002370C,ZZ_23424_2E4);
ZZ_MARK_TARGET(0x8002370C,0x80023754,ZZ_23424_2E8);
ZZ_MARK_TARGET(0x80023754,0x80023770,ZZ_23424_330);
ZZ_MARK_TARGET(0x80023770,0x8002378C,ZZ_23424_34C);
ZZ_MARK_TARGET(0x8002378C,0x80023790,ZZ_23424_368);
ZZ_MARK_TARGET(0x80023790,0x800237C8,ZZ_23424_36C);
ZZ_MARK_TARGET(0x800237C8,0x80023800,ZZ_23424_3A4);
ZZ_MARK_TARGET(0x80023800,0x8002380C,ZZ_23424_3DC);
ZZ_MARK_TARGET(0x8002380C,0x80023824,ZZ_23424_3E8);
ZZ_MARK_TARGET(0x80023824,0x80023840,ZZ_23424_400);
ZZ_MARK_TARGET(0x80023840,0x80023870,ZZ_23424_41C);
ZZ_MARK_TARGET(0x80023870,0x8002387C,ZZ_23424_44C);
ZZ_MARK_TARGET(0x8002387C,0x800238A0,ZZ_23424_458);
ZZ_MARK_TARGET(0x800238A0,0x800238AC,ZZ_23424_47C);
ZZ_MARK_TARGET(0x800238AC,0x800238B8,ZZ_23424_488);
ZZ_MARK_TARGET(0x800238B8,0x800238CC,ZZ_23424_494);
ZZ_MARK_TARGET(0x800238CC,0x800238DC,ZZ_23424_4A8);
ZZ_MARK_TARGET(0x800238DC,0x800238E4,ZZ_23424_4B8);
ZZ_MARK_TARGET(0x800238E4,0x80023918,ZZ_23424_4C0);
ZZ_MARK_TARGET(0x80023918,0x80023950,ZZ_23424_4F4);
