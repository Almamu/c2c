#ifdef ZZ_INCLUDE_CODE
ZZ_2B890:
	SP -= 120;
	EMU_Write32(SP + 88,S2); //+ 0x58
	S2 = A0;
	EMU_Write32(SP + 104,S6); //+ 0x68
	S6 = A1;
	T0 = A2;
	EMU_Write32(SP + 108,S7); //+ 0x6C
	S7 = 0xC4650000;
	EMU_Write32(SP + 116,RA); //+ 0x74
	EMU_Write32(SP + 112,FP); //+ 0x70
	EMU_Write32(SP + 100,S5); //+ 0x64
	EMU_Write32(SP + 96,S4); //+ 0x60
	EMU_Write32(SP + 92,S3); //+ 0x5C
	EMU_Write32(SP + 84,S1); //+ 0x54
	EMU_Write32(SP + 80,S0); //+ 0x50
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	S7 |= 0x3601;
	FP = R0;
	V0 &= 0x40;
	if (!V0)
	{
		S5 = T0 + 4128;
		ZZ_CLOCKCYCLES(21,0x8002B998);
		goto ZZ_2B890_108;
	}
	S5 = T0 + 4128;
	V0 = EMU_ReadU32(S6);
	V0 -= 19200;
	EMU_Write32(T0 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 &= V1;
	if (V0)
	{
		V0 = 0xFFFF0000;
		ZZ_CLOCKCYCLES(31,0x8002B934);
		goto ZZ_2B890_A4;
	}
	V0 = 0xFFFF0000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(37,0x8002B928);
		goto ZZ_2B890_98;
	}
	V0 += 3;
	ZZ_CLOCKCYCLES(38,0x8002B928);
ZZ_2B890_98:
	V0 = (int32_t)V0 >> 2;
	V0 = A0 - V0;
	ZZ_CLOCKCYCLES(3,0x8002B93C);
	goto ZZ_2B890_AC;
ZZ_2B890_A4:
	V0 |= 0x59C0;
	V0 += A0;
	ZZ_CLOCKCYCLES(2,0x8002B93C);
ZZ_2B890_AC:
	EMU_Write32(S5 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 -= 19200;
	EMU_Write32(S5 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(S6);
	V0 += 19200;
	EMU_Write32(S5 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x8002B98C);
		goto ZZ_2B890_FC;
	}
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 <<= 1;
	ZZ_CLOCKCYCLES(20,0x8002BBEC);
	goto ZZ_2B890_35C;
ZZ_2B890_FC:
	V0 = 0x50000;
	V0 |= 0x3200;
	ZZ_CLOCKCYCLES(3,0x8002BBEC);
	goto ZZ_2B890_35C;
ZZ_2B890_108:
	V0 = EMU_ReadU32(S6);
	V0 -= 19200;
	if (!A3)
	{
		EMU_Write32(T0 + 4128,V0); //+ 0x1020
		ZZ_CLOCKCYCLES(5,0x8002BA1C);
		goto ZZ_2B890_18C;
	}
	EMU_Write32(T0 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(11,0x8002B9D8);
		goto ZZ_2B890_148;
	}
	V0 = 0x20000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	A0 += V0;
	ZZ_CLOCKCYCLES(16,0x8002B9E0);
	goto ZZ_2B890_150;
ZZ_2B890_148:
	V0 |= 0x9900;
	A0 += V0;
	ZZ_CLOCKCYCLES(2,0x8002B9E0);
ZZ_2B890_150:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = A0 - 21280;
		ZZ_CLOCKCYCLES(5,0x8002BB98);
		goto ZZ_2B890_308;
	}
	V0 = A0 - 21280;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(11,0x8002BA10);
		goto ZZ_2B890_180;
	}
	V0 += 7;
	ZZ_CLOCKCYCLES(12,0x8002BA10);
ZZ_2B890_180:
	V0 = (int32_t)V0 >> 3;
	V0 = A0 - V0;
	ZZ_CLOCKCYCLES(3,0x8002BB98);
	goto ZZ_2B890_308;
ZZ_2B890_18C:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(6,0x8002BA48);
		goto ZZ_2B890_1B8;
	}
	V0 = 0x20000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	A2 = A0 + V0;
	ZZ_CLOCKCYCLES(11,0x8002BA50);
	goto ZZ_2B890_1C0;
ZZ_2B890_1B8:
	V0 |= 0x9900;
	A2 = A0 + V0;
	ZZ_CLOCKCYCLES(2,0x8002BA50);
ZZ_2B890_1C0:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		A1 = 0xA640;
		ZZ_CLOCKCYCLES(5,0x8002BA84);
		goto ZZ_2B890_1F4;
	}
	A1 = 0xA640;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	if ((int32_t)V0 >= 0)
	{
		A1 = (int32_t)V0 >> 2;
		ZZ_CLOCKCYCLES(11,0x8002BA84);
		goto ZZ_2B890_1F4;
	}
	A1 = (int32_t)V0 >> 2;
	V0 += 3;
	A1 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(13,0x8002BA84);
ZZ_2B890_1F4:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(5,0x8002BACC);
		goto ZZ_2B890_23C;
	}
	V0 = 0x10000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	A0 = 0x10000;
	A0 |= 0x8FFF;
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	A0 = (int32_t)A0 < (int32_t)V0;
	if (A0)
	{
		V0 = (int32_t)V0 < (int32_t)A1;
		ZZ_CLOCKCYCLES(16,0x8002BAE4);
		goto ZZ_2B890_254;
	}
	V0 = (int32_t)V0 < (int32_t)A1;
	ZZ_CLOCKCYCLES(18,0x8002BAD4);
	goto ZZ_2B890_244;
ZZ_2B890_23C:
	V0 |= 0x4C80;
	V0 = (int32_t)V0 < (int32_t)A1;
	ZZ_CLOCKCYCLES(2,0x8002BAD4);
ZZ_2B890_244:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002BB3C);
		goto ZZ_2B890_2AC;
	}
	ZZ_CLOCKCYCLES(4,0x8002BAF8);
	goto ZZ_2B890_268;
ZZ_2B890_254:
	V0 = 0x10000;
	V0 |= 0x9000;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8002BB3C);
		goto ZZ_2B890_2AC;
	}
	ZZ_CLOCKCYCLES(5,0x8002BAF8);
ZZ_2B890_268:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0xFFFF0000;
		ZZ_CLOCKCYCLES(5,0x8002BB34);
		goto ZZ_2B890_2A4;
	}
	V0 = 0xFFFF0000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(11,0x8002BB28);
		goto ZZ_2B890_298;
	}
	V0 += 3;
	ZZ_CLOCKCYCLES(12,0x8002BB28);
ZZ_2B890_298:
	V0 = (int32_t)V0 >> 2;
	V0 = A2 - V0;
	ZZ_CLOCKCYCLES(3,0x8002BB98);
	goto ZZ_2B890_308;
ZZ_2B890_2A4:
	V0 |= 0x59C0;
	ZZ_CLOCKCYCLES(2,0x8002BB94);
	goto ZZ_2B890_304;
ZZ_2B890_2AC:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0xFFFE0000;
		ZZ_CLOCKCYCLES(5,0x8002BB84);
		goto ZZ_2B890_2F4;
	}
	V0 = 0xFFFE0000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	A0 = 0x10000;
	A0 |= 0x8FFF;
	V1 = V0 >> 31;
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	A0 = (int32_t)A0 < (int32_t)V0;
	if (A0)
	{
		V0 = A2 - V0;
		ZZ_CLOCKCYCLES(16,0x8002BB8C);
		goto ZZ_2B890_2FC;
	}
	V0 = A2 - V0;
	EMU_Write32(S5 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(18,0x8002BB9C);
	goto ZZ_2B890_30C;
ZZ_2B890_2F4:
	V0 |= 0xB380;
	ZZ_CLOCKCYCLES(2,0x8002BB94);
	goto ZZ_2B890_304;
ZZ_2B890_2FC:
	V0 = 0xFFFE0000;
	V0 |= 0x7000;
	ZZ_CLOCKCYCLES(2,0x8002BB94);
ZZ_2B890_304:
	V0 += A2;
	ZZ_CLOCKCYCLES(1,0x8002BB98);
ZZ_2B890_308:
	EMU_Write32(S5 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(1,0x8002BB9C);
ZZ_2B890_30C:
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 -= 19200;
	EMU_Write32(S5 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(S6);
	V0 += 19200;
	EMU_Write32(S5 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 &= V1;
	if (V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(14,0x8002BBE8);
		goto ZZ_2B890_358;
	}
	V0 = 0x20000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 += A0;
	ZZ_CLOCKCYCLES(19,0x8002BBF0);
	goto ZZ_2B890_360;
ZZ_2B890_358:
	V0 |= 0x9900;
	ZZ_CLOCKCYCLES(1,0x8002BBEC);
ZZ_2B890_35C:
	V0 += A0;
	ZZ_CLOCKCYCLES(1,0x8002BBF0);
ZZ_2B890_360:
	EMU_Write32(S5 + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 += 19200;
	EMU_Write32(S5 + 20,V0); //+ 0x14
	V1 = 0x80070000;
	V1 -= 12796;
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(11,0x8002BCA8);
		goto ZZ_2B890_418;
	}
	S1 = R0;
	S4 = 0xC4650000;
	S4 |= 0x3601;
	S3 = V1 + 656;
	ZZ_CLOCKCYCLES(14,0x8002BC28);
ZZ_2B890_398:
	A0 = EMU_ReadU32(S3);
	S0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0x8000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8002BC90);
		goto ZZ_2B890_400;
	}
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V0 &= 0x4000;
	if (V0)
	{
		A1 = S5;
		ZZ_CLOCKCYCLES(14,0x8002BC90);
		goto ZZ_2B890_400;
	}
	A1 = S5;
	A2 = R0;
	A3 = 0x1;
	EMU_Write32(SP + 16,S7); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	RA = 0x8002BC7C; //ZZ_2B890_3EC
	EMU_Write32(SP + 72,T0); //+ 0x48
	ZZ_CLOCKCYCLES(21,0x8002ABE4);
	goto ZZ_2ABE4;
ZZ_2B890_3EC:
	T0 = EMU_ReadU32(SP + 72); //+ 0x48
	if (V0 == S4)
	{
		ZZ_CLOCKCYCLES(3,0x8002BC90);
		goto ZZ_2B890_400;
	}
	S7 = V0;
	FP = S0;
	ZZ_CLOCKCYCLES(5,0x8002BC90);
ZZ_2B890_400:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S3 += 4;
		ZZ_CLOCKCYCLES(6,0x8002BC28);
		goto ZZ_2B890_398;
	}
	S3 += 4;
	ZZ_CLOCKCYCLES(6,0x8002BCA8);
ZZ_2B890_418:
	V0 = EMU_ReadU32(S6);
	V0 -= 9600;
	EMU_Write32(S5,V0);
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 -= 9600;
	EMU_Write32(S5 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(S6);
	V0 += 9600;
	EMU_Write32(S5 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 += 9600;
	EMU_Write32(S5 + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x40000000;
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 &= V1;
	if (V0)
	{
		V0 = 0x30000;
		ZZ_CLOCKCYCLES(22,0x8002BD2C);
		goto ZZ_2B890_49C;
	}
	V0 = 0x30000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V1 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 = V1 << 2;
	V0 += V1;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(30,0x8002BD24);
		goto ZZ_2B890_494;
	}
	V0 += 3;
	ZZ_CLOCKCYCLES(31,0x8002BD24);
ZZ_2B890_494:
	V0 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(2,0x8002BD30);
	goto ZZ_2B890_4A0;
ZZ_2B890_49C:
	V0 |= 0x3F40;
	ZZ_CLOCKCYCLES(1,0x8002BD30);
ZZ_2B890_4A0:
	V0 += A0;
	V1 = 0xC4650000;
	V1 |= 0x3601;
	A0 = S2;
	A1 = T0;
	A2 = A1 + 4104;
	A3 = S5;
	EMU_Write32(S5 + 16,V0); //+ 0x10
	V0 = 0x2;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x6;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = 0x1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,V1); //+ 0x1C
	RA = 0x8002BD74; //ZZ_2B890_4E4
	EMU_Write32(SP + 32,V0); //+ 0x20
	ZZ_CLOCKCYCLES(17,0x8003D2D8);
	goto ZZ_3D2D8;
ZZ_2B890_4E4:
	V1 = EMU_ReadU32(S2 + 24); //+ 0x18
	V1 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = EMU_ReadU32(V1 + 668); //+ 0x29C
	S0 = V0;
	V0 = 0x20000;
	V1 &= V0;
	if (!V1)
	{
		A1 = SP + 40;
		ZZ_CLOCKCYCLES(10,0x8002BE04);
		goto ZZ_2B890_574;
	}
	A1 = SP + 40;
	V0 = EMU_ReadU32(S6);
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2916); //+ 0xB64
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(S5 + 16); //+ 0x10
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S6 + 8); //+ 0x8
	RA = 0x8002BDC4; //ZZ_2B890_534
	EMU_Write32(SP + 48,V0); //+ 0x30
	ZZ_CLOCKCYCLES(20,0x80028060);
	goto ZZ_28060;
ZZ_2B890_534:
	V0 = (int32_t)V0 < -254;
	if (V0)
	{
		V1 = 0xC4650000;
		ZZ_CLOCKCYCLES(3,0x8002BE08);
		goto ZZ_2B890_578;
	}
	V1 = 0xC4650000;
	V0 = EMU_ReadU32(S2 + 24); //+ 0x18
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	V0 += A0;
	V0 <<= 8;
	V1 = (int32_t)V0 < (int32_t)V1;
	if (!V1)
	{
		V1 = 0xC4650000;
		ZZ_CLOCKCYCLES(15,0x8002BE08);
		goto ZZ_2B890_578;
	}
	V1 = 0xC4650000;
	S0 = V0;
	ZZ_CLOCKCYCLES(16,0x8002BE04);
ZZ_2B890_574:
	V1 = 0xC4650000;
	ZZ_CLOCKCYCLES(1,0x8002BE08);
ZZ_2B890_578:
	V1 |= 0x3601;
	if (S0 == V1)
	{
		ZZ_CLOCKCYCLES(3,0x8002BE24);
		goto ZZ_2B890_594;
	}
	V0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V0 |= 0x80;
	EMU_Write32(S2 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(7,0x8002BE24);
ZZ_2B890_594:
	if (S7 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002BEA8);
		goto ZZ_2B890_618;
	}
	if (S0 == V1)
	{
		V0 = (int32_t)S7 < (int32_t)S0;
		ZZ_CLOCKCYCLES(4,0x8002BE3C);
		goto ZZ_2B890_5AC;
	}
	V0 = (int32_t)S7 < (int32_t)S0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002BEA8);
		goto ZZ_2B890_618;
	}
	ZZ_CLOCKCYCLES(6,0x8002BE3C);
ZZ_2B890_5AC:
	V0 = EMU_ReadU32(FP + 168); //+ 0xA8
	V0 |= 0x80;
	EMU_Write32(FP + 168,V0); //+ 0xA8
	V0 = EMU_ReadU32(S2 + 168); //+ 0xA8
	V1 = EMU_ReadU32(S2 + 136); //+ 0x88
	V0 |= 0x80;
	if ((int32_t)V1 >= 0)
	{
		EMU_Write32(S2 + 168,V0); //+ 0xA8
		ZZ_CLOCKCYCLES(9,0x8002BE70);
		goto ZZ_2B890_5E0;
	}
	EMU_Write32(S2 + 168,V0); //+ 0xA8
	V0 = EMU_ReadU32(FP + 136); //+ 0x88
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(13,0x8002BE94);
		goto ZZ_2B890_604;
	}
	ZZ_CLOCKCYCLES(13,0x8002BE70);
ZZ_2B890_5E0:
	A0 = S2;
	A1 = FP;
	A2 = 0x1700;
	A3 = 0x1;
	V0 = 0x6400;
	EMU_Write32(SP + 56,V0); //+ 0x38
	V0 = SP + 56;
	RA = 0x8002BE94; //ZZ_2B890_604
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(9,0x8001CD48);
	goto ZZ_1CD48;
ZZ_2B890_604:
	V0 = EMU_ReadU32(S2 + 256); //+ 0x100
	V1 = 0x200000;
	V0 &= V1;
	if (!V0)
	{
		V0 = S7;
		ZZ_CLOCKCYCLES(5,0x8002BF18);
		goto ZZ_2B890_688;
	}
	V0 = S7;
	ZZ_CLOCKCYCLES(5,0x8002BEA8);
ZZ_2B890_618:
	V1 = EMU_ReadU32(S2 + 256); //+ 0x100
	V0 = V1 & 0x40;
	if (V0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(5,0x8002BF18);
		goto ZZ_2B890_688;
	}
	V0 = S0;
	A1 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(10,0x8002BEF8);
		goto ZZ_2B890_668;
	}
	V0 = 0x20000;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 += A1;
	V0 = (int32_t)V0 < (int32_t)S0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(18,0x8002BF0C);
		goto ZZ_2B890_67C;
	}
	V0 = 0xC4650000;
	V0 = S0;
	ZZ_CLOCKCYCLES(20,0x8002BF18);
	goto ZZ_2B890_688;
ZZ_2B890_668:
	V0 |= 0x9900;
	V0 += A1;
	V0 = (int32_t)V0 < (int32_t)S0;
	if (!V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(5,0x8002BF14);
		goto ZZ_2B890_684;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(5,0x8002BF0C);
ZZ_2B890_67C:
	V0 |= 0x3601;
	ZZ_CLOCKCYCLES(2,0x8002BF18);
	goto ZZ_2B890_688;
ZZ_2B890_684:
	V0 = S0;
	ZZ_CLOCKCYCLES(1,0x8002BF18);
ZZ_2B890_688:
	RA = EMU_ReadU32(SP + 116); //+ 0x74
	FP = EMU_ReadU32(SP + 112); //+ 0x70
	S7 = EMU_ReadU32(SP + 108); //+ 0x6C
	S6 = EMU_ReadU32(SP + 104); //+ 0x68
	S5 = EMU_ReadU32(SP + 100); //+ 0x64
	S4 = EMU_ReadU32(SP + 96); //+ 0x60
	S3 = EMU_ReadU32(SP + 92); //+ 0x5C
	S2 = EMU_ReadU32(SP + 88); //+ 0x58
	S1 = EMU_ReadU32(SP + 84); //+ 0x54
	S0 = EMU_ReadU32(SP + 80); //+ 0x50
	SP += 120;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8002C050,ZZ_2BF4C_104);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002B890,0x8002B928,ZZ_2B890);
ZZ_MARK_TARGET(0x8002B928,0x8002B934,ZZ_2B890_98);
ZZ_MARK_TARGET(0x8002B934,0x8002B93C,ZZ_2B890_A4);
ZZ_MARK_TARGET(0x8002B93C,0x8002B98C,ZZ_2B890_AC);
ZZ_MARK_TARGET(0x8002B98C,0x8002B998,ZZ_2B890_FC);
ZZ_MARK_TARGET(0x8002B998,0x8002B9D8,ZZ_2B890_108);
ZZ_MARK_TARGET(0x8002B9D8,0x8002B9E0,ZZ_2B890_148);
ZZ_MARK_TARGET(0x8002B9E0,0x8002BA10,ZZ_2B890_150);
ZZ_MARK_TARGET(0x8002BA10,0x8002BA1C,ZZ_2B890_180);
ZZ_MARK_TARGET(0x8002BA1C,0x8002BA48,ZZ_2B890_18C);
ZZ_MARK_TARGET(0x8002BA48,0x8002BA50,ZZ_2B890_1B8);
ZZ_MARK_TARGET(0x8002BA50,0x8002BA84,ZZ_2B890_1C0);
ZZ_MARK_TARGET(0x8002BA84,0x8002BACC,ZZ_2B890_1F4);
ZZ_MARK_TARGET(0x8002BACC,0x8002BAD4,ZZ_2B890_23C);
ZZ_MARK_TARGET(0x8002BAD4,0x8002BAE4,ZZ_2B890_244);
ZZ_MARK_TARGET(0x8002BAE4,0x8002BAF8,ZZ_2B890_254);
ZZ_MARK_TARGET(0x8002BAF8,0x8002BB28,ZZ_2B890_268);
ZZ_MARK_TARGET(0x8002BB28,0x8002BB34,ZZ_2B890_298);
ZZ_MARK_TARGET(0x8002BB34,0x8002BB3C,ZZ_2B890_2A4);
ZZ_MARK_TARGET(0x8002BB3C,0x8002BB84,ZZ_2B890_2AC);
ZZ_MARK_TARGET(0x8002BB84,0x8002BB8C,ZZ_2B890_2F4);
ZZ_MARK_TARGET(0x8002BB8C,0x8002BB94,ZZ_2B890_2FC);
ZZ_MARK_TARGET(0x8002BB94,0x8002BB98,ZZ_2B890_304);
ZZ_MARK_TARGET(0x8002BB98,0x8002BB9C,ZZ_2B890_308);
ZZ_MARK_TARGET(0x8002BB9C,0x8002BBE8,ZZ_2B890_30C);
ZZ_MARK_TARGET(0x8002BBE8,0x8002BBEC,ZZ_2B890_358);
ZZ_MARK_TARGET(0x8002BBEC,0x8002BBF0,ZZ_2B890_35C);
ZZ_MARK_TARGET(0x8002BBF0,0x8002BC28,ZZ_2B890_360);
ZZ_MARK_TARGET(0x8002BC28,0x8002BC7C,ZZ_2B890_398);
ZZ_MARK_TARGET(0x8002BC7C,0x8002BC90,ZZ_2B890_3EC);
ZZ_MARK_TARGET(0x8002BC90,0x8002BCA8,ZZ_2B890_400);
ZZ_MARK_TARGET(0x8002BCA8,0x8002BD24,ZZ_2B890_418);
ZZ_MARK_TARGET(0x8002BD24,0x8002BD2C,ZZ_2B890_494);
ZZ_MARK_TARGET(0x8002BD2C,0x8002BD30,ZZ_2B890_49C);
ZZ_MARK_TARGET(0x8002BD30,0x8002BD74,ZZ_2B890_4A0);
ZZ_MARK_TARGET(0x8002BD74,0x8002BDC4,ZZ_2B890_4E4);
ZZ_MARK_TARGET(0x8002BDC4,0x8002BE04,ZZ_2B890_534);
ZZ_MARK_TARGET(0x8002BE04,0x8002BE08,ZZ_2B890_574);
ZZ_MARK_TARGET(0x8002BE08,0x8002BE24,ZZ_2B890_578);
ZZ_MARK_TARGET(0x8002BE24,0x8002BE3C,ZZ_2B890_594);
ZZ_MARK_TARGET(0x8002BE3C,0x8002BE70,ZZ_2B890_5AC);
ZZ_MARK_TARGET(0x8002BE70,0x8002BE94,ZZ_2B890_5E0);
ZZ_MARK_TARGET(0x8002BE94,0x8002BEA8,ZZ_2B890_604);
ZZ_MARK_TARGET(0x8002BEA8,0x8002BEF8,ZZ_2B890_618);
ZZ_MARK_TARGET(0x8002BEF8,0x8002BF0C,ZZ_2B890_668);
ZZ_MARK_TARGET(0x8002BF0C,0x8002BF14,ZZ_2B890_67C);
ZZ_MARK_TARGET(0x8002BF14,0x8002BF18,ZZ_2B890_684);
ZZ_MARK_TARGET(0x8002BF18,0x8002BF4C,ZZ_2B890_688);
