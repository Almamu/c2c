#ifdef ZZ_INCLUDE_CODE
ZZ_348EC:
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x800348FC; //ZZ_348EC_10
	ZZ_CLOCKCYCLES(4,0x80036494);
	goto ZZ_36494;
ZZ_348EC_10:
	V1 = EMU_ReadU32(GP + 240); //+ 0xF0
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x80034920);
		goto ZZ_348EC_34;
	}
	RA = 0x80034914; //ZZ_348EC_28
	ZZ_CLOCKCYCLES(6,0x80036494);
	goto ZZ_36494;
ZZ_348EC_28:
	EMU_Write32(GP + 240,V0); //+ 0xF0
	RA = 0x80034920; //ZZ_348EC_34
	ZZ_CLOCKCYCLES(3,0x80035DB0);
	goto ZZ_35DB0;
ZZ_348EC_34:
	RA = 0x80034928; //ZZ_348EC_3C
	ZZ_CLOCKCYCLES(2,0x80036480);
	goto ZZ_36480;
ZZ_348EC_3C:
	V1 = EMU_ReadU32(GP + 244); //+ 0xF4
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(4,0x8003494C);
		goto ZZ_348EC_60;
	}
	RA = 0x80034940; //ZZ_348EC_54
	ZZ_CLOCKCYCLES(6,0x80036480);
	goto ZZ_36480;
ZZ_348EC_54:
	EMU_Write32(GP + 244,V0); //+ 0xF4
	RA = 0x8003494C; //ZZ_348EC_60
	ZZ_CLOCKCYCLES(3,0x80035DB8);
	goto ZZ_35DB8;
ZZ_348EC_60:
	RA = 0x80034954; //ZZ_348EC_68
	ZZ_CLOCKCYCLES(2,0x80036480);
	goto ZZ_36480;
ZZ_348EC_68:
	V1 = V0;
	V0 = V1 < 9;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(4,0x800349DC);
		goto ZZ_348EC_F0;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 1756); //+ 0x6DC
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8003497C,ZZ_348EC_90);
	ZZ_JUMPREGISTER(0x8003498C,ZZ_348EC_A0);
	ZZ_JUMPREGISTER(0x800349DC,ZZ_348EC_F0);
	ZZ_JUMPREGISTER(0x800349C4,ZZ_348EC_D8);
	ZZ_JUMPREGISTER(0x800349D4,ZZ_348EC_E8);
	ZZ_JUMPREGISTER(0x8003499C,ZZ_348EC_B0);
	ZZ_JUMPREGISTER(0x800349AC,ZZ_348EC_C0);
	ZZ_JUMPREGISTER_END();
ZZ_348EC_90:
	RA = 0x80034984; //ZZ_348EC_98
	ZZ_CLOCKCYCLES(2,0x80034A0C);
	goto ZZ_34A0C;
ZZ_348EC_98:
	ZZ_CLOCKCYCLES(2,0x800349DC);
	goto ZZ_348EC_F0;
ZZ_348EC_A0:
	RA = 0x80034994; //ZZ_348EC_A8
	ZZ_CLOCKCYCLES(2,0x80034BCC);
	goto ZZ_34BCC;
ZZ_348EC_A8:
	ZZ_CLOCKCYCLES(2,0x800349DC);
	goto ZZ_348EC_F0;
ZZ_348EC_B0:
	RA = 0x800349A4; //ZZ_348EC_B8
	ZZ_CLOCKCYCLES(2,0x80034F00);
	goto ZZ_34F00;
ZZ_348EC_B8:
	ZZ_CLOCKCYCLES(2,0x800349DC);
	goto ZZ_348EC_F0;
ZZ_348EC_C0:
	RA = 0x800349B4; //ZZ_348EC_C8
	ZZ_CLOCKCYCLES(2,0x80036480);
	goto ZZ_36480;
ZZ_348EC_C8:
	RA = 0x800349BC; //ZZ_348EC_D0
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x8003578C);
	goto ZZ_3578C;
ZZ_348EC_D0:
	ZZ_CLOCKCYCLES(2,0x800349DC);
	goto ZZ_348EC_F0;
ZZ_348EC_D8:
	RA = 0x800349CC; //ZZ_348EC_E0
	ZZ_CLOCKCYCLES(2,0x80035D34);
	goto ZZ_35D34;
ZZ_348EC_E0:
	ZZ_CLOCKCYCLES(2,0x800349DC);
	goto ZZ_348EC_F0;
ZZ_348EC_E8:
	RA = 0x800349DC; //ZZ_348EC_F0
	ZZ_CLOCKCYCLES(2,0x80034B44);
	goto ZZ_34B44;
ZZ_348EC_F0:
	RA = 0x800349E4; //ZZ_348EC_F8
	ZZ_CLOCKCYCLES(2,0x80036494);
	goto ZZ_36494;
ZZ_348EC_F8:
	V1 = EMU_ReadU32(GP + 232); //+ 0xE8
	AT = 0x80070000;
	EMU_Write32(AT - 12556,V0); //+ 0xFFFFCEF4
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80070000;
	EMU_Write32(AT - 12548,V0); //+ 0xFFFFCEFC
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x800169F4,ZZ_1658C_468);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800348EC,ZZ_348EC);
ZZ_MARK(0x800348F0);
ZZ_MARK(0x800348F4);
ZZ_MARK(0x800348F8);
ZZ_MARK_TARGET(0x800348FC,ZZ_348EC_10);
ZZ_MARK(0x80034900);
ZZ_MARK(0x80034904);
ZZ_MARK(0x80034908);
ZZ_MARK(0x8003490C);
ZZ_MARK(0x80034910);
ZZ_MARK_TARGET(0x80034914,ZZ_348EC_28);
ZZ_MARK(0x80034918);
ZZ_MARK(0x8003491C);
ZZ_MARK_TARGET(0x80034920,ZZ_348EC_34);
ZZ_MARK(0x80034924);
ZZ_MARK_TARGET(0x80034928,ZZ_348EC_3C);
ZZ_MARK(0x8003492C);
ZZ_MARK(0x80034930);
ZZ_MARK(0x80034934);
ZZ_MARK(0x80034938);
ZZ_MARK(0x8003493C);
ZZ_MARK_TARGET(0x80034940,ZZ_348EC_54);
ZZ_MARK(0x80034944);
ZZ_MARK(0x80034948);
ZZ_MARK_TARGET(0x8003494C,ZZ_348EC_60);
ZZ_MARK(0x80034950);
ZZ_MARK_TARGET(0x80034954,ZZ_348EC_68);
ZZ_MARK(0x80034958);
ZZ_MARK(0x8003495C);
ZZ_MARK(0x80034960);
ZZ_MARK(0x80034964);
ZZ_MARK(0x80034968);
ZZ_MARK(0x8003496C);
ZZ_MARK(0x80034970);
ZZ_MARK(0x80034974);
ZZ_MARK(0x80034978);
ZZ_MARK_TARGET(0x8003497C,ZZ_348EC_90);
ZZ_MARK(0x80034980);
ZZ_MARK_TARGET(0x80034984,ZZ_348EC_98);
ZZ_MARK(0x80034988);
ZZ_MARK_TARGET(0x8003498C,ZZ_348EC_A0);
ZZ_MARK(0x80034990);
ZZ_MARK_TARGET(0x80034994,ZZ_348EC_A8);
ZZ_MARK(0x80034998);
ZZ_MARK_TARGET(0x8003499C,ZZ_348EC_B0);
ZZ_MARK(0x800349A0);
ZZ_MARK_TARGET(0x800349A4,ZZ_348EC_B8);
ZZ_MARK(0x800349A8);
ZZ_MARK_TARGET(0x800349AC,ZZ_348EC_C0);
ZZ_MARK(0x800349B0);
ZZ_MARK_TARGET(0x800349B4,ZZ_348EC_C8);
ZZ_MARK(0x800349B8);
ZZ_MARK_TARGET(0x800349BC,ZZ_348EC_D0);
ZZ_MARK(0x800349C0);
ZZ_MARK_TARGET(0x800349C4,ZZ_348EC_D8);
ZZ_MARK(0x800349C8);
ZZ_MARK_TARGET(0x800349CC,ZZ_348EC_E0);
ZZ_MARK(0x800349D0);
ZZ_MARK_TARGET(0x800349D4,ZZ_348EC_E8);
ZZ_MARK(0x800349D8);
ZZ_MARK_TARGET(0x800349DC,ZZ_348EC_F0);
ZZ_MARK(0x800349E0);
ZZ_MARK_TARGET(0x800349E4,ZZ_348EC_F8);
ZZ_MARK(0x800349E8);
ZZ_MARK(0x800349EC);
ZZ_MARK(0x800349F0);
ZZ_MARK(0x800349F4);
ZZ_MARK(0x800349F8);
ZZ_MARK(0x800349FC);
ZZ_MARK(0x80034A00);
ZZ_MARK(0x80034A04);
ZZ_MARK(0x80034A08);
