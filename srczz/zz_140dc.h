#ifdef ZZ_INCLUDE_CODE
ZZ_140DC:
	SP -= 32;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	V0 = A2;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A3;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	ZZ_CLOCKCYCLES(9,0x80014100);
ZZ_140DC_24:
	A0 = S0;
	A1 = S2;
	A2 = S1;
	RA = 0x80014114; //ZZ_140DC_38
	A3 = V0;
	ZZ_CLOCKCYCLES(5,0x80014060);
	goto ZZ_14060;
ZZ_140DC_38:
	V1 = V0;
	V0 = -255;
	if (V1 != V0)
	{
		V0 = S1 & 0x1;
		ZZ_CLOCKCYCLES(4,0x8001412C);
		goto ZZ_140DC_50;
	}
	V0 = S1 & 0x1;
	V0 = 0x1;
	ZZ_CLOCKCYCLES(6,0x80014160);
	goto ZZ_140DC_84;
ZZ_140DC_50:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001415C);
		goto ZZ_140DC_80;
	}
	V0 = EMU_ReadU16(V1 + 4); //+ 0x4
	V0 -= 20;
	V0 = V0 < 2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001415C);
		goto ZZ_140DC_80;
	}
	RA = 0x80014154; //ZZ_140DC_78
	A0 = S0;
	ZZ_CLOCKCYCLES(10,0x80012C88);
	goto ZZ_12C88;
ZZ_140DC_78:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x80014100);
	goto ZZ_140DC_24;
ZZ_140DC_80:
	V0 = EMU_ReadS8(V1 + 15); //+ 0xF
	ZZ_CLOCKCYCLES(1,0x80014160);
ZZ_140DC_84:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x8001441C,ZZ_14364_B8);
	ZZ_JUMPREGISTER(0x80014404,ZZ_14364_A0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800140DC,0x80014100,ZZ_140DC);
ZZ_MARK_TARGET(0x80014100,0x80014114,ZZ_140DC_24);
ZZ_MARK_TARGET(0x80014114,0x8001412C,ZZ_140DC_38);
ZZ_MARK_TARGET(0x8001412C,0x80014154,ZZ_140DC_50);
ZZ_MARK_TARGET(0x80014154,0x8001415C,ZZ_140DC_78);
ZZ_MARK_TARGET(0x8001415C,0x80014160,ZZ_140DC_80);
ZZ_MARK_TARGET(0x80014160,0x8001417C,ZZ_140DC_84);
