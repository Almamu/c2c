#ifdef ZZ_INCLUDE_CODE
ZZ_494EC:
	EMU_Write32(SP + 4,A1); //+ 0x4
	EMU_Write32(SP + 8,A2); //+ 0x8
	EMU_Write32(SP + 12,A3); //+ 0xC
	SP -= 584;
	EMU_Write32(SP + 564,S3); //+ 0x234
	S3 = A0;
	V0 = SP + 592;
	EMU_Write32(SP + 580,RA); //+ 0x244
	EMU_Write32(SP + 576,S6); //+ 0x240
	EMU_Write32(SP + 572,S5); //+ 0x23C
	EMU_Write32(SP + 568,S4); //+ 0x238
	EMU_Write32(SP + 560,S2); //+ 0x230
	EMU_Write32(SP + 556,S1); //+ 0x22C
	EMU_Write32(SP + 552,S0); //+ 0x228
	EMU_Write32(SP + 588,A1); //+ 0x24C
	EMU_Write32(SP + 544,V0); //+ 0x220
	A1 = EMU_ReadU8(A1);
	if (!A1)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(20,0x80049D10);
		goto ZZ_494EC_824;
	}
	S2 = R0;
	S5 = 45;
	S6 = 43;
	S4 = 32;
	V0 = 37;
	ZZ_CLOCKCYCLES(24,0x8004954C);
ZZ_494EC_60:
	if (A1 != V0)
	{
		V0 = S3 + S2;
		ZZ_CLOCKCYCLES(2,0x80049C50);
		goto ZZ_494EC_764;
	}
	V0 = S3 + S2;
	A1 = 0x80060000;
	A1 -= 12880;
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_Write32(SP + 528,V0); //+ 0x210
	EMU_Write32(SP + 532,V1); //+ 0x214
	EMU_Write32(SP + 536,A0); //+ 0x218
	A2 = 35;
	V1 = 48;
	ZZ_CLOCKCYCLES(12,0x8004957C);
ZZ_494EC_90:
	A0 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = A0 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 1); //+ 0x1
	if (A1 != S5)
	{
		ZZ_CLOCKCYCLES(8,0x800495B0);
		goto ZZ_494EC_C4;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x1;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(13,0x8004957C);
	goto ZZ_494EC_90;
ZZ_494EC_C4:
	if (A1 != S6)
	{
		ZZ_CLOCKCYCLES(2,0x800495CC);
		goto ZZ_494EC_E0;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x2;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(7,0x8004957C);
	goto ZZ_494EC_90;
ZZ_494EC_E0:
	if (A1 != S4)
	{
		ZZ_CLOCKCYCLES(2,0x800495DC);
		goto ZZ_494EC_F0;
	}
	EMU_Write8(SP + 529,A1); //+ 0x211
	ZZ_CLOCKCYCLES(4,0x8004957C);
	goto ZZ_494EC_90;
ZZ_494EC_F0:
	if (A1 != A2)
	{
		ZZ_CLOCKCYCLES(2,0x800495F8);
		goto ZZ_494EC_10C;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x4;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(7,0x8004957C);
	goto ZZ_494EC_90;
ZZ_494EC_10C:
	if (A1 != V1)
	{
		V0 = 42;
		ZZ_CLOCKCYCLES(2,0x80049614);
		goto ZZ_494EC_128;
	}
	V0 = 42;
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x8;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(7,0x8004957C);
	goto ZZ_494EC_90;
ZZ_494EC_128:
	if (A1 != V0)
	{
		V0 = A1 - 48;
		ZZ_CLOCKCYCLES(2,0x800496A0);
		goto ZZ_494EC_1B4;
	}
	V0 = A1 - 48;
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(SP + 532,V0); //+ 0x214
		ZZ_CLOCKCYCLES(10,0x80049650);
		goto ZZ_494EC_164;
	}
	EMU_Write32(SP + 532,V0); //+ 0x214
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = -V0;
	EMU_Write32(SP + 532,V0); //+ 0x214
	V1 |= 0x1;
	EMU_Write32(SP + 528,V1); //+ 0x210
	ZZ_CLOCKCYCLES(15,0x80049650);
ZZ_494EC_164:
	V0 = A0 + 2;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 2); //+ 0x2
	V0 = 46;
	ZZ_CLOCKCYCLES(5,0x800496AC);
	goto ZZ_494EC_1C0;
ZZ_494EC_178:
	V1 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 1;
	V0 -= 48;
	V0 += A1;
	EMU_Write32(SP + 532,V0); //+ 0x214
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	V0 = A1 - 48;
	ZZ_CLOCKCYCLES(15,0x800496A0);
ZZ_494EC_1B4:
	V0 = V0 < 10;
	if (V0)
	{
		V0 = 46;
		ZZ_CLOCKCYCLES(3,0x80049664);
		goto ZZ_494EC_178;
	}
	V0 = 46;
	ZZ_CLOCKCYCLES(3,0x800496AC);
ZZ_494EC_1C0:
	if (A1 != V0)
	{
		ZZ_CLOCKCYCLES(2,0x8004976C);
		goto ZZ_494EC_280;
	}
	A0 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = A0 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 1); //+ 0x1
	V0 = 42;
	if (A1 != V0)
	{
		V0 = A1 - 48;
		ZZ_CLOCKCYCLES(10,0x80049740);
		goto ZZ_494EC_254;
	}
	V0 = A1 - 48;
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	V0 = EMU_ReadU32(V1);
	EMU_Write32(SP + 536,V0); //+ 0x218
	V0 = A0 + 2;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(A0 + 2); //+ 0x2
	ZZ_CLOCKCYCLES(22,0x8004974C);
	goto ZZ_494EC_260;
ZZ_494EC_218:
	V1 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 1;
	V0 -= 48;
	V0 += A1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	V0 = A1 - 48;
	ZZ_CLOCKCYCLES(15,0x80049740);
ZZ_494EC_254:
	V0 = V0 < 10;
	if (V0)
	{
		ZZ_CLOCKCYCLES(3,0x80049704);
		goto ZZ_494EC_218;
	}
	ZZ_CLOCKCYCLES(3,0x8004974C);
ZZ_494EC_260:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 < 0)
	{
		ZZ_CLOCKCYCLES(4,0x8004976C);
		goto ZZ_494EC_280;
	}
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x10;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(8,0x8004976C);
ZZ_494EC_280:
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x1;
	if (!V0)
	{
		S1 = SP + 528;
		ZZ_CLOCKCYCLES(5,0x8004978C);
		goto ZZ_494EC_2A0;
	}
	S1 = SP + 528;
	V0 = -9;
	V0 &= V1;
	EMU_Write32(SP + 528,V0); //+ 0x210
	ZZ_CLOCKCYCLES(8,0x8004978C);
ZZ_494EC_2A0:
	V1 = A1 - 76;
	ZZ_CLOCKCYCLES(1,0x80049790);
ZZ_494EC_2A4:
	V0 = V1 < 45;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(3,0x80049C44);
		goto ZZ_494EC_758;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 3116); //+ 0xC2C
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x800497CC,ZZ_494EC_2E0);
	ZZ_JUMPREGISTER(0x80049C44,ZZ_494EC_758);
	ZZ_JUMPREGISTER(0x80049A64,ZZ_494EC_578);
	ZZ_JUMPREGISTER(0x80049B6C,ZZ_494EC_680);
	ZZ_JUMPREGISTER(0x800497F8,ZZ_494EC_30C);
	ZZ_JUMPREGISTER(0x800497B4,ZZ_494EC_2C8);
	ZZ_JUMPREGISTER(0x800497C0,ZZ_494EC_2D4);
	ZZ_JUMPREGISTER(0x80049C10,ZZ_494EC_724);
	ZZ_JUMPREGISTER(0x80049960,ZZ_494EC_474);
	ZZ_JUMPREGISTER(0x80049A50,ZZ_494EC_564);
	ZZ_JUMPREGISTER(0x80049B8C,ZZ_494EC_6A0);
	ZZ_JUMPREGISTER(0x80049848,ZZ_494EC_35C);
	ZZ_JUMPREGISTER(0x80049A74,ZZ_494EC_588);
	ZZ_JUMPREGISTER_END();
ZZ_494EC_2C8:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x20;
	ZZ_CLOCKCYCLES(3,0x800497D8);
	goto ZZ_494EC_2EC;
ZZ_494EC_2D4:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x40;
	ZZ_CLOCKCYCLES(3,0x800497D8);
	goto ZZ_494EC_2EC;
ZZ_494EC_2E0:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 |= 0x80;
	ZZ_CLOCKCYCLES(3,0x800497D8);
ZZ_494EC_2EC:
	EMU_Write32(SP + 528,V0); //+ 0x210
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	V1 = A1 - 76;
	ZZ_CLOCKCYCLES(8,0x80049790);
	goto ZZ_494EC_2A4;
ZZ_494EC_30C:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x20;
	if (!V0)
	{
		V0 = A0 << 16;
		ZZ_CLOCKCYCLES(10,0x80049824);
		goto ZZ_494EC_338;
	}
	V0 = A0 << 16;
	A0 = (int32_t)V0 >> 16;
	ZZ_CLOCKCYCLES(11,0x80049824);
ZZ_494EC_338:
	if ((int32_t)A0 >= 0)
	{
		V0 = V1 & 0x2;
		ZZ_CLOCKCYCLES(2,0x80049838);
		goto ZZ_494EC_34C;
	}
	V0 = V1 & 0x2;
	A0 = -A0;
	EMU_Write8(SP + 529,S5); //+ 0x211
	ZZ_CLOCKCYCLES(5,0x80049878);
	goto ZZ_494EC_38C;
ZZ_494EC_34C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80049878);
		goto ZZ_494EC_38C;
	}
	EMU_Write8(SP + 529,S6); //+ 0x211
	ZZ_CLOCKCYCLES(4,0x80049878);
	goto ZZ_494EC_38C;
ZZ_494EC_35C:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x20;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80049874);
		goto ZZ_494EC_388;
	}
	A0 &= 0xFFFF;
	ZZ_CLOCKCYCLES(11,0x80049874);
ZZ_494EC_388:
	EMU_Write8(SP + 529,R0); //+ 0x211
	ZZ_CLOCKCYCLES(1,0x80049878);
ZZ_494EC_38C:
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x10;
	if (V0)
	{
		V0 = V1 & 0x8;
		ZZ_CLOCKCYCLES(5,0x800498C4);
		goto ZZ_494EC_3D8;
	}
	V0 = V1 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x800498B0);
		goto ZZ_494EC_3C4;
	}
	V1 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = EMU_ReadU8(SP + 529); //+ 0x211
	if (!V0)
	{
		EMU_Write32(SP + 536,V1); //+ 0x218
		ZZ_CLOCKCYCLES(12,0x800498B0);
		goto ZZ_494EC_3C4;
	}
	EMU_Write32(SP + 536,V1); //+ 0x218
	V0 = V1 - 1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(14,0x800498B0);
ZZ_494EC_3C4:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 > 0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(4,0x800498C4);
		goto ZZ_494EC_3D8;
	}
	V0 = 1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x800498C4);
ZZ_494EC_3D8:
	if (!A0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x80049908);
		goto ZZ_494EC_41C;
	}
	S0 = R0;
	A1 = 0xCCCC0000;
	A1 |= 0xCCCD;
	ZZ_CLOCKCYCLES(4,0x800498D4);
ZZ_494EC_3E8:
	EMU_UMultiply(A0,A1);
	S1 -= 1;
	S0 += 1;
	T0 = HI;
	V1 = T0 >> 3;
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 1;
	V0 = A0 - V0;
	V0 += 48;
	A0 = V1;
	if (A0)
	{
		EMU_Write8(S1,V0);
		ZZ_CLOCKCYCLES(13,0x800498D4);
		goto ZZ_494EC_3E8;
	}
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(13,0x80049908);
ZZ_494EC_41C:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80049940);
		goto ZZ_494EC_454;
	}
	V1 = 48;
	S1 -= 1;
	ZZ_CLOCKCYCLES(7,0x80049924);
ZZ_494EC_438:
	EMU_Write8(S1,V1);
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 -= 1;
		ZZ_CLOCKCYCLES(6,0x80049924);
		goto ZZ_494EC_438;
	}
	S1 -= 1;
	S1 += 1;
	ZZ_CLOCKCYCLES(7,0x80049940);
ZZ_494EC_454:
	V0 = EMU_ReadU8(SP + 529); //+ 0x211
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80049C5C);
		goto ZZ_494EC_770;
	}
	S1 -= 1;
	EMU_Write8(S1,V0);
	S0 += 1;
	ZZ_CLOCKCYCLES(8,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_474:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x20;
	if (!V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(10,0x8004998C);
		goto ZZ_494EC_4A0;
	}
	V0 = V1 & 0x10;
	A0 &= 0xFFFF;
	ZZ_CLOCKCYCLES(11,0x8004998C);
ZZ_494EC_4A0:
	if (V0)
	{
		V0 = V1 & 0x8;
		ZZ_CLOCKCYCLES(2,0x800499BC);
		goto ZZ_494EC_4D0;
	}
	V0 = V1 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800499A8);
		goto ZZ_494EC_4BC;
	}
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(7,0x800499A8);
ZZ_494EC_4BC:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 > 0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(4,0x800499BC);
		goto ZZ_494EC_4D0;
	}
	V0 = 1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x800499BC);
ZZ_494EC_4D0:
	if (!A0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x800499E0);
		goto ZZ_494EC_4F4;
	}
	S0 = R0;
	ZZ_CLOCKCYCLES(2,0x800499C4);
ZZ_494EC_4D8:
	S1 -= 1;
	V0 = A0 & 0x7;
	V0 += 48;
	EMU_Write8(S1,V0);
	A0 >>= 3;
	if (A0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(7,0x800499C4);
		goto ZZ_494EC_4D8;
	}
	S0 += 1;
	ZZ_CLOCKCYCLES(7,0x800499E0);
ZZ_494EC_4F4:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80049A18);
		goto ZZ_494EC_52C;
	}
	if (!S0)
	{
		V0 = 48;
		ZZ_CLOCKCYCLES(7,0x80049A18);
		goto ZZ_494EC_52C;
	}
	V0 = 48;
	V1 = EMU_ReadU8(S1);
	if (V1 == V0)
	{
		V0 = 48;
		ZZ_CLOCKCYCLES(11,0x80049A18);
		goto ZZ_494EC_52C;
	}
	V0 = 48;
	S1 -= 1;
	EMU_Write8(S1,V0);
	S0 += 1;
	ZZ_CLOCKCYCLES(14,0x80049A18);
ZZ_494EC_52C:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		V1 = 48;
		ZZ_CLOCKCYCLES(5,0x80049C5C);
		goto ZZ_494EC_770;
	}
	V1 = 48;
	S1 -= 1;
	ZZ_CLOCKCYCLES(6,0x80049A30);
ZZ_494EC_544:
	EMU_Write8(S1,V1);
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 -= 1;
		ZZ_CLOCKCYCLES(6,0x80049A30);
		goto ZZ_494EC_544;
	}
	S1 -= 1;
	S1 += 1;
	ZZ_CLOCKCYCLES(8,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_564:
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = 8;
	EMU_Write32(SP + 536,V0); //+ 0x218
	V1 |= 0x50;
	EMU_Write32(SP + 528,V1); //+ 0x210
	ZZ_CLOCKCYCLES(5,0x80049A64);
ZZ_494EC_578:
	A3 = 0x80010000;
	A3 += 3076;
	ZZ_CLOCKCYCLES(4,0x80049A7C);
	goto ZZ_494EC_590;
ZZ_494EC_588:
	A3 = 0x80010000;
	A3 += 3096;
	ZZ_CLOCKCYCLES(2,0x80049A7C);
ZZ_494EC_590:
	V1 = EMU_ReadU32(SP + 544); //+ 0x220
	V0 = V1 + 4;
	EMU_Write32(SP + 544,V0); //+ 0x220
	A0 = EMU_ReadU32(V1);
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 = V1 & 0x20;
	if (!V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(10,0x80049AA8);
		goto ZZ_494EC_5BC;
	}
	V0 = V1 & 0x10;
	A0 &= 0xFFFF;
	ZZ_CLOCKCYCLES(11,0x80049AA8);
ZZ_494EC_5BC:
	if (V0)
	{
		V0 = V1 & 0x8;
		ZZ_CLOCKCYCLES(2,0x80049AE0);
		goto ZZ_494EC_5F4;
	}
	V0 = V1 & 0x8;
	if (!V0)
	{
		V0 = V1 & 0x4;
		ZZ_CLOCKCYCLES(4,0x80049ACC);
		goto ZZ_494EC_5E0;
	}
	V0 = V1 & 0x4;
	A2 = EMU_ReadU32(SP + 532); //+ 0x214
	if (!V0)
	{
		EMU_Write32(SP + 536,A2); //+ 0x218
		ZZ_CLOCKCYCLES(7,0x80049ACC);
		goto ZZ_494EC_5E0;
	}
	EMU_Write32(SP + 536,A2); //+ 0x218
	V0 = A2 - 2;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(9,0x80049ACC);
ZZ_494EC_5E0:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	if ((int32_t)V0 > 0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(4,0x80049AE0);
		goto ZZ_494EC_5F4;
	}
	V0 = 1;
	EMU_Write32(SP + 536,V0); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x80049AE0);
ZZ_494EC_5F4:
	if (!A0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(2,0x80049B08);
		goto ZZ_494EC_61C;
	}
	S0 = R0;
	ZZ_CLOCKCYCLES(2,0x80049AE8);
ZZ_494EC_5FC:
	S1 -= 1;
	V0 = A0 & 0xF;
	A0 >>= 4;
	V0 += A3;
	V0 = EMU_ReadU8(V0);
	S0 += 1;
	if (A0)
	{
		EMU_Write8(S1,V0);
		ZZ_CLOCKCYCLES(8,0x80049AE8);
		goto ZZ_494EC_5FC;
	}
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(8,0x80049B08);
ZZ_494EC_61C:
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80049B40);
		goto ZZ_494EC_654;
	}
	V1 = 48;
	S1 -= 1;
	ZZ_CLOCKCYCLES(7,0x80049B24);
ZZ_494EC_638:
	EMU_Write8(S1,V1);
	V0 = EMU_ReadU32(SP + 536); //+ 0x218
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S1 -= 1;
		ZZ_CLOCKCYCLES(6,0x80049B24);
		goto ZZ_494EC_638;
	}
	S1 -= 1;
	S1 += 1;
	ZZ_CLOCKCYCLES(7,0x80049B40);
ZZ_494EC_654:
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x4;
	if (!V0)
	{
		V0 = 48;
		ZZ_CLOCKCYCLES(5,0x80049C5C);
		goto ZZ_494EC_770;
	}
	V0 = 48;
	S1 -= 1;
	EMU_Write8(S1,A1);
	S1 -= 1;
	S0 += 2;
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(11,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_680:
	V0 = EMU_ReadU32(SP + 544); //+ 0x220
	S1 -= 1;
	V1 = V0 + 4;
	EMU_Write32(SP + 544,V1); //+ 0x220
	V0 = EMU_ReadU32(V0);
	S0 = 1;
	EMU_Write8(S1,V0);
	ZZ_CLOCKCYCLES(8,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_6A0:
	V0 = EMU_ReadU32(SP + 544); //+ 0x220
	V1 = V0 + 4;
	EMU_Write32(SP + 544,V1); //+ 0x220
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	S1 = EMU_ReadU32(V0);
	V0 = V1 & 0x4;
	if (!V0)
	{
		V0 = V1 & 0x10;
		ZZ_CLOCKCYCLES(9,0x80049BD8);
		goto ZZ_494EC_6EC;
	}
	V0 = V1 & 0x10;
	S0 = EMU_ReadU8(S1);
	if (!V0)
	{
		S1 += 1;
		ZZ_CLOCKCYCLES(12,0x80049C5C);
		goto ZZ_494EC_770;
	}
	S1 += 1;
	V1 = EMU_ReadU32(SP + 536); //+ 0x218
	V0 = (int32_t)V1 < (int32_t)S0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(17,0x80049C5C);
		goto ZZ_494EC_770;
	}
	S0 = V1;
	ZZ_CLOCKCYCLES(19,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_6EC:
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x80049BF0);
		goto ZZ_494EC_704;
	}
	A0 = S1;
	RA = 0x80049BE8; //ZZ_494EC_6FC
	A0 = S1;
	ZZ_CLOCKCYCLES(4,0x8004948C);
	goto ZZ_4948C;
ZZ_494EC_6FC:
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_704:
	A2 = EMU_ReadU32(SP + 536); //+ 0x218
	RA = 0x80049BFC; //ZZ_494EC_710
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x80049D48);
	goto ZZ_49D48;
ZZ_494EC_710:
	if (V0)
	{
		S0 = V0 - S1;
		ZZ_CLOCKCYCLES(2,0x80049C5C);
		goto ZZ_494EC_770;
	}
	S0 = V0 - S1;
	S0 = EMU_ReadU32(SP + 536); //+ 0x218
	ZZ_CLOCKCYCLES(5,0x80049C5C);
	goto ZZ_494EC_770;
ZZ_494EC_724:
	V0 = EMU_ReadU32(SP + 544); //+ 0x220
	V1 = V0 + 4;
	EMU_Write32(SP + 544,V1); //+ 0x220
	V1 = EMU_ReadU32(SP + 528); //+ 0x210
	S1 = EMU_ReadU32(V0);
	V0 = V1 & 0x20;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80049C3C);
		goto ZZ_494EC_750;
	}
	EMU_Write16(S1,S2);
	ZZ_CLOCKCYCLES(11,0x80049CF0);
	goto ZZ_494EC_804;
ZZ_494EC_750:
	EMU_Write32(S1,S2);
	ZZ_CLOCKCYCLES(2,0x80049CF0);
	goto ZZ_494EC_804;
ZZ_494EC_758:
	V0 = 37;
	if (A1 != V0)
	{
		V0 = S3 + S2;
		ZZ_CLOCKCYCLES(3,0x80049D10);
		goto ZZ_494EC_824;
	}
	V0 = S3 + S2;
	ZZ_CLOCKCYCLES(3,0x80049C50);
ZZ_494EC_764:
	EMU_Write8(V0,A1);
	S2 += 1;
	ZZ_CLOCKCYCLES(3,0x80049CF0);
	goto ZZ_494EC_804;
ZZ_494EC_770:
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		A0 = S3 + S2;
		ZZ_CLOCKCYCLES(5,0x80049CB0);
		goto ZZ_494EC_7C4;
	}
	A0 = S3 + S2;
	V0 = EMU_ReadU32(SP + 528); //+ 0x210
	V0 &= 0x1;
	if (V0)
	{
		A1 = S1;
		ZZ_CLOCKCYCLES(10,0x80049CB4);
		goto ZZ_494EC_7C8;
	}
	A1 = S1;
	V1 = S2 + S3;
	ZZ_CLOCKCYCLES(11,0x80049C88);
ZZ_494EC_79C:
	EMU_Write8(V1,S4);
	V1 += 1;
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 -= 1;
	EMU_Write32(SP + 532,V0); //+ 0x214
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S2 += 1;
		ZZ_CLOCKCYCLES(9,0x80049C88);
		goto ZZ_494EC_79C;
	}
	S2 += 1;
	A0 = S3 + S2;
	ZZ_CLOCKCYCLES(10,0x80049CB0);
ZZ_494EC_7C4:
	A1 = S1;
	ZZ_CLOCKCYCLES(1,0x80049CB4);
ZZ_494EC_7C8:
	RA = 0x80049CBC; //ZZ_494EC_7D0
	A2 = S0;
	ZZ_CLOCKCYCLES(2,0x80049D58);
	goto ZZ_49D58;
ZZ_494EC_7D0:
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	V0 = (int32_t)S0 < (int32_t)V0;
	if (!V0)
	{
		S2 += S0;
		ZZ_CLOCKCYCLES(5,0x80049CF0);
		goto ZZ_494EC_804;
	}
	S2 += S0;
	V1 = S2 + S3;
	ZZ_CLOCKCYCLES(6,0x80049CD4);
ZZ_494EC_7E8:
	EMU_Write8(V1,S4);
	V1 += 1;
	V0 = EMU_ReadU32(SP + 532); //+ 0x214
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		S2 += 1;
		ZZ_CLOCKCYCLES(7,0x80049CD4);
		goto ZZ_494EC_7E8;
	}
	S2 += 1;
	ZZ_CLOCKCYCLES(7,0x80049CF0);
ZZ_494EC_804:
	V1 = EMU_ReadU32(SP + 588); //+ 0x24C
	V0 = V1 + 1;
	EMU_Write32(SP + 588,V0); //+ 0x24C
	A1 = EMU_ReadU8(V1 + 1); //+ 0x1
	if (A1)
	{
		V0 = 37;
		ZZ_CLOCKCYCLES(8,0x8004954C);
		goto ZZ_494EC_60;
	}
	V0 = 37;
	ZZ_CLOCKCYCLES(8,0x80049D10);
ZZ_494EC_824:
	V0 = S3 + S2;
	EMU_Write8(V0,R0);
	V0 = S2;
	RA = EMU_ReadU32(SP + 580); //+ 0x244
	S6 = EMU_ReadU32(SP + 576); //+ 0x240
	S5 = EMU_ReadU32(SP + 572); //+ 0x23C
	S4 = EMU_ReadU32(SP + 568); //+ 0x238
	S3 = EMU_ReadU32(SP + 564); //+ 0x234
	S2 = EMU_ReadU32(SP + 560); //+ 0x230
	S1 = EMU_ReadU32(SP + 556); //+ 0x22C
	S0 = EMU_ReadU32(SP + 552); //+ 0x228
	SP += 584;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x80012204,ZZ_12170_94);
	ZZ_JUMPREGISTER(0x80012238,ZZ_12170_C8);
	ZZ_JUMPREGISTER(0x80011F60,ZZ_11F1C_44);
	ZZ_JUMPREGISTER(0x80034FA8,ZZ_34F00_A8);
	ZZ_JUMPREGISTER(0x80035880,ZZ_3578C_F4);
	ZZ_JUMPREGISTER(0x80035950,ZZ_3578C_1C4);
	ZZ_JUMPREGISTER(0x800359F8,ZZ_3578C_26C);
	ZZ_JUMPREGISTER(0x80035B40,ZZ_3578C_3B4);
	ZZ_JUMPREGISTER(0x8001C01C,ZZ_1BEBC_160);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800494EC,ZZ_494EC);
ZZ_MARK(0x800494F0);
ZZ_MARK(0x800494F4);
ZZ_MARK(0x800494F8);
ZZ_MARK(0x800494FC);
ZZ_MARK(0x80049500);
ZZ_MARK(0x80049504);
ZZ_MARK(0x80049508);
ZZ_MARK(0x8004950C);
ZZ_MARK(0x80049510);
ZZ_MARK(0x80049514);
ZZ_MARK(0x80049518);
ZZ_MARK(0x8004951C);
ZZ_MARK(0x80049520);
ZZ_MARK(0x80049524);
ZZ_MARK(0x80049528);
ZZ_MARK(0x8004952C);
ZZ_MARK(0x80049530);
ZZ_MARK(0x80049534);
ZZ_MARK(0x80049538);
ZZ_MARK(0x8004953C);
ZZ_MARK(0x80049540);
ZZ_MARK(0x80049544);
ZZ_MARK(0x80049548);
ZZ_MARK_TARGET(0x8004954C,ZZ_494EC_60);
ZZ_MARK(0x80049550);
ZZ_MARK(0x80049554);
ZZ_MARK(0x80049558);
ZZ_MARK(0x8004955C);
ZZ_MARK(0x80049560);
ZZ_MARK(0x80049564);
ZZ_MARK(0x80049568);
ZZ_MARK(0x8004956C);
ZZ_MARK(0x80049570);
ZZ_MARK(0x80049574);
ZZ_MARK(0x80049578);
ZZ_MARK_TARGET(0x8004957C,ZZ_494EC_90);
ZZ_MARK(0x80049580);
ZZ_MARK(0x80049584);
ZZ_MARK(0x80049588);
ZZ_MARK(0x8004958C);
ZZ_MARK(0x80049590);
ZZ_MARK(0x80049594);
ZZ_MARK(0x80049598);
ZZ_MARK(0x8004959C);
ZZ_MARK(0x800495A0);
ZZ_MARK(0x800495A4);
ZZ_MARK(0x800495A8);
ZZ_MARK(0x800495AC);
ZZ_MARK_TARGET(0x800495B0,ZZ_494EC_C4);
ZZ_MARK(0x800495B4);
ZZ_MARK(0x800495B8);
ZZ_MARK(0x800495BC);
ZZ_MARK(0x800495C0);
ZZ_MARK(0x800495C4);
ZZ_MARK(0x800495C8);
ZZ_MARK_TARGET(0x800495CC,ZZ_494EC_E0);
ZZ_MARK(0x800495D0);
ZZ_MARK(0x800495D4);
ZZ_MARK(0x800495D8);
ZZ_MARK_TARGET(0x800495DC,ZZ_494EC_F0);
ZZ_MARK(0x800495E0);
ZZ_MARK(0x800495E4);
ZZ_MARK(0x800495E8);
ZZ_MARK(0x800495EC);
ZZ_MARK(0x800495F0);
ZZ_MARK(0x800495F4);
ZZ_MARK_TARGET(0x800495F8,ZZ_494EC_10C);
ZZ_MARK(0x800495FC);
ZZ_MARK(0x80049600);
ZZ_MARK(0x80049604);
ZZ_MARK(0x80049608);
ZZ_MARK(0x8004960C);
ZZ_MARK(0x80049610);
ZZ_MARK_TARGET(0x80049614,ZZ_494EC_128);
ZZ_MARK(0x80049618);
ZZ_MARK(0x8004961C);
ZZ_MARK(0x80049620);
ZZ_MARK(0x80049624);
ZZ_MARK(0x80049628);
ZZ_MARK(0x8004962C);
ZZ_MARK(0x80049630);
ZZ_MARK(0x80049634);
ZZ_MARK(0x80049638);
ZZ_MARK(0x8004963C);
ZZ_MARK(0x80049640);
ZZ_MARK(0x80049644);
ZZ_MARK(0x80049648);
ZZ_MARK(0x8004964C);
ZZ_MARK_TARGET(0x80049650,ZZ_494EC_164);
ZZ_MARK(0x80049654);
ZZ_MARK(0x80049658);
ZZ_MARK(0x8004965C);
ZZ_MARK(0x80049660);
ZZ_MARK_TARGET(0x80049664,ZZ_494EC_178);
ZZ_MARK(0x80049668);
ZZ_MARK(0x8004966C);
ZZ_MARK(0x80049670);
ZZ_MARK(0x80049674);
ZZ_MARK(0x80049678);
ZZ_MARK(0x8004967C);
ZZ_MARK(0x80049680);
ZZ_MARK(0x80049684);
ZZ_MARK(0x80049688);
ZZ_MARK(0x8004968C);
ZZ_MARK(0x80049690);
ZZ_MARK(0x80049694);
ZZ_MARK(0x80049698);
ZZ_MARK(0x8004969C);
ZZ_MARK_TARGET(0x800496A0,ZZ_494EC_1B4);
ZZ_MARK(0x800496A4);
ZZ_MARK(0x800496A8);
ZZ_MARK_TARGET(0x800496AC,ZZ_494EC_1C0);
ZZ_MARK(0x800496B0);
ZZ_MARK(0x800496B4);
ZZ_MARK(0x800496B8);
ZZ_MARK(0x800496BC);
ZZ_MARK(0x800496C0);
ZZ_MARK(0x800496C4);
ZZ_MARK(0x800496C8);
ZZ_MARK(0x800496CC);
ZZ_MARK(0x800496D0);
ZZ_MARK(0x800496D4);
ZZ_MARK(0x800496D8);
ZZ_MARK(0x800496DC);
ZZ_MARK(0x800496E0);
ZZ_MARK(0x800496E4);
ZZ_MARK(0x800496E8);
ZZ_MARK(0x800496EC);
ZZ_MARK(0x800496F0);
ZZ_MARK(0x800496F4);
ZZ_MARK(0x800496F8);
ZZ_MARK(0x800496FC);
ZZ_MARK(0x80049700);
ZZ_MARK_TARGET(0x80049704,ZZ_494EC_218);
ZZ_MARK(0x80049708);
ZZ_MARK(0x8004970C);
ZZ_MARK(0x80049710);
ZZ_MARK(0x80049714);
ZZ_MARK(0x80049718);
ZZ_MARK(0x8004971C);
ZZ_MARK(0x80049720);
ZZ_MARK(0x80049724);
ZZ_MARK(0x80049728);
ZZ_MARK(0x8004972C);
ZZ_MARK(0x80049730);
ZZ_MARK(0x80049734);
ZZ_MARK(0x80049738);
ZZ_MARK(0x8004973C);
ZZ_MARK_TARGET(0x80049740,ZZ_494EC_254);
ZZ_MARK(0x80049744);
ZZ_MARK(0x80049748);
ZZ_MARK_TARGET(0x8004974C,ZZ_494EC_260);
ZZ_MARK(0x80049750);
ZZ_MARK(0x80049754);
ZZ_MARK(0x80049758);
ZZ_MARK(0x8004975C);
ZZ_MARK(0x80049760);
ZZ_MARK(0x80049764);
ZZ_MARK(0x80049768);
ZZ_MARK_TARGET(0x8004976C,ZZ_494EC_280);
ZZ_MARK(0x80049770);
ZZ_MARK(0x80049774);
ZZ_MARK(0x80049778);
ZZ_MARK(0x8004977C);
ZZ_MARK(0x80049780);
ZZ_MARK(0x80049784);
ZZ_MARK(0x80049788);
ZZ_MARK_TARGET(0x8004978C,ZZ_494EC_2A0);
ZZ_MARK_TARGET(0x80049790,ZZ_494EC_2A4);
ZZ_MARK(0x80049794);
ZZ_MARK(0x80049798);
ZZ_MARK(0x8004979C);
ZZ_MARK(0x800497A0);
ZZ_MARK(0x800497A4);
ZZ_MARK(0x800497A8);
ZZ_MARK(0x800497AC);
ZZ_MARK(0x800497B0);
ZZ_MARK_TARGET(0x800497B4,ZZ_494EC_2C8);
ZZ_MARK(0x800497B8);
ZZ_MARK(0x800497BC);
ZZ_MARK_TARGET(0x800497C0,ZZ_494EC_2D4);
ZZ_MARK(0x800497C4);
ZZ_MARK(0x800497C8);
ZZ_MARK_TARGET(0x800497CC,ZZ_494EC_2E0);
ZZ_MARK(0x800497D0);
ZZ_MARK(0x800497D4);
ZZ_MARK_TARGET(0x800497D8,ZZ_494EC_2EC);
ZZ_MARK(0x800497DC);
ZZ_MARK(0x800497E0);
ZZ_MARK(0x800497E4);
ZZ_MARK(0x800497E8);
ZZ_MARK(0x800497EC);
ZZ_MARK(0x800497F0);
ZZ_MARK(0x800497F4);
ZZ_MARK_TARGET(0x800497F8,ZZ_494EC_30C);
ZZ_MARK(0x800497FC);
ZZ_MARK(0x80049800);
ZZ_MARK(0x80049804);
ZZ_MARK(0x80049808);
ZZ_MARK(0x8004980C);
ZZ_MARK(0x80049810);
ZZ_MARK(0x80049814);
ZZ_MARK(0x80049818);
ZZ_MARK(0x8004981C);
ZZ_MARK(0x80049820);
ZZ_MARK_TARGET(0x80049824,ZZ_494EC_338);
ZZ_MARK(0x80049828);
ZZ_MARK(0x8004982C);
ZZ_MARK(0x80049830);
ZZ_MARK(0x80049834);
ZZ_MARK_TARGET(0x80049838,ZZ_494EC_34C);
ZZ_MARK(0x8004983C);
ZZ_MARK(0x80049840);
ZZ_MARK(0x80049844);
ZZ_MARK_TARGET(0x80049848,ZZ_494EC_35C);
ZZ_MARK(0x8004984C);
ZZ_MARK(0x80049850);
ZZ_MARK(0x80049854);
ZZ_MARK(0x80049858);
ZZ_MARK(0x8004985C);
ZZ_MARK(0x80049860);
ZZ_MARK(0x80049864);
ZZ_MARK(0x80049868);
ZZ_MARK(0x8004986C);
ZZ_MARK(0x80049870);
ZZ_MARK_TARGET(0x80049874,ZZ_494EC_388);
ZZ_MARK_TARGET(0x80049878,ZZ_494EC_38C);
ZZ_MARK(0x8004987C);
ZZ_MARK(0x80049880);
ZZ_MARK(0x80049884);
ZZ_MARK(0x80049888);
ZZ_MARK(0x8004988C);
ZZ_MARK(0x80049890);
ZZ_MARK(0x80049894);
ZZ_MARK(0x80049898);
ZZ_MARK(0x8004989C);
ZZ_MARK(0x800498A0);
ZZ_MARK(0x800498A4);
ZZ_MARK(0x800498A8);
ZZ_MARK(0x800498AC);
ZZ_MARK_TARGET(0x800498B0,ZZ_494EC_3C4);
ZZ_MARK(0x800498B4);
ZZ_MARK(0x800498B8);
ZZ_MARK(0x800498BC);
ZZ_MARK(0x800498C0);
ZZ_MARK_TARGET(0x800498C4,ZZ_494EC_3D8);
ZZ_MARK(0x800498C8);
ZZ_MARK(0x800498CC);
ZZ_MARK(0x800498D0);
ZZ_MARK_TARGET(0x800498D4,ZZ_494EC_3E8);
ZZ_MARK(0x800498D8);
ZZ_MARK(0x800498DC);
ZZ_MARK(0x800498E0);
ZZ_MARK(0x800498E4);
ZZ_MARK(0x800498E8);
ZZ_MARK(0x800498EC);
ZZ_MARK(0x800498F0);
ZZ_MARK(0x800498F4);
ZZ_MARK(0x800498F8);
ZZ_MARK(0x800498FC);
ZZ_MARK(0x80049900);
ZZ_MARK(0x80049904);
ZZ_MARK_TARGET(0x80049908,ZZ_494EC_41C);
ZZ_MARK(0x8004990C);
ZZ_MARK(0x80049910);
ZZ_MARK(0x80049914);
ZZ_MARK(0x80049918);
ZZ_MARK(0x8004991C);
ZZ_MARK(0x80049920);
ZZ_MARK_TARGET(0x80049924,ZZ_494EC_438);
ZZ_MARK(0x80049928);
ZZ_MARK(0x8004992C);
ZZ_MARK(0x80049930);
ZZ_MARK(0x80049934);
ZZ_MARK(0x80049938);
ZZ_MARK(0x8004993C);
ZZ_MARK_TARGET(0x80049940,ZZ_494EC_454);
ZZ_MARK(0x80049944);
ZZ_MARK(0x80049948);
ZZ_MARK(0x8004994C);
ZZ_MARK(0x80049950);
ZZ_MARK(0x80049954);
ZZ_MARK(0x80049958);
ZZ_MARK(0x8004995C);
ZZ_MARK_TARGET(0x80049960,ZZ_494EC_474);
ZZ_MARK(0x80049964);
ZZ_MARK(0x80049968);
ZZ_MARK(0x8004996C);
ZZ_MARK(0x80049970);
ZZ_MARK(0x80049974);
ZZ_MARK(0x80049978);
ZZ_MARK(0x8004997C);
ZZ_MARK(0x80049980);
ZZ_MARK(0x80049984);
ZZ_MARK(0x80049988);
ZZ_MARK_TARGET(0x8004998C,ZZ_494EC_4A0);
ZZ_MARK(0x80049990);
ZZ_MARK(0x80049994);
ZZ_MARK(0x80049998);
ZZ_MARK(0x8004999C);
ZZ_MARK(0x800499A0);
ZZ_MARK(0x800499A4);
ZZ_MARK_TARGET(0x800499A8,ZZ_494EC_4BC);
ZZ_MARK(0x800499AC);
ZZ_MARK(0x800499B0);
ZZ_MARK(0x800499B4);
ZZ_MARK(0x800499B8);
ZZ_MARK_TARGET(0x800499BC,ZZ_494EC_4D0);
ZZ_MARK(0x800499C0);
ZZ_MARK_TARGET(0x800499C4,ZZ_494EC_4D8);
ZZ_MARK(0x800499C8);
ZZ_MARK(0x800499CC);
ZZ_MARK(0x800499D0);
ZZ_MARK(0x800499D4);
ZZ_MARK(0x800499D8);
ZZ_MARK(0x800499DC);
ZZ_MARK_TARGET(0x800499E0,ZZ_494EC_4F4);
ZZ_MARK(0x800499E4);
ZZ_MARK(0x800499E8);
ZZ_MARK(0x800499EC);
ZZ_MARK(0x800499F0);
ZZ_MARK(0x800499F4);
ZZ_MARK(0x800499F8);
ZZ_MARK(0x800499FC);
ZZ_MARK(0x80049A00);
ZZ_MARK(0x80049A04);
ZZ_MARK(0x80049A08);
ZZ_MARK(0x80049A0C);
ZZ_MARK(0x80049A10);
ZZ_MARK(0x80049A14);
ZZ_MARK_TARGET(0x80049A18,ZZ_494EC_52C);
ZZ_MARK(0x80049A1C);
ZZ_MARK(0x80049A20);
ZZ_MARK(0x80049A24);
ZZ_MARK(0x80049A28);
ZZ_MARK(0x80049A2C);
ZZ_MARK_TARGET(0x80049A30,ZZ_494EC_544);
ZZ_MARK(0x80049A34);
ZZ_MARK(0x80049A38);
ZZ_MARK(0x80049A3C);
ZZ_MARK(0x80049A40);
ZZ_MARK(0x80049A44);
ZZ_MARK(0x80049A48);
ZZ_MARK(0x80049A4C);
ZZ_MARK_TARGET(0x80049A50,ZZ_494EC_564);
ZZ_MARK(0x80049A54);
ZZ_MARK(0x80049A58);
ZZ_MARK(0x80049A5C);
ZZ_MARK(0x80049A60);
ZZ_MARK_TARGET(0x80049A64,ZZ_494EC_578);
ZZ_MARK(0x80049A68);
ZZ_MARK(0x80049A6C);
ZZ_MARK(0x80049A70);
ZZ_MARK_TARGET(0x80049A74,ZZ_494EC_588);
ZZ_MARK(0x80049A78);
ZZ_MARK_TARGET(0x80049A7C,ZZ_494EC_590);
ZZ_MARK(0x80049A80);
ZZ_MARK(0x80049A84);
ZZ_MARK(0x80049A88);
ZZ_MARK(0x80049A8C);
ZZ_MARK(0x80049A90);
ZZ_MARK(0x80049A94);
ZZ_MARK(0x80049A98);
ZZ_MARK(0x80049A9C);
ZZ_MARK(0x80049AA0);
ZZ_MARK(0x80049AA4);
ZZ_MARK_TARGET(0x80049AA8,ZZ_494EC_5BC);
ZZ_MARK(0x80049AAC);
ZZ_MARK(0x80049AB0);
ZZ_MARK(0x80049AB4);
ZZ_MARK(0x80049AB8);
ZZ_MARK(0x80049ABC);
ZZ_MARK(0x80049AC0);
ZZ_MARK(0x80049AC4);
ZZ_MARK(0x80049AC8);
ZZ_MARK_TARGET(0x80049ACC,ZZ_494EC_5E0);
ZZ_MARK(0x80049AD0);
ZZ_MARK(0x80049AD4);
ZZ_MARK(0x80049AD8);
ZZ_MARK(0x80049ADC);
ZZ_MARK_TARGET(0x80049AE0,ZZ_494EC_5F4);
ZZ_MARK(0x80049AE4);
ZZ_MARK_TARGET(0x80049AE8,ZZ_494EC_5FC);
ZZ_MARK(0x80049AEC);
ZZ_MARK(0x80049AF0);
ZZ_MARK(0x80049AF4);
ZZ_MARK(0x80049AF8);
ZZ_MARK(0x80049AFC);
ZZ_MARK(0x80049B00);
ZZ_MARK(0x80049B04);
ZZ_MARK_TARGET(0x80049B08,ZZ_494EC_61C);
ZZ_MARK(0x80049B0C);
ZZ_MARK(0x80049B10);
ZZ_MARK(0x80049B14);
ZZ_MARK(0x80049B18);
ZZ_MARK(0x80049B1C);
ZZ_MARK(0x80049B20);
ZZ_MARK_TARGET(0x80049B24,ZZ_494EC_638);
ZZ_MARK(0x80049B28);
ZZ_MARK(0x80049B2C);
ZZ_MARK(0x80049B30);
ZZ_MARK(0x80049B34);
ZZ_MARK(0x80049B38);
ZZ_MARK(0x80049B3C);
ZZ_MARK_TARGET(0x80049B40,ZZ_494EC_654);
ZZ_MARK(0x80049B44);
ZZ_MARK(0x80049B48);
ZZ_MARK(0x80049B4C);
ZZ_MARK(0x80049B50);
ZZ_MARK(0x80049B54);
ZZ_MARK(0x80049B58);
ZZ_MARK(0x80049B5C);
ZZ_MARK(0x80049B60);
ZZ_MARK(0x80049B64);
ZZ_MARK(0x80049B68);
ZZ_MARK_TARGET(0x80049B6C,ZZ_494EC_680);
ZZ_MARK(0x80049B70);
ZZ_MARK(0x80049B74);
ZZ_MARK(0x80049B78);
ZZ_MARK(0x80049B7C);
ZZ_MARK(0x80049B80);
ZZ_MARK(0x80049B84);
ZZ_MARK(0x80049B88);
ZZ_MARK_TARGET(0x80049B8C,ZZ_494EC_6A0);
ZZ_MARK(0x80049B90);
ZZ_MARK(0x80049B94);
ZZ_MARK(0x80049B98);
ZZ_MARK(0x80049B9C);
ZZ_MARK(0x80049BA0);
ZZ_MARK(0x80049BA4);
ZZ_MARK(0x80049BA8);
ZZ_MARK(0x80049BAC);
ZZ_MARK(0x80049BB0);
ZZ_MARK(0x80049BB4);
ZZ_MARK(0x80049BB8);
ZZ_MARK(0x80049BBC);
ZZ_MARK(0x80049BC0);
ZZ_MARK(0x80049BC4);
ZZ_MARK(0x80049BC8);
ZZ_MARK(0x80049BCC);
ZZ_MARK(0x80049BD0);
ZZ_MARK(0x80049BD4);
ZZ_MARK_TARGET(0x80049BD8,ZZ_494EC_6EC);
ZZ_MARK(0x80049BDC);
ZZ_MARK(0x80049BE0);
ZZ_MARK(0x80049BE4);
ZZ_MARK_TARGET(0x80049BE8,ZZ_494EC_6FC);
ZZ_MARK(0x80049BEC);
ZZ_MARK_TARGET(0x80049BF0,ZZ_494EC_704);
ZZ_MARK(0x80049BF4);
ZZ_MARK(0x80049BF8);
ZZ_MARK_TARGET(0x80049BFC,ZZ_494EC_710);
ZZ_MARK(0x80049C00);
ZZ_MARK(0x80049C04);
ZZ_MARK(0x80049C08);
ZZ_MARK(0x80049C0C);
ZZ_MARK_TARGET(0x80049C10,ZZ_494EC_724);
ZZ_MARK(0x80049C14);
ZZ_MARK(0x80049C18);
ZZ_MARK(0x80049C1C);
ZZ_MARK(0x80049C20);
ZZ_MARK(0x80049C24);
ZZ_MARK(0x80049C28);
ZZ_MARK(0x80049C2C);
ZZ_MARK(0x80049C30);
ZZ_MARK(0x80049C34);
ZZ_MARK(0x80049C38);
ZZ_MARK_TARGET(0x80049C3C,ZZ_494EC_750);
ZZ_MARK(0x80049C40);
ZZ_MARK_TARGET(0x80049C44,ZZ_494EC_758);
ZZ_MARK(0x80049C48);
ZZ_MARK(0x80049C4C);
ZZ_MARK_TARGET(0x80049C50,ZZ_494EC_764);
ZZ_MARK(0x80049C54);
ZZ_MARK(0x80049C58);
ZZ_MARK_TARGET(0x80049C5C,ZZ_494EC_770);
ZZ_MARK(0x80049C60);
ZZ_MARK(0x80049C64);
ZZ_MARK(0x80049C68);
ZZ_MARK(0x80049C6C);
ZZ_MARK(0x80049C70);
ZZ_MARK(0x80049C74);
ZZ_MARK(0x80049C78);
ZZ_MARK(0x80049C7C);
ZZ_MARK(0x80049C80);
ZZ_MARK(0x80049C84);
ZZ_MARK_TARGET(0x80049C88,ZZ_494EC_79C);
ZZ_MARK(0x80049C8C);
ZZ_MARK(0x80049C90);
ZZ_MARK(0x80049C94);
ZZ_MARK(0x80049C98);
ZZ_MARK(0x80049C9C);
ZZ_MARK(0x80049CA0);
ZZ_MARK(0x80049CA4);
ZZ_MARK(0x80049CA8);
ZZ_MARK(0x80049CAC);
ZZ_MARK_TARGET(0x80049CB0,ZZ_494EC_7C4);
ZZ_MARK_TARGET(0x80049CB4,ZZ_494EC_7C8);
ZZ_MARK(0x80049CB8);
ZZ_MARK_TARGET(0x80049CBC,ZZ_494EC_7D0);
ZZ_MARK(0x80049CC0);
ZZ_MARK(0x80049CC4);
ZZ_MARK(0x80049CC8);
ZZ_MARK(0x80049CCC);
ZZ_MARK(0x80049CD0);
ZZ_MARK_TARGET(0x80049CD4,ZZ_494EC_7E8);
ZZ_MARK(0x80049CD8);
ZZ_MARK(0x80049CDC);
ZZ_MARK(0x80049CE0);
ZZ_MARK(0x80049CE4);
ZZ_MARK(0x80049CE8);
ZZ_MARK(0x80049CEC);
ZZ_MARK_TARGET(0x80049CF0,ZZ_494EC_804);
ZZ_MARK(0x80049CF4);
ZZ_MARK(0x80049CF8);
ZZ_MARK(0x80049CFC);
ZZ_MARK(0x80049D00);
ZZ_MARK(0x80049D04);
ZZ_MARK(0x80049D08);
ZZ_MARK(0x80049D0C);
ZZ_MARK_TARGET(0x80049D10,ZZ_494EC_824);
ZZ_MARK(0x80049D14);
ZZ_MARK(0x80049D18);
ZZ_MARK(0x80049D1C);
ZZ_MARK(0x80049D20);
ZZ_MARK(0x80049D24);
ZZ_MARK(0x80049D28);
ZZ_MARK(0x80049D2C);
ZZ_MARK(0x80049D30);
ZZ_MARK(0x80049D34);
ZZ_MARK(0x80049D38);
ZZ_MARK(0x80049D3C);
ZZ_MARK(0x80049D40);
ZZ_MARK(0x80049D44);
