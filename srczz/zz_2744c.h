#ifdef ZZ_INCLUDE_CODE
ZZ_2744C:
	SP -= 48;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0;
	EMU_Write32(SP + 40,RA); //+ 0x28
	EMU_Write32(SP + 36,S5); //+ 0x24
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU32(S1 + 80); //+ 0x50
	S2 = A1;
	S4 = EMU_ReadU32(V0 + 12); //+ 0xC
	if ((int32_t)S2 <= 0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(14,0x800274EC);
		goto ZZ_2744C_A0;
	}
	S3 = R0;
	S5 = 0x2;
	ZZ_CLOCKCYCLES(15,0x80027488);
ZZ_2744C_3C:
	A0 = EMU_ReadU32(S1 + 20); //+ 0x14
	V0 = (int32_t)A0 < (int32_t)S4;
	if (!V0)
	{
		V0 = A0 << 2;
		ZZ_CLOCKCYCLES(5,0x800274EC);
		goto ZZ_2744C_A0;
	}
	V0 = A0 << 2;
	V1 = EMU_ReadU32(S1 + 80); //+ 0x50
	V0 += V1;
	S0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = A0 + 1;
	A0 = S1;
	EMU_Write32(S1 + 20,V0); //+ 0x14
	RA = 0x800274C0; //ZZ_2744C_74
	A1 = S0;
	ZZ_CLOCKCYCLES(14,0x80027518);
	goto ZZ_27518;
ZZ_2744C_74:
	V1 = EMU_ReadU8(S0);
	V1 >>= 6;
	if (V1 != S5)
	{
		S3 |= V0;
		ZZ_CLOCKCYCLES(5,0x800274E4);
		goto ZZ_2744C_98;
	}
	S3 |= V0;
	V0 = EMU_ReadU32(S1);
	S2 -= 1;
	V0 += 256;
	EMU_Write32(S1,V0);
	ZZ_CLOCKCYCLES(9,0x800274E4);
ZZ_2744C_98:
	if ((int32_t)S2 > 0)
	{
		ZZ_CLOCKCYCLES(2,0x80027488);
		goto ZZ_2744C_3C;
	}
	ZZ_CLOCKCYCLES(2,0x800274EC);
ZZ_2744C_A0:
	V0 = S3;
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80027434,ZZ_27410_24);
	ZZ_JUMPREGISTER(0x800273E4,ZZ_27338_AC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002744C,0x80027488,ZZ_2744C);
ZZ_MARK_TARGET(0x80027488,0x800274C0,ZZ_2744C_3C);
ZZ_MARK_TARGET(0x800274C0,0x800274E4,ZZ_2744C_74);
ZZ_MARK_TARGET(0x800274E4,0x800274EC,ZZ_2744C_98);
ZZ_MARK_TARGET(0x800274EC,0x80027518,ZZ_2744C_A0);
