#ifdef ZZ_INCLUDE_CODE
ZZ_20C80:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 2524); //+ 0xFFFFF624
	SP -= 80;
	V1 = 0x80060000;
	V1 += 11440;
	V0 = V1 - 8740;
	EMU_Write32(SP + 72,RA); //+ 0x48
	EMU_Write32(V1,V0);
	V0 = V1 - 8692;
	AT = 0x80060000;
	EMU_Write32(AT + 11444,V0); //+ 0x2CB4
	V0 = V1 - 8436;
	AT = 0x80060000;
	EMU_Write32(AT + 11448,V0); //+ 0x2CB8
	V0 = V1 - 8868;
	A0 = 0x3;
	AT = 0x80060000;
	EMU_Write32(AT + 11452,V0); //+ 0x2CBC
	V0 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 11620,V0); //+ 0x2D64
	V0 = 0x4;
	AT = 0x80060000;
	EMU_Write32(AT + 11640,V0); //+ 0x2D78
	V0 = 0x80040000;
	V0 -= 8284;
	AT = 0x80060000;
	EMU_Write32(AT + 11644,A0); //+ 0x2D7C
	AT = 0x80060000;
	EMU_Write32(AT + 11636,A0); //+ 0x2D74
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V1 = EMU_ReadU32(V1 - 8740); //+ 0xFFFFDDDC
	V0 = EMU_ReadU32(A1 + 96); //+ 0x60
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	AT = 0x80060000;
	EMU_Write16(AT + 11580,V0); //+ 0x2D3C
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	AT = 0x80060000;
	EMU_Write16(AT + 11582,V0); //+ 0x2D3E
	V0 = EMU_ReadU32(A1 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	EMU_Write32(SP + 32,R0); //+ 0x20
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	AT = 0x80060000;
	EMU_Write32(AT + 11584,V0); //+ 0x2D40
	RA = 0x80020D84; //ZZ_20C80_104
	A1 = 0x185;
	ZZ_CLOCKCYCLES(65,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_104:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80020DA0);
		goto ZZ_20C80_120;
	}
	V0 = EMU_ReadU32(V0);
	AT = 0x80060000;
	EMU_Write32(AT + 11632,V0); //+ 0x2D70
	ZZ_CLOCKCYCLES(7,0x80020DA8);
	goto ZZ_20C80_128;
ZZ_20C80_120:
	AT = 0x80060000;
	EMU_Write32(AT + 11632,R0); //+ 0x2D70
	ZZ_CLOCKCYCLES(2,0x80020DA8);
ZZ_20C80_128:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	AT = 0x80070000;
	EMU_Write32(AT - 12316,V0); //+ 0xFFFFCFE4
	RA = 0x80020DC0; //ZZ_20C80_140
	ZZ_CLOCKCYCLES(6,0x80011E24);
	goto ZZ_11E24;
ZZ_20C80_140:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x1;
	if (!V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(6,0x80020E0C);
		goto ZZ_20C80_18C;
	}
	V1 = R0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x186;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020E08; //ZZ_20C80_188
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(18,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_188:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020E0C);
ZZ_20C80_18C:
	if (!V1)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(2,0x80020E6C);
		goto ZZ_20C80_1EC;
	}
	V0 = 0x6;
	AT = 0x80060000;
	EMU_Write32(AT + 11620,V0); //+ 0x2D64
	V0 = EMU_ReadU32(V1);
	V0 <<= 4;
	AT = 0x80060000;
	EMU_Write32(AT + 11476,V0); //+ 0x2CD4
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11480,V0); //+ 0x2CD8
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11484,V0); //+ 0x2CDC
	V0 = EMU_ReadU32(V1 + 12); //+ 0xC
	AT = 0x80060000;
	EMU_Write32(AT + 11624,V0); //+ 0x2D68
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	AT = 0x80060000;
	EMU_Write32(AT + 11628,V0); //+ 0x2D6C
	V0 = EMU_ReadU32(V1);
	ZZ_CLOCKCYCLES(24,0x80020E80);
	goto ZZ_20C80_200;
ZZ_20C80_1EC:
	V0 = 0x80000000;
	AT = 0x80060000;
	EMU_Write32(AT + 11624,R0); //+ 0x2D68
	AT = 0x80060000;
	EMU_Write32(AT + 11628,R0); //+ 0x2D6C
	ZZ_CLOCKCYCLES(5,0x80020E80);
ZZ_20C80_200:
	AT = 0x80070000;
	EMU_Write32(AT - 12320,V0); //+ 0xFFFFCFE0
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x1000;
	if (!V0)
	{
		A1 = 0x297;
		ZZ_CLOCKCYCLES(8,0x80020EF0);
		goto ZZ_20C80_270;
	}
	A1 = 0x297;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020ECC; //ZZ_20C80_24C
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(19,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_24C:
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11624,V1); //+ 0x2D68
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11628,V1); //+ 0x2D6C
	V0 = EMU_ReadU32(V0);
	AT = 0x80070000;
	EMU_Write32(AT - 12420,V0); //+ 0xFFFFCF7C
	ZZ_CLOCKCYCLES(9,0x80020EF0);
ZZ_20C80_270:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x400000;
	V0 &= V1;
	if (!V0)
	{
		A1 = 0x2AA;
		ZZ_CLOCKCYCLES(6,0x80020F80);
		goto ZZ_20C80_300;
	}
	A1 = 0x2AA;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = SP + 40;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020F3C; //ZZ_20C80_2BC
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(19,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_2BC:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80020F88);
		goto ZZ_20C80_308;
	}
	V0 = EMU_ReadS16(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11576,V0); //+ 0x2D38
	V0 = EMU_ReadS16(V1 + 2); //+ 0x2
	AT = 0x80060000;
	EMU_Write32(AT + 11564,V0); //+ 0x2D2C
	V0 = EMU_ReadS16(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11572,V0); //+ 0x2D34
	V0 = EMU_ReadS16(V1 + 6); //+ 0x6
	AT = 0x80060000;
	EMU_Write32(AT + 11568,V0); //+ 0x2D30
	ZZ_CLOCKCYCLES(17,0x80020F88);
	goto ZZ_20C80_308;
ZZ_20C80_300:
	AT = 0x80060000;
	EMU_Write32(AT + 11576,R0); //+ 0x2D38
	ZZ_CLOCKCYCLES(2,0x80020F88);
ZZ_20C80_308:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x10;
	if (!V0)
	{
		A1 = 0x1B5;
		ZZ_CLOCKCYCLES(6,0x8002117C);
		goto ZZ_20C80_4FC;
	}
	A1 = 0x1B5;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = SP + 48;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020FD4; //ZZ_20C80_354
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(19,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_354:
	A1 = V0;
	if (!A1)
	{
		ZZ_CLOCKCYCLES(3,0x80021114);
		goto ZZ_20C80_494;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 3048); //+ 0xFFFFF418
	if (V0)
	{
		V0 = 0x10000000;
		ZZ_CLOCKCYCLES(8,0x800210B8);
		goto ZZ_20C80_438;
	}
	V0 = 0x10000000;
	A2 = 0x80060000;
	A2 = EMU_ReadU16(A2 + 11532); //+ 0x2D0C
	A3 = 0x80060000;
	A3 = EMU_ReadU16(A3 + 11534); //+ 0x2D0E
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12756); //+ 0xFFFFCE2C
	T0 = 0x80060000;
	T0 = EMU_ReadU32(T0 + 11536); //+ 0x2D10
	V1 &= V0;
	AT = 0x80060000;
	EMU_Write16(AT + 11524,A2); //+ 0x2D04
	AT = 0x80060000;
	EMU_Write16(AT + 11526,A3); //+ 0x2D06
	AT = 0x80060000;
	EMU_Write32(AT + 11528,T0); //+ 0x2D08
	if (!V1)
	{
		ZZ_CLOCKCYCLES(25,0x8002107C);
		goto ZZ_20C80_3FC;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12452); //+ 0xFFFFCF5C
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12448); //+ 0xFFFFCF60
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12444); //+ 0xFFFFCF64
	V0 = A2 - V0;
	V1 = A3 - V1;
	A0 = T0 - A0;
	AT = 0x80060000;
	EMU_Write16(AT + 11532,V0); //+ 0x2D0C
	AT = 0x80060000;
	EMU_Write16(AT + 11534,V1); //+ 0x2D0E
	AT = 0x80060000;
	EMU_Write32(AT + 11536,A0); //+ 0x2D10
	ZZ_CLOCKCYCLES(42,0x800210B8);
	goto ZZ_20C80_438;
ZZ_20C80_3FC:
	V0 = EMU_ReadU16(A1);
	V0 = A2 - V0;
	AT = 0x80060000;
	EMU_Write16(AT + 11532,V0); //+ 0x2D0C
	V0 = EMU_ReadU16(A1 + 2); //+ 0x2
	V0 = A3 - V0;
	AT = 0x80060000;
	EMU_Write16(AT + 11534,V0); //+ 0x2D0E
	V0 = EMU_ReadS16(A1 + 4); //+ 0x4
	V0 = T0 - V0;
	AT = 0x80060000;
	EMU_Write32(AT + 11536,V0); //+ 0x2D10
	ZZ_CLOCKCYCLES(15,0x800210B8);
ZZ_20C80_438:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = 0x10000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800210E8);
		goto ZZ_20C80_468;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12440); //+ 0xFFFFCF68
	AT = 0x80060000;
	EMU_Write32(AT + 11560,V0); //+ 0x2D28
	ZZ_CLOCKCYCLES(12,0x800210FC);
	goto ZZ_20C80_47C;
ZZ_20C80_468:
	V0 = EMU_ReadS16(A1 + 6); //+ 0x6
	AT = 0x80060000;
	EMU_Write32(AT + 11560,V0); //+ 0x2D28
	AT = 0x80070000;
	EMU_Write32(AT - 12440,V0); //+ 0xFFFFCF68
	ZZ_CLOCKCYCLES(5,0x800210FC);
ZZ_20C80_47C:
	V0 = EMU_ReadS16(A1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11552,V0); //+ 0x2D20
	V0 = EMU_ReadS16(A1 + 10); //+ 0xA
	AT = 0x80060000;
	EMU_Write32(AT + 11556,V0); //+ 0x2D24
	ZZ_CLOCKCYCLES(6,0x80021114);
ZZ_20C80_494:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x1B6;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80021144; //ZZ_20C80_4C4
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(12,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_4C4:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021184);
		goto ZZ_20C80_504;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11540,V0); //+ 0x2D14
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11544,V0); //+ 0x2D18
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11548,V0); //+ 0x2D1C
	ZZ_CLOCKCYCLES(14,0x80021184);
	goto ZZ_20C80_504;
ZZ_20C80_4FC:
	AT = 0x80060000;
	EMU_Write32(AT + 11560,R0); //+ 0x2D28
	ZZ_CLOCKCYCLES(2,0x80021184);
ZZ_20C80_504:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x800000;
	V1 |= 0x4;
	V0 &= V1;
	if (!V0)
	{
		A1 = 0x1B7;
		ZZ_CLOCKCYCLES(7,0x80021348);
		goto ZZ_20C80_6C8;
	}
	A1 = 0x1B7;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x800211CC; //ZZ_20C80_54C
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(18,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_54C:
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12312); //+ 0xFFFFCFE8
	V0 = 0x80040000;
	V0 += 19720;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10544;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 20704;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 20824;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = 0xA;
	AT = 0x80060000;
	EMU_Write32(AT + 11620,V0); //+ 0x2D64
	V0 = 0x12;
	AT = 0x80060000;
	EMU_Write32(AT + 11636,V0); //+ 0x2D74
	if (!A1)
	{
		ZZ_CLOCKCYCLES(30,0x800212A0);
		goto ZZ_20C80_620;
	}
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(A1 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = EMU_ReadU32(A1 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(53,0x800212B4);
	goto ZZ_20C80_634;
ZZ_20C80_620:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x800212B4);
ZZ_20C80_634:
	AT = 0x80060000;
	EMU_Write32(AT + 11516,V0); //+ 0x2CFC
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12576); //+ 0xFFFFCEE0
	if (!A1)
	{
		ZZ_CLOCKCYCLES(7,0x8002132C);
		goto ZZ_20C80_6AC;
	}
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(A1 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = EMU_ReadU32(A1 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(30,0x80021340);
	goto ZZ_20C80_6C0;
ZZ_20C80_6AC:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x80021340);
ZZ_20C80_6C0:
	AT = 0x80060000;
	EMU_Write32(AT + 11508,V0); //+ 0x2CF4
	ZZ_CLOCKCYCLES(2,0x80021348);
ZZ_20C80_6C8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 11632); //+ 0x2D70
	V0 = V1 & 0x200;
	if (!V0)
	{
		V0 = V1 & 0x100;
		ZZ_CLOCKCYCLES(6,0x800213B4);
		goto ZZ_20C80_734;
	}
	V0 = V1 & 0x100;
	V0 = 0x80040000;
	V0 += 15860;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 15884;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 16096;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 16068;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 16332;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = V1 & 0x100;
	ZZ_CLOCKCYCLES(27,0x800213B4);
ZZ_20C80_734:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80021578);
		goto ZZ_20C80_8F8;
	}
	T0 = 0x80070000;
	T0 = EMU_ReadU32(T0 - 12312); //+ 0xFFFFCFE8
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12592); //+ 0xFFFFCED0
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12588); //+ 0xFFFFCED4
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12248); //+ 0xFFFFD028
	A2 = 0x80070000;
	A2 = EMU_ReadU32(A2 - 12244); //+ 0xFFFFD02C
	A3 = 0x80070000;
	A3 = EMU_ReadU32(A3 - 12572); //+ 0xFFFFCEE4
	V0 = 0x80040000;
	V0 += 12040;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10544;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 12572;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 12704;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V1 <<= 4;
	A0 <<= 4;
	AT = 0x80060000;
	EMU_Write32(AT + 11496,V1); //+ 0x2CE8
	AT = 0x80060000;
	EMU_Write32(AT + 11500,A1); //+ 0x2CEC
	AT = 0x80060000;
	EMU_Write32(AT + 11608,A0); //+ 0x2D58
	AT = 0x80060000;
	EMU_Write32(AT + 11612,A2); //+ 0x2D5C
	if (!T0)
	{
		A3 >>= 8;
		ZZ_CLOCKCYCLES(46,0x800214C8);
		goto ZZ_20C80_848;
	}
	A3 >>= 8;
	V0 = EMU_ReadU32(T0 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(T0 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = EMU_ReadU32(T0 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(69,0x800214DC);
	goto ZZ_20C80_85C;
ZZ_20C80_848:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x800214DC);
ZZ_20C80_85C:
	AT = 0x80060000;
	EMU_Write32(AT + 11516,V0); //+ 0x2CFC
	T0 = 0x80070000;
	T0 = EMU_ReadU32(T0 - 12576); //+ 0xFFFFCEE0
	if (!T0)
	{
		ZZ_CLOCKCYCLES(7,0x8002155C);
		goto ZZ_20C80_8DC;
	}
	if (!A3)
	{
		ZZ_CLOCKCYCLES(9,0x8002155C);
		goto ZZ_20C80_8DC;
	}
	V0 = EMU_ReadU32(T0 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(T0 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = EMU_ReadU32(T0 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(32,0x80021570);
	goto ZZ_20C80_8F0;
ZZ_20C80_8DC:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x80021570);
ZZ_20C80_8F0:
	AT = 0x80060000;
	EMU_Write32(AT + 11508,V0); //+ 0x2CF4
	ZZ_CLOCKCYCLES(2,0x80021578);
ZZ_20C80_8F8:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 11632); //+ 0x2D70
	V0 = A1 & 0x8000;
	if (!V0)
	{
		V0 = A1 & 0x8;
		ZZ_CLOCKCYCLES(6,0x80021608);
		goto ZZ_20C80_988;
	}
	V0 = A1 & 0x8;
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12248); //+ 0xFFFFD028
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12244); //+ 0xFFFFD02C
	V0 = 0x80040000;
	V0 += 19480;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 19528;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 19612;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V1 <<= 4;
	AT = 0x80060000;
	EMU_Write32(AT + 11608,V1); //+ 0x2D58
	AT = 0x80060000;
	EMU_Write32(AT + 11612,A0); //+ 0x2D5C
	V0 = A1 & 0x8;
	ZZ_CLOCKCYCLES(36,0x80021608);
ZZ_20C80_988:
	if (!V0)
	{
		A1 = 0x1B8;
		ZZ_CLOCKCYCLES(2,0x800216C0);
		goto ZZ_20C80_A40;
	}
	A1 = 0x1B8;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x8002163C; //ZZ_20C80_9BC
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(13,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_9BC:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021660);
		goto ZZ_20C80_9E0;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11488,V0); //+ 0x2CE0
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11492,V0); //+ 0x2CE4
	ZZ_CLOCKCYCLES(9,0x80021660);
ZZ_20C80_9E0:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12248); //+ 0xFFFFD028
	V0 = 0x80040000;
	V0 += 11316;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 11600;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 11796;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 11740;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 11972;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	AT = 0x80060000;
	EMU_Write32(AT + 11608,V1); //+ 0x2D58
	ZZ_CLOCKCYCLES(24,0x800216C0);
ZZ_20C80_A40:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x20;
	if (!V0)
	{
		A1 = 0x1DE;
		ZZ_CLOCKCYCLES(6,0x8002179C);
		goto ZZ_20C80_B1C;
	}
	A1 = 0x1DE;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80021704; //ZZ_20C80_A84
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(17,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_A84:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021734);
		goto ZZ_20C80_AB4;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11596,V0); //+ 0x2D4C
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11600,V0); //+ 0x2D50
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11604,V0); //+ 0x2D54
	ZZ_CLOCKCYCLES(12,0x80021734);
ZZ_20C80_AB4:
	V0 = 0x80040000;
	V0 += 15412;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 15468;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 15644;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = 0x8;
	AT = 0x80060000;
	EMU_Write32(AT + 11644,V0); //+ 0x2D7C
	V0 = 0xC;
	AT = 0x80060000;
	EMU_Write32(AT + 11640,V0); //+ 0x2D78
	ZZ_CLOCKCYCLES(26,0x8002179C);
ZZ_20C80_B1C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x200000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800218EC);
		goto ZZ_20C80_C6C;
	}
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12196); //+ 0xFFFFD05C
	if (!V1)
	{
		A1 = 0x1DE;
		ZZ_CLOCKCYCLES(11,0x80021828);
		goto ZZ_20C80_BA8;
	}
	A1 = 0x1DE;
	V0 = 0x80040000;
	V0 += 23604;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 23616;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 23884;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	AT = 0x80060000;
	EMU_Write32(AT + 11500,V1); //+ 0x2CEC
	ZZ_CLOCKCYCLES(35,0x800218EC);
	goto ZZ_20C80_C6C;
ZZ_20C80_BA8:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80021854; //ZZ_20C80_BD4
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(11,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_BD4:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021884);
		goto ZZ_20C80_C04;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11596,V0); //+ 0x2D4C
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11600,V0); //+ 0x2D50
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11604,V0); //+ 0x2D54
	ZZ_CLOCKCYCLES(12,0x80021884);
ZZ_20C80_C04:
	V0 = 0x80040000;
	V0 += 15412;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 15468;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 15644;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = 0x8;
	AT = 0x80060000;
	EMU_Write32(AT + 11644,V0); //+ 0x2D7C
	V0 = 0xC;
	AT = 0x80060000;
	EMU_Write32(AT + 11640,V0); //+ 0x2D78
	ZZ_CLOCKCYCLES(26,0x800218EC);
ZZ_20C80_C6C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80021954);
		goto ZZ_20C80_CD4;
	}
	V0 = 0x80040000;
	V0 += 16364;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 16412;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 16696;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	ZZ_CLOCKCYCLES(26,0x80021954);
ZZ_20C80_CD4:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = 0x1000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80021A44);
		goto ZZ_20C80_DC4;
	}
	A0 = 0x80060000;
	A0 -= 2924;
	RA = 0x8002197C; //ZZ_20C80_CFC
	ZZ_CLOCKCYCLES(10,0x80011F78);
	goto ZZ_11F78;
ZZ_20C80_CFC:
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12216); //+ 0xFFFFD048
	A0 = SP + 64;
	A2 = R0;
	EMU_Write32(SP + 64,V0); //+ 0x40
	V0 = 0x80040000;
	V0 += 24240;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 24608;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 25048;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 10208;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 10928;
	AT = 0x80070000;
	EMU_Write32(AT - 12220,A0); //+ 0xFFFFD044
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	RA = 0x800219F0; //ZZ_20C80_D70
	A1 >>= 8;
	ZZ_CLOCKCYCLES(29,0x8002FF84);
	goto ZZ_2FF84;
ZZ_20C80_D70:
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12220); //+ 0xFFFFD044
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12216); //+ 0xFFFFD048
	A2 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 11588,V0); //+ 0x2D44
	RA = 0x80021A14; //ZZ_20C80_D94
	A1 >>= 8;
	ZZ_CLOCKCYCLES(9,0x8002FF84);
	goto ZZ_2FF84;
ZZ_20C80_D94:
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12220); //+ 0xFFFFD044
	A1 = 0x8;
	AT = 0x80060000;
	EMU_Write32(AT + 11592,V0); //+ 0x2D48
	RA = 0x80021A30; //ZZ_20C80_DB0
	A2 = R0;
	ZZ_CLOCKCYCLES(7,0x8002FF84);
	goto ZZ_2FF84;
ZZ_20C80_DB0:
	V0 += 4;
	V1 = -16;
	V0 &= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11616,V0); //+ 0x2D60
	ZZ_CLOCKCYCLES(5,0x80021A44);
ZZ_20C80_DC4:
	RA = EMU_ReadU32(SP + 72); //+ 0x48
	SP += 80;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80017D04,ZZ_17CE8_1C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80020C80,ZZ_20C80);
ZZ_MARK(0x80020C84);
ZZ_MARK(0x80020C88);
ZZ_MARK(0x80020C8C);
ZZ_MARK(0x80020C90);
ZZ_MARK(0x80020C94);
ZZ_MARK(0x80020C98);
ZZ_MARK(0x80020C9C);
ZZ_MARK(0x80020CA0);
ZZ_MARK(0x80020CA4);
ZZ_MARK(0x80020CA8);
ZZ_MARK(0x80020CAC);
ZZ_MARK(0x80020CB0);
ZZ_MARK(0x80020CB4);
ZZ_MARK(0x80020CB8);
ZZ_MARK(0x80020CBC);
ZZ_MARK(0x80020CC0);
ZZ_MARK(0x80020CC4);
ZZ_MARK(0x80020CC8);
ZZ_MARK(0x80020CCC);
ZZ_MARK(0x80020CD0);
ZZ_MARK(0x80020CD4);
ZZ_MARK(0x80020CD8);
ZZ_MARK(0x80020CDC);
ZZ_MARK(0x80020CE0);
ZZ_MARK(0x80020CE4);
ZZ_MARK(0x80020CE8);
ZZ_MARK(0x80020CEC);
ZZ_MARK(0x80020CF0);
ZZ_MARK(0x80020CF4);
ZZ_MARK(0x80020CF8);
ZZ_MARK(0x80020CFC);
ZZ_MARK(0x80020D00);
ZZ_MARK(0x80020D04);
ZZ_MARK(0x80020D08);
ZZ_MARK(0x80020D0C);
ZZ_MARK(0x80020D10);
ZZ_MARK(0x80020D14);
ZZ_MARK(0x80020D18);
ZZ_MARK(0x80020D1C);
ZZ_MARK(0x80020D20);
ZZ_MARK(0x80020D24);
ZZ_MARK(0x80020D28);
ZZ_MARK(0x80020D2C);
ZZ_MARK(0x80020D30);
ZZ_MARK(0x80020D34);
ZZ_MARK(0x80020D38);
ZZ_MARK(0x80020D3C);
ZZ_MARK(0x80020D40);
ZZ_MARK(0x80020D44);
ZZ_MARK(0x80020D48);
ZZ_MARK(0x80020D4C);
ZZ_MARK(0x80020D50);
ZZ_MARK(0x80020D54);
ZZ_MARK(0x80020D58);
ZZ_MARK(0x80020D5C);
ZZ_MARK(0x80020D60);
ZZ_MARK(0x80020D64);
ZZ_MARK(0x80020D68);
ZZ_MARK(0x80020D6C);
ZZ_MARK(0x80020D70);
ZZ_MARK(0x80020D74);
ZZ_MARK(0x80020D78);
ZZ_MARK(0x80020D7C);
ZZ_MARK(0x80020D80);
ZZ_MARK_TARGET(0x80020D84,ZZ_20C80_104);
ZZ_MARK(0x80020D88);
ZZ_MARK(0x80020D8C);
ZZ_MARK(0x80020D90);
ZZ_MARK(0x80020D94);
ZZ_MARK(0x80020D98);
ZZ_MARK(0x80020D9C);
ZZ_MARK_TARGET(0x80020DA0,ZZ_20C80_120);
ZZ_MARK(0x80020DA4);
ZZ_MARK_TARGET(0x80020DA8,ZZ_20C80_128);
ZZ_MARK(0x80020DAC);
ZZ_MARK(0x80020DB0);
ZZ_MARK(0x80020DB4);
ZZ_MARK(0x80020DB8);
ZZ_MARK(0x80020DBC);
ZZ_MARK_TARGET(0x80020DC0,ZZ_20C80_140);
ZZ_MARK(0x80020DC4);
ZZ_MARK(0x80020DC8);
ZZ_MARK(0x80020DCC);
ZZ_MARK(0x80020DD0);
ZZ_MARK(0x80020DD4);
ZZ_MARK(0x80020DD8);
ZZ_MARK(0x80020DDC);
ZZ_MARK(0x80020DE0);
ZZ_MARK(0x80020DE4);
ZZ_MARK(0x80020DE8);
ZZ_MARK(0x80020DEC);
ZZ_MARK(0x80020DF0);
ZZ_MARK(0x80020DF4);
ZZ_MARK(0x80020DF8);
ZZ_MARK(0x80020DFC);
ZZ_MARK(0x80020E00);
ZZ_MARK(0x80020E04);
ZZ_MARK_TARGET(0x80020E08,ZZ_20C80_188);
ZZ_MARK_TARGET(0x80020E0C,ZZ_20C80_18C);
ZZ_MARK(0x80020E10);
ZZ_MARK(0x80020E14);
ZZ_MARK(0x80020E18);
ZZ_MARK(0x80020E1C);
ZZ_MARK(0x80020E20);
ZZ_MARK(0x80020E24);
ZZ_MARK(0x80020E28);
ZZ_MARK(0x80020E2C);
ZZ_MARK(0x80020E30);
ZZ_MARK(0x80020E34);
ZZ_MARK(0x80020E38);
ZZ_MARK(0x80020E3C);
ZZ_MARK(0x80020E40);
ZZ_MARK(0x80020E44);
ZZ_MARK(0x80020E48);
ZZ_MARK(0x80020E4C);
ZZ_MARK(0x80020E50);
ZZ_MARK(0x80020E54);
ZZ_MARK(0x80020E58);
ZZ_MARK(0x80020E5C);
ZZ_MARK(0x80020E60);
ZZ_MARK(0x80020E64);
ZZ_MARK(0x80020E68);
ZZ_MARK_TARGET(0x80020E6C,ZZ_20C80_1EC);
ZZ_MARK(0x80020E70);
ZZ_MARK(0x80020E74);
ZZ_MARK(0x80020E78);
ZZ_MARK(0x80020E7C);
ZZ_MARK_TARGET(0x80020E80,ZZ_20C80_200);
ZZ_MARK(0x80020E84);
ZZ_MARK(0x80020E88);
ZZ_MARK(0x80020E8C);
ZZ_MARK(0x80020E90);
ZZ_MARK(0x80020E94);
ZZ_MARK(0x80020E98);
ZZ_MARK(0x80020E9C);
ZZ_MARK(0x80020EA0);
ZZ_MARK(0x80020EA4);
ZZ_MARK(0x80020EA8);
ZZ_MARK(0x80020EAC);
ZZ_MARK(0x80020EB0);
ZZ_MARK(0x80020EB4);
ZZ_MARK(0x80020EB8);
ZZ_MARK(0x80020EBC);
ZZ_MARK(0x80020EC0);
ZZ_MARK(0x80020EC4);
ZZ_MARK(0x80020EC8);
ZZ_MARK_TARGET(0x80020ECC,ZZ_20C80_24C);
ZZ_MARK(0x80020ED0);
ZZ_MARK(0x80020ED4);
ZZ_MARK(0x80020ED8);
ZZ_MARK(0x80020EDC);
ZZ_MARK(0x80020EE0);
ZZ_MARK(0x80020EE4);
ZZ_MARK(0x80020EE8);
ZZ_MARK(0x80020EEC);
ZZ_MARK_TARGET(0x80020EF0,ZZ_20C80_270);
ZZ_MARK(0x80020EF4);
ZZ_MARK(0x80020EF8);
ZZ_MARK(0x80020EFC);
ZZ_MARK(0x80020F00);
ZZ_MARK(0x80020F04);
ZZ_MARK(0x80020F08);
ZZ_MARK(0x80020F0C);
ZZ_MARK(0x80020F10);
ZZ_MARK(0x80020F14);
ZZ_MARK(0x80020F18);
ZZ_MARK(0x80020F1C);
ZZ_MARK(0x80020F20);
ZZ_MARK(0x80020F24);
ZZ_MARK(0x80020F28);
ZZ_MARK(0x80020F2C);
ZZ_MARK(0x80020F30);
ZZ_MARK(0x80020F34);
ZZ_MARK(0x80020F38);
ZZ_MARK_TARGET(0x80020F3C,ZZ_20C80_2BC);
ZZ_MARK(0x80020F40);
ZZ_MARK(0x80020F44);
ZZ_MARK(0x80020F48);
ZZ_MARK(0x80020F4C);
ZZ_MARK(0x80020F50);
ZZ_MARK(0x80020F54);
ZZ_MARK(0x80020F58);
ZZ_MARK(0x80020F5C);
ZZ_MARK(0x80020F60);
ZZ_MARK(0x80020F64);
ZZ_MARK(0x80020F68);
ZZ_MARK(0x80020F6C);
ZZ_MARK(0x80020F70);
ZZ_MARK(0x80020F74);
ZZ_MARK(0x80020F78);
ZZ_MARK(0x80020F7C);
ZZ_MARK_TARGET(0x80020F80,ZZ_20C80_300);
ZZ_MARK(0x80020F84);
ZZ_MARK_TARGET(0x80020F88,ZZ_20C80_308);
ZZ_MARK(0x80020F8C);
ZZ_MARK(0x80020F90);
ZZ_MARK(0x80020F94);
ZZ_MARK(0x80020F98);
ZZ_MARK(0x80020F9C);
ZZ_MARK(0x80020FA0);
ZZ_MARK(0x80020FA4);
ZZ_MARK(0x80020FA8);
ZZ_MARK(0x80020FAC);
ZZ_MARK(0x80020FB0);
ZZ_MARK(0x80020FB4);
ZZ_MARK(0x80020FB8);
ZZ_MARK(0x80020FBC);
ZZ_MARK(0x80020FC0);
ZZ_MARK(0x80020FC4);
ZZ_MARK(0x80020FC8);
ZZ_MARK(0x80020FCC);
ZZ_MARK(0x80020FD0);
ZZ_MARK_TARGET(0x80020FD4,ZZ_20C80_354);
ZZ_MARK(0x80020FD8);
ZZ_MARK(0x80020FDC);
ZZ_MARK(0x80020FE0);
ZZ_MARK(0x80020FE4);
ZZ_MARK(0x80020FE8);
ZZ_MARK(0x80020FEC);
ZZ_MARK(0x80020FF0);
ZZ_MARK(0x80020FF4);
ZZ_MARK(0x80020FF8);
ZZ_MARK(0x80020FFC);
ZZ_MARK(0x80021000);
ZZ_MARK(0x80021004);
ZZ_MARK(0x80021008);
ZZ_MARK(0x8002100C);
ZZ_MARK(0x80021010);
ZZ_MARK(0x80021014);
ZZ_MARK(0x80021018);
ZZ_MARK(0x8002101C);
ZZ_MARK(0x80021020);
ZZ_MARK(0x80021024);
ZZ_MARK(0x80021028);
ZZ_MARK(0x8002102C);
ZZ_MARK(0x80021030);
ZZ_MARK(0x80021034);
ZZ_MARK(0x80021038);
ZZ_MARK(0x8002103C);
ZZ_MARK(0x80021040);
ZZ_MARK(0x80021044);
ZZ_MARK(0x80021048);
ZZ_MARK(0x8002104C);
ZZ_MARK(0x80021050);
ZZ_MARK(0x80021054);
ZZ_MARK(0x80021058);
ZZ_MARK(0x8002105C);
ZZ_MARK(0x80021060);
ZZ_MARK(0x80021064);
ZZ_MARK(0x80021068);
ZZ_MARK(0x8002106C);
ZZ_MARK(0x80021070);
ZZ_MARK(0x80021074);
ZZ_MARK(0x80021078);
ZZ_MARK_TARGET(0x8002107C,ZZ_20C80_3FC);
ZZ_MARK(0x80021080);
ZZ_MARK(0x80021084);
ZZ_MARK(0x80021088);
ZZ_MARK(0x8002108C);
ZZ_MARK(0x80021090);
ZZ_MARK(0x80021094);
ZZ_MARK(0x80021098);
ZZ_MARK(0x8002109C);
ZZ_MARK(0x800210A0);
ZZ_MARK(0x800210A4);
ZZ_MARK(0x800210A8);
ZZ_MARK(0x800210AC);
ZZ_MARK(0x800210B0);
ZZ_MARK(0x800210B4);
ZZ_MARK_TARGET(0x800210B8,ZZ_20C80_438);
ZZ_MARK(0x800210BC);
ZZ_MARK(0x800210C0);
ZZ_MARK(0x800210C4);
ZZ_MARK(0x800210C8);
ZZ_MARK(0x800210CC);
ZZ_MARK(0x800210D0);
ZZ_MARK(0x800210D4);
ZZ_MARK(0x800210D8);
ZZ_MARK(0x800210DC);
ZZ_MARK(0x800210E0);
ZZ_MARK(0x800210E4);
ZZ_MARK_TARGET(0x800210E8,ZZ_20C80_468);
ZZ_MARK(0x800210EC);
ZZ_MARK(0x800210F0);
ZZ_MARK(0x800210F4);
ZZ_MARK(0x800210F8);
ZZ_MARK_TARGET(0x800210FC,ZZ_20C80_47C);
ZZ_MARK(0x80021100);
ZZ_MARK(0x80021104);
ZZ_MARK(0x80021108);
ZZ_MARK(0x8002110C);
ZZ_MARK(0x80021110);
ZZ_MARK_TARGET(0x80021114,ZZ_20C80_494);
ZZ_MARK(0x80021118);
ZZ_MARK(0x8002111C);
ZZ_MARK(0x80021120);
ZZ_MARK(0x80021124);
ZZ_MARK(0x80021128);
ZZ_MARK(0x8002112C);
ZZ_MARK(0x80021130);
ZZ_MARK(0x80021134);
ZZ_MARK(0x80021138);
ZZ_MARK(0x8002113C);
ZZ_MARK(0x80021140);
ZZ_MARK_TARGET(0x80021144,ZZ_20C80_4C4);
ZZ_MARK(0x80021148);
ZZ_MARK(0x8002114C);
ZZ_MARK(0x80021150);
ZZ_MARK(0x80021154);
ZZ_MARK(0x80021158);
ZZ_MARK(0x8002115C);
ZZ_MARK(0x80021160);
ZZ_MARK(0x80021164);
ZZ_MARK(0x80021168);
ZZ_MARK(0x8002116C);
ZZ_MARK(0x80021170);
ZZ_MARK(0x80021174);
ZZ_MARK(0x80021178);
ZZ_MARK_TARGET(0x8002117C,ZZ_20C80_4FC);
ZZ_MARK(0x80021180);
ZZ_MARK_TARGET(0x80021184,ZZ_20C80_504);
ZZ_MARK(0x80021188);
ZZ_MARK(0x8002118C);
ZZ_MARK(0x80021190);
ZZ_MARK(0x80021194);
ZZ_MARK(0x80021198);
ZZ_MARK(0x8002119C);
ZZ_MARK(0x800211A0);
ZZ_MARK(0x800211A4);
ZZ_MARK(0x800211A8);
ZZ_MARK(0x800211AC);
ZZ_MARK(0x800211B0);
ZZ_MARK(0x800211B4);
ZZ_MARK(0x800211B8);
ZZ_MARK(0x800211BC);
ZZ_MARK(0x800211C0);
ZZ_MARK(0x800211C4);
ZZ_MARK(0x800211C8);
ZZ_MARK_TARGET(0x800211CC,ZZ_20C80_54C);
ZZ_MARK(0x800211D0);
ZZ_MARK(0x800211D4);
ZZ_MARK(0x800211D8);
ZZ_MARK(0x800211DC);
ZZ_MARK(0x800211E0);
ZZ_MARK(0x800211E4);
ZZ_MARK(0x800211E8);
ZZ_MARK(0x800211EC);
ZZ_MARK(0x800211F0);
ZZ_MARK(0x800211F4);
ZZ_MARK(0x800211F8);
ZZ_MARK(0x800211FC);
ZZ_MARK(0x80021200);
ZZ_MARK(0x80021204);
ZZ_MARK(0x80021208);
ZZ_MARK(0x8002120C);
ZZ_MARK(0x80021210);
ZZ_MARK(0x80021214);
ZZ_MARK(0x80021218);
ZZ_MARK(0x8002121C);
ZZ_MARK(0x80021220);
ZZ_MARK(0x80021224);
ZZ_MARK(0x80021228);
ZZ_MARK(0x8002122C);
ZZ_MARK(0x80021230);
ZZ_MARK(0x80021234);
ZZ_MARK(0x80021238);
ZZ_MARK(0x8002123C);
ZZ_MARK(0x80021240);
ZZ_MARK(0x80021244);
ZZ_MARK(0x80021248);
ZZ_MARK(0x8002124C);
ZZ_MARK(0x80021250);
ZZ_MARK(0x80021254);
ZZ_MARK(0x80021258);
ZZ_MARK(0x8002125C);
ZZ_MARK(0x80021260);
ZZ_MARK(0x80021264);
ZZ_MARK(0x80021268);
ZZ_MARK(0x8002126C);
ZZ_MARK(0x80021270);
ZZ_MARK(0x80021274);
ZZ_MARK(0x80021278);
ZZ_MARK(0x8002127C);
ZZ_MARK(0x80021280);
ZZ_MARK(0x80021284);
ZZ_MARK(0x80021288);
ZZ_MARK(0x8002128C);
ZZ_MARK(0x80021290);
ZZ_MARK(0x80021294);
ZZ_MARK(0x80021298);
ZZ_MARK(0x8002129C);
ZZ_MARK_TARGET(0x800212A0,ZZ_20C80_620);
ZZ_MARK(0x800212A4);
ZZ_MARK(0x800212A8);
ZZ_MARK(0x800212AC);
ZZ_MARK(0x800212B0);
ZZ_MARK_TARGET(0x800212B4,ZZ_20C80_634);
ZZ_MARK(0x800212B8);
ZZ_MARK(0x800212BC);
ZZ_MARK(0x800212C0);
ZZ_MARK(0x800212C4);
ZZ_MARK(0x800212C8);
ZZ_MARK(0x800212CC);
ZZ_MARK(0x800212D0);
ZZ_MARK(0x800212D4);
ZZ_MARK(0x800212D8);
ZZ_MARK(0x800212DC);
ZZ_MARK(0x800212E0);
ZZ_MARK(0x800212E4);
ZZ_MARK(0x800212E8);
ZZ_MARK(0x800212EC);
ZZ_MARK(0x800212F0);
ZZ_MARK(0x800212F4);
ZZ_MARK(0x800212F8);
ZZ_MARK(0x800212FC);
ZZ_MARK(0x80021300);
ZZ_MARK(0x80021304);
ZZ_MARK(0x80021308);
ZZ_MARK(0x8002130C);
ZZ_MARK(0x80021310);
ZZ_MARK(0x80021314);
ZZ_MARK(0x80021318);
ZZ_MARK(0x8002131C);
ZZ_MARK(0x80021320);
ZZ_MARK(0x80021324);
ZZ_MARK(0x80021328);
ZZ_MARK_TARGET(0x8002132C,ZZ_20C80_6AC);
ZZ_MARK(0x80021330);
ZZ_MARK(0x80021334);
ZZ_MARK(0x80021338);
ZZ_MARK(0x8002133C);
ZZ_MARK_TARGET(0x80021340,ZZ_20C80_6C0);
ZZ_MARK(0x80021344);
ZZ_MARK_TARGET(0x80021348,ZZ_20C80_6C8);
ZZ_MARK(0x8002134C);
ZZ_MARK(0x80021350);
ZZ_MARK(0x80021354);
ZZ_MARK(0x80021358);
ZZ_MARK(0x8002135C);
ZZ_MARK(0x80021360);
ZZ_MARK(0x80021364);
ZZ_MARK(0x80021368);
ZZ_MARK(0x8002136C);
ZZ_MARK(0x80021370);
ZZ_MARK(0x80021374);
ZZ_MARK(0x80021378);
ZZ_MARK(0x8002137C);
ZZ_MARK(0x80021380);
ZZ_MARK(0x80021384);
ZZ_MARK(0x80021388);
ZZ_MARK(0x8002138C);
ZZ_MARK(0x80021390);
ZZ_MARK(0x80021394);
ZZ_MARK(0x80021398);
ZZ_MARK(0x8002139C);
ZZ_MARK(0x800213A0);
ZZ_MARK(0x800213A4);
ZZ_MARK(0x800213A8);
ZZ_MARK(0x800213AC);
ZZ_MARK(0x800213B0);
ZZ_MARK_TARGET(0x800213B4,ZZ_20C80_734);
ZZ_MARK(0x800213B8);
ZZ_MARK(0x800213BC);
ZZ_MARK(0x800213C0);
ZZ_MARK(0x800213C4);
ZZ_MARK(0x800213C8);
ZZ_MARK(0x800213CC);
ZZ_MARK(0x800213D0);
ZZ_MARK(0x800213D4);
ZZ_MARK(0x800213D8);
ZZ_MARK(0x800213DC);
ZZ_MARK(0x800213E0);
ZZ_MARK(0x800213E4);
ZZ_MARK(0x800213E8);
ZZ_MARK(0x800213EC);
ZZ_MARK(0x800213F0);
ZZ_MARK(0x800213F4);
ZZ_MARK(0x800213F8);
ZZ_MARK(0x800213FC);
ZZ_MARK(0x80021400);
ZZ_MARK(0x80021404);
ZZ_MARK(0x80021408);
ZZ_MARK(0x8002140C);
ZZ_MARK(0x80021410);
ZZ_MARK(0x80021414);
ZZ_MARK(0x80021418);
ZZ_MARK(0x8002141C);
ZZ_MARK(0x80021420);
ZZ_MARK(0x80021424);
ZZ_MARK(0x80021428);
ZZ_MARK(0x8002142C);
ZZ_MARK(0x80021430);
ZZ_MARK(0x80021434);
ZZ_MARK(0x80021438);
ZZ_MARK(0x8002143C);
ZZ_MARK(0x80021440);
ZZ_MARK(0x80021444);
ZZ_MARK(0x80021448);
ZZ_MARK(0x8002144C);
ZZ_MARK(0x80021450);
ZZ_MARK(0x80021454);
ZZ_MARK(0x80021458);
ZZ_MARK(0x8002145C);
ZZ_MARK(0x80021460);
ZZ_MARK(0x80021464);
ZZ_MARK(0x80021468);
ZZ_MARK(0x8002146C);
ZZ_MARK(0x80021470);
ZZ_MARK(0x80021474);
ZZ_MARK(0x80021478);
ZZ_MARK(0x8002147C);
ZZ_MARK(0x80021480);
ZZ_MARK(0x80021484);
ZZ_MARK(0x80021488);
ZZ_MARK(0x8002148C);
ZZ_MARK(0x80021490);
ZZ_MARK(0x80021494);
ZZ_MARK(0x80021498);
ZZ_MARK(0x8002149C);
ZZ_MARK(0x800214A0);
ZZ_MARK(0x800214A4);
ZZ_MARK(0x800214A8);
ZZ_MARK(0x800214AC);
ZZ_MARK(0x800214B0);
ZZ_MARK(0x800214B4);
ZZ_MARK(0x800214B8);
ZZ_MARK(0x800214BC);
ZZ_MARK(0x800214C0);
ZZ_MARK(0x800214C4);
ZZ_MARK_TARGET(0x800214C8,ZZ_20C80_848);
ZZ_MARK(0x800214CC);
ZZ_MARK(0x800214D0);
ZZ_MARK(0x800214D4);
ZZ_MARK(0x800214D8);
ZZ_MARK_TARGET(0x800214DC,ZZ_20C80_85C);
ZZ_MARK(0x800214E0);
ZZ_MARK(0x800214E4);
ZZ_MARK(0x800214E8);
ZZ_MARK(0x800214EC);
ZZ_MARK(0x800214F0);
ZZ_MARK(0x800214F4);
ZZ_MARK(0x800214F8);
ZZ_MARK(0x800214FC);
ZZ_MARK(0x80021500);
ZZ_MARK(0x80021504);
ZZ_MARK(0x80021508);
ZZ_MARK(0x8002150C);
ZZ_MARK(0x80021510);
ZZ_MARK(0x80021514);
ZZ_MARK(0x80021518);
ZZ_MARK(0x8002151C);
ZZ_MARK(0x80021520);
ZZ_MARK(0x80021524);
ZZ_MARK(0x80021528);
ZZ_MARK(0x8002152C);
ZZ_MARK(0x80021530);
ZZ_MARK(0x80021534);
ZZ_MARK(0x80021538);
ZZ_MARK(0x8002153C);
ZZ_MARK(0x80021540);
ZZ_MARK(0x80021544);
ZZ_MARK(0x80021548);
ZZ_MARK(0x8002154C);
ZZ_MARK(0x80021550);
ZZ_MARK(0x80021554);
ZZ_MARK(0x80021558);
ZZ_MARK_TARGET(0x8002155C,ZZ_20C80_8DC);
ZZ_MARK(0x80021560);
ZZ_MARK(0x80021564);
ZZ_MARK(0x80021568);
ZZ_MARK(0x8002156C);
ZZ_MARK_TARGET(0x80021570,ZZ_20C80_8F0);
ZZ_MARK(0x80021574);
ZZ_MARK_TARGET(0x80021578,ZZ_20C80_8F8);
ZZ_MARK(0x8002157C);
ZZ_MARK(0x80021580);
ZZ_MARK(0x80021584);
ZZ_MARK(0x80021588);
ZZ_MARK(0x8002158C);
ZZ_MARK(0x80021590);
ZZ_MARK(0x80021594);
ZZ_MARK(0x80021598);
ZZ_MARK(0x8002159C);
ZZ_MARK(0x800215A0);
ZZ_MARK(0x800215A4);
ZZ_MARK(0x800215A8);
ZZ_MARK(0x800215AC);
ZZ_MARK(0x800215B0);
ZZ_MARK(0x800215B4);
ZZ_MARK(0x800215B8);
ZZ_MARK(0x800215BC);
ZZ_MARK(0x800215C0);
ZZ_MARK(0x800215C4);
ZZ_MARK(0x800215C8);
ZZ_MARK(0x800215CC);
ZZ_MARK(0x800215D0);
ZZ_MARK(0x800215D4);
ZZ_MARK(0x800215D8);
ZZ_MARK(0x800215DC);
ZZ_MARK(0x800215E0);
ZZ_MARK(0x800215E4);
ZZ_MARK(0x800215E8);
ZZ_MARK(0x800215EC);
ZZ_MARK(0x800215F0);
ZZ_MARK(0x800215F4);
ZZ_MARK(0x800215F8);
ZZ_MARK(0x800215FC);
ZZ_MARK(0x80021600);
ZZ_MARK(0x80021604);
ZZ_MARK_TARGET(0x80021608,ZZ_20C80_988);
ZZ_MARK(0x8002160C);
ZZ_MARK(0x80021610);
ZZ_MARK(0x80021614);
ZZ_MARK(0x80021618);
ZZ_MARK(0x8002161C);
ZZ_MARK(0x80021620);
ZZ_MARK(0x80021624);
ZZ_MARK(0x80021628);
ZZ_MARK(0x8002162C);
ZZ_MARK(0x80021630);
ZZ_MARK(0x80021634);
ZZ_MARK(0x80021638);
ZZ_MARK_TARGET(0x8002163C,ZZ_20C80_9BC);
ZZ_MARK(0x80021640);
ZZ_MARK(0x80021644);
ZZ_MARK(0x80021648);
ZZ_MARK(0x8002164C);
ZZ_MARK(0x80021650);
ZZ_MARK(0x80021654);
ZZ_MARK(0x80021658);
ZZ_MARK(0x8002165C);
ZZ_MARK_TARGET(0x80021660,ZZ_20C80_9E0);
ZZ_MARK(0x80021664);
ZZ_MARK(0x80021668);
ZZ_MARK(0x8002166C);
ZZ_MARK(0x80021670);
ZZ_MARK(0x80021674);
ZZ_MARK(0x80021678);
ZZ_MARK(0x8002167C);
ZZ_MARK(0x80021680);
ZZ_MARK(0x80021684);
ZZ_MARK(0x80021688);
ZZ_MARK(0x8002168C);
ZZ_MARK(0x80021690);
ZZ_MARK(0x80021694);
ZZ_MARK(0x80021698);
ZZ_MARK(0x8002169C);
ZZ_MARK(0x800216A0);
ZZ_MARK(0x800216A4);
ZZ_MARK(0x800216A8);
ZZ_MARK(0x800216AC);
ZZ_MARK(0x800216B0);
ZZ_MARK(0x800216B4);
ZZ_MARK(0x800216B8);
ZZ_MARK(0x800216BC);
ZZ_MARK_TARGET(0x800216C0,ZZ_20C80_A40);
ZZ_MARK(0x800216C4);
ZZ_MARK(0x800216C8);
ZZ_MARK(0x800216CC);
ZZ_MARK(0x800216D0);
ZZ_MARK(0x800216D4);
ZZ_MARK(0x800216D8);
ZZ_MARK(0x800216DC);
ZZ_MARK(0x800216E0);
ZZ_MARK(0x800216E4);
ZZ_MARK(0x800216E8);
ZZ_MARK(0x800216EC);
ZZ_MARK(0x800216F0);
ZZ_MARK(0x800216F4);
ZZ_MARK(0x800216F8);
ZZ_MARK(0x800216FC);
ZZ_MARK(0x80021700);
ZZ_MARK_TARGET(0x80021704,ZZ_20C80_A84);
ZZ_MARK(0x80021708);
ZZ_MARK(0x8002170C);
ZZ_MARK(0x80021710);
ZZ_MARK(0x80021714);
ZZ_MARK(0x80021718);
ZZ_MARK(0x8002171C);
ZZ_MARK(0x80021720);
ZZ_MARK(0x80021724);
ZZ_MARK(0x80021728);
ZZ_MARK(0x8002172C);
ZZ_MARK(0x80021730);
ZZ_MARK_TARGET(0x80021734,ZZ_20C80_AB4);
ZZ_MARK(0x80021738);
ZZ_MARK(0x8002173C);
ZZ_MARK(0x80021740);
ZZ_MARK(0x80021744);
ZZ_MARK(0x80021748);
ZZ_MARK(0x8002174C);
ZZ_MARK(0x80021750);
ZZ_MARK(0x80021754);
ZZ_MARK(0x80021758);
ZZ_MARK(0x8002175C);
ZZ_MARK(0x80021760);
ZZ_MARK(0x80021764);
ZZ_MARK(0x80021768);
ZZ_MARK(0x8002176C);
ZZ_MARK(0x80021770);
ZZ_MARK(0x80021774);
ZZ_MARK(0x80021778);
ZZ_MARK(0x8002177C);
ZZ_MARK(0x80021780);
ZZ_MARK(0x80021784);
ZZ_MARK(0x80021788);
ZZ_MARK(0x8002178C);
ZZ_MARK(0x80021790);
ZZ_MARK(0x80021794);
ZZ_MARK(0x80021798);
ZZ_MARK_TARGET(0x8002179C,ZZ_20C80_B1C);
ZZ_MARK(0x800217A0);
ZZ_MARK(0x800217A4);
ZZ_MARK(0x800217A8);
ZZ_MARK(0x800217AC);
ZZ_MARK(0x800217B0);
ZZ_MARK(0x800217B4);
ZZ_MARK(0x800217B8);
ZZ_MARK(0x800217BC);
ZZ_MARK(0x800217C0);
ZZ_MARK(0x800217C4);
ZZ_MARK(0x800217C8);
ZZ_MARK(0x800217CC);
ZZ_MARK(0x800217D0);
ZZ_MARK(0x800217D4);
ZZ_MARK(0x800217D8);
ZZ_MARK(0x800217DC);
ZZ_MARK(0x800217E0);
ZZ_MARK(0x800217E4);
ZZ_MARK(0x800217E8);
ZZ_MARK(0x800217EC);
ZZ_MARK(0x800217F0);
ZZ_MARK(0x800217F4);
ZZ_MARK(0x800217F8);
ZZ_MARK(0x800217FC);
ZZ_MARK(0x80021800);
ZZ_MARK(0x80021804);
ZZ_MARK(0x80021808);
ZZ_MARK(0x8002180C);
ZZ_MARK(0x80021810);
ZZ_MARK(0x80021814);
ZZ_MARK(0x80021818);
ZZ_MARK(0x8002181C);
ZZ_MARK(0x80021820);
ZZ_MARK(0x80021824);
ZZ_MARK_TARGET(0x80021828,ZZ_20C80_BA8);
ZZ_MARK(0x8002182C);
ZZ_MARK(0x80021830);
ZZ_MARK(0x80021834);
ZZ_MARK(0x80021838);
ZZ_MARK(0x8002183C);
ZZ_MARK(0x80021840);
ZZ_MARK(0x80021844);
ZZ_MARK(0x80021848);
ZZ_MARK(0x8002184C);
ZZ_MARK(0x80021850);
ZZ_MARK_TARGET(0x80021854,ZZ_20C80_BD4);
ZZ_MARK(0x80021858);
ZZ_MARK(0x8002185C);
ZZ_MARK(0x80021860);
ZZ_MARK(0x80021864);
ZZ_MARK(0x80021868);
ZZ_MARK(0x8002186C);
ZZ_MARK(0x80021870);
ZZ_MARK(0x80021874);
ZZ_MARK(0x80021878);
ZZ_MARK(0x8002187C);
ZZ_MARK(0x80021880);
ZZ_MARK_TARGET(0x80021884,ZZ_20C80_C04);
ZZ_MARK(0x80021888);
ZZ_MARK(0x8002188C);
ZZ_MARK(0x80021890);
ZZ_MARK(0x80021894);
ZZ_MARK(0x80021898);
ZZ_MARK(0x8002189C);
ZZ_MARK(0x800218A0);
ZZ_MARK(0x800218A4);
ZZ_MARK(0x800218A8);
ZZ_MARK(0x800218AC);
ZZ_MARK(0x800218B0);
ZZ_MARK(0x800218B4);
ZZ_MARK(0x800218B8);
ZZ_MARK(0x800218BC);
ZZ_MARK(0x800218C0);
ZZ_MARK(0x800218C4);
ZZ_MARK(0x800218C8);
ZZ_MARK(0x800218CC);
ZZ_MARK(0x800218D0);
ZZ_MARK(0x800218D4);
ZZ_MARK(0x800218D8);
ZZ_MARK(0x800218DC);
ZZ_MARK(0x800218E0);
ZZ_MARK(0x800218E4);
ZZ_MARK(0x800218E8);
ZZ_MARK_TARGET(0x800218EC,ZZ_20C80_C6C);
ZZ_MARK(0x800218F0);
ZZ_MARK(0x800218F4);
ZZ_MARK(0x800218F8);
ZZ_MARK(0x800218FC);
ZZ_MARK(0x80021900);
ZZ_MARK(0x80021904);
ZZ_MARK(0x80021908);
ZZ_MARK(0x8002190C);
ZZ_MARK(0x80021910);
ZZ_MARK(0x80021914);
ZZ_MARK(0x80021918);
ZZ_MARK(0x8002191C);
ZZ_MARK(0x80021920);
ZZ_MARK(0x80021924);
ZZ_MARK(0x80021928);
ZZ_MARK(0x8002192C);
ZZ_MARK(0x80021930);
ZZ_MARK(0x80021934);
ZZ_MARK(0x80021938);
ZZ_MARK(0x8002193C);
ZZ_MARK(0x80021940);
ZZ_MARK(0x80021944);
ZZ_MARK(0x80021948);
ZZ_MARK(0x8002194C);
ZZ_MARK(0x80021950);
ZZ_MARK_TARGET(0x80021954,ZZ_20C80_CD4);
ZZ_MARK(0x80021958);
ZZ_MARK(0x8002195C);
ZZ_MARK(0x80021960);
ZZ_MARK(0x80021964);
ZZ_MARK(0x80021968);
ZZ_MARK(0x8002196C);
ZZ_MARK(0x80021970);
ZZ_MARK(0x80021974);
ZZ_MARK(0x80021978);
ZZ_MARK_TARGET(0x8002197C,ZZ_20C80_CFC);
ZZ_MARK(0x80021980);
ZZ_MARK(0x80021984);
ZZ_MARK(0x80021988);
ZZ_MARK(0x8002198C);
ZZ_MARK(0x80021990);
ZZ_MARK(0x80021994);
ZZ_MARK(0x80021998);
ZZ_MARK(0x8002199C);
ZZ_MARK(0x800219A0);
ZZ_MARK(0x800219A4);
ZZ_MARK(0x800219A8);
ZZ_MARK(0x800219AC);
ZZ_MARK(0x800219B0);
ZZ_MARK(0x800219B4);
ZZ_MARK(0x800219B8);
ZZ_MARK(0x800219BC);
ZZ_MARK(0x800219C0);
ZZ_MARK(0x800219C4);
ZZ_MARK(0x800219C8);
ZZ_MARK(0x800219CC);
ZZ_MARK(0x800219D0);
ZZ_MARK(0x800219D4);
ZZ_MARK(0x800219D8);
ZZ_MARK(0x800219DC);
ZZ_MARK(0x800219E0);
ZZ_MARK(0x800219E4);
ZZ_MARK(0x800219E8);
ZZ_MARK(0x800219EC);
ZZ_MARK_TARGET(0x800219F0,ZZ_20C80_D70);
ZZ_MARK(0x800219F4);
ZZ_MARK(0x800219F8);
ZZ_MARK(0x800219FC);
ZZ_MARK(0x80021A00);
ZZ_MARK(0x80021A04);
ZZ_MARK(0x80021A08);
ZZ_MARK(0x80021A0C);
ZZ_MARK(0x80021A10);
ZZ_MARK_TARGET(0x80021A14,ZZ_20C80_D94);
ZZ_MARK(0x80021A18);
ZZ_MARK(0x80021A1C);
ZZ_MARK(0x80021A20);
ZZ_MARK(0x80021A24);
ZZ_MARK(0x80021A28);
ZZ_MARK(0x80021A2C);
ZZ_MARK_TARGET(0x80021A30,ZZ_20C80_DB0);
ZZ_MARK(0x80021A34);
ZZ_MARK(0x80021A38);
ZZ_MARK(0x80021A3C);
ZZ_MARK(0x80021A40);
ZZ_MARK_TARGET(0x80021A44,ZZ_20C80_DC4);
ZZ_MARK(0x80021A48);
ZZ_MARK(0x80021A4C);
ZZ_MARK(0x80021A50);
