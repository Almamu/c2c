#ifdef ZZ_INCLUDE_CODE
ZZ_300D8:
	SP -= 40;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	A1 = 0x1;
	EMU_Write32(SP + 36,RA); //+ 0x24
	AT = 0x80060000;
	EMU_Write32(AT + 30788,R0); //+ 0x7844
	RA = 0x800300FC; //ZZ_300D8_24
	A2 = 0x1;
	ZZ_CLOCKCYCLES(9,0x80014364);
	goto ZZ_14364;
ZZ_300D8_24:
	V1 = 0x63960000;
	V1 |= 0x347F;
	EMU_Write32(S0,V1);
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = 0x80070000;
	A0 -= 12872;
	A1 = 0x4;
	A2 = 0x8;
	V0 = 0x768F;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = SP + 24;
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x1;
	EMU_Write32(SP + 20,V0); //+ 0x14
	AT = 0x80060000;
	EMU_Write32(AT - 2448,V1); //+ 0xFFFFF670
	RA = 0x80030148; //ZZ_300D8_70
	A3 = 0x2;
	ZZ_CLOCKCYCLES(19,0x80019928);
	goto ZZ_19928;
ZZ_300D8_70:
	RA = 0x80030150; //ZZ_300D8_78
	ZZ_CLOCKCYCLES(2,0x80030004);
	goto ZZ_30004;
ZZ_300D8_78:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x800119E0,ZZ_11800_1E0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800300D8,ZZ_300D8);
ZZ_MARK(0x800300DC);
ZZ_MARK(0x800300E0);
ZZ_MARK(0x800300E4);
ZZ_MARK(0x800300E8);
ZZ_MARK(0x800300EC);
ZZ_MARK(0x800300F0);
ZZ_MARK(0x800300F4);
ZZ_MARK(0x800300F8);
ZZ_MARK_TARGET(0x800300FC,ZZ_300D8_24);
ZZ_MARK(0x80030100);
ZZ_MARK(0x80030104);
ZZ_MARK(0x80030108);
ZZ_MARK(0x8003010C);
ZZ_MARK(0x80030110);
ZZ_MARK(0x80030114);
ZZ_MARK(0x80030118);
ZZ_MARK(0x8003011C);
ZZ_MARK(0x80030120);
ZZ_MARK(0x80030124);
ZZ_MARK(0x80030128);
ZZ_MARK(0x8003012C);
ZZ_MARK(0x80030130);
ZZ_MARK(0x80030134);
ZZ_MARK(0x80030138);
ZZ_MARK(0x8003013C);
ZZ_MARK(0x80030140);
ZZ_MARK(0x80030144);
ZZ_MARK_TARGET(0x80030148,ZZ_300D8_70);
ZZ_MARK(0x8003014C);
ZZ_MARK_TARGET(0x80030150,ZZ_300D8_78);
ZZ_MARK(0x80030154);
ZZ_MARK(0x80030158);
ZZ_MARK(0x8003015C);
ZZ_MARK(0x80030160);
