#ifdef ZZ_INCLUDE_CODE
ZZ_20C80:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 2524); //+ 0xFFFFF624
	SP -= 80;
	V1 = 0x80060000;
	V1 += 11440;
	V0 = V1 - 8740;
	EMU_Write32(SP + 72,RA); //+ 0x48
	EMU_Write32(V1,V0);
	V0 = V1 - 8692;
	AT = 0x80060000;
	EMU_Write32(AT + 11444,V0); //+ 0x2CB4
	V0 = V1 - 8436;
	AT = 0x80060000;
	EMU_Write32(AT + 11448,V0); //+ 0x2CB8
	V0 = V1 - 8868;
	A0 = 0x3;
	AT = 0x80060000;
	EMU_Write32(AT + 11452,V0); //+ 0x2CBC
	V0 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 11620,V0); //+ 0x2D64
	V0 = 0x4;
	AT = 0x80060000;
	EMU_Write32(AT + 11640,V0); //+ 0x2D78
	V0 = 0x80040000;
	V0 -= 8284;
	AT = 0x80060000;
	EMU_Write32(AT + 11644,A0); //+ 0x2D7C
	AT = 0x80060000;
	EMU_Write32(AT + 11636,A0); //+ 0x2D74
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V1 = EMU_ReadU32(V1 - 8740); //+ 0xFFFFDDDC
	V0 = EMU_ReadU32(A1 + 96); //+ 0x60
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	AT = 0x80060000;
	EMU_Write16(AT + 11580,V0); //+ 0x2D3C
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	AT = 0x80060000;
	EMU_Write16(AT + 11582,V0); //+ 0x2D3E
	V0 = EMU_ReadU32(A1 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	EMU_Write32(SP + 32,R0); //+ 0x20
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	AT = 0x80060000;
	EMU_Write32(AT + 11584,V0); //+ 0x2D40
	RA = 0x80020D84; //ZZ_20C80_104
	A1 = 0x185;
	ZZ_CLOCKCYCLES(65,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_104:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80020DA0);
		goto ZZ_20C80_120;
	}
	V0 = EMU_ReadU32(V0);
	AT = 0x80060000;
	EMU_Write32(AT + 11632,V0); //+ 0x2D70
	ZZ_CLOCKCYCLES(7,0x80020DA8);
	goto ZZ_20C80_128;
ZZ_20C80_120:
	AT = 0x80060000;
	EMU_Write32(AT + 11632,R0); //+ 0x2D70
	ZZ_CLOCKCYCLES(2,0x80020DA8);
ZZ_20C80_128:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	AT = 0x80070000;
	EMU_Write32(AT - 12316,V0); //+ 0xFFFFCFE4
	RA = 0x80020DC0; //ZZ_20C80_140
	ZZ_CLOCKCYCLES(6,0x80011E24);
	goto ZZ_11E24;
ZZ_20C80_140:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x1;
	if (!V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(6,0x80020E0C);
		goto ZZ_20C80_18C;
	}
	V1 = R0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x186;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020E08; //ZZ_20C80_188
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(18,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_188:
	V1 = V0;
	ZZ_CLOCKCYCLES(1,0x80020E0C);
ZZ_20C80_18C:
	if (!V1)
	{
		V0 = 0x6;
		ZZ_CLOCKCYCLES(2,0x80020E6C);
		goto ZZ_20C80_1EC;
	}
	V0 = 0x6;
	AT = 0x80060000;
	EMU_Write32(AT + 11620,V0); //+ 0x2D64
	V0 = EMU_ReadU32(V1);
	V0 <<= 4;
	AT = 0x80060000;
	EMU_Write32(AT + 11476,V0); //+ 0x2CD4
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11480,V0); //+ 0x2CD8
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11484,V0); //+ 0x2CDC
	V0 = EMU_ReadU32(V1 + 12); //+ 0xC
	AT = 0x80060000;
	EMU_Write32(AT + 11624,V0); //+ 0x2D68
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	AT = 0x80060000;
	EMU_Write32(AT + 11628,V0); //+ 0x2D6C
	V0 = EMU_ReadU32(V1);
	ZZ_CLOCKCYCLES(24,0x80020E80);
	goto ZZ_20C80_200;
ZZ_20C80_1EC:
	V0 = 0x80000000;
	AT = 0x80060000;
	EMU_Write32(AT + 11624,R0); //+ 0x2D68
	AT = 0x80060000;
	EMU_Write32(AT + 11628,R0); //+ 0x2D6C
	ZZ_CLOCKCYCLES(5,0x80020E80);
ZZ_20C80_200:
	AT = 0x80070000;
	EMU_Write32(AT - 12320,V0); //+ 0xFFFFCFE0
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x1000;
	if (!V0)
	{
		A1 = 0x297;
		ZZ_CLOCKCYCLES(8,0x80020EF0);
		goto ZZ_20C80_270;
	}
	A1 = 0x297;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020ECC; //ZZ_20C80_24C
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(19,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_24C:
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11624,V1); //+ 0x2D68
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11628,V1); //+ 0x2D6C
	V0 = EMU_ReadU32(V0);
	AT = 0x80070000;
	EMU_Write32(AT - 12420,V0); //+ 0xFFFFCF7C
	ZZ_CLOCKCYCLES(9,0x80020EF0);
ZZ_20C80_270:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x400000;
	V0 &= V1;
	if (!V0)
	{
		A1 = 0x2AA;
		ZZ_CLOCKCYCLES(6,0x80020F80);
		goto ZZ_20C80_300;
	}
	A1 = 0x2AA;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = SP + 40;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020F3C; //ZZ_20C80_2BC
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(19,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_2BC:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80020F88);
		goto ZZ_20C80_308;
	}
	V0 = EMU_ReadS16(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11576,V0); //+ 0x2D38
	V0 = EMU_ReadS16(V1 + 2); //+ 0x2
	AT = 0x80060000;
	EMU_Write32(AT + 11564,V0); //+ 0x2D2C
	V0 = EMU_ReadS16(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11572,V0); //+ 0x2D34
	V0 = EMU_ReadS16(V1 + 6); //+ 0x6
	AT = 0x80060000;
	EMU_Write32(AT + 11568,V0); //+ 0x2D30
	ZZ_CLOCKCYCLES(17,0x80020F88);
	goto ZZ_20C80_308;
ZZ_20C80_300:
	AT = 0x80060000;
	EMU_Write32(AT + 11576,R0); //+ 0x2D38
	ZZ_CLOCKCYCLES(2,0x80020F88);
ZZ_20C80_308:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x10;
	if (!V0)
	{
		A1 = 0x1B5;
		ZZ_CLOCKCYCLES(6,0x8002117C);
		goto ZZ_20C80_4FC;
	}
	A1 = 0x1B5;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = SP + 48;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80020FD4; //ZZ_20C80_354
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(19,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_354:
	A1 = V0;
	if (!A1)
	{
		ZZ_CLOCKCYCLES(3,0x80021114);
		goto ZZ_20C80_494;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 3048); //+ 0xFFFFF418
	if (V0)
	{
		V0 = 0x10000000;
		ZZ_CLOCKCYCLES(8,0x800210B8);
		goto ZZ_20C80_438;
	}
	V0 = 0x10000000;
	A2 = 0x80060000;
	A2 = EMU_ReadU16(A2 + 11532); //+ 0x2D0C
	A3 = 0x80060000;
	A3 = EMU_ReadU16(A3 + 11534); //+ 0x2D0E
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12756); //+ 0xFFFFCE2C
	T0 = 0x80060000;
	T0 = EMU_ReadU32(T0 + 11536); //+ 0x2D10
	V1 &= V0;
	AT = 0x80060000;
	EMU_Write16(AT + 11524,A2); //+ 0x2D04
	AT = 0x80060000;
	EMU_Write16(AT + 11526,A3); //+ 0x2D06
	AT = 0x80060000;
	EMU_Write32(AT + 11528,T0); //+ 0x2D08
	if (!V1)
	{
		ZZ_CLOCKCYCLES(25,0x8002107C);
		goto ZZ_20C80_3FC;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12452); //+ 0xFFFFCF5C
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12448); //+ 0xFFFFCF60
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12444); //+ 0xFFFFCF64
	V0 = A2 - V0;
	V1 = A3 - V1;
	A0 = T0 - A0;
	AT = 0x80060000;
	EMU_Write16(AT + 11532,V0); //+ 0x2D0C
	AT = 0x80060000;
	EMU_Write16(AT + 11534,V1); //+ 0x2D0E
	AT = 0x80060000;
	EMU_Write32(AT + 11536,A0); //+ 0x2D10
	ZZ_CLOCKCYCLES(42,0x800210B8);
	goto ZZ_20C80_438;
ZZ_20C80_3FC:
	V0 = EMU_ReadU16(A1);
	V0 = A2 - V0;
	AT = 0x80060000;
	EMU_Write16(AT + 11532,V0); //+ 0x2D0C
	V0 = EMU_ReadU16(A1 + 2); //+ 0x2
	V0 = A3 - V0;
	AT = 0x80060000;
	EMU_Write16(AT + 11534,V0); //+ 0x2D0E
	V0 = EMU_ReadS16(A1 + 4); //+ 0x4
	V0 = T0 - V0;
	AT = 0x80060000;
	EMU_Write32(AT + 11536,V0); //+ 0x2D10
	ZZ_CLOCKCYCLES(15,0x800210B8);
ZZ_20C80_438:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = 0x10000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800210E8);
		goto ZZ_20C80_468;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12440); //+ 0xFFFFCF68
	AT = 0x80060000;
	EMU_Write32(AT + 11560,V0); //+ 0x2D28
	ZZ_CLOCKCYCLES(12,0x800210FC);
	goto ZZ_20C80_47C;
ZZ_20C80_468:
	V0 = EMU_ReadS16(A1 + 6); //+ 0x6
	AT = 0x80060000;
	EMU_Write32(AT + 11560,V0); //+ 0x2D28
	AT = 0x80070000;
	EMU_Write32(AT - 12440,V0); //+ 0xFFFFCF68
	ZZ_CLOCKCYCLES(5,0x800210FC);
ZZ_20C80_47C:
	V0 = EMU_ReadS16(A1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11552,V0); //+ 0x2D20
	V0 = EMU_ReadS16(A1 + 10); //+ 0xA
	AT = 0x80060000;
	EMU_Write32(AT + 11556,V0); //+ 0x2D24
	ZZ_CLOCKCYCLES(6,0x80021114);
ZZ_20C80_494:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x1B6;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80021144; //ZZ_20C80_4C4
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(12,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_4C4:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021184);
		goto ZZ_20C80_504;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11540,V0); //+ 0x2D14
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11544,V0); //+ 0x2D18
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11548,V0); //+ 0x2D1C
	ZZ_CLOCKCYCLES(14,0x80021184);
	goto ZZ_20C80_504;
ZZ_20C80_4FC:
	AT = 0x80060000;
	EMU_Write32(AT + 11560,R0); //+ 0x2D28
	ZZ_CLOCKCYCLES(2,0x80021184);
ZZ_20C80_504:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x800000;
	V1 |= 0x4;
	V0 &= V1;
	if (!V0)
	{
		A1 = 0x1B7;
		ZZ_CLOCKCYCLES(7,0x80021348);
		goto ZZ_20C80_6C8;
	}
	A1 = 0x1B7;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x800211CC; //ZZ_20C80_54C
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(18,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_54C:
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12312); //+ 0xFFFFCFE8
	V0 = 0x80040000;
	V0 += 19720;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10544;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 20704;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 20824;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = 0xA;
	AT = 0x80060000;
	EMU_Write32(AT + 11620,V0); //+ 0x2D64
	V0 = 0x12;
	AT = 0x80060000;
	EMU_Write32(AT + 11636,V0); //+ 0x2D74
	if (!A1)
	{
		ZZ_CLOCKCYCLES(30,0x800212A0);
		goto ZZ_20C80_620;
	}
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(A1 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = EMU_ReadU32(A1 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(53,0x800212B4);
	goto ZZ_20C80_634;
ZZ_20C80_620:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x800212B4);
ZZ_20C80_634:
	AT = 0x80060000;
	EMU_Write32(AT + 11516,V0); //+ 0x2CFC
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12576); //+ 0xFFFFCEE0
	if (!A1)
	{
		ZZ_CLOCKCYCLES(7,0x8002132C);
		goto ZZ_20C80_6AC;
	}
	V0 = EMU_ReadU32(A1 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(A1 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = EMU_ReadU32(A1 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(30,0x80021340);
	goto ZZ_20C80_6C0;
ZZ_20C80_6AC:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x80021340);
ZZ_20C80_6C0:
	AT = 0x80060000;
	EMU_Write32(AT + 11508,V0); //+ 0x2CF4
	ZZ_CLOCKCYCLES(2,0x80021348);
ZZ_20C80_6C8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 11632); //+ 0x2D70
	V0 = V1 & 0x200;
	if (!V0)
	{
		V0 = V1 & 0x100;
		ZZ_CLOCKCYCLES(6,0x800213B4);
		goto ZZ_20C80_734;
	}
	V0 = V1 & 0x100;
	V0 = 0x80040000;
	V0 += 15860;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 15884;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 16096;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 16068;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 16332;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = V1 & 0x100;
	ZZ_CLOCKCYCLES(27,0x800213B4);
ZZ_20C80_734:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80021578);
		goto ZZ_20C80_8F8;
	}
	T0 = 0x80070000;
	T0 = EMU_ReadU32(T0 - 12312); //+ 0xFFFFCFE8
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12592); //+ 0xFFFFCED0
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12588); //+ 0xFFFFCED4
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12248); //+ 0xFFFFD028
	A2 = 0x80070000;
	A2 = EMU_ReadU32(A2 - 12244); //+ 0xFFFFD02C
	A3 = 0x80070000;
	A3 = EMU_ReadU32(A3 - 12572); //+ 0xFFFFCEE4
	V0 = 0x80040000;
	V0 += 12040;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10544;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 12572;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 12704;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V1 <<= 4;
	A0 <<= 4;
	AT = 0x80060000;
	EMU_Write32(AT + 11496,V1); //+ 0x2CE8
	AT = 0x80060000;
	EMU_Write32(AT + 11500,A1); //+ 0x2CEC
	AT = 0x80060000;
	EMU_Write32(AT + 11608,A0); //+ 0x2D58
	AT = 0x80060000;
	EMU_Write32(AT + 11612,A2); //+ 0x2D5C
	if (!T0)
	{
		A3 >>= 8;
		ZZ_CLOCKCYCLES(46,0x800214C8);
		goto ZZ_20C80_848;
	}
	A3 >>= 8;
	V0 = EMU_ReadU32(T0 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(T0 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = EMU_ReadU32(T0 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(69,0x800214DC);
	goto ZZ_20C80_85C;
ZZ_20C80_848:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11512,V0); //+ 0x2CF8
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x800214DC);
ZZ_20C80_85C:
	AT = 0x80060000;
	EMU_Write32(AT + 11516,V0); //+ 0x2CFC
	T0 = 0x80070000;
	T0 = EMU_ReadU32(T0 - 12576); //+ 0xFFFFCEE0
	if (!T0)
	{
		ZZ_CLOCKCYCLES(7,0x8002155C);
		goto ZZ_20C80_8DC;
	}
	if (!A3)
	{
		ZZ_CLOCKCYCLES(9,0x8002155C);
		goto ZZ_20C80_8DC;
	}
	V0 = EMU_ReadU32(T0 + 100); //+ 0x64
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2704); //+ 0xA90
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2700); //+ 0xA8C
	V0 = V0 - V1;
	V1 = EMU_ReadU32(T0 + 96); //+ 0x60
	V0 = (int32_t)V0 >> 8;
	V0 &= 0xFFFE;
	V0 <<= 16;
	V1 = V1 - A0;
	V1 = (int32_t)V1 >> 8;
	V1 &= 0xFFFF;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = EMU_ReadU32(T0 + 104); //+ 0x68
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2708); //+ 0xA94
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	ZZ_CLOCKCYCLES(32,0x80021570);
	goto ZZ_20C80_8F0;
ZZ_20C80_8DC:
	V0 = 0x80000000;
	V0 |= 0x8000;
	AT = 0x80060000;
	EMU_Write32(AT + 11504,V0); //+ 0x2CF0
	V0 = -32768;
	ZZ_CLOCKCYCLES(5,0x80021570);
ZZ_20C80_8F0:
	AT = 0x80060000;
	EMU_Write32(AT + 11508,V0); //+ 0x2CF4
	ZZ_CLOCKCYCLES(2,0x80021578);
ZZ_20C80_8F8:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 11632); //+ 0x2D70
	V0 = A1 & 0x8000;
	if (!V0)
	{
		V0 = A1 & 0x8;
		ZZ_CLOCKCYCLES(6,0x80021608);
		goto ZZ_20C80_988;
	}
	V0 = A1 & 0x8;
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12248); //+ 0xFFFFD028
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12244); //+ 0xFFFFD02C
	V0 = 0x80040000;
	V0 += 19480;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 19528;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 19612;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V1 <<= 4;
	AT = 0x80060000;
	EMU_Write32(AT + 11608,V1); //+ 0x2D58
	AT = 0x80060000;
	EMU_Write32(AT + 11612,A0); //+ 0x2D5C
	V0 = A1 & 0x8;
	ZZ_CLOCKCYCLES(36,0x80021608);
ZZ_20C80_988:
	if (!V0)
	{
		A1 = 0x1B8;
		ZZ_CLOCKCYCLES(2,0x800216C0);
		goto ZZ_20C80_A40;
	}
	A1 = 0x1B8;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x8002163C; //ZZ_20C80_9BC
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(13,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_9BC:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021660);
		goto ZZ_20C80_9E0;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11488,V0); //+ 0x2CE0
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11492,V0); //+ 0x2CE4
	ZZ_CLOCKCYCLES(9,0x80021660);
ZZ_20C80_9E0:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12248); //+ 0xFFFFD028
	V0 = 0x80040000;
	V0 += 11316;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 11600;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 11796;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 11740;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 11972;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	AT = 0x80060000;
	EMU_Write32(AT + 11608,V1); //+ 0x2D58
	ZZ_CLOCKCYCLES(24,0x800216C0);
ZZ_20C80_A40:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x20;
	if (!V0)
	{
		A1 = 0x1DE;
		ZZ_CLOCKCYCLES(6,0x8002179C);
		goto ZZ_20C80_B1C;
	}
	A1 = 0x1DE;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80021704; //ZZ_20C80_A84
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(17,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_A84:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021734);
		goto ZZ_20C80_AB4;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11596,V0); //+ 0x2D4C
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11600,V0); //+ 0x2D50
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11604,V0); //+ 0x2D54
	ZZ_CLOCKCYCLES(12,0x80021734);
ZZ_20C80_AB4:
	V0 = 0x80040000;
	V0 += 15412;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 15468;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 15644;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = 0x8;
	AT = 0x80060000;
	EMU_Write32(AT + 11644,V0); //+ 0x2D7C
	V0 = 0xC;
	AT = 0x80060000;
	EMU_Write32(AT + 11640,V0); //+ 0x2D78
	ZZ_CLOCKCYCLES(26,0x8002179C);
ZZ_20C80_B1C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x200000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800218EC);
		goto ZZ_20C80_C6C;
	}
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12196); //+ 0xFFFFD05C
	if (!V1)
	{
		A1 = 0x1DE;
		ZZ_CLOCKCYCLES(11,0x80021828);
		goto ZZ_20C80_BA8;
	}
	A1 = 0x1DE;
	V0 = 0x80040000;
	V0 += 23604;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 23616;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 23884;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	AT = 0x80060000;
	EMU_Write32(AT + 11500,V1); //+ 0x2CEC
	ZZ_CLOCKCYCLES(35,0x800218EC);
	goto ZZ_20C80_C6C;
ZZ_20C80_BA8:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2932); //+ 0xB74
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80021854; //ZZ_20C80_BD4
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(11,0x80031DF4);
	goto ZZ_31DF4;
ZZ_20C80_BD4:
	V1 = V0;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(3,0x80021884);
		goto ZZ_20C80_C04;
	}
	V0 = EMU_ReadU32(V1);
	AT = 0x80060000;
	EMU_Write32(AT + 11596,V0); //+ 0x2D4C
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 11600,V0); //+ 0x2D50
	V0 = EMU_ReadU32(V1 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write32(AT + 11604,V0); //+ 0x2D54
	ZZ_CLOCKCYCLES(12,0x80021884);
ZZ_20C80_C04:
	V0 = 0x80040000;
	V0 += 15412;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 15468;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 15644;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	V0 = 0x8;
	AT = 0x80060000;
	EMU_Write32(AT + 11644,V0); //+ 0x2D7C
	V0 = 0xC;
	AT = 0x80060000;
	EMU_Write32(AT + 11640,V0); //+ 0x2D78
	ZZ_CLOCKCYCLES(26,0x800218EC);
ZZ_20C80_C6C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V0 &= 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80021954);
		goto ZZ_20C80_CD4;
	}
	V0 = 0x80040000;
	V0 += 16364;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 9912;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 10552;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 16412;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 16696;
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	ZZ_CLOCKCYCLES(26,0x80021954);
ZZ_20C80_CD4:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = 0x1000000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80021A44);
		goto ZZ_20C80_DC4;
	}
	A0 = 0x80060000;
	A0 -= 2924;
	RA = 0x8002197C; //ZZ_20C80_CFC
	ZZ_CLOCKCYCLES(10,0x80011F78);
	goto ZZ_11F78;
ZZ_20C80_CFC:
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12216); //+ 0xFFFFD048
	A0 = SP + 64;
	A2 = R0;
	EMU_Write32(SP + 64,V0); //+ 0x40
	V0 = 0x80040000;
	V0 += 24240;
	AT = 0x80060000;
	EMU_Write32(AT + 11456,V0); //+ 0x2CC0
	V0 = 0x80040000;
	V0 += 24608;
	AT = 0x80060000;
	EMU_Write32(AT + 11460,V0); //+ 0x2CC4
	V0 = 0x80040000;
	V0 += 25048;
	AT = 0x80060000;
	EMU_Write32(AT + 11464,V0); //+ 0x2CC8
	V0 = 0x80040000;
	V0 += 10208;
	AT = 0x80060000;
	EMU_Write32(AT + 11468,V0); //+ 0x2CCC
	V0 = 0x80040000;
	V0 += 10928;
	AT = 0x80070000;
	EMU_Write32(AT - 12220,A0); //+ 0xFFFFD044
	AT = 0x80060000;
	EMU_Write32(AT + 11472,V0); //+ 0x2CD0
	RA = 0x800219F0; //ZZ_20C80_D70
	A1 >>= 8;
	ZZ_CLOCKCYCLES(29,0x8002FF84);
	goto ZZ_2FF84;
ZZ_20C80_D70:
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12220); //+ 0xFFFFD044
	A1 = 0x80070000;
	A1 = EMU_ReadU32(A1 - 12216); //+ 0xFFFFD048
	A2 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 11588,V0); //+ 0x2D44
	RA = 0x80021A14; //ZZ_20C80_D94
	A1 >>= 8;
	ZZ_CLOCKCYCLES(9,0x8002FF84);
	goto ZZ_2FF84;
ZZ_20C80_D94:
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12220); //+ 0xFFFFD044
	A1 = 0x8;
	AT = 0x80060000;
	EMU_Write32(AT + 11592,V0); //+ 0x2D48
	RA = 0x80021A30; //ZZ_20C80_DB0
	A2 = R0;
	ZZ_CLOCKCYCLES(7,0x8002FF84);
	goto ZZ_2FF84;
ZZ_20C80_DB0:
	V0 += 4;
	V1 = -16;
	V0 &= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 11616,V0); //+ 0x2D60
	ZZ_CLOCKCYCLES(5,0x80021A44);
ZZ_20C80_DC4:
	RA = EMU_ReadU32(SP + 72); //+ 0x48
	SP += 80;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80017D04,ZZ_17CE8_1C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80020C80,0x80020D84,ZZ_20C80);
ZZ_MARK_TARGET(0x80020D84,0x80020DA0,ZZ_20C80_104);
ZZ_MARK_TARGET(0x80020DA0,0x80020DA8,ZZ_20C80_120);
ZZ_MARK_TARGET(0x80020DA8,0x80020DC0,ZZ_20C80_128);
ZZ_MARK_TARGET(0x80020DC0,0x80020E08,ZZ_20C80_140);
ZZ_MARK_TARGET(0x80020E08,0x80020E0C,ZZ_20C80_188);
ZZ_MARK_TARGET(0x80020E0C,0x80020E6C,ZZ_20C80_18C);
ZZ_MARK_TARGET(0x80020E6C,0x80020E80,ZZ_20C80_1EC);
ZZ_MARK_TARGET(0x80020E80,0x80020ECC,ZZ_20C80_200);
ZZ_MARK_TARGET(0x80020ECC,0x80020EF0,ZZ_20C80_24C);
ZZ_MARK_TARGET(0x80020EF0,0x80020F3C,ZZ_20C80_270);
ZZ_MARK_TARGET(0x80020F3C,0x80020F80,ZZ_20C80_2BC);
ZZ_MARK_TARGET(0x80020F80,0x80020F88,ZZ_20C80_300);
ZZ_MARK_TARGET(0x80020F88,0x80020FD4,ZZ_20C80_308);
ZZ_MARK_TARGET(0x80020FD4,0x8002107C,ZZ_20C80_354);
ZZ_MARK_TARGET(0x8002107C,0x800210B8,ZZ_20C80_3FC);
ZZ_MARK_TARGET(0x800210B8,0x800210E8,ZZ_20C80_438);
ZZ_MARK_TARGET(0x800210E8,0x800210FC,ZZ_20C80_468);
ZZ_MARK_TARGET(0x800210FC,0x80021114,ZZ_20C80_47C);
ZZ_MARK_TARGET(0x80021114,0x80021144,ZZ_20C80_494);
ZZ_MARK_TARGET(0x80021144,0x8002117C,ZZ_20C80_4C4);
ZZ_MARK_TARGET(0x8002117C,0x80021184,ZZ_20C80_4FC);
ZZ_MARK_TARGET(0x80021184,0x800211CC,ZZ_20C80_504);
ZZ_MARK_TARGET(0x800211CC,0x800212A0,ZZ_20C80_54C);
ZZ_MARK_TARGET(0x800212A0,0x800212B4,ZZ_20C80_620);
ZZ_MARK_TARGET(0x800212B4,0x8002132C,ZZ_20C80_634);
ZZ_MARK_TARGET(0x8002132C,0x80021340,ZZ_20C80_6AC);
ZZ_MARK_TARGET(0x80021340,0x80021348,ZZ_20C80_6C0);
ZZ_MARK_TARGET(0x80021348,0x800213B4,ZZ_20C80_6C8);
ZZ_MARK_TARGET(0x800213B4,0x800214C8,ZZ_20C80_734);
ZZ_MARK_TARGET(0x800214C8,0x800214DC,ZZ_20C80_848);
ZZ_MARK_TARGET(0x800214DC,0x8002155C,ZZ_20C80_85C);
ZZ_MARK_TARGET(0x8002155C,0x80021570,ZZ_20C80_8DC);
ZZ_MARK_TARGET(0x80021570,0x80021578,ZZ_20C80_8F0);
ZZ_MARK_TARGET(0x80021578,0x80021608,ZZ_20C80_8F8);
ZZ_MARK_TARGET(0x80021608,0x8002163C,ZZ_20C80_988);
ZZ_MARK_TARGET(0x8002163C,0x80021660,ZZ_20C80_9BC);
ZZ_MARK_TARGET(0x80021660,0x800216C0,ZZ_20C80_9E0);
ZZ_MARK_TARGET(0x800216C0,0x80021704,ZZ_20C80_A40);
ZZ_MARK_TARGET(0x80021704,0x80021734,ZZ_20C80_A84);
ZZ_MARK_TARGET(0x80021734,0x8002179C,ZZ_20C80_AB4);
ZZ_MARK_TARGET(0x8002179C,0x80021828,ZZ_20C80_B1C);
ZZ_MARK_TARGET(0x80021828,0x80021854,ZZ_20C80_BA8);
ZZ_MARK_TARGET(0x80021854,0x80021884,ZZ_20C80_BD4);
ZZ_MARK_TARGET(0x80021884,0x800218EC,ZZ_20C80_C04);
ZZ_MARK_TARGET(0x800218EC,0x80021954,ZZ_20C80_C6C);
ZZ_MARK_TARGET(0x80021954,0x8002197C,ZZ_20C80_CD4);
ZZ_MARK_TARGET(0x8002197C,0x800219F0,ZZ_20C80_CFC);
ZZ_MARK_TARGET(0x800219F0,0x80021A14,ZZ_20C80_D70);
ZZ_MARK_TARGET(0x80021A14,0x80021A30,ZZ_20C80_D94);
ZZ_MARK_TARGET(0x80021A30,0x80021A44,ZZ_20C80_DB0);
ZZ_MARK_TARGET(0x80021A44,0x80021A54,ZZ_20C80_DC4);
