#ifdef ZZ_INCLUDE_CODE
ZZ_56CD8:
	SP -= 32;
	EMU_Write32(SP + 20,S1); //+ 0x14
	A0 <<= 16;
	A0 = (int32_t)A0 >> 16;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 16,S0); //+ 0x10
	AT = 0x80070000;
	AT += A0;
	V1 = EMU_ReadU8(AT - 26596); //+ 0xFFFF981C
	V0 = 1;
	if (V1 == V0)
	{
		S1 = A2;
		ZZ_CLOCKCYCLES(12,0x80056D10);
		goto ZZ_56CD8_38;
	}
	S1 = A2;
	V0 = -1;
	ZZ_CLOCKCYCLES(14,0x80056DC8);
	goto ZZ_56CD8_F0;
ZZ_56CD8_38:
	S0 = A1 << 16;
	S0 = (int32_t)S0 >> 16;
	RA = 0x80056D20; //ZZ_56CD8_48
	A1 = S0;
	ZZ_CLOCKCYCLES(4,0x8005A59C);
	goto ZZ_5A59C;
ZZ_56CD8_48:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	S0 <<= 4;
	V0 += S0;
	V0 = EMU_ReadU8(V0);
	EMU_Write8(S1,V0);
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	V0 += S0;
	V0 = EMU_ReadU8(V0 + 1); //+ 0x1
	EMU_Write8(S1 + 1,V0); //+ 0x1
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	V0 += S0;
	V0 = EMU_ReadU8(V0 + 2); //+ 0x2
	EMU_Write8(S1 + 2,V0); //+ 0x2
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	V0 += S0;
	V0 = EMU_ReadU8(V0 + 3); //+ 0x3
	EMU_Write8(S1 + 3,V0); //+ 0x3
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	V0 += S0;
	V0 = EMU_ReadU8(V0 + 4); //+ 0x4
	EMU_Write8(S1 + 4,V0); //+ 0x4
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	S0 += V0;
	V1 = EMU_ReadU16(S0 + 6); //+ 0x6
	V0 = R0;
	EMU_Write16(S1 + 6,V1); //+ 0x6
	ZZ_CLOCKCYCLES(42,0x80056DC8);
ZZ_56CD8_F0:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80053498,ZZ_53408_90);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80056CD8,ZZ_56CD8);
ZZ_MARK(0x80056CDC);
ZZ_MARK(0x80056CE0);
ZZ_MARK(0x80056CE4);
ZZ_MARK(0x80056CE8);
ZZ_MARK(0x80056CEC);
ZZ_MARK(0x80056CF0);
ZZ_MARK(0x80056CF4);
ZZ_MARK(0x80056CF8);
ZZ_MARK(0x80056CFC);
ZZ_MARK(0x80056D00);
ZZ_MARK(0x80056D04);
ZZ_MARK(0x80056D08);
ZZ_MARK(0x80056D0C);
ZZ_MARK_TARGET(0x80056D10,ZZ_56CD8_38);
ZZ_MARK(0x80056D14);
ZZ_MARK(0x80056D18);
ZZ_MARK(0x80056D1C);
ZZ_MARK_TARGET(0x80056D20,ZZ_56CD8_48);
ZZ_MARK(0x80056D24);
ZZ_MARK(0x80056D28);
ZZ_MARK(0x80056D2C);
ZZ_MARK(0x80056D30);
ZZ_MARK(0x80056D34);
ZZ_MARK(0x80056D38);
ZZ_MARK(0x80056D3C);
ZZ_MARK(0x80056D40);
ZZ_MARK(0x80056D44);
ZZ_MARK(0x80056D48);
ZZ_MARK(0x80056D4C);
ZZ_MARK(0x80056D50);
ZZ_MARK(0x80056D54);
ZZ_MARK(0x80056D58);
ZZ_MARK(0x80056D5C);
ZZ_MARK(0x80056D60);
ZZ_MARK(0x80056D64);
ZZ_MARK(0x80056D68);
ZZ_MARK(0x80056D6C);
ZZ_MARK(0x80056D70);
ZZ_MARK(0x80056D74);
ZZ_MARK(0x80056D78);
ZZ_MARK(0x80056D7C);
ZZ_MARK(0x80056D80);
ZZ_MARK(0x80056D84);
ZZ_MARK(0x80056D88);
ZZ_MARK(0x80056D8C);
ZZ_MARK(0x80056D90);
ZZ_MARK(0x80056D94);
ZZ_MARK(0x80056D98);
ZZ_MARK(0x80056D9C);
ZZ_MARK(0x80056DA0);
ZZ_MARK(0x80056DA4);
ZZ_MARK(0x80056DA8);
ZZ_MARK(0x80056DAC);
ZZ_MARK(0x80056DB0);
ZZ_MARK(0x80056DB4);
ZZ_MARK(0x80056DB8);
ZZ_MARK(0x80056DBC);
ZZ_MARK(0x80056DC0);
ZZ_MARK(0x80056DC4);
ZZ_MARK_TARGET(0x80056DC8,ZZ_56CD8_F0);
ZZ_MARK(0x80056DCC);
ZZ_MARK(0x80056DD0);
ZZ_MARK(0x80056DD4);
ZZ_MARK(0x80056DD8);
ZZ_MARK(0x80056DDC);
