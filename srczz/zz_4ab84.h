#ifdef ZZ_INCLUDE_CODE
ZZ_4AB84:
	SP -= 40;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = 0x80060000;
	S1 -= 12684;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 = EMU_ReadU16(S1);
	if (V0)
	{
		ZZ_CLOCKCYCLES(13,0x8004ABE0);
		goto ZZ_4AB84_5C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8448); //+ 0xFFFFDF00
	A1 = EMU_ReadU16(V0);
	A0 = 0x80010000;
	A0 += 3364;
	RA = 0x8004ABD8; //ZZ_4AB84_54
	ZZ_CLOCKCYCLES(21,0x800494DC);
	goto ZZ_494DC;
ZZ_4AB84_54:
	RA = 0x8004ABE0; //ZZ_4AB84_5C
	ZZ_CLOCKCYCLES(2,0x8004B050);
	goto ZZ_4B050;
ZZ_4AB84_5C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 8448); //+ 0xFFFFDF00
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 - 12636); //+ 0xFFFFCEA4
	V0 = 1;
	AT = 0x80060000;
	EMU_Write16(AT - 12682,V0); //+ 0xFFFFCE76
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8444); //+ 0xFFFFDF04
	A0 = EMU_ReadU16(A0);
	V0 = EMU_ReadU16(V0);
	V1 &= A0;
	V0 &= V1;
	if (!V0)
	{
		S0 = V0;
		ZZ_CLOCKCYCLES(15,0x8004ACB0);
		goto ZZ_4AB84_12C;
	}
	S0 = V0;
	S3 = 1;
	S4 = S1 + 4;
	ZZ_CLOCKCYCLES(17,0x8004AC24);
ZZ_4AB84_A0:
	if (!S0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(2,0x8004AC80);
		goto ZZ_4AB84_FC;
	}
	S1 = R0;
	S2 = S4;
	ZZ_CLOCKCYCLES(3,0x8004AC30);
ZZ_4AB84_AC:
	V0 = (int32_t)S1 < 11;
	if (!V0)
	{
		V0 = S0 & 0x1;
		ZZ_CLOCKCYCLES(3,0x8004AC80);
		goto ZZ_4AB84_FC;
	}
	V0 = S0 & 0x1;
	if (!V0)
	{
		V0 = S3 << S1;
		ZZ_CLOCKCYCLES(5,0x8004AC6C);
		goto ZZ_4AB84_E8;
	}
	V0 = S3 << S1;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8448); //+ 0xFFFFDF00
	V0 = ~V0;
	EMU_Write16(V1,V0);
	V0 = EMU_ReadU32(S2);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(13,0x8004AC6C);
		goto ZZ_4AB84_E8;
	}
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x8004AC6C; //ZZ_4AB84_E8
	ZZ_CLOCKCYCLES_JR(15);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (V0,8004AC64)
	ZZ_JUMPREGISTER_END();
ZZ_4AB84_E8:
	S2 += 4;
	S0 >>= 1;
	V0 = S0 & 0xFFFF;
	if (V0)
	{
		S1 += 1;
		ZZ_CLOCKCYCLES(5,0x8004AC30);
		goto ZZ_4AB84_AC;
	}
	S1 += 1;
	ZZ_CLOCKCYCLES(5,0x8004AC80);
ZZ_4AB84_FC:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 8448); //+ 0xFFFFDF00
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 - 12636); //+ 0xFFFFCEA4
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8444); //+ 0xFFFFDF04
	A0 = EMU_ReadU16(A0);
	V0 = EMU_ReadU16(V0);
	V1 &= A0;
	V0 &= V1;
	if (V0)
	{
		S0 = V0;
		ZZ_CLOCKCYCLES(12,0x8004AC24);
		goto ZZ_4AB84_A0;
	}
	S0 = V0;
	ZZ_CLOCKCYCLES(12,0x8004ACB0);
ZZ_4AB84_12C:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 8448); //+ 0xFFFFDF00
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 8444); //+ 0xFFFFDF04
	V1 = EMU_ReadU16(A1);
	V0 = EMU_ReadU16(A2);
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8004AD30);
		goto ZZ_4AB84_1AC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8436); //+ 0xFFFFDF0C
	V1 = V0 + 1;
	V0 = (int32_t)V0 < 2049;
	AT = 0x80060000;
	EMU_Write32(AT - 8436,V1); //+ 0xFFFFDF0C
	if (V0)
	{
		ZZ_CLOCKCYCLES(19,0x8004AD38);
		goto ZZ_4AB84_1B4;
	}
	A0 = 0x80010000;
	A0 += 3392;
	A1 = EMU_ReadU16(A1);
	A2 = EMU_ReadU16(A2);
	RA = 0x8004AD14; //ZZ_4AB84_190
	ZZ_CLOCKCYCLES(25,0x800494DC);
	goto ZZ_494DC;
ZZ_4AB84_190:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8448); //+ 0xFFFFDF00
	AT = 0x80060000;
	EMU_Write32(AT - 8436,R0); //+ 0xFFFFDF0C
	EMU_Write16(V0,R0);
	ZZ_CLOCKCYCLES(7,0x8004AD38);
	goto ZZ_4AB84_1B4;
ZZ_4AB84_1AC:
	AT = 0x80060000;
	EMU_Write32(AT - 8436,R0); //+ 0xFFFFDF0C
	ZZ_CLOCKCYCLES(2,0x8004AD38);
ZZ_4AB84_1B4:
	AT = 0x80060000;
	EMU_Write16(AT - 12682,R0); //+ 0xFFFFCE76
	RA = 0x8004AD48; //ZZ_4AB84_1C4
	ZZ_CLOCKCYCLES(4,0x8004B050);
	goto ZZ_4B050;
ZZ_4AB84_1C4:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER(0x8004AB20,ZZ_4AAA8_78);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004AB84,ZZ_4AB84);
ZZ_MARK(0x8004AB88);
ZZ_MARK(0x8004AB8C);
ZZ_MARK(0x8004AB90);
ZZ_MARK(0x8004AB94);
ZZ_MARK(0x8004AB98);
ZZ_MARK(0x8004AB9C);
ZZ_MARK(0x8004ABA0);
ZZ_MARK(0x8004ABA4);
ZZ_MARK(0x8004ABA8);
ZZ_MARK(0x8004ABAC);
ZZ_MARK(0x8004ABB0);
ZZ_MARK(0x8004ABB4);
ZZ_MARK(0x8004ABB8);
ZZ_MARK(0x8004ABBC);
ZZ_MARK(0x8004ABC0);
ZZ_MARK(0x8004ABC4);
ZZ_MARK(0x8004ABC8);
ZZ_MARK(0x8004ABCC);
ZZ_MARK(0x8004ABD0);
ZZ_MARK(0x8004ABD4);
ZZ_MARK_TARGET(0x8004ABD8,ZZ_4AB84_54);
ZZ_MARK(0x8004ABDC);
ZZ_MARK_TARGET(0x8004ABE0,ZZ_4AB84_5C);
ZZ_MARK(0x8004ABE4);
ZZ_MARK(0x8004ABE8);
ZZ_MARK(0x8004ABEC);
ZZ_MARK(0x8004ABF0);
ZZ_MARK(0x8004ABF4);
ZZ_MARK(0x8004ABF8);
ZZ_MARK(0x8004ABFC);
ZZ_MARK(0x8004AC00);
ZZ_MARK(0x8004AC04);
ZZ_MARK(0x8004AC08);
ZZ_MARK(0x8004AC0C);
ZZ_MARK(0x8004AC10);
ZZ_MARK(0x8004AC14);
ZZ_MARK(0x8004AC18);
ZZ_MARK(0x8004AC1C);
ZZ_MARK(0x8004AC20);
ZZ_MARK_TARGET(0x8004AC24,ZZ_4AB84_A0);
ZZ_MARK(0x8004AC28);
ZZ_MARK(0x8004AC2C);
ZZ_MARK_TARGET(0x8004AC30,ZZ_4AB84_AC);
ZZ_MARK(0x8004AC34);
ZZ_MARK(0x8004AC38);
ZZ_MARK(0x8004AC3C);
ZZ_MARK(0x8004AC40);
ZZ_MARK(0x8004AC44);
ZZ_MARK(0x8004AC48);
ZZ_MARK(0x8004AC4C);
ZZ_MARK(0x8004AC50);
ZZ_MARK(0x8004AC54);
ZZ_MARK(0x8004AC58);
ZZ_MARK(0x8004AC5C);
ZZ_MARK(0x8004AC60);
ZZ_MARK(0x8004AC64);
ZZ_MARK(0x8004AC68);
ZZ_MARK_TARGET(0x8004AC6C,ZZ_4AB84_E8);
ZZ_MARK(0x8004AC70);
ZZ_MARK(0x8004AC74);
ZZ_MARK(0x8004AC78);
ZZ_MARK(0x8004AC7C);
ZZ_MARK_TARGET(0x8004AC80,ZZ_4AB84_FC);
ZZ_MARK(0x8004AC84);
ZZ_MARK(0x8004AC88);
ZZ_MARK(0x8004AC8C);
ZZ_MARK(0x8004AC90);
ZZ_MARK(0x8004AC94);
ZZ_MARK(0x8004AC98);
ZZ_MARK(0x8004AC9C);
ZZ_MARK(0x8004ACA0);
ZZ_MARK(0x8004ACA4);
ZZ_MARK(0x8004ACA8);
ZZ_MARK(0x8004ACAC);
ZZ_MARK_TARGET(0x8004ACB0,ZZ_4AB84_12C);
ZZ_MARK(0x8004ACB4);
ZZ_MARK(0x8004ACB8);
ZZ_MARK(0x8004ACBC);
ZZ_MARK(0x8004ACC0);
ZZ_MARK(0x8004ACC4);
ZZ_MARK(0x8004ACC8);
ZZ_MARK(0x8004ACCC);
ZZ_MARK(0x8004ACD0);
ZZ_MARK(0x8004ACD4);
ZZ_MARK(0x8004ACD8);
ZZ_MARK(0x8004ACDC);
ZZ_MARK(0x8004ACE0);
ZZ_MARK(0x8004ACE4);
ZZ_MARK(0x8004ACE8);
ZZ_MARK(0x8004ACEC);
ZZ_MARK(0x8004ACF0);
ZZ_MARK(0x8004ACF4);
ZZ_MARK(0x8004ACF8);
ZZ_MARK(0x8004ACFC);
ZZ_MARK(0x8004AD00);
ZZ_MARK(0x8004AD04);
ZZ_MARK(0x8004AD08);
ZZ_MARK(0x8004AD0C);
ZZ_MARK(0x8004AD10);
ZZ_MARK_TARGET(0x8004AD14,ZZ_4AB84_190);
ZZ_MARK(0x8004AD18);
ZZ_MARK(0x8004AD1C);
ZZ_MARK(0x8004AD20);
ZZ_MARK(0x8004AD24);
ZZ_MARK(0x8004AD28);
ZZ_MARK(0x8004AD2C);
ZZ_MARK_TARGET(0x8004AD30,ZZ_4AB84_1AC);
ZZ_MARK(0x8004AD34);
ZZ_MARK_TARGET(0x8004AD38,ZZ_4AB84_1B4);
ZZ_MARK(0x8004AD3C);
ZZ_MARK(0x8004AD40);
ZZ_MARK(0x8004AD44);
ZZ_MARK_TARGET(0x8004AD48,ZZ_4AB84_1C4);
ZZ_MARK(0x8004AD4C);
ZZ_MARK(0x8004AD50);
ZZ_MARK(0x8004AD54);
ZZ_MARK(0x8004AD58);
ZZ_MARK(0x8004AD5C);
ZZ_MARK(0x8004AD60);
ZZ_MARK(0x8004AD64);
ZZ_MARK(0x8004AD68);
