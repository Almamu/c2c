#ifdef ZZ_INCLUDE_CODE
ZZ_59620:
	SP -= 64;
	EMU_Write32(SP + 40,S2); //+ 0x28
	S2 = A0;
	V0 = A1;
	A0 = V0 << 16;
	A0 = (int32_t)A0 >> 16;
	A1 = A2 << 16;
	A1 = (int32_t)A1 >> 16;
	EMU_Write32(SP + 52,S5); //+ 0x34
	S5 = V0;
	EMU_Write32(SP + 48,S4); //+ 0x30
	S4 = A2;
	EMU_Write32(SP + 44,S3); //+ 0x2C
	S3 = A3;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 36,S1); //+ 0x24
	RA = 0x80059668; //ZZ_59620_48
	EMU_Write32(SP + 32,S0); //+ 0x20
	ZZ_CLOCKCYCLES(18,0x8005A59C);
	goto ZZ_5A59C;
ZZ_59620_48:
	S0 = R0;
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 32136); //+ 0xFFFF8278
	V0 = S2;
	AT = 0x80070000;
	EMU_Write16(AT - 26606,V0); //+ 0xFFFF9812
	if ((int32_t)V1 <= 0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(8,0x800596E4);
		goto ZZ_59620_C4;
	}
	S1 = R0;
	S2 <<= 16;
	A0 = S0 << 16;
	ZZ_CLOCKCYCLES(10,0x80059690);
ZZ_59620_70:
	A0 = (int32_t)A0 >> 16;
	A1 = (int32_t)S2 >> 16;
	V0 = S3 & 0xFFFF;
	A2 = S5 << 16;
	A3 = S4 << 16;
	A2 = (int32_t)A2 >> 16;
	A3 = (int32_t)A3 >> 16;
	RA = 0x800596B4; //ZZ_59620_94
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(9,0x80059420);
	goto ZZ_59420;
ZZ_59620_94:
	V0 <<= 16;
	V0 = (int32_t)V0 >> 16;
	S1 += V0;
	V0 = S0 + 1;
	S0 = V0;
	V0 <<= 16;
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 32136); //+ 0xFFFF8278
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		A0 = S0 << 16;
		ZZ_CLOCKCYCLES(12,0x80059690);
		goto ZZ_59620_70;
	}
	A0 = S0 << 16;
	ZZ_CLOCKCYCLES(12,0x800596E4);
ZZ_59620_C4:
	V0 = S1;
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S5 = EMU_ReadU32(SP + 52); //+ 0x34
	S4 = EMU_ReadU32(SP + 48); //+ 0x30
	S3 = EMU_ReadU32(SP + 44); //+ 0x2C
	S2 = EMU_ReadU32(SP + 40); //+ 0x28
	S1 = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80054064,ZZ_53FE0_84);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80059620,ZZ_59620);
ZZ_MARK(0x80059624);
ZZ_MARK(0x80059628);
ZZ_MARK(0x8005962C);
ZZ_MARK(0x80059630);
ZZ_MARK(0x80059634);
ZZ_MARK(0x80059638);
ZZ_MARK(0x8005963C);
ZZ_MARK(0x80059640);
ZZ_MARK(0x80059644);
ZZ_MARK(0x80059648);
ZZ_MARK(0x8005964C);
ZZ_MARK(0x80059650);
ZZ_MARK(0x80059654);
ZZ_MARK(0x80059658);
ZZ_MARK(0x8005965C);
ZZ_MARK(0x80059660);
ZZ_MARK(0x80059664);
ZZ_MARK_TARGET(0x80059668,ZZ_59620_48);
ZZ_MARK(0x8005966C);
ZZ_MARK(0x80059670);
ZZ_MARK(0x80059674);
ZZ_MARK(0x80059678);
ZZ_MARK(0x8005967C);
ZZ_MARK(0x80059680);
ZZ_MARK(0x80059684);
ZZ_MARK(0x80059688);
ZZ_MARK(0x8005968C);
ZZ_MARK_TARGET(0x80059690,ZZ_59620_70);
ZZ_MARK(0x80059694);
ZZ_MARK(0x80059698);
ZZ_MARK(0x8005969C);
ZZ_MARK(0x800596A0);
ZZ_MARK(0x800596A4);
ZZ_MARK(0x800596A8);
ZZ_MARK(0x800596AC);
ZZ_MARK(0x800596B0);
ZZ_MARK_TARGET(0x800596B4,ZZ_59620_94);
ZZ_MARK(0x800596B8);
ZZ_MARK(0x800596BC);
ZZ_MARK(0x800596C0);
ZZ_MARK(0x800596C4);
ZZ_MARK(0x800596C8);
ZZ_MARK(0x800596CC);
ZZ_MARK(0x800596D0);
ZZ_MARK(0x800596D4);
ZZ_MARK(0x800596D8);
ZZ_MARK(0x800596DC);
ZZ_MARK(0x800596E0);
ZZ_MARK_TARGET(0x800596E4,ZZ_59620_C4);
ZZ_MARK(0x800596E8);
ZZ_MARK(0x800596EC);
ZZ_MARK(0x800596F0);
ZZ_MARK(0x800596F4);
ZZ_MARK(0x800596F8);
ZZ_MARK(0x800596FC);
ZZ_MARK(0x80059700);
ZZ_MARK(0x80059704);
ZZ_MARK(0x80059708);
ZZ_MARK(0x8005970C);
