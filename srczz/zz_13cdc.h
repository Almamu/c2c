#ifdef ZZ_INCLUDE_CODE
ZZ_13CDC:
	T0 = 0x80060000;
	T0 += 31720;
	V0 = EMU_ReadU32(T0);
	SP -= 8;
	if ((int32_t)V0 <= 0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(6,0x80013D8C);
		goto ZZ_13CDC_B0;
	}
	V1 = R0;
	T4 = 0x1;
	T5 = 0x2;
	A2 &= 0x4;
	V0 = (int32_t)A0 >> 1;
	T3 = V0 << 2;
	T2 = T0 + 1632;
	T1 = T0 + 4;
	T0 = T1;
	ZZ_CLOCKCYCLES(14,0x80013D14);
ZZ_13CDC_38:
	V0 = EMU_ReadS16(T0 + 4); //+ 0x4
	if (V0 != T4)
	{
		ZZ_CLOCKCYCLES(4,0x80013D78);
		goto ZZ_13CDC_9C;
	}
	EMU_Write16(T0 + 4,T5); //+ 0x4
	EMU_Write32(T0 + 20,A0); //+ 0x14
	if (!A2)
	{
		EMU_Write8(T0 + 15,A3); //+ 0xF
		ZZ_CLOCKCYCLES(8,0x80013D3C);
		goto ZZ_13CDC_60;
	}
	EMU_Write8(T0 + 15,A3); //+ 0xF
	EMU_Write8(T0 + 14,A3); //+ 0xE
	ZZ_CLOCKCYCLES(10,0x80013D40);
	goto ZZ_13CDC_64;
ZZ_13CDC_60:
	EMU_Write8(T0 + 14,R0); //+ 0xE
	ZZ_CLOCKCYCLES(1,0x80013D40);
ZZ_13CDC_64:
	V0 = 0x80040000;
	V0 = EMU_ReadU32(V0 - 16068); //+ 0xFFFFC13C
	EMU_Write32(T0 + 24,A1); //+ 0x18
	EMU_Write32(T0 + 40,V0); //+ 0x28
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32164); //+ 0xFFFF825C
	V0 += T3;
	EMU_Write32(V0,T0);
	V1 = EMU_ReadU32(T2);
	V0 = T0;
	V1 += 1;
	EMU_Write32(T2,V1);
	ZZ_CLOCKCYCLES(14,0x80013D90);
	goto ZZ_13CDC_B4;
ZZ_13CDC_9C:
	V0 = EMU_ReadU32(T1 - 4); //+ 0xFFFFFFFC
	V1 += 1;
	V0 = (int32_t)V1 < (int32_t)V0;
	if (V0)
	{
		T0 += 44;
		ZZ_CLOCKCYCLES(5,0x80013D14);
		goto ZZ_13CDC_38;
	}
	T0 += 44;
	ZZ_CLOCKCYCLES(5,0x80013D8C);
ZZ_13CDC_B0:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80013D90);
ZZ_13CDC_B4:
	SP += 8;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x800140CC,ZZ_14060_6C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013CDC,0x80013D14,ZZ_13CDC);
ZZ_MARK_TARGET(0x80013D14,0x80013D3C,ZZ_13CDC_38);
ZZ_MARK_TARGET(0x80013D3C,0x80013D40,ZZ_13CDC_60);
ZZ_MARK_TARGET(0x80013D40,0x80013D78,ZZ_13CDC_64);
ZZ_MARK_TARGET(0x80013D78,0x80013D8C,ZZ_13CDC_9C);
ZZ_MARK_TARGET(0x80013D8C,0x80013D90,ZZ_13CDC_B0);
ZZ_MARK_TARGET(0x80013D90,0x80013D9C,ZZ_13CDC_B4);
