#ifdef ZZ_INCLUDE_CODE
ZZ_50440:
	SP -= 136;
	EMU_Write32(SP + 104,S2); //+ 0x68
	S2 = A0;
	EMU_Write32(SP + 124,S7); //+ 0x7C
	S7 = R0;
	EMU_Write32(SP + 112,S4); //+ 0x70
	S4 = R0;
	EMU_Write32(SP + 120,S6); //+ 0x78
	S6 = R0;
	EMU_Write32(SP + 132,RA); //+ 0x84
	EMU_Write32(SP + 128,FP); //+ 0x80
	EMU_Write32(SP + 116,S5); //+ 0x74
	EMU_Write32(SP + 108,S3); //+ 0x6C
	EMU_Write32(SP + 100,S1); //+ 0x64
	EMU_Write32(SP + 96,S0); //+ 0x60
	EMU_Write32(SP + 88,R0); //+ 0x58
	S3 = EMU_ReadU32(S2);
	FP = R0;
	S5 = S3 < 1;
	if (S5)
	{
		EMU_Write32(SP + 16,R0); //+ 0x10
		ZZ_CLOCKCYCLES(21,0x800504A0);
		goto ZZ_50440_60;
	}
	EMU_Write32(SP + 16,R0); //+ 0x10
	V0 = S3 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(24,0x800505A8);
		goto ZZ_50440_168;
	}
	ZZ_CLOCKCYCLES(24,0x800504A0);
ZZ_50440_60:
	S0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = S0 & 0x100;
	if (!V0)
	{
		V0 = -257;
		ZZ_CLOCKCYCLES(5,0x800504C0);
		goto ZZ_50440_80;
	}
	V0 = -257;
	S0 &= V0;
	T0 = 1;
	EMU_Write32(SP + 88,T0); //+ 0x58
	ZZ_CLOCKCYCLES(8,0x800504C0);
ZZ_50440_80:
	V0 = S0 < 10;
	if (!V0)
	{
		V0 = S0 << 2;
		ZZ_CLOCKCYCLES(3,0x800504EC);
		goto ZZ_50440_AC;
	}
	V0 = S0 << 2;
	A0 = 0x80060000;
	A0 += V0;
	A0 = EMU_ReadU32(A0 - 4264); //+ 0xFFFFEF58
	S1 = 0x80060000;
	RA = 0x800504E4; //ZZ_50440_A4
	S1 -= 4264;
	ZZ_CLOCKCYCLES(9,0x800503B0);
	goto ZZ_503B0;
ZZ_50440_A4:
	if (!V0)
	{
		S4 = 1;
		ZZ_CLOCKCYCLES(2,0x800504F4);
		goto ZZ_50440_B4;
	}
	S4 = 1;
	ZZ_CLOCKCYCLES(2,0x800504EC);
ZZ_50440_AC:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x800508E4);
	goto ZZ_50440_4A4;
ZZ_50440_B4:
	A2 = SP + 16;
	A1 = 67;
	AT = 0x80060000;
	EMU_Write32(AT - 5380,S0); //+ 0xFFFFEAFC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 5380); //+ 0xFFFFEAFC
	A3 = -1;
	A0 = V1 << 2;
	A0 += S1;
	V0 = V1 << 4;
	V0 += V1;
	V0 <<= 2;
	V1 = 0x80060000;
	V1 -= 4216;
	A0 = EMU_ReadU32(A0);
	V1 += V0;
	AT = 0x80060000;
	EMU_Write32(AT - 5388,A0); //+ 0xFFFFEAF4
	ZZ_CLOCKCYCLES(18,0x8005053C);
ZZ_50440_FC:
	V0 = EMU_ReadU8(V1);
	V1 += 1;
	A1 -= 1;
	EMU_Write8(A2,V0);
	if (A1 != A3)
	{
		A2 += 1;
		ZZ_CLOCKCYCLES(6,0x8005053C);
		goto ZZ_50440_FC;
	}
	A2 += 1;
	A0 = 0x80060000;
	A0 -= 5380;
	V1 = EMU_ReadU32(A0);
	V0 = 7;
	if (V1 == V0)
	{
		V0 = 8;
		ZZ_CLOCKCYCLES(12,0x8005057C);
		goto ZZ_50440_13C;
	}
	V0 = 8;
	if (V1 == V0)
	{
		V0 = 127;
		ZZ_CLOCKCYCLES(14,0x8005058C);
		goto ZZ_50440_14C;
	}
	V0 = 127;
	ZZ_CLOCKCYCLES(16,0x80050598);
	goto ZZ_50440_158;
ZZ_50440_13C:
	V0 = 127;
	EMU_Write32(A0 + 12,V0); //+ 0xC
	EMU_Write32(A0 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(4,0x800505A8);
	goto ZZ_50440_168;
ZZ_50440_14C:
	EMU_Write32(A0 + 12,R0); //+ 0xC
	EMU_Write32(A0 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(3,0x800505A8);
	goto ZZ_50440_168;
ZZ_50440_158:
	V0 = 0x80060000;
	V0 -= 5368;
	EMU_Write32(V0,R0);
	EMU_Write32(V0 - 4,R0); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(4,0x800505A8);
ZZ_50440_168:
	if (S5)
	{
		V0 = S3 & 0x8;
		ZZ_CLOCKCYCLES(2,0x800505B8);
		goto ZZ_50440_178;
	}
	V0 = S3 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800506C8);
		goto ZZ_50440_288;
	}
	ZZ_CLOCKCYCLES(4,0x800505B8);
ZZ_50440_178:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 5380); //+ 0xFFFFEAFC
	V0 = (int32_t)V1 < 9;
	if (!V0)
	{
		V0 = (int32_t)V1 < 7;
		ZZ_CLOCKCYCLES(6,0x800506C8);
		goto ZZ_50440_288;
	}
	V0 = (int32_t)V1 < 7;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x800506C8);
		goto ZZ_50440_288;
	}
	if (S4)
	{
		S6 = 1;
		ZZ_CLOCKCYCLES(10,0x80050630);
		goto ZZ_50440_1F0;
	}
	S6 = 1;
	A1 = SP + 16;
	A0 = 67;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5380); //+ 0xFFFFEAFC
	A2 = -1;
	V1 = V0 << 4;
	V1 += V0;
	V1 <<= 2;
	V0 = 0x80060000;
	V0 -= 4216;
	V1 += V0;
	ZZ_CLOCKCYCLES(21,0x8005060C);
ZZ_50440_1CC:
	V0 = EMU_ReadU8(V1);
	V1 += 1;
	A0 -= 1;
	EMU_Write8(A1,V0);
	if (A0 != A2)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(6,0x8005060C);
		goto ZZ_50440_1CC;
	}
	A1 += 1;
	V0 = 0xC010000;
	V0 |= 0x1C00;
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(9,0x80050630);
ZZ_50440_1F0:
	A0 = 0x81020000;
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	A0 |= 0x409;
	V1 = V0 << 13;
	EMU_SMultiply(V1,A0);
	A3 = HI;
	A1 = V0 << 12;
	EMU_SMultiply(A1,A0);
	AT = 0x80060000;
	EMU_Write32(AT - 5372,V0); //+ 0xFFFFEB04
	V0 = A3 + V1;
	V0 = (int32_t)V0 >> 6;
	V1 = (int32_t)V1 >> 31;
	V0 = V0 - V1;
	A0 = EMU_ReadU16(SP + 20); //+ 0x14
	V1 = EMU_ReadU16(SP + 54); //+ 0x36
	V0 = V0 - A0;
	EMU_Write16(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU16(SP + 22); //+ 0x16
	A2 = HI;
	A0 = A2 + A1;
	A0 = (int32_t)A0 >> 6;
	A1 = (int32_t)A1 >> 31;
	A0 = A0 - A1;
	V0 = A0 - V0;
	EMU_Write16(SP + 42,V0); //+ 0x2A
	V0 = EMU_ReadU16(SP + 46); //+ 0x2E
	V1 += A0;
	EMU_Write16(SP + 52,V1); //+ 0x34
	V1 = EMU_ReadU16(SP + 78); //+ 0x4E
	V0 += A0;
	EMU_Write16(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU16(SP + 76); //+ 0x4C
	V1 += A0;
	EMU_Write16(SP + 74,V1); //+ 0x4A
	V0 += A0;
	EMU_Write16(SP + 72,V0); //+ 0x48
	ZZ_CLOCKCYCLES(38,0x800506C8);
ZZ_50440_288:
	if (S5)
	{
		V0 = S3 & 0x10;
		ZZ_CLOCKCYCLES(2,0x800506D8);
		goto ZZ_50440_298;
	}
	V0 = S3 & 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8005079C);
		goto ZZ_50440_35C;
	}
	ZZ_CLOCKCYCLES(4,0x800506D8);
ZZ_50440_298:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 5380); //+ 0xFFFFEAFC
	V0 = (int32_t)V1 < 9;
	if (!V0)
	{
		V0 = (int32_t)V1 < 7;
		ZZ_CLOCKCYCLES(6,0x8005079C);
		goto ZZ_50440_35C;
	}
	V0 = (int32_t)V1 < 7;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8005079C);
		goto ZZ_50440_35C;
	}
	if (S4)
	{
		FP = 1;
		ZZ_CLOCKCYCLES(10,0x80050760);
		goto ZZ_50440_320;
	}
	FP = 1;
	if (S6)
	{
		A1 = SP + 16;
		ZZ_CLOCKCYCLES(12,0x80050750);
		goto ZZ_50440_310;
	}
	A1 = SP + 16;
	A0 = 67;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5380); //+ 0xFFFFEAFC
	A2 = -1;
	V1 = V0 << 4;
	V1 += V0;
	V1 <<= 2;
	V0 = 0x80060000;
	V0 -= 4216;
	V1 += V0;
	ZZ_CLOCKCYCLES(22,0x80050730);
ZZ_50440_2F0:
	V0 = EMU_ReadU8(V1);
	V1 += 1;
	A0 -= 1;
	EMU_Write8(A1,V0);
	if (A0 != A2)
	{
		A1 += 1;
		ZZ_CLOCKCYCLES(6,0x80050730);
		goto ZZ_50440_2F0;
	}
	A1 += 1;
	V0 = 128;
	ZZ_CLOCKCYCLES(8,0x8005075C);
	goto ZZ_50440_31C;
ZZ_50440_310:
	V0 = EMU_ReadU32(SP + 16); //+ 0x10
	V0 |= 0x80;
	ZZ_CLOCKCYCLES(3,0x8005075C);
ZZ_50440_31C:
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(1,0x80050760);
ZZ_50440_320:
	A0 = 0x81020000;
	V1 = EMU_ReadU32(S2 + 16); //+ 0x10
	A0 |= 0x409;
	V0 = V1 << 7;
	V0 += V1;
	V0 <<= 8;
	EMU_SMultiply(V0,A0);
	AT = 0x80060000;
	EMU_Write32(AT - 5368,V1); //+ 0xFFFFEB08
	T0 = HI;
	V1 = T0 + V0;
	V1 = (int32_t)V1 >> 6;
	V0 = (int32_t)V0 >> 31;
	V1 = V1 - V0;
	EMU_Write16(SP + 34,V1); //+ 0x22
	ZZ_CLOCKCYCLES(15,0x8005079C);
ZZ_50440_35C:
	if (!S4)
	{
		ZZ_CLOCKCYCLES(2,0x800507DC);
		goto ZZ_50440_39C;
	}
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 5528); //+ 0xFFFFEA68
	V0 = EMU_ReadU16(V1 + 426); //+ 0x1AA
	V0 >>= 7;
	S7 = V0 & 0x1;
	if (!S7)
	{
		ZZ_CLOCKCYCLES(11,0x80050840);
		goto ZZ_50440_400;
	}
	V0 = EMU_ReadU16(V1 + 426); //+ 0x1AA
	V0 &= 0xFF7F;
	EMU_Write16(V1 + 426,V0); //+ 0x1AA
	ZZ_CLOCKCYCLES(16,0x80050840);
	goto ZZ_50440_400;
ZZ_50440_39C:
	if (S5)
	{
		V0 = S3 & 0x2;
		ZZ_CLOCKCYCLES(2,0x800507EC);
		goto ZZ_50440_3AC;
	}
	V0 = S3 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8005080C);
		goto ZZ_50440_3CC;
	}
	ZZ_CLOCKCYCLES(4,0x800507EC);
ZZ_50440_3AC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5528); //+ 0xFFFFEA68
	V1 = EMU_ReadU16(S2 + 8); //+ 0x8
	EMU_Write16(V0 + 388,V1); //+ 0x184
	V0 = EMU_ReadU16(S2 + 8); //+ 0x8
	AT = 0x80060000;
	EMU_Write16(AT - 5376,V0); //+ 0xFFFFEB00
	ZZ_CLOCKCYCLES(8,0x8005080C);
ZZ_50440_3CC:
	if (S5)
	{
		V0 = S3 & 0x4;
		ZZ_CLOCKCYCLES(2,0x8005081C);
		goto ZZ_50440_3DC;
	}
	V0 = S3 & 0x4;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80050864);
		goto ZZ_50440_424;
	}
	ZZ_CLOCKCYCLES(4,0x8005081C);
ZZ_50440_3DC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5528); //+ 0xFFFFEA68
	V1 = EMU_ReadU16(S2 + 10); //+ 0xA
	EMU_Write16(V0 + 390,V1); //+ 0x186
	V0 = EMU_ReadU16(S2 + 10); //+ 0xA
	AT = 0x80060000;
	EMU_Write16(AT - 5374,V0); //+ 0xFFFFEB02
	ZZ_CLOCKCYCLES(9,0x80050864);
	goto ZZ_50440_424;
ZZ_50440_400:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 5528); //+ 0xFFFFEA68
	EMU_Write16(V0 + 388,R0); //+ 0x184
	EMU_Write16(V0 + 390,R0); //+ 0x186
	V0 = 0x80060000;
	V0 -= 5376;
	EMU_Write16(V0,R0);
	EMU_Write16(V0 + 2,R0); //+ 0x2
	ZZ_CLOCKCYCLES(9,0x80050864);
ZZ_50440_424:
	if (S4)
	{
		ZZ_CLOCKCYCLES(2,0x8005087C);
		goto ZZ_50440_43C;
	}
	if (S6)
	{
		ZZ_CLOCKCYCLES(4,0x8005087C);
		goto ZZ_50440_43C;
	}
	if (!FP)
	{
		ZZ_CLOCKCYCLES(6,0x80050884);
		goto ZZ_50440_444;
	}
	ZZ_CLOCKCYCLES(6,0x8005087C);
ZZ_50440_43C:
	RA = 0x80050884; //ZZ_50440_444
	A0 = SP + 16;
	ZZ_CLOCKCYCLES(2,0x80050920);
	goto ZZ_50920;
ZZ_50440_444:
	T0 = EMU_ReadU32(SP + 88); //+ 0x58
	if (!T0)
	{
		ZZ_CLOCKCYCLES(4,0x800508A4);
		goto ZZ_50440_464;
	}
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 5380); //+ 0xFFFFEAFC
	RA = 0x800508A4; //ZZ_50440_464
	ZZ_CLOCKCYCLES(8,0x80051160);
	goto ZZ_51160;
ZZ_50440_464:
	if (!S4)
	{
		A0 = 209;
		ZZ_CLOCKCYCLES(2,0x800508E0);
		goto ZZ_50440_4A0;
	}
	A0 = 209;
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 5388); //+ 0xFFFFEAF4
	RA = 0x800508BC; //ZZ_50440_47C
	A2 = R0;
	ZZ_CLOCKCYCLES(6,0x8004FE9C);
	goto ZZ_4FE9C;
ZZ_50440_47C:
	if (!S7)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x800508E4);
		goto ZZ_50440_4A4;
	}
	V0 = R0;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 5528); //+ 0xFFFFEA68
	V0 = EMU_ReadU16(V1 + 426); //+ 0x1AA
	V0 |= 0x80;
	EMU_Write16(V1 + 426,V0); //+ 0x1AA
	ZZ_CLOCKCYCLES(9,0x800508E0);
ZZ_50440_4A0:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x800508E4);
ZZ_50440_4A4:
	RA = EMU_ReadU32(SP + 132); //+ 0x84
	FP = EMU_ReadU32(SP + 128); //+ 0x80
	S7 = EMU_ReadU32(SP + 124); //+ 0x7C
	S6 = EMU_ReadU32(SP + 120); //+ 0x78
	S5 = EMU_ReadU32(SP + 116); //+ 0x74
	S4 = EMU_ReadU32(SP + 112); //+ 0x70
	S3 = EMU_ReadU32(SP + 108); //+ 0x6C
	S2 = EMU_ReadU32(SP + 104); //+ 0x68
	S1 = EMU_ReadU32(SP + 100); //+ 0x64
	S0 = EMU_ReadU32(SP + 96); //+ 0x60
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 136;
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x800328C0,ZZ_32894_2C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80050440,0x800504A0,ZZ_50440);
ZZ_MARK_TARGET(0x800504A0,0x800504C0,ZZ_50440_60);
ZZ_MARK_TARGET(0x800504C0,0x800504E4,ZZ_50440_80);
ZZ_MARK_TARGET(0x800504E4,0x800504EC,ZZ_50440_A4);
ZZ_MARK_TARGET(0x800504EC,0x800504F4,ZZ_50440_AC);
ZZ_MARK_TARGET(0x800504F4,0x8005053C,ZZ_50440_B4);
ZZ_MARK_TARGET(0x8005053C,0x8005057C,ZZ_50440_FC);
ZZ_MARK_TARGET(0x8005057C,0x8005058C,ZZ_50440_13C);
ZZ_MARK_TARGET(0x8005058C,0x80050598,ZZ_50440_14C);
ZZ_MARK_TARGET(0x80050598,0x800505A8,ZZ_50440_158);
ZZ_MARK_TARGET(0x800505A8,0x800505B8,ZZ_50440_168);
ZZ_MARK_TARGET(0x800505B8,0x8005060C,ZZ_50440_178);
ZZ_MARK_TARGET(0x8005060C,0x80050630,ZZ_50440_1CC);
ZZ_MARK_TARGET(0x80050630,0x800506C8,ZZ_50440_1F0);
ZZ_MARK_TARGET(0x800506C8,0x800506D8,ZZ_50440_288);
ZZ_MARK_TARGET(0x800506D8,0x80050730,ZZ_50440_298);
ZZ_MARK_TARGET(0x80050730,0x80050750,ZZ_50440_2F0);
ZZ_MARK_TARGET(0x80050750,0x8005075C,ZZ_50440_310);
ZZ_MARK_TARGET(0x8005075C,0x80050760,ZZ_50440_31C);
ZZ_MARK_TARGET(0x80050760,0x8005079C,ZZ_50440_320);
ZZ_MARK_TARGET(0x8005079C,0x800507DC,ZZ_50440_35C);
ZZ_MARK_TARGET(0x800507DC,0x800507EC,ZZ_50440_39C);
ZZ_MARK_TARGET(0x800507EC,0x8005080C,ZZ_50440_3AC);
ZZ_MARK_TARGET(0x8005080C,0x8005081C,ZZ_50440_3CC);
ZZ_MARK_TARGET(0x8005081C,0x80050840,ZZ_50440_3DC);
ZZ_MARK_TARGET(0x80050840,0x80050864,ZZ_50440_400);
ZZ_MARK_TARGET(0x80050864,0x8005087C,ZZ_50440_424);
ZZ_MARK_TARGET(0x8005087C,0x80050884,ZZ_50440_43C);
ZZ_MARK_TARGET(0x80050884,0x800508A4,ZZ_50440_444);
ZZ_MARK_TARGET(0x800508A4,0x800508BC,ZZ_50440_464);
ZZ_MARK_TARGET(0x800508BC,0x800508E0,ZZ_50440_47C);
ZZ_MARK_TARGET(0x800508E0,0x800508E4,ZZ_50440_4A0);
ZZ_MARK_TARGET(0x800508E4,0x80050914,ZZ_50440_4A4);
