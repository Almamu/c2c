#ifdef ZZ_INCLUDE_CODE
ZZ_39CAC:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	A0 = A1 & 0xFFF;
	A2 = A0;
	V1 = A1 & 0xE00;
	V0 = 0xE00;
	if (V1 != V0)
	{
		EMU_Write32(SP + 20,RA); //+ 0x14
		ZZ_CLOCKCYCLES(9,0x80039D00);
		goto ZZ_39CAC_54;
	}
	EMU_Write32(SP + 20,RA); //+ 0x14
	V0 = 0xE1F;
	if (A0 != V0)
	{
		V0 = A1 & 0x1FF;
		ZZ_CLOCKCYCLES(12,0x80039CF0);
		goto ZZ_39CAC_44;
	}
	V0 = A1 & 0x1FF;
	V0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 -= 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(17,0x80039D0C);
	goto ZZ_39CAC_60;
ZZ_39CAC_44:
	V0 <<= 2;
	V0 += 64;
	V0 += S0;
	ZZ_CLOCKCYCLES(4,0x80039D0C);
	goto ZZ_39CAC_60;
ZZ_39CAC_54:
	A0 = S0;
	RA = 0x80039D0C; //ZZ_39CAC_60
	A1 = A2;
	ZZ_CLOCKCYCLES(3,0x80036FA4);
	goto ZZ_36FA4;
ZZ_39CAC_60:
	RA = 0x80039D14; //ZZ_39CAC_68
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x800278D8);
	goto ZZ_278D8;
ZZ_39CAC_68:
	A0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V1 = A0 + 4;
	EMU_Write32(S0 + 188,V1); //+ 0xBC
	EMU_Write32(A0,V0);
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8003A26C,ZZ_3A234_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80039CAC,ZZ_39CAC);
ZZ_MARK(0x80039CB0);
ZZ_MARK(0x80039CB4);
ZZ_MARK(0x80039CB8);
ZZ_MARK(0x80039CBC);
ZZ_MARK(0x80039CC0);
ZZ_MARK(0x80039CC4);
ZZ_MARK(0x80039CC8);
ZZ_MARK(0x80039CCC);
ZZ_MARK(0x80039CD0);
ZZ_MARK(0x80039CD4);
ZZ_MARK(0x80039CD8);
ZZ_MARK(0x80039CDC);
ZZ_MARK(0x80039CE0);
ZZ_MARK(0x80039CE4);
ZZ_MARK(0x80039CE8);
ZZ_MARK(0x80039CEC);
ZZ_MARK_TARGET(0x80039CF0,ZZ_39CAC_44);
ZZ_MARK(0x80039CF4);
ZZ_MARK(0x80039CF8);
ZZ_MARK(0x80039CFC);
ZZ_MARK_TARGET(0x80039D00,ZZ_39CAC_54);
ZZ_MARK(0x80039D04);
ZZ_MARK(0x80039D08);
ZZ_MARK_TARGET(0x80039D0C,ZZ_39CAC_60);
ZZ_MARK(0x80039D10);
ZZ_MARK_TARGET(0x80039D14,ZZ_39CAC_68);
ZZ_MARK(0x80039D18);
ZZ_MARK(0x80039D1C);
ZZ_MARK(0x80039D20);
ZZ_MARK(0x80039D24);
ZZ_MARK(0x80039D28);
ZZ_MARK(0x80039D2C);
ZZ_MARK(0x80039D30);
ZZ_MARK(0x80039D34);
ZZ_MARK(0x80039D38);
