#ifdef ZZ_INCLUDE_CODE
ZZ_4EAC0:
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	if (A0)
	{
		EMU_Write32(SP + 16,S0); //+ 0x10
		ZZ_CLOCKCYCLES(4,0x8004EB74);
		goto ZZ_4EAC0_B4;
	}
	EMU_Write32(SP + 16,S0); //+ 0x10
	RA = 0x8004EAD8; //ZZ_4EAC0_18
	ZZ_CLOCKCYCLES(6,0x8004EC08);
	goto ZZ_4EC08;
ZZ_4EAC0_18:
	ZZ_CLOCKCYCLES(2,0x8004EAF8);
	goto ZZ_4EAC0_38;
ZZ_4EAC0_20:
	RA = 0x8004EAE8; //ZZ_4EAC0_28
	ZZ_CLOCKCYCLES(2,0x8004E678);
	goto ZZ_4E678;
ZZ_4EAC0_28:
	RA = 0x8004EAF0; //ZZ_4EAC0_30
	ZZ_CLOCKCYCLES(2,0x8004EC3C);
	goto ZZ_4EC3C;
ZZ_4EAC0_30:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x8004EBF4);
		goto ZZ_4EAC0_134;
	}
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004EAF8);
ZZ_4EAC0_38:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8004); //+ 0xFFFFE0BC
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(7,0x8004EB2C);
		goto ZZ_4EAC0_6C;
	}
	ZZ_CLOCKCYCLES(9,0x8004EAE0);
	goto ZZ_4EAC0_20;
ZZ_4EAC0_5C:
	RA = 0x8004EB24; //ZZ_4EAC0_64
	ZZ_CLOCKCYCLES(2,0x8004EC3C);
	goto ZZ_4EC3C;
ZZ_4EAC0_64:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x8004EBF4);
		goto ZZ_4EAC0_134;
	}
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004EB2C);
ZZ_4EAC0_6C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8004EB1C);
		goto ZZ_4EAC0_5C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8056); //+ 0xFFFFE088
	V0 = EMU_ReadU32(V0);
	V1 = 0x4000000;
	V0 &= V1;
	if (!V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(16,0x8004EB1C);
		goto ZZ_4EAC0_5C;
	}
	V0 = R0;
	ZZ_CLOCKCYCLES(18,0x8004EBF4);
	goto ZZ_4EAC0_134;
ZZ_4EAC0_B4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8008); //+ 0xFFFFE0B8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V0 - V1;
	S0 = V0 & 0x3F;
	if (!S0)
	{
		ZZ_CLOCKCYCLES(9,0x8004EBA0);
		goto ZZ_4EAC0_E0;
	}
	RA = 0x8004EBA0; //ZZ_4EAC0_E0
	ZZ_CLOCKCYCLES(11,0x8004E678);
	goto ZZ_4E678;
ZZ_4EAC0_E0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8004EBE0);
		goto ZZ_4EAC0_120;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8056); //+ 0xFFFFE088
	V0 = EMU_ReadU32(V0);
	V1 = 0x4000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(16,0x8004EBF0);
		goto ZZ_4EAC0_130;
	}
	ZZ_CLOCKCYCLES(16,0x8004EBE0);
ZZ_4EAC0_120:
	if (S0)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(2,0x8004EBF4);
		goto ZZ_4EAC0_134;
	}
	V0 = S0;
	V0 = 1;
	ZZ_CLOCKCYCLES(4,0x8004EBF4);
	goto ZZ_4EAC0_134;
ZZ_4EAC0_130:
	V0 = S0;
	ZZ_CLOCKCYCLES(1,0x8004EBF4);
ZZ_4EAC0_134:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004EAC0,0x8004EAD8,ZZ_4EAC0);
ZZ_MARK_TARGET(0x8004EAD8,0x8004EAE0,ZZ_4EAC0_18);
ZZ_MARK_TARGET(0x8004EAE0,0x8004EAE8,ZZ_4EAC0_20);
ZZ_MARK_TARGET(0x8004EAE8,0x8004EAF0,ZZ_4EAC0_28);
ZZ_MARK_TARGET(0x8004EAF0,0x8004EAF8,ZZ_4EAC0_30);
ZZ_MARK_TARGET(0x8004EAF8,0x8004EB1C,ZZ_4EAC0_38);
ZZ_MARK_TARGET(0x8004EB1C,0x8004EB24,ZZ_4EAC0_5C);
ZZ_MARK_TARGET(0x8004EB24,0x8004EB2C,ZZ_4EAC0_64);
ZZ_MARK_TARGET(0x8004EB2C,0x8004EB74,ZZ_4EAC0_6C);
ZZ_MARK_TARGET(0x8004EB74,0x8004EBA0,ZZ_4EAC0_B4);
ZZ_MARK_TARGET(0x8004EBA0,0x8004EBE0,ZZ_4EAC0_E0);
ZZ_MARK_TARGET(0x8004EBE0,0x8004EBF0,ZZ_4EAC0_120);
ZZ_MARK_TARGET(0x8004EBF0,0x8004EBF4,ZZ_4EAC0_130);
ZZ_MARK_TARGET(0x8004EBF4,0x8004EC08,ZZ_4EAC0_134);
