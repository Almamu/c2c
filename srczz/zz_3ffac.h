#ifdef ZZ_INCLUDE_CODE
ZZ_3FFAC:
	V0 = T0 >> 13;
	V0 &= 0x7F8;
	T8 = T0 << 5;
	if ((int32_t)T8 >= 0)
	{
		V0 += V1;
		ZZ_CLOCKCYCLES(5,0x8003FFCC);
		goto ZZ_3FFAC_20;
	}
	V0 += V1;
	T9 = EMU_ReadU32(V0 + 320); //+ 0x140
	T8 = EMU_ReadU32(V0 + 324); //+ 0x144
	ZZ_CLOCKCYCLES(8,0x80040184);
	goto ZZ_3FFAC_1D8;
ZZ_3FFAC_20:
	if (GP)
	{
		T9 = S4 & 0x2;
		ZZ_CLOCKCYCLES(2,0x8003FFE8);
		goto ZZ_3FFAC_3C;
	}
	T9 = S4 & 0x2;
	S4 = EMU_CheckedAdd(S4,3);
	if (!T9)
	{
		EMU_ReadRight(S4 + -3,&T8); //+ 0xFFFFFFFD
		ZZ_CLOCKCYCLES(5,0x8004011C);
		goto ZZ_3FFAC_170;
	}
	EMU_ReadRight(S4 + -3,&T8); //+ 0xFFFFFFFD
	EMU_ReadLeft(S4,&T8);
	ZZ_CLOCKCYCLES(7,0x8004011C);
	goto ZZ_3FFAC_170;
ZZ_3FFAC_3C:
	AT = EMU_ReadU32(GP);
	GP = EMU_CheckedAdd(GP,4);
	T8 = AT >> 6;
	T8 &= 0x7;
	T9 = T8 ^ 0x1F;
	T8 += 1;
	A3 = T8 - 8;
	T4 += T8;
	if ((int32_t)T4 <= 0)
	{
		A0 = (int32_t)T3 >> T9;
		ZZ_CLOCKCYCLES(10,0x80040034);
		goto ZZ_3FFAC_88;
	}
	A0 = (int32_t)T3 >> T9;
	A0 = T3;
	T3 = EMU_ReadU32(S4);
	S4 = EMU_CheckedAdd(S4,4);
	T8 = T8 - T4;
	T8 = T3 >> T8;
	A0 |= T8;
	A0 = (int32_t)A0 >> T9;
	T8 = T4;
	T4 = EMU_CheckedAdd(T4,-32);
	ZZ_CLOCKCYCLES(19,0x80040034);
ZZ_3FFAC_88:
	if (!A3)
	{
		T3 <<= T8;
		ZZ_CLOCKCYCLES(2,0x80040050);
		goto ZZ_3FFAC_A4;
	}
	T3 <<= T8;
	T9 = (int32_t)AT >> 25;
	T9 <<= 1;
	T8 = EMU_ReadS8(V1 + 272); //+ 0x110
	A0 += T9;
	A0 += T8;
	ZZ_CLOCKCYCLES(7,0x80040050);
ZZ_3FFAC_A4:
	EMU_Write8(V1 + 272,A0); //+ 0x110
	T8 = AT >> 3;
	T8 &= 0x7;
	T9 = T8 ^ 0x1F;
	T8 += 1;
	A3 = T8 - 8;
	T4 += T8;
	if ((int32_t)T4 <= 0)
	{
		A0 = (int32_t)T3 >> T9;
		ZZ_CLOCKCYCLES(9,0x80040098);
		goto ZZ_3FFAC_EC;
	}
	A0 = (int32_t)T3 >> T9;
	A0 = T3;
	T3 = EMU_ReadU32(S4);
	S4 = EMU_CheckedAdd(S4,4);
	T8 = T8 - T4;
	T8 = T3 >> T8;
	A0 |= T8;
	A0 = (int32_t)A0 >> T9;
	T8 = T4;
	T4 = EMU_CheckedAdd(T4,-32);
	ZZ_CLOCKCYCLES(18,0x80040098);
ZZ_3FFAC_EC:
	if (!A3)
	{
		T3 <<= T8;
		ZZ_CLOCKCYCLES(2,0x800400B4);
		goto ZZ_3FFAC_108;
	}
	T3 <<= T8;
	T9 = AT << 7;
	T9 = (int32_t)T9 >> 24;
	T8 = EMU_ReadS8(V1 + 274); //+ 0x112
	A0 += T9;
	A0 += T8;
	ZZ_CLOCKCYCLES(7,0x800400B4);
ZZ_3FFAC_108:
	EMU_Write8(V1 + 274,A0); //+ 0x112
	T8 = AT & 0x7;
	T9 = T8 ^ 0x1F;
	T8 += 1;
	A3 = T8 - 8;
	T4 += T8;
	if ((int32_t)T4 <= 0)
	{
		A0 = (int32_t)T3 >> T9;
		ZZ_CLOCKCYCLES(8,0x800400F8);
		goto ZZ_3FFAC_14C;
	}
	A0 = (int32_t)T3 >> T9;
	A0 = T3;
	T3 = EMU_ReadU32(S4);
	S4 = EMU_CheckedAdd(S4,4);
	T8 = T8 - T4;
	T8 = T3 >> T8;
	A0 |= T8;
	A0 = (int32_t)A0 >> T9;
	T8 = T4;
	T4 = EMU_CheckedAdd(T4,-32);
	ZZ_CLOCKCYCLES(17,0x800400F8);
ZZ_3FFAC_14C:
	if (!A3)
	{
		T3 <<= T8;
		ZZ_CLOCKCYCLES(2,0x80040114);
		goto ZZ_3FFAC_168;
	}
	T3 <<= T8;
	T9 = AT << 15;
	T9 = (int32_t)T9 >> 24;
	T8 = EMU_ReadS8(V1 + 273); //+ 0x111
	A0 += T9;
	A0 += T8;
	ZZ_CLOCKCYCLES(7,0x80040114);
ZZ_3FFAC_168:
	EMU_Write8(V1 + 273,A0); //+ 0x111
	T8 = EMU_ReadU32(V1 + 272); //+ 0x110
	ZZ_CLOCKCYCLES(2,0x8004011C);
ZZ_3FFAC_170:
	AT = EMU_ReadU32(V1 + 280); //+ 0x118
	T8 <<= 2;
	T9 = T8 & T1;
	T9 += AT;
	AT = EMU_ReadU32(V1 + 284); //+ 0x11C
	T9 &= T2;
	T8 >>= 8;
	T8 &= 0x3FC;
	T8 += AT;
	GTE_SetDataRegister(GTE_DREG_VXY0,T9);
	GTE_SetDataRegister(GTE_DREG_VZ0,T8);
	GTE_SetDataRegister(GTE_DREG_VXY1,T9);
	GTE_SetDataRegister(GTE_DREG_VZ1,T8);
	GTE_SetDataRegister(GTE_DREG_VXY2,T9);
	GTE_SetDataRegister(GTE_DREG_VZ2,T8);
	GTE_Execute(4907026);
	T9 = GTE_GetDataRegister(GTE_DREG_IR2);
	GTE_Execute(4874258);
	A0 = GTE_GetDataRegister(GTE_DREG_IR1);
	T9 <<= 16;
	A0 &= 0xFFFF;
	T9 |= A0;
	GTE_Execute(4939794);
	T8 = GTE_GetDataRegister(GTE_DREG_IR3);
	EMU_Write32(V0 + 320,T9); //+ 0x140
	EMU_Write32(V0 + 324,T8); //+ 0x144
	ZZ_CLOCKCYCLES(26,0x80040184);
ZZ_3FFAC_1D8:
	A0 = T0 >> 7;
	A1 = T0 << 4;
	if ((int32_t)A1 < 0)
	{
		A0 &= 0x1FC;
		ZZ_CLOCKCYCLES(4,0x800401A0);
		goto ZZ_3FFAC_1F4;
	}
	A0 &= 0x1FC;
	A0 += S6;
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_ReadU32(A0);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80040264,ZZ_3FFAC_2B8);
	ZZ_JUMPREGISTER(0x80040290,ZZ_3FFAC_2E4);
	ZZ_JUMPREGISTER(0x800402C4,ZZ_3FFAC_318);
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_1F4:
	A0 += V1;
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_ReadU32(A0 + 320); //+ 0x140
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x80040264,ZZ_3FFAC_2B8);
	ZZ_JUMPREGISTER(0x80040290,ZZ_3FFAC_2E4);
	ZZ_JUMPREGISTER(0x800402C4,ZZ_3FFAC_318);
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_200:
	A0 = EMU_ReadU32(GP + 108); //+ 0x6C
	EMU_Write32(V1 + 104,RA); //+ 0x68
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x8003E174);
		goto ZZ_3DFAC_1C8;
	}
	RA = 0x800401C4; //ZZ_3FFAC_218
	T9 = EMU_ReadU32(SP + 72); //+ 0x48
	ZZ_CLOCKCYCLES(6,0x80043A34);
	goto ZZ_43A34;
ZZ_3FFAC_218:
	RA = 0x800401CC; //ZZ_3FFAC_220
	T8 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(2,0x80043960);
	goto ZZ_43960;
ZZ_3FFAC_220:
	RA = 0x800401D4; //ZZ_3FFAC_228
	A0 = EMU_ReadU32(GP + 100); //+ 0x64
	ZZ_CLOCKCYCLES(2,0x80043A8C);
	goto ZZ_43A8C;
ZZ_3FFAC_228:
	if ((int32_t)T9 < 0)
	{
		EMU_Write32(V1 + 296,A0); //+ 0x128
		ZZ_CLOCKCYCLES(2,0x8003E604);
		goto ZZ_3DFAC_658;
	}
	EMU_Write32(V1 + 296,A0); //+ 0x128
	RA = 0x800401E4; //ZZ_3FFAC_238
	T9 = EMU_ReadU32(GP + 168); //+ 0xA8
	ZZ_CLOCKCYCLES(4,0x80043A24);
	goto ZZ_43A24;
ZZ_3FFAC_238:
	ZZ_JUMPREGISTER_BEGIN(T8);
	RA = 0x800401EC; //ZZ_3FFAC_240
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T8,800401E4)
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_240:
	if (T8)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	T8 = EMU_ReadU32(SP + 20); //+ 0x14
	T0 = EMU_ReadU32(T8);
	T1 = EMU_ReadU32(T8 + 4); //+ 0x4
	T2 = EMU_ReadU32(T8 + 8); //+ 0x8
	T3 = EMU_ReadU32(T8 + 12); //+ 0xC
	T4 = EMU_ReadU32(T8 + 16); //+ 0x10
	GTE_SetControlRegister(GTE_CREG_L11_L12,T0);
	GTE_SetControlRegister(GTE_CREG_L13_L21,T1);
	GTE_SetControlRegister(GTE_CREG_L22_L23,T2);
	GTE_SetControlRegister(GTE_CREG_L31_L32,T3);
	GTE_SetControlRegister(GTE_CREG_L33_NONE,T4);
	T0 = EMU_ReadU32(V1 + 32); //+ 0x20
	T1 = EMU_ReadU32(V1 + 36); //+ 0x24
	T2 = EMU_ReadU32(V1 + 40); //+ 0x28
	T3 = EMU_ReadU32(V1 + 44); //+ 0x2C
	RA = 0x8004023C; //ZZ_3FFAC_290
	T4 = EMU_ReadU32(V1 + 48); //+ 0x30
	ZZ_CLOCKCYCLES(20,0x8004330C);
	goto ZZ_4330C;
ZZ_3FFAC_290:
	RA = 0x80040244; //ZZ_3FFAC_298
	A0 = EMU_CheckedAdd(V1,32);
	ZZ_CLOCKCYCLES(2,0x800433A8);
	goto ZZ_433A8;
ZZ_3FFAC_298:
	RA = 0x8004024C; //ZZ_3FFAC_2A0
	ZZ_CLOCKCYCLES(2,0x800439E8);
	goto ZZ_439E8;
ZZ_3FFAC_2A0:
	RA = 0x80040254; //ZZ_3FFAC_2A8
	ZZ_CLOCKCYCLES(2,0x8004388C);
	goto ZZ_4388C;
ZZ_3FFAC_2A8:
	if (!T9)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x80040264; //ZZ_3FFAC_2B8
	ZZ_CLOCKCYCLES(4,0x8003FFAC);
	goto ZZ_3FFAC;
ZZ_3FFAC_2B8:
	GTE_SetDataRegister(GTE_DREG_VXY0,T9);
	GTE_SetDataRegister(GTE_DREG_VZ0,T8);
	EMU_Write32(V1 + 128,T9); //+ 0x80
	EMU_Write32(V1 + 132,T8); //+ 0x84
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 116,T9); //+ 0x74
	T0 = EMU_ReadU32(S2);
	RA = 0x80040290; //ZZ_3FFAC_2E4
	T5 = A0;
	ZZ_CLOCKCYCLES(11,0x8003FFAC);
	goto ZZ_3FFAC;
ZZ_3FFAC_2E4:
	GTE_SetDataRegister(GTE_DREG_VXY1,T9);
	GTE_SetDataRegister(GTE_DREG_VZ1,T8);
	EMU_Write32(V1 + 144,T9); //+ 0x90
	EMU_Write32(V1 + 148,T8); //+ 0x94
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 120,T9); //+ 0x78
	T0 = EMU_ReadU32(S2 + 4); //+ 0x4
	S2 = EMU_CheckedAdd(S2,8);
	T6 = A0;
	ZZ_CLOCKCYCLES(11,0x800402BC);
ZZ_3FFAC_310:
	RA = 0x800402C4; //ZZ_3FFAC_318
	ZZ_CLOCKCYCLES(2,0x8003FFAC);
	goto ZZ_3FFAC;
ZZ_3FFAC_318:
	GTE_SetDataRegister(GTE_DREG_VXY2,T9);
	GTE_SetDataRegister(GTE_DREG_VZ2,T8);
	EMU_Write32(V1 + 160,T9); //+ 0xA0
	EMU_Write32(V1 + 164,T8); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 124,T9); //+ 0x7C
	T7 = A0;
	A0 = T0 << 23;
	if (!A0)
	{
		A2 = T0 & 0xFF;
		ZZ_CLOCKCYCLES(12,0x80040344);
		goto ZZ_3FFAC_398;
	}
	A2 = T0 & 0xFF;
	if ((int32_t)A0 > 0)
	{
		A0 = A2 << 2;
		ZZ_CLOCKCYCLES(14,0x80040338);
		goto ZZ_3FFAC_38C;
	}
	ZZ_CLOCKCYCLES(13,0x800402F8);
ZZ_3FFAC_34C:
	A0 = A2 << 2;
	A0 += S0;
	A2 = EMU_ReadU32(A0);
	A0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	A1 = A2 >> 26;
	A1 &= 0x1F;
	A0 >>= A1;
	A1 = A2 >> 19;
	A0 += A1;
	A1 = A2 >> 12;
	A1 &= 0x7F;
	A0 &= A1;
	A1 = A2 << 20;
	A2 += A0;
	if ((int32_t)A1 < 0)
	{
		A2 &= 0x7FF;
		ZZ_CLOCKCYCLES(16,0x800402F8);
		goto ZZ_3FFAC_34C;
	}
	A2 &= 0x7FF;
	ZZ_CLOCKCYCLES(16,0x80040338);
ZZ_3FFAC_38C:
	A0 = A2 << 1;
	A2 += A0;
	A2 <<= 2;
	ZZ_CLOCKCYCLES(3,0x80040344);
ZZ_3FFAC_398:
	RA = 0x8004034C; //ZZ_3FFAC_3A0
	ZZ_CLOCKCYCLES(2,0x800414B0);
	goto ZZ_414B0;
ZZ_3FFAC_3A0:
	T0 = EMU_ReadU32(S2);
	S2 = EMU_CheckedAdd(S2,4);
	if ((int32_t)T0 < 0)
	{
		T9 = EMU_CheckedAdd(T0,1);
		ZZ_CLOCKCYCLES(4,0x80040254);
		goto ZZ_3FFAC_2A8;
	}
	T9 = EMU_CheckedAdd(T0,1);
	T9 = T0 >> 16;
	if (T9)
	{
		A0 = T0 << 1;
		ZZ_CLOCKCYCLES(7,0x800403B4);
		goto ZZ_3FFAC_408;
	}
	A0 = T0 << 1;
	T9 = T0 << 31;
	T8 = T0 >> 7;
	if ((int32_t)T9 < 0)
	{
		T8 &= 0x1FC;
		ZZ_CLOCKCYCLES(11,0x80040384);
		goto ZZ_3FFAC_3D8;
	}
	T8 &= 0x1FC;
	T8 += S6;
	T6 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(14,0x8004038C);
	goto ZZ_3FFAC_3E0;
ZZ_3FFAC_3D8:
	T8 += V1;
	T6 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8004038C);
ZZ_3FFAC_3E0:
	T9 = T0 << 30;
	if ((int32_t)T9 < 0)
	{
		T8 = T0 & 0x1FC;
		ZZ_CLOCKCYCLES(3,0x800403A4);
		goto ZZ_3FFAC_3F8;
	}
	T8 = T0 & 0x1FC;
	T8 += S6;
	T7 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(6,0x800403AC);
	goto ZZ_3FFAC_400;
ZZ_3FFAC_3F8:
	T8 += V1;
	T7 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x800403AC);
ZZ_3FFAC_400:
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x8004034C);
	goto ZZ_3FFAC_3A0;
ZZ_3FFAC_408:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x800403C4);
		goto ZZ_3FFAC_418;
	}
	T6 = T5;
	ZZ_CLOCKCYCLES(4,0x800403DC);
	goto ZZ_3FFAC_430;
ZZ_3FFAC_418:
	A0 = EMU_ReadU32(V1 + 144); //+ 0x90
	A1 = EMU_ReadU32(V1 + 148); //+ 0x94
	EMU_Write32(V1 + 128,A0); //+ 0x80
	A0 = EMU_ReadU32(V1 + 120); //+ 0x78
	EMU_Write32(V1 + 132,A1); //+ 0x84
	EMU_Write32(V1 + 116,A0); //+ 0x74
	ZZ_CLOCKCYCLES(6,0x800403DC);
ZZ_3FFAC_430:
	A0 = EMU_ReadU32(V1 + 160); //+ 0xA0
	A1 = EMU_ReadU32(V1 + 164); //+ 0xA4
	EMU_Write32(V1 + 144,A0); //+ 0x90
	A0 = EMU_ReadU32(V1 + 124); //+ 0x7C
	EMU_Write32(V1 + 148,A1); //+ 0x94
	EMU_Write32(V1 + 120,A0); //+ 0x78
	T5 = T6;
	T6 = T7;
	ZZ_CLOCKCYCLES(9,0x800402BC);
	goto ZZ_3FFAC_310;
ZZ_3FFAC_454:
	EMU_Write32(V1 + 104,RA); //+ 0x68
	RA = 0x8004040C; //ZZ_3FFAC_460
	T9 = EMU_ReadU32(SP + 72); //+ 0x48
	ZZ_CLOCKCYCLES(3,0x80043A34);
	goto ZZ_43A34;
ZZ_3FFAC_460:
	RA = 0x80040414; //ZZ_3FFAC_468
	T8 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(2,0x80043960);
	goto ZZ_43960;
ZZ_3FFAC_468:
	RA = 0x8004041C; //ZZ_3FFAC_470
	T9 = EMU_ReadU32(GP + 168); //+ 0xA8
	ZZ_CLOCKCYCLES(2,0x80043A10);
	goto ZZ_43A10;
ZZ_3FFAC_470:
	ZZ_JUMPREGISTER_BEGIN(T8);
	RA = 0x80040424; //ZZ_3FFAC_478
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T8,8004041C)
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_478:
	if (T8)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x80040434; //ZZ_3FFAC_488
	ZZ_CLOCKCYCLES(4,0x8004388C);
	goto ZZ_4388C;
ZZ_3FFAC_488:
	if (!T9)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x80040444; //ZZ_3FFAC_498
	EMU_Write32(V1 + 288,T0); //+ 0x120
	ZZ_CLOCKCYCLES(4,0x8003DFAC);
	goto ZZ_3DFAC;
ZZ_3FFAC_498:
	GTE_SetDataRegister(GTE_DREG_VXY0,T9);
	GTE_SetDataRegister(GTE_DREG_VZ0,T8);
	T0 = EMU_ReadU32(S2);
	RA = 0x80040458; //ZZ_3FFAC_4AC
	T5 = A0;
	ZZ_CLOCKCYCLES(5,0x8003DFAC);
	goto ZZ_3DFAC;
ZZ_3FFAC_4AC:
	GTE_SetDataRegister(GTE_DREG_VXY1,T9);
	GTE_SetDataRegister(GTE_DREG_VZ1,T8);
	T0 = EMU_ReadU32(S2 + 4); //+ 0x4
	RA = 0x8004046C; //ZZ_3FFAC_4C0
	T6 = A0;
	ZZ_CLOCKCYCLES(5,0x8003DFAC);
	goto ZZ_3DFAC;
ZZ_3FFAC_4C0:
	GTE_SetDataRegister(GTE_DREG_VXY2,T9);
	GTE_SetDataRegister(GTE_DREG_VZ2,T8);
	T7 = A0;
	T0 = EMU_ReadU32(V1 + 288); //+ 0x120
	GTE_Execute(2621488);
	S2 = EMU_CheckedAdd(S2,8);
	EMU_Write32(V1 + 128,GTE_GetDataRegister(GTE_DREG_SXY0)); //+ 0x80
	EMU_Write32(V1 + 132,GTE_GetDataRegister(GTE_DREG_SZ1)); //+ 0x84
	EMU_Write32(V1 + 144,GTE_GetDataRegister(GTE_DREG_SXY1)); //+ 0x90
	EMU_Write32(V1 + 148,GTE_GetDataRegister(GTE_DREG_SZ2)); //+ 0x94
	EMU_Write32(V1 + 160,GTE_GetDataRegister(GTE_DREG_SXY2)); //+ 0xA0
	EMU_Write32(V1 + 164,GTE_GetDataRegister(GTE_DREG_SZ3)); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 116); //+ 0x74
	T9 = GTE_GetDataRegister(GTE_DREG_VXY0);
	A0 = GTE_GetDataRegister(GTE_DREG_VXY1);
	A1 = GTE_GetDataRegister(GTE_DREG_VXY2);
	A3 = 0xFFFF0000;
	A2 = T9 & 0xFFFF;
	T9 &= A3;
	T9 = T8 - T9;
	T9 |= A2;
	A2 = A0 & 0xFFFF;
	A0 &= A3;
	A0 = T8 - A0;
	A0 |= A2;
	A2 = A1 & 0xFFFF;
	A1 &= A3;
	A1 = T8 - A1;
	A1 |= A2;
	GTE_SetDataRegister(GTE_DREG_VXY0,T9);
	GTE_SetDataRegister(GTE_DREG_VXY1,A0);
	GTE_SetDataRegister(GTE_DREG_VXY2,A1);
	GTE_Execute(2621488);
	ZZ_CLOCKCYCLES(35,0x800404F8);
ZZ_3FFAC_54C:
	A0 = T0 << 23;
	if (!A0)
	{
		A2 = T0 & 0xFF;
		ZZ_CLOCKCYCLES(3,0x80040554);
		goto ZZ_3FFAC_5A8;
	}
	A2 = T0 & 0xFF;
	if ((int32_t)A0 > 0)
	{
		A0 = A2 << 2;
		ZZ_CLOCKCYCLES(5,0x80040548);
		goto ZZ_3FFAC_59C;
	}
	ZZ_CLOCKCYCLES(4,0x80040508);
ZZ_3FFAC_55C:
	A0 = A2 << 2;
	A0 += S0;
	A2 = EMU_ReadU32(A0);
	A0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	A1 = A2 >> 26;
	A1 &= 0x1F;
	A0 >>= A1;
	A1 = A2 >> 19;
	A0 += A1;
	A1 = A2 >> 12;
	A1 &= 0x7F;
	A0 &= A1;
	A1 = A2 << 20;
	A2 += A0;
	if ((int32_t)A1 < 0)
	{
		A2 &= 0x7FF;
		ZZ_CLOCKCYCLES(16,0x80040508);
		goto ZZ_3FFAC_55C;
	}
	A2 &= 0x7FF;
	ZZ_CLOCKCYCLES(16,0x80040548);
ZZ_3FFAC_59C:
	A0 = A2 << 1;
	A2 += A0;
	A2 <<= 2;
	ZZ_CLOCKCYCLES(3,0x80040554);
ZZ_3FFAC_5A8:
	T8 = A2 + S1;
	T9 = EMU_ReadS16(V1 + 238); //+ 0xEE
	EMU_Write32(V1 + 112,T8); //+ 0x70
	T9 ^= 0x8000;
	EMU_Write16(V1 + 238,T9); //+ 0xEE
	T8 = EMU_ReadU32(V1 + 248); //+ 0xF8
	ZZ_JUMPREGISTER_BEGIN(S3);
	RA = 0x80040574; //ZZ_3FFAC_5C8
	EMU_Write32(V1 + 240,T8); //+ 0xF0
	ZZ_CLOCKCYCLES_JR(8);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (S3,8004056C)
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_5C8:
	EMU_Write32(V1 + 208,GTE_GetDataRegister(GTE_DREG_SXY0)); //+ 0xD0
	EMU_Write32(V1 + 212,GTE_GetDataRegister(GTE_DREG_SZ1)); //+ 0xD4
	EMU_Write32(V1 + 216,GTE_GetDataRegister(GTE_DREG_SXY1)); //+ 0xD8
	EMU_Write32(V1 + 220,GTE_GetDataRegister(GTE_DREG_SZ2)); //+ 0xDC
	EMU_Write32(V1 + 224,GTE_GetDataRegister(GTE_DREG_SXY2)); //+ 0xE0
	EMU_Write32(V1 + 228,GTE_GetDataRegister(GTE_DREG_SZ3)); //+ 0xE4
	GTE_SetDataRegister(GTE_DREG_SXY0,EMU_ReadU32(V1 + 128)); //+ 0x80
	GTE_SetDataRegister(GTE_DREG_SZ1,EMU_ReadU32(V1 + 132)); //+ 0x84
	GTE_SetDataRegister(GTE_DREG_SXY1,EMU_ReadU32(V1 + 144)); //+ 0x90
	GTE_SetDataRegister(GTE_DREG_SZ2,EMU_ReadU32(V1 + 148)); //+ 0x94
	GTE_SetDataRegister(GTE_DREG_SXY2,EMU_ReadU32(V1 + 160)); //+ 0xA0
	T9 = EMU_ReadS16(V1 + 238); //+ 0xEE
	GTE_SetDataRegister(GTE_DREG_SZ3,EMU_ReadU32(V1 + 164)); //+ 0xA4
	T9 ^= 0x8000;
	EMU_Write16(V1 + 238,T9); //+ 0xEE
	T8 = EMU_ReadU32(V1 + 244); //+ 0xF4
	ZZ_JUMPREGISTER_BEGIN(S3);
	RA = 0x800405BC; //ZZ_3FFAC_610
	EMU_Write32(V1 + 240,T8); //+ 0xF0
	ZZ_CLOCKCYCLES_JR(18);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (S3,800405B4)
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_610:
	T0 = EMU_ReadU32(S2);
	S2 = EMU_CheckedAdd(S2,4);
	if ((int32_t)T0 < 0)
	{
		T9 = EMU_CheckedAdd(T0,1);
		ZZ_CLOCKCYCLES(4,0x80040434);
		goto ZZ_3FFAC_488;
	}
	T9 = EMU_CheckedAdd(T0,1);
	T9 = T0 >> 16;
	if (T9)
	{
		A0 = T0 << 1;
		ZZ_CLOCKCYCLES(7,0x80040624);
		goto ZZ_3FFAC_678;
	}
	A0 = T0 << 1;
	T9 = T0 << 31;
	T8 = T0 >> 7;
	if ((int32_t)T9 < 0)
	{
		T8 &= 0x1FC;
		ZZ_CLOCKCYCLES(11,0x800405F4);
		goto ZZ_3FFAC_648;
	}
	T8 &= 0x1FC;
	T8 += S6;
	T6 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(14,0x800405FC);
	goto ZZ_3FFAC_650;
ZZ_3FFAC_648:
	T8 += V1;
	T6 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x800405FC);
ZZ_3FFAC_650:
	T9 = T0 << 30;
	if ((int32_t)T9 < 0)
	{
		T8 = T0 & 0x1FC;
		ZZ_CLOCKCYCLES(3,0x80040614);
		goto ZZ_3FFAC_668;
	}
	T8 = T0 & 0x1FC;
	T8 += S6;
	T7 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(6,0x8004061C);
	goto ZZ_3FFAC_670;
ZZ_3FFAC_668:
	T8 += V1;
	T7 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8004061C);
ZZ_3FFAC_670:
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x800405BC);
	goto ZZ_3FFAC_610;
ZZ_3FFAC_678:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x80040650);
		goto ZZ_3FFAC_6A4;
	}
	A0 = GTE_GetDataRegister(GTE_DREG_SXY0);
	A1 = GTE_GetDataRegister(GTE_DREG_SZ1);
	GTE_SetDataRegister(GTE_DREG_SXY1,A0);
	GTE_SetDataRegister(GTE_DREG_SZ2,A1);
	T6 = T5;
	A0 = EMU_ReadU32(V1 + 208); //+ 0xD0
	A1 = EMU_ReadU32(V1 + 212); //+ 0xD4
	EMU_Write32(V1 + 216,A0); //+ 0xD8
	EMU_Write32(V1 + 220,A1); //+ 0xDC
	ZZ_CLOCKCYCLES(11,0x80040650);
ZZ_3FFAC_6A4:
	RA = 0x80040658; //ZZ_3FFAC_6AC
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x8003DFAC);
	goto ZZ_3DFAC;
ZZ_3FFAC_6AC:
	GTE_SetDataRegister(GTE_DREG_VXY0,T9);
	GTE_SetDataRegister(GTE_DREG_VZ0,T8);
	T6 = T7;
	T7 = A0;
	GTE_Execute(1572865);
	EMU_Write32(V1 + 128,GTE_GetDataRegister(GTE_DREG_SXY0)); //+ 0x80
	EMU_Write32(V1 + 132,GTE_GetDataRegister(GTE_DREG_SZ1)); //+ 0x84
	EMU_Write32(V1 + 144,GTE_GetDataRegister(GTE_DREG_SXY1)); //+ 0x90
	EMU_Write32(V1 + 148,GTE_GetDataRegister(GTE_DREG_SZ2)); //+ 0x94
	EMU_Write32(V1 + 160,GTE_GetDataRegister(GTE_DREG_SXY2)); //+ 0xA0
	EMU_Write32(V1 + 164,GTE_GetDataRegister(GTE_DREG_SZ3)); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 116); //+ 0x74
	T9 = GTE_GetDataRegister(GTE_DREG_VXY0);
	A3 = 0xFFFF0000;
	A2 = T9 & 0xFFFF;
	T9 &= A3;
	T9 = T8 - T9;
	T9 |= A2;
	GTE_SetDataRegister(GTE_DREG_VXY0,T9);
	GTE_SetDataRegister(GTE_DREG_SXY1,EMU_ReadU32(V1 + 216)); //+ 0xD8
	GTE_SetDataRegister(GTE_DREG_SZ2,EMU_ReadU32(V1 + 220)); //+ 0xDC
	GTE_SetDataRegister(GTE_DREG_SXY2,EMU_ReadU32(V1 + 224)); //+ 0xE0
	GTE_SetDataRegister(GTE_DREG_SZ3,EMU_ReadU32(V1 + 228)); //+ 0xE4
	GTE_Execute(1572865);
	ZZ_CLOCKCYCLES(28,0x800404F8);
	goto ZZ_3FFAC_54C;
ZZ_3FFAC_A48:
	V0 = GTE_GetDataRegister(GTE_DREG_SZ1);
	T8 = GTE_GetDataRegister(GTE_DREG_SZ2);
	T9 = GTE_GetDataRegister(GTE_DREG_SZ3);
	if ((int32_t)V0 <= 0)
	{
		V0 += T8;
		ZZ_CLOCKCYCLES(5,0x80040BD8);
		goto ZZ_3FFAC_C2C;
	}
	V0 += T8;
	if ((int32_t)T8 <= 0)
	{
		V0 += T9;
		ZZ_CLOCKCYCLES(7,0x80040BD8);
		goto ZZ_3FFAC_C2C;
	}
	V0 += T9;
	GTE_Execute(20971526);
	if ((int32_t)T9 <= 0)
	{
		A3 = EMU_ReadU32(V1 + 236); //+ 0xEC
		ZZ_CLOCKCYCLES(10,0x80040BD8);
		goto ZZ_3FFAC_C2C;
	}
	A3 = EMU_ReadU32(V1 + 236); //+ 0xEC
	T9 = T0 << 2;
	A0 = GTE_GetDataRegister(GTE_DREG_MAC0);
	T9 ^= A3;
	if (!A0)
	{
		A2 = A0 ^ T9;
		ZZ_CLOCKCYCLES(15,0x80040BD8);
		goto ZZ_3FFAC_C2C;
	}
	A2 = A0 ^ T9;
	T8 = EMU_ReadU32(V1 + 240); //+ 0xF0
	if ((int32_t)A2 >= 0)
	{
		V0 >>= 5;
		ZZ_CLOCKCYCLES(18,0x80040A40);
		goto ZZ_3FFAC_A94;
	}
	V0 >>= 5;
	T8 = EMU_CheckedAdd(T8,-10);
	ZZ_CLOCKCYCLES(19,0x80040A40);
ZZ_3FFAC_A94:
	V0 = T8 - V0;
	if ((int32_t)V0 >= 0)
	{
		V0 <<= 2;
		ZZ_CLOCKCYCLES(3,0x80040A50);
		goto ZZ_3FFAC_AA4;
	}
	V0 <<= 2;
	V0 = 0;
	ZZ_CLOCKCYCLES(4,0x80040A50);
ZZ_3FFAC_AA4:
	T8 = EMU_CheckedAdd(V0,-8188);
	if ((int32_t)T8 <= 0)
	{
		V0 += FP;
		ZZ_CLOCKCYCLES(3,0x80040A60);
		goto ZZ_3FFAC_AB4;
	}
	V0 += FP;
	V0 = EMU_CheckedAdd(FP,8188);
	ZZ_CLOCKCYCLES(4,0x80040A60);
ZZ_3FFAC_AB4:
	EMU_Write32(S7 + 8,GTE_GetDataRegister(GTE_DREG_SXY0)); //+ 0x8
	EMU_Write32(S7 + 16,GTE_GetDataRegister(GTE_DREG_SXY1)); //+ 0x10
	EMU_Write32(S7 + 24,GTE_GetDataRegister(GTE_DREG_SXY2)); //+ 0x18
	T8 = T5 << 24;
	T8 = (int32_t)T8 >> 19;
	GTE_SetDataRegister(GTE_DREG_IR1,T8);
	T8 = T5 >> 8;
	T8 <<= 24;
	T8 = (int32_t)T8 >> 19;
	GTE_SetDataRegister(GTE_DREG_IR2,T8);
	T8 = T5 >> 16;
	T8 <<= 24;
	T8 = (int32_t)T8 >> 19;
	GTE_SetDataRegister(GTE_DREG_IR3,T8);
	GTE_Execute(4972562);
	T8 = GTE_GetDataRegister(GTE_DREG_IR1);
	T9 = GTE_GetDataRegister(GTE_DREG_IR3);
	T8 = EMU_CheckedAdd(T8,4096);
	A0 = T8 << 1;
	T8 += A0;
	A0 <<= 1;
	T8 += A0;
	T8 = EMU_CheckedAdd(T8,8192);
	if ((int32_t)A2 >= 0)
	{
		T8 >>= 4;
		ZZ_CLOCKCYCLES(27,0x80040AD0);
		goto ZZ_3FFAC_B24;
	}
	T8 >>= 4;
	T8 >>= 1;
	ZZ_CLOCKCYCLES(28,0x80040AD0);
ZZ_3FFAC_B24:
	A0 = A3 & 0xFFFF;
	T8 = T8 - A0;
	if ((int32_t)T8 >= 0)
	{
		T9 = (int32_t)T9 >> 3;
		ZZ_CLOCKCYCLES(4,0x80040AE4);
		goto ZZ_3FFAC_B38;
	}
	T9 = (int32_t)T9 >> 3;
	T8 = 0;
	ZZ_CLOCKCYCLES(5,0x80040AE4);
ZZ_3FFAC_B38:
	GTE_SetDataRegister(GTE_DREG_IR0,T8);
	A0 = 0x80060000;
	A0 -= 14104;
	GTE_Execute(7864336);
	if ((int32_t)T9 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x80040B00);
		goto ZZ_3FFAC_B54;
	}
	T9 = -T9;
	ZZ_CLOCKCYCLES(7,0x80040B00);
ZZ_3FFAC_B54:
	T9 = EMU_CheckedAdd(T9,-384);
	if ((int32_t)T9 < 0)
	{
		T8 = 0;
		ZZ_CLOCKCYCLES(3,0x80040B20);
		goto ZZ_3FFAC_B74;
	}
	T8 = 0;
	T8 = EMU_CheckedAdd(T9,-128);
	if ((int32_t)T8 < 0)
	{
		T9 += A0;
		ZZ_CLOCKCYCLES(6,0x80040B1C);
		goto ZZ_3FFAC_B70;
	}
	T9 += A0;
	T9 = EMU_CheckedAdd(A0,127);
	ZZ_CLOCKCYCLES(7,0x80040B1C);
ZZ_3FFAC_B70:
	T8 = EMU_ReadU8(T9);
	ZZ_CLOCKCYCLES(1,0x80040B20);
ZZ_3FFAC_B74:
	T9 = GTE_GetDataRegister(GTE_DREG_RGB2);
	if ((int32_t)A2 >= 0)
	{
		A0 = T9 >> 8;
		ZZ_CLOCKCYCLES(3,0x80040B30);
		goto ZZ_3FFAC_B84;
	}
	A0 = T9 >> 8;
	T8 >>= 3;
	ZZ_CLOCKCYCLES(4,0x80040B30);
ZZ_3FFAC_B84:
	A1 = T9 >> 16;
	T9 &= 0xFF;
	A0 &= 0xFF;
	A1 &= 0xFF;
	T9 += T8;
	A0 += T8;
	A1 += T8;
	T8 = EMU_CheckedAdd(A1,-255);
	if ((int32_t)T8 <= 0)
	{
		A1 <<= 16;
		ZZ_CLOCKCYCLES(10,0x80040B5C);
		goto ZZ_3FFAC_BB0;
	}
	A1 <<= 16;
	A1 = 0xFF0000;
	ZZ_CLOCKCYCLES(11,0x80040B5C);
ZZ_3FFAC_BB0:
	T8 = EMU_CheckedAdd(A0,-255);
	if ((int32_t)T8 <= 0)
	{
		A0 <<= 8;
		ZZ_CLOCKCYCLES(3,0x80040B6C);
		goto ZZ_3FFAC_BC0;
	}
	A0 <<= 8;
	A0 = 0xFF00;
	ZZ_CLOCKCYCLES(4,0x80040B6C);
ZZ_3FFAC_BC0:
	T8 = EMU_CheckedAdd(T9,-255);
	if ((int32_t)T8 <= 0)
	{
		A0 |= A1;
		ZZ_CLOCKCYCLES(3,0x80040B7C);
		goto ZZ_3FFAC_BD0;
	}
	A0 |= A1;
	T9 = 255;
	ZZ_CLOCKCYCLES(4,0x80040B7C);
ZZ_3FFAC_BD0:
	T8 = EMU_ReadU32(V1 + 112); //+ 0x70
	A0 |= T9;
	A1 = EMU_ReadU32(T8 - 8); //+ 0xFFFFFFF8
	T9 = 0x600000;
	T8 = T9 & A1;
	if (T8)
	{
		T8 = 0x24000000;
		ZZ_CLOCKCYCLES(7,0x80040BA8);
		goto ZZ_3FFAC_BFC;
	}
	T8 = 0x24000000;
	if ((int32_t)A2 < 0)
	{
		ZZ_CLOCKCYCLES(9,0x80040BA8);
		goto ZZ_3FFAC_BFC;
	}
	T9 = 0x200000;
	T8 = 0x26000000;
	ZZ_CLOCKCYCLES(11,0x80040BA8);
ZZ_3FFAC_BFC:
	T8 |= A0;
	T9 |= A1;
	A0 = EMU_ReadU32(V1 + 112); //+ 0x70
	EMU_Write32(S7 + 4,T8); //+ 0x4
	T8 = EMU_ReadU32(A0 - 12); //+ 0xFFFFFFF4
	A0 = EMU_ReadU32(A0 - 4); //+ 0xFFFFFFFC
	EMU_Write32(S7 + 12,T8); //+ 0xC
	EMU_Write32(S7 + 20,T9); //+ 0x14
	EMU_Write32(S7 + 28,A0); //+ 0x1C
	T9 = 0x7000000;
	A0 = 32;
	ZZ_CLOCKCYCLES(12,0x8003EF88);
	goto ZZ_3ED6C_21C;
ZZ_3FFAC_C2C:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80040264,ZZ_3FFAC_2B8);
	ZZ_JUMPREGISTER(0x80040290,ZZ_3FFAC_2E4);
	ZZ_JUMPREGISTER(0x800402C4,ZZ_3FFAC_318);
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_C34:
	V0 = GTE_GetDataRegister(GTE_DREG_SZ1);
	T8 = GTE_GetDataRegister(GTE_DREG_SZ2);
	T9 = GTE_GetDataRegister(GTE_DREG_SZ3);
	if ((int32_t)V0 <= 0)
	{
		V0 += T8;
		ZZ_CLOCKCYCLES(5,0x80040DD4);
		goto ZZ_3FFAC_E28;
	}
	V0 += T8;
	if ((int32_t)T8 <= 0)
	{
		V0 += T9;
		ZZ_CLOCKCYCLES(7,0x80040DD4);
		goto ZZ_3FFAC_E28;
	}
	V0 += T9;
	GTE_Execute(20971526);
	if ((int32_t)T9 <= 0)
	{
		A3 = EMU_ReadU32(V1 + 236); //+ 0xEC
		ZZ_CLOCKCYCLES(10,0x80040DD4);
		goto ZZ_3FFAC_E28;
	}
	A3 = EMU_ReadU32(V1 + 236); //+ 0xEC
	T9 = T0 << 2;
	A0 = GTE_GetDataRegister(GTE_DREG_MAC0);
	T9 ^= A3;
	if (!A0)
	{
		A2 = A0 ^ T9;
		ZZ_CLOCKCYCLES(15,0x80040DD4);
		goto ZZ_3FFAC_E28;
	}
	A2 = A0 ^ T9;
	T8 = EMU_ReadU32(V1 + 240); //+ 0xF0
	if ((int32_t)A2 >= 0)
	{
		V0 >>= 5;
		ZZ_CLOCKCYCLES(18,0x80040C2C);
		goto ZZ_3FFAC_C80;
	}
	V0 >>= 5;
	T8 = EMU_CheckedAdd(T8,-10);
	ZZ_CLOCKCYCLES(19,0x80040C2C);
ZZ_3FFAC_C80:
	V0 = T8 - V0;
	if ((int32_t)V0 >= 0)
	{
		V0 <<= 2;
		ZZ_CLOCKCYCLES(3,0x80040C3C);
		goto ZZ_3FFAC_C90;
	}
	V0 <<= 2;
	V0 = 0;
	ZZ_CLOCKCYCLES(4,0x80040C3C);
ZZ_3FFAC_C90:
	T8 = EMU_CheckedAdd(V0,-8188);
	if ((int32_t)T8 <= 0)
	{
		V0 += FP;
		ZZ_CLOCKCYCLES(3,0x80040C4C);
		goto ZZ_3FFAC_CA0;
	}
	V0 += FP;
	V0 = EMU_CheckedAdd(FP,8188);
	ZZ_CLOCKCYCLES(4,0x80040C4C);
ZZ_3FFAC_CA0:
	EMU_Write32(S7 + 8,GTE_GetDataRegister(GTE_DREG_SXY0)); //+ 0x8
	EMU_Write32(S7 + 16,GTE_GetDataRegister(GTE_DREG_SXY1)); //+ 0x10
	EMU_Write32(S7 + 24,GTE_GetDataRegister(GTE_DREG_SXY2)); //+ 0x18
	T8 = T5 << 24;
	T8 = (int32_t)T8 >> 19;
	GTE_SetDataRegister(GTE_DREG_IR1,T8);
	T8 = T5 >> 8;
	T8 <<= 24;
	T8 = (int32_t)T8 >> 19;
	GTE_SetDataRegister(GTE_DREG_IR2,T8);
	T8 = T5 >> 16;
	T8 <<= 24;
	T8 = (int32_t)T8 >> 19;
	GTE_SetDataRegister(GTE_DREG_IR3,T8);
	GTE_Execute(4972562);
	T8 = GTE_GetDataRegister(GTE_DREG_IR1);
	T9 = GTE_GetDataRegister(GTE_DREG_IR3);
	T8 = EMU_CheckedAdd(T8,4096);
	A0 = T8 << 1;
	T8 += A0;
	A0 <<= 1;
	T8 += A0;
	T8 = EMU_CheckedAdd(T8,8192);
	if ((int32_t)A2 >= 0)
	{
		T8 >>= 4;
		ZZ_CLOCKCYCLES(27,0x80040CBC);
		goto ZZ_3FFAC_D10;
	}
	T8 >>= 4;
	T8 >>= 1;
	ZZ_CLOCKCYCLES(28,0x80040CBC);
ZZ_3FFAC_D10:
	A0 = A3 & 0xFFFF;
	T8 = T8 - A0;
	if ((int32_t)T8 >= 0)
	{
		T9 = (int32_t)T9 >> 3;
		ZZ_CLOCKCYCLES(4,0x80040CD0);
		goto ZZ_3FFAC_D24;
	}
	T9 = (int32_t)T9 >> 3;
	T8 = 0;
	ZZ_CLOCKCYCLES(5,0x80040CD0);
ZZ_3FFAC_D24:
	GTE_SetDataRegister(GTE_DREG_IR0,T8);
	A0 = 0x80060000;
	A0 -= 14104;
	GTE_Execute(7864336);
	if ((int32_t)T9 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x80040CEC);
		goto ZZ_3FFAC_D40;
	}
	T9 = -T9;
	ZZ_CLOCKCYCLES(7,0x80040CEC);
ZZ_3FFAC_D40:
	T9 = EMU_CheckedAdd(T9,-384);
	if ((int32_t)T9 < 0)
	{
		T8 = 0;
		ZZ_CLOCKCYCLES(3,0x80040D0C);
		goto ZZ_3FFAC_D60;
	}
	T8 = 0;
	T8 = EMU_CheckedAdd(T9,-128);
	if ((int32_t)T8 < 0)
	{
		T9 += A0;
		ZZ_CLOCKCYCLES(6,0x80040D08);
		goto ZZ_3FFAC_D5C;
	}
	T9 += A0;
	T9 = EMU_CheckedAdd(A0,127);
	ZZ_CLOCKCYCLES(7,0x80040D08);
ZZ_3FFAC_D5C:
	T8 = EMU_ReadU8(T9);
	ZZ_CLOCKCYCLES(1,0x80040D0C);
ZZ_3FFAC_D60:
	T9 = GTE_GetDataRegister(GTE_DREG_RGB2);
	if ((int32_t)A2 >= 0)
	{
		A0 = T9 >> 8;
		ZZ_CLOCKCYCLES(3,0x80040D1C);
		goto ZZ_3FFAC_D70;
	}
	A0 = T9 >> 8;
	T8 >>= 3;
	ZZ_CLOCKCYCLES(4,0x80040D1C);
ZZ_3FFAC_D70:
	A1 = T9 >> 16;
	T9 &= 0xFF;
	A0 &= 0xFF;
	A1 &= 0xFF;
	T9 += T8;
	A0 += T8;
	A1 += T8;
	T8 = EMU_CheckedAdd(A1,-255);
	if ((int32_t)T8 <= 0)
	{
		A1 <<= 16;
		ZZ_CLOCKCYCLES(10,0x80040D48);
		goto ZZ_3FFAC_D9C;
	}
	A1 <<= 16;
	A1 = 0xFF0000;
	ZZ_CLOCKCYCLES(11,0x80040D48);
ZZ_3FFAC_D9C:
	T8 = EMU_CheckedAdd(A0,-255);
	if ((int32_t)T8 <= 0)
	{
		A0 <<= 8;
		ZZ_CLOCKCYCLES(3,0x80040D58);
		goto ZZ_3FFAC_DAC;
	}
	A0 <<= 8;
	A0 = 0xFF00;
	ZZ_CLOCKCYCLES(4,0x80040D58);
ZZ_3FFAC_DAC:
	T8 = EMU_CheckedAdd(T9,-255);
	if ((int32_t)T8 <= 0)
	{
		A0 |= A1;
		ZZ_CLOCKCYCLES(3,0x80040D68);
		goto ZZ_3FFAC_DBC;
	}
	A0 |= A1;
	T9 = 255;
	ZZ_CLOCKCYCLES(4,0x80040D68);
ZZ_3FFAC_DBC:
	T8 = EMU_ReadU32(V1 + 112); //+ 0x70
	A0 |= T9;
	A1 = EMU_ReadU32(T8 - 8); //+ 0xFFFFFFF8
	T9 = 0x600000;
	T8 = T9 & A1;
	if (!T8)
	{
		T8 = T0 << 3;
		ZZ_CLOCKCYCLES(7,0x80040D94);
		goto ZZ_3FFAC_DE8;
	}
	T8 = T0 << 3;
	T8 &= A2;
	if ((int32_t)T8 >= 0)
	{
		T8 = 0x24000000;
		ZZ_CLOCKCYCLES(10,0x80040DA4);
		goto ZZ_3FFAC_DF8;
	}
	T8 = 0x24000000;
	ZZ_JUMPREGISTER_BEGIN(RA);
	T9 = 0x200000;
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x80040264,ZZ_3FFAC_2B8);
	ZZ_JUMPREGISTER(0x80040290,ZZ_3FFAC_2E4);
	ZZ_JUMPREGISTER(0x800402C4,ZZ_3FFAC_318);
	ZZ_JUMPREGISTER_END();
	ZZ_CLOCKCYCLES(11,0x80040D94);
ZZ_3FFAC_DE8:
	T9 = 0x200000;
	if ((int32_t)A2 >= 0)
	{
		T8 = 0x26000000;
		ZZ_CLOCKCYCLES(3,0x80040DA4);
		goto ZZ_3FFAC_DF8;
	}
	T8 = 0x26000000;
	T9 = 0x400000;
	ZZ_CLOCKCYCLES(4,0x80040DA4);
ZZ_3FFAC_DF8:
	T8 |= A0;
	T9 |= A1;
	A0 = EMU_ReadU32(V1 + 112); //+ 0x70
	EMU_Write32(S7 + 4,T8); //+ 0x4
	T8 = EMU_ReadU32(A0 - 12); //+ 0xFFFFFFF4
	A0 = EMU_ReadU32(A0 - 4); //+ 0xFFFFFFFC
	EMU_Write32(S7 + 12,T8); //+ 0xC
	EMU_Write32(S7 + 20,T9); //+ 0x14
	EMU_Write32(S7 + 28,A0); //+ 0x1C
	T9 = 0x7000000;
	A0 = 32;
	ZZ_CLOCKCYCLES(12,0x8003EF88);
	goto ZZ_3ED6C_21C;
ZZ_3FFAC_E28:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80040264,ZZ_3FFAC_2B8);
	ZZ_JUMPREGISTER(0x80040290,ZZ_3FFAC_2E4);
	ZZ_JUMPREGISTER(0x800402C4,ZZ_3FFAC_318);
	ZZ_JUMPREGISTER_END();
ZZ_3FFAC_E30:
	A0 = T0 << 7;
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(3,0x8003EE5C);
		goto ZZ_3ED6C_F0;
	}
	V0 = GTE_GetDataRegister(GTE_DREG_SZ1);
	T8 = GTE_GetDataRegister(GTE_DREG_SZ2);
	T9 = GTE_GetDataRegister(GTE_DREG_SZ3);
	if ((int32_t)V0 <= 0)
	{
		V0 += T8;
		ZZ_CLOCKCYCLES(8,0x80040FA4);
		goto ZZ_3FFAC_FF8;
	}
	V0 += T8;
	if ((int32_t)T8 <= 0)
	{
		V0 += T9;
		ZZ_CLOCKCYCLES(10,0x80040FA4);
		goto ZZ_3FFAC_FF8;
	}
	V0 += T9;
	GTE_Execute(20971526);
	if ((int32_t)T9 <= 0)
	{
		V0 >>= 5;
		ZZ_CLOCKCYCLES(13,0x80040FA4);
		goto ZZ_3FFAC_FF8;
	}
	V0 >>= 5;
	T8 = EMU_ReadU32(V1 + 240); //+ 0xF0
	A3 = EMU_ReadU32(V1 + 236); //+ 0xEC
	V0 = T8 - V0;
	T9 = T0 << 2;
	T8 = GTE_GetDataRegister(GTE_DREG_MAC0);
	T9 ^= A3;
	if (!T8)
	{
		T9 ^= T8;
		ZZ_CLOCKCYCLES(21,0x80040FA4);
		goto ZZ_3FFAC_FF8;
	}
	T9 ^= T8;
	T8 = T0 << 3;
	if ((int32_t)T8 >= 0)
	{
		EMU_Write32(V1 + 292,T5); //+ 0x124
		ZZ_CLOCKCYCLES(24,0x80040E44);
		goto ZZ_3FFAC_E98;
	}
	EMU_Write32(V1 + 292,T5); //+ 0x124
	if ((int32_t)T9 <= 0)
	{
		ZZ_CLOCKCYCLES(26,0x80040FA4);
		goto ZZ_3FFAC_FF8;
	}
	ZZ_CLOCKCYCLES(26,0x80040E44);
ZZ_3FFAC_E98:
	EMU_Write32(V1 + 296,T6); //+ 0x128
	EMU_Write32(V1 + 300,T7); //+ 0x12C
	T9 = 728;
	A0 = GTE_GetDataRegister(GTE_DREG_SZ1);
	A1 = GTE_GetDataRegister(GTE_DREG_SZ2);
	A0 = EMU_CheckedAdd(A0,-600);
	if ((int32_t)A0 > 0)
	{
		ZZ_CLOCKCYCLES(8,0x80040E6C);
		goto ZZ_3FFAC_EC0;
	}
	EMU_Write32(V1 + 292,R0); //+ 0x124
	ZZ_CLOCKCYCLES(10,0x80040E94);
	goto ZZ_3FFAC_EE8;
ZZ_3FFAC_EC0:
	GTE_SetDataRegister(GTE_DREG_RGB2,T5);
	A0 = T9 - A0;
	if ((int32_t)A0 < 0)
	{
		A0 <<= 5;
		ZZ_CLOCKCYCLES(4,0x80040E94);
		goto ZZ_3FFAC_EE8;
	}
	A0 <<= 5;
	GTE_SetDataRegister(GTE_DREG_RGBC,T5);
	GTE_SetDataRegister(GTE_DREG_IR0,A0);
	GTE_Execute(7864336);
	EMU_Write32(V1 + 292,GTE_GetDataRegister(GTE_DREG_RGB2)); //+ 0x124
	ZZ_CLOCKCYCLES(10,0x80040E94);
ZZ_3FFAC_EE8:
	A0 = GTE_GetDataRegister(GTE_DREG_SZ3);
	A1 = EMU_CheckedAdd(A1,-600);
	if ((int32_t)A1 > 0)
	{
		ZZ_CLOCKCYCLES(4,0x80040EAC);
		goto ZZ_3FFAC_F00;
	}
	EMU_Write32(V1 + 296,R0); //+ 0x128
	ZZ_CLOCKCYCLES(6,0x80040ED0);
	goto ZZ_3FFAC_F24;
ZZ_3FFAC_F00:
	A1 = T9 - A1;
	if ((int32_t)A1 < 0)
	{
		A1 <<= 5;
		ZZ_CLOCKCYCLES(3,0x80040ED0);
		goto ZZ_3FFAC_F24;
	}
	A1 <<= 5;
	GTE_SetDataRegister(GTE_DREG_RGBC,T6);
	GTE_SetDataRegister(GTE_DREG_IR0,A1);
	GTE_Execute(7864336);
	EMU_Write32(V1 + 296,GTE_GetDataRegister(GTE_DREG_RGB2)); //+ 0x128
	ZZ_CLOCKCYCLES(9,0x80040ED0);
ZZ_3FFAC_F24:
	A0 = EMU_CheckedAdd(A0,-600);
	if ((int32_t)A0 > 0)
	{
		ZZ_CLOCKCYCLES(3,0x80040EE4);
		goto ZZ_3FFAC_F38;
	}
	EMU_Write32(V1 + 300,R0); //+ 0x12C
	ZZ_CLOCKCYCLES(5,0x80040F08);
	goto ZZ_3FFAC_F5C;
ZZ_3FFAC_F38:
	A0 = T9 - A0;
	if ((int32_t)A0 < 0)
	{
		A0 <<= 5;
		ZZ_CLOCKCYCLES(3,0x80040F08);
		goto ZZ_3FFAC_F5C;
	}
	A0 <<= 5;
	GTE_SetDataRegister(GTE_DREG_RGBC,T7);
	GTE_SetDataRegister(GTE_DREG_IR0,A0);
	GTE_Execute(7864336);
	EMU_Write32(V1 + 300,GTE_GetDataRegister(GTE_DREG_RGB2)); //+ 0x12C
	ZZ_CLOCKCYCLES(9,0x80040F08);
ZZ_3FFAC_F5C:
	T9 = EMU_ReadU32(V1 + 292); //+ 0x124
	A0 = EMU_ReadU32(V1 + 296); //+ 0x128
	A1 = EMU_ReadU32(V1 + 300); //+ 0x12C
	T8 = T9 | A0;
	T8 |= A1;
	if (!T8)
	{
		T9 <<= 8;
		ZZ_CLOCKCYCLES(7,0x80040FA4);
		goto ZZ_3FFAC_FF8;
	}
	T9 <<= 8;
	T9 >>= 8;
	if ((int32_t)V0 >= 0)
	{
		V0 <<= 2;
		ZZ_CLOCKCYCLES(10,0x80040F34);
		goto ZZ_3FFAC_F88;
	}
	V0 <<= 2;
	V0 = 0;
	ZZ_CLOCKCYCLES(11,0x80040F34);
ZZ_3FFAC_F88:
	T8 = EMU_CheckedAdd(V0,-8188);
	if ((int32_t)T8 <= 0)
	{
		V0 += FP;
		ZZ_CLOCKCYCLES(3,0x80040F44);
		goto ZZ_3FFAC_F98;
	}
	V0 += FP;
	V0 = EMU_CheckedAdd(FP,8188);
	ZZ_CLOCKCYCLES(4,0x80040F44);
ZZ_3FFAC_F98:
	T8 = 0x36000000;
	T8 |= T9;
	EMU_Write32(S7 + 4,T8); //+ 0x4
	EMU_Write32(S7 + 16,A0); //+ 0x10
	A0 = EMU_ReadU32(V1 + 112); //+ 0x70
	EMU_Write32(S7 + 28,A1); //+ 0x1C
	T8 = EMU_ReadU32(A0 - 12); //+ 0xFFFFFFF4
	T9 = EMU_ReadU32(A0 - 8); //+ 0xFFFFFFF8
	A0 = EMU_ReadU32(A0 - 4); //+ 0xFFFFFFFC
	EMU_Write32(S7 + 8,GTE_GetDataRegister(GTE_DREG_SXY0)); //+ 0x8
	EMU_Write32(S7 + 20,GTE_GetDataRegister(GTE_DREG_SXY1)); //+ 0x14
	EMU_Write32(S7 + 32,GTE_GetDataRegister(GTE_DREG_SXY2)); //+ 0x20
	EMU_Write32(S7 + 12,T8); //+ 0xC
	EMU_Write32(S7 + 24,T9); //+ 0x18
	EMU_Write32(S7 + 36,A0); //+ 0x24
	A0 = 40;
	T9 = 0x9000000;
	T8 = EMU_ReadU32(V0 + 24); //+ 0x18
	A1 = S7 << 8;
	T8 |= T9;
	EMU_Write32(S7,T8);
	A1 >>= 8;
	EMU_Write32(V0 + 24,A1); //+ 0x18
	S7 += A0;
	ZZ_CLOCKCYCLES(24,0x80040FA4);
ZZ_3FFAC_FF8:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80040264,ZZ_3FFAC_2B8);
	ZZ_JUMPREGISTER(0x80040290,ZZ_3FFAC_2E4);
	ZZ_JUMPREGISTER(0x800402C4,ZZ_3FFAC_318);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003FFAC,ZZ_3FFAC);
ZZ_MARK(0x8003FFB0);
ZZ_MARK(0x8003FFB4);
ZZ_MARK(0x8003FFB8);
ZZ_MARK(0x8003FFBC);
ZZ_MARK(0x8003FFC0);
ZZ_MARK(0x8003FFC4);
ZZ_MARK(0x8003FFC8);
ZZ_MARK_TARGET(0x8003FFCC,ZZ_3FFAC_20);
ZZ_MARK(0x8003FFD0);
ZZ_MARK(0x8003FFD4);
ZZ_MARK(0x8003FFD8);
ZZ_MARK(0x8003FFDC);
ZZ_MARK(0x8003FFE0);
ZZ_MARK(0x8003FFE4);
ZZ_MARK_TARGET(0x8003FFE8,ZZ_3FFAC_3C);
ZZ_MARK(0x8003FFEC);
ZZ_MARK(0x8003FFF0);
ZZ_MARK(0x8003FFF4);
ZZ_MARK(0x8003FFF8);
ZZ_MARK(0x8003FFFC);
ZZ_MARK(0x80040000);
ZZ_MARK(0x80040004);
ZZ_MARK(0x80040008);
ZZ_MARK(0x8004000C);
ZZ_MARK(0x80040010);
ZZ_MARK(0x80040014);
ZZ_MARK(0x80040018);
ZZ_MARK(0x8004001C);
ZZ_MARK(0x80040020);
ZZ_MARK(0x80040024);
ZZ_MARK(0x80040028);
ZZ_MARK(0x8004002C);
ZZ_MARK(0x80040030);
ZZ_MARK_TARGET(0x80040034,ZZ_3FFAC_88);
ZZ_MARK(0x80040038);
ZZ_MARK(0x8004003C);
ZZ_MARK(0x80040040);
ZZ_MARK(0x80040044);
ZZ_MARK(0x80040048);
ZZ_MARK(0x8004004C);
ZZ_MARK_TARGET(0x80040050,ZZ_3FFAC_A4);
ZZ_MARK(0x80040054);
ZZ_MARK(0x80040058);
ZZ_MARK(0x8004005C);
ZZ_MARK(0x80040060);
ZZ_MARK(0x80040064);
ZZ_MARK(0x80040068);
ZZ_MARK(0x8004006C);
ZZ_MARK(0x80040070);
ZZ_MARK(0x80040074);
ZZ_MARK(0x80040078);
ZZ_MARK(0x8004007C);
ZZ_MARK(0x80040080);
ZZ_MARK(0x80040084);
ZZ_MARK(0x80040088);
ZZ_MARK(0x8004008C);
ZZ_MARK(0x80040090);
ZZ_MARK(0x80040094);
ZZ_MARK_TARGET(0x80040098,ZZ_3FFAC_EC);
ZZ_MARK(0x8004009C);
ZZ_MARK(0x800400A0);
ZZ_MARK(0x800400A4);
ZZ_MARK(0x800400A8);
ZZ_MARK(0x800400AC);
ZZ_MARK(0x800400B0);
ZZ_MARK_TARGET(0x800400B4,ZZ_3FFAC_108);
ZZ_MARK(0x800400B8);
ZZ_MARK(0x800400BC);
ZZ_MARK(0x800400C0);
ZZ_MARK(0x800400C4);
ZZ_MARK(0x800400C8);
ZZ_MARK(0x800400CC);
ZZ_MARK(0x800400D0);
ZZ_MARK(0x800400D4);
ZZ_MARK(0x800400D8);
ZZ_MARK(0x800400DC);
ZZ_MARK(0x800400E0);
ZZ_MARK(0x800400E4);
ZZ_MARK(0x800400E8);
ZZ_MARK(0x800400EC);
ZZ_MARK(0x800400F0);
ZZ_MARK(0x800400F4);
ZZ_MARK_TARGET(0x800400F8,ZZ_3FFAC_14C);
ZZ_MARK(0x800400FC);
ZZ_MARK(0x80040100);
ZZ_MARK(0x80040104);
ZZ_MARK(0x80040108);
ZZ_MARK(0x8004010C);
ZZ_MARK(0x80040110);
ZZ_MARK_TARGET(0x80040114,ZZ_3FFAC_168);
ZZ_MARK(0x80040118);
ZZ_MARK_TARGET(0x8004011C,ZZ_3FFAC_170);
ZZ_MARK(0x80040120);
ZZ_MARK(0x80040124);
ZZ_MARK(0x80040128);
ZZ_MARK(0x8004012C);
ZZ_MARK(0x80040130);
ZZ_MARK(0x80040134);
ZZ_MARK(0x80040138);
ZZ_MARK(0x8004013C);
ZZ_MARK(0x80040140);
ZZ_MARK(0x80040144);
ZZ_MARK(0x80040148);
ZZ_MARK(0x8004014C);
ZZ_MARK(0x80040150);
ZZ_MARK(0x80040154);
ZZ_MARK(0x80040158);
ZZ_MARK(0x8004015C);
ZZ_MARK(0x80040160);
ZZ_MARK(0x80040164);
ZZ_MARK(0x80040168);
ZZ_MARK(0x8004016C);
ZZ_MARK(0x80040170);
ZZ_MARK(0x80040174);
ZZ_MARK(0x80040178);
ZZ_MARK(0x8004017C);
ZZ_MARK(0x80040180);
ZZ_MARK_TARGET(0x80040184,ZZ_3FFAC_1D8);
ZZ_MARK(0x80040188);
ZZ_MARK(0x8004018C);
ZZ_MARK(0x80040190);
ZZ_MARK(0x80040194);
ZZ_MARK(0x80040198);
ZZ_MARK(0x8004019C);
ZZ_MARK_TARGET(0x800401A0,ZZ_3FFAC_1F4);
ZZ_MARK(0x800401A4);
ZZ_MARK(0x800401A8);
ZZ_MARK_TARGET(0x800401AC,ZZ_3FFAC_200);
ZZ_MARK(0x800401B0);
ZZ_MARK(0x800401B4);
ZZ_MARK(0x800401B8);
ZZ_MARK(0x800401BC);
ZZ_MARK(0x800401C0);
ZZ_MARK_TARGET(0x800401C4,ZZ_3FFAC_218);
ZZ_MARK(0x800401C8);
ZZ_MARK_TARGET(0x800401CC,ZZ_3FFAC_220);
ZZ_MARK(0x800401D0);
ZZ_MARK_TARGET(0x800401D4,ZZ_3FFAC_228);
ZZ_MARK(0x800401D8);
ZZ_MARK(0x800401DC);
ZZ_MARK(0x800401E0);
ZZ_MARK_TARGET(0x800401E4,ZZ_3FFAC_238);
ZZ_MARK(0x800401E8);
ZZ_MARK_TARGET(0x800401EC,ZZ_3FFAC_240);
ZZ_MARK(0x800401F0);
ZZ_MARK(0x800401F4);
ZZ_MARK(0x800401F8);
ZZ_MARK(0x800401FC);
ZZ_MARK(0x80040200);
ZZ_MARK(0x80040204);
ZZ_MARK(0x80040208);
ZZ_MARK(0x8004020C);
ZZ_MARK(0x80040210);
ZZ_MARK(0x80040214);
ZZ_MARK(0x80040218);
ZZ_MARK(0x8004021C);
ZZ_MARK(0x80040220);
ZZ_MARK(0x80040224);
ZZ_MARK(0x80040228);
ZZ_MARK(0x8004022C);
ZZ_MARK(0x80040230);
ZZ_MARK(0x80040234);
ZZ_MARK(0x80040238);
ZZ_MARK_TARGET(0x8004023C,ZZ_3FFAC_290);
ZZ_MARK(0x80040240);
ZZ_MARK_TARGET(0x80040244,ZZ_3FFAC_298);
ZZ_MARK(0x80040248);
ZZ_MARK_TARGET(0x8004024C,ZZ_3FFAC_2A0);
ZZ_MARK(0x80040250);
ZZ_MARK_TARGET(0x80040254,ZZ_3FFAC_2A8);
ZZ_MARK(0x80040258);
ZZ_MARK(0x8004025C);
ZZ_MARK(0x80040260);
ZZ_MARK_TARGET(0x80040264,ZZ_3FFAC_2B8);
ZZ_MARK(0x80040268);
ZZ_MARK(0x8004026C);
ZZ_MARK(0x80040270);
ZZ_MARK(0x80040274);
ZZ_MARK(0x80040278);
ZZ_MARK(0x8004027C);
ZZ_MARK(0x80040280);
ZZ_MARK(0x80040284);
ZZ_MARK(0x80040288);
ZZ_MARK(0x8004028C);
ZZ_MARK_TARGET(0x80040290,ZZ_3FFAC_2E4);
ZZ_MARK(0x80040294);
ZZ_MARK(0x80040298);
ZZ_MARK(0x8004029C);
ZZ_MARK(0x800402A0);
ZZ_MARK(0x800402A4);
ZZ_MARK(0x800402A8);
ZZ_MARK(0x800402AC);
ZZ_MARK(0x800402B0);
ZZ_MARK(0x800402B4);
ZZ_MARK(0x800402B8);
ZZ_MARK_TARGET(0x800402BC,ZZ_3FFAC_310);
ZZ_MARK(0x800402C0);
ZZ_MARK_TARGET(0x800402C4,ZZ_3FFAC_318);
ZZ_MARK(0x800402C8);
ZZ_MARK(0x800402CC);
ZZ_MARK(0x800402D0);
ZZ_MARK(0x800402D4);
ZZ_MARK(0x800402D8);
ZZ_MARK(0x800402DC);
ZZ_MARK(0x800402E0);
ZZ_MARK(0x800402E4);
ZZ_MARK(0x800402E8);
ZZ_MARK(0x800402EC);
ZZ_MARK(0x800402F0);
ZZ_MARK(0x800402F4);
ZZ_MARK_TARGET(0x800402F8,ZZ_3FFAC_34C);
ZZ_MARK(0x800402FC);
ZZ_MARK(0x80040300);
ZZ_MARK(0x80040304);
ZZ_MARK(0x80040308);
ZZ_MARK(0x8004030C);
ZZ_MARK(0x80040310);
ZZ_MARK(0x80040314);
ZZ_MARK(0x80040318);
ZZ_MARK(0x8004031C);
ZZ_MARK(0x80040320);
ZZ_MARK(0x80040324);
ZZ_MARK(0x80040328);
ZZ_MARK(0x8004032C);
ZZ_MARK(0x80040330);
ZZ_MARK(0x80040334);
ZZ_MARK_TARGET(0x80040338,ZZ_3FFAC_38C);
ZZ_MARK(0x8004033C);
ZZ_MARK(0x80040340);
ZZ_MARK_TARGET(0x80040344,ZZ_3FFAC_398);
ZZ_MARK(0x80040348);
ZZ_MARK_TARGET(0x8004034C,ZZ_3FFAC_3A0);
ZZ_MARK(0x80040350);
ZZ_MARK(0x80040354);
ZZ_MARK(0x80040358);
ZZ_MARK(0x8004035C);
ZZ_MARK(0x80040360);
ZZ_MARK(0x80040364);
ZZ_MARK(0x80040368);
ZZ_MARK(0x8004036C);
ZZ_MARK(0x80040370);
ZZ_MARK(0x80040374);
ZZ_MARK(0x80040378);
ZZ_MARK(0x8004037C);
ZZ_MARK(0x80040380);
ZZ_MARK_TARGET(0x80040384,ZZ_3FFAC_3D8);
ZZ_MARK(0x80040388);
ZZ_MARK_TARGET(0x8004038C,ZZ_3FFAC_3E0);
ZZ_MARK(0x80040390);
ZZ_MARK(0x80040394);
ZZ_MARK(0x80040398);
ZZ_MARK(0x8004039C);
ZZ_MARK(0x800403A0);
ZZ_MARK_TARGET(0x800403A4,ZZ_3FFAC_3F8);
ZZ_MARK(0x800403A8);
ZZ_MARK_TARGET(0x800403AC,ZZ_3FFAC_400);
ZZ_MARK(0x800403B0);
ZZ_MARK_TARGET(0x800403B4,ZZ_3FFAC_408);
ZZ_MARK(0x800403B8);
ZZ_MARK(0x800403BC);
ZZ_MARK(0x800403C0);
ZZ_MARK_TARGET(0x800403C4,ZZ_3FFAC_418);
ZZ_MARK(0x800403C8);
ZZ_MARK(0x800403CC);
ZZ_MARK(0x800403D0);
ZZ_MARK(0x800403D4);
ZZ_MARK(0x800403D8);
ZZ_MARK_TARGET(0x800403DC,ZZ_3FFAC_430);
ZZ_MARK(0x800403E0);
ZZ_MARK(0x800403E4);
ZZ_MARK(0x800403E8);
ZZ_MARK(0x800403EC);
ZZ_MARK(0x800403F0);
ZZ_MARK(0x800403F4);
ZZ_MARK(0x800403F8);
ZZ_MARK(0x800403FC);
ZZ_MARK_TARGET(0x80040400,ZZ_3FFAC_454);
ZZ_MARK(0x80040404);
ZZ_MARK(0x80040408);
ZZ_MARK_TARGET(0x8004040C,ZZ_3FFAC_460);
ZZ_MARK(0x80040410);
ZZ_MARK_TARGET(0x80040414,ZZ_3FFAC_468);
ZZ_MARK(0x80040418);
ZZ_MARK_TARGET(0x8004041C,ZZ_3FFAC_470);
ZZ_MARK(0x80040420);
ZZ_MARK_TARGET(0x80040424,ZZ_3FFAC_478);
ZZ_MARK(0x80040428);
ZZ_MARK(0x8004042C);
ZZ_MARK(0x80040430);
ZZ_MARK_TARGET(0x80040434,ZZ_3FFAC_488);
ZZ_MARK(0x80040438);
ZZ_MARK(0x8004043C);
ZZ_MARK(0x80040440);
ZZ_MARK_TARGET(0x80040444,ZZ_3FFAC_498);
ZZ_MARK(0x80040448);
ZZ_MARK(0x8004044C);
ZZ_MARK(0x80040450);
ZZ_MARK(0x80040454);
ZZ_MARK_TARGET(0x80040458,ZZ_3FFAC_4AC);
ZZ_MARK(0x8004045C);
ZZ_MARK(0x80040460);
ZZ_MARK(0x80040464);
ZZ_MARK(0x80040468);
ZZ_MARK_TARGET(0x8004046C,ZZ_3FFAC_4C0);
ZZ_MARK(0x80040470);
ZZ_MARK(0x80040474);
ZZ_MARK(0x80040478);
ZZ_MARK(0x8004047C);
ZZ_MARK(0x80040480);
ZZ_MARK(0x80040484);
ZZ_MARK(0x80040488);
ZZ_MARK(0x8004048C);
ZZ_MARK(0x80040490);
ZZ_MARK(0x80040494);
ZZ_MARK(0x80040498);
ZZ_MARK(0x8004049C);
ZZ_MARK(0x800404A0);
ZZ_MARK(0x800404A4);
ZZ_MARK(0x800404A8);
ZZ_MARK(0x800404AC);
ZZ_MARK(0x800404B0);
ZZ_MARK(0x800404B4);
ZZ_MARK(0x800404B8);
ZZ_MARK(0x800404BC);
ZZ_MARK(0x800404C0);
ZZ_MARK(0x800404C4);
ZZ_MARK(0x800404C8);
ZZ_MARK(0x800404CC);
ZZ_MARK(0x800404D0);
ZZ_MARK(0x800404D4);
ZZ_MARK(0x800404D8);
ZZ_MARK(0x800404DC);
ZZ_MARK(0x800404E0);
ZZ_MARK(0x800404E4);
ZZ_MARK(0x800404E8);
ZZ_MARK(0x800404EC);
ZZ_MARK(0x800404F0);
ZZ_MARK(0x800404F4);
ZZ_MARK_TARGET(0x800404F8,ZZ_3FFAC_54C);
ZZ_MARK(0x800404FC);
ZZ_MARK(0x80040500);
ZZ_MARK(0x80040504);
ZZ_MARK_TARGET(0x80040508,ZZ_3FFAC_55C);
ZZ_MARK(0x8004050C);
ZZ_MARK(0x80040510);
ZZ_MARK(0x80040514);
ZZ_MARK(0x80040518);
ZZ_MARK(0x8004051C);
ZZ_MARK(0x80040520);
ZZ_MARK(0x80040524);
ZZ_MARK(0x80040528);
ZZ_MARK(0x8004052C);
ZZ_MARK(0x80040530);
ZZ_MARK(0x80040534);
ZZ_MARK(0x80040538);
ZZ_MARK(0x8004053C);
ZZ_MARK(0x80040540);
ZZ_MARK(0x80040544);
ZZ_MARK_TARGET(0x80040548,ZZ_3FFAC_59C);
ZZ_MARK(0x8004054C);
ZZ_MARK(0x80040550);
ZZ_MARK_TARGET(0x80040554,ZZ_3FFAC_5A8);
ZZ_MARK(0x80040558);
ZZ_MARK(0x8004055C);
ZZ_MARK(0x80040560);
ZZ_MARK(0x80040564);
ZZ_MARK(0x80040568);
ZZ_MARK(0x8004056C);
ZZ_MARK(0x80040570);
ZZ_MARK_TARGET(0x80040574,ZZ_3FFAC_5C8);
ZZ_MARK(0x80040578);
ZZ_MARK(0x8004057C);
ZZ_MARK(0x80040580);
ZZ_MARK(0x80040584);
ZZ_MARK(0x80040588);
ZZ_MARK(0x8004058C);
ZZ_MARK(0x80040590);
ZZ_MARK(0x80040594);
ZZ_MARK(0x80040598);
ZZ_MARK(0x8004059C);
ZZ_MARK(0x800405A0);
ZZ_MARK(0x800405A4);
ZZ_MARK(0x800405A8);
ZZ_MARK(0x800405AC);
ZZ_MARK(0x800405B0);
ZZ_MARK(0x800405B4);
ZZ_MARK(0x800405B8);
ZZ_MARK_TARGET(0x800405BC,ZZ_3FFAC_610);
ZZ_MARK(0x800405C0);
ZZ_MARK(0x800405C4);
ZZ_MARK(0x800405C8);
ZZ_MARK(0x800405CC);
ZZ_MARK(0x800405D0);
ZZ_MARK(0x800405D4);
ZZ_MARK(0x800405D8);
ZZ_MARK(0x800405DC);
ZZ_MARK(0x800405E0);
ZZ_MARK(0x800405E4);
ZZ_MARK(0x800405E8);
ZZ_MARK(0x800405EC);
ZZ_MARK(0x800405F0);
ZZ_MARK_TARGET(0x800405F4,ZZ_3FFAC_648);
ZZ_MARK(0x800405F8);
ZZ_MARK_TARGET(0x800405FC,ZZ_3FFAC_650);
ZZ_MARK(0x80040600);
ZZ_MARK(0x80040604);
ZZ_MARK(0x80040608);
ZZ_MARK(0x8004060C);
ZZ_MARK(0x80040610);
ZZ_MARK_TARGET(0x80040614,ZZ_3FFAC_668);
ZZ_MARK(0x80040618);
ZZ_MARK_TARGET(0x8004061C,ZZ_3FFAC_670);
ZZ_MARK(0x80040620);
ZZ_MARK_TARGET(0x80040624,ZZ_3FFAC_678);
ZZ_MARK(0x80040628);
ZZ_MARK(0x8004062C);
ZZ_MARK(0x80040630);
ZZ_MARK(0x80040634);
ZZ_MARK(0x80040638);
ZZ_MARK(0x8004063C);
ZZ_MARK(0x80040640);
ZZ_MARK(0x80040644);
ZZ_MARK(0x80040648);
ZZ_MARK(0x8004064C);
ZZ_MARK_TARGET(0x80040650,ZZ_3FFAC_6A4);
ZZ_MARK(0x80040654);
ZZ_MARK_TARGET(0x80040658,ZZ_3FFAC_6AC);
ZZ_MARK(0x8004065C);
ZZ_MARK(0x80040660);
ZZ_MARK(0x80040664);
ZZ_MARK(0x80040668);
ZZ_MARK(0x8004066C);
ZZ_MARK(0x80040670);
ZZ_MARK(0x80040674);
ZZ_MARK(0x80040678);
ZZ_MARK(0x8004067C);
ZZ_MARK(0x80040680);
ZZ_MARK(0x80040684);
ZZ_MARK(0x80040688);
ZZ_MARK(0x8004068C);
ZZ_MARK(0x80040690);
ZZ_MARK(0x80040694);
ZZ_MARK(0x80040698);
ZZ_MARK(0x8004069C);
ZZ_MARK(0x800406A0);
ZZ_MARK(0x800406A4);
ZZ_MARK(0x800406A8);
ZZ_MARK(0x800406AC);
ZZ_MARK(0x800406B0);
ZZ_MARK(0x800406B4);
ZZ_MARK(0x800406B8);
ZZ_MARK(0x800406BC);
ZZ_MARK(0x800406C0);
ZZ_MARK(0x800406C4);
ZZ_MARK_TARGET(0x800409F4,ZZ_3FFAC_A48);
ZZ_MARK(0x800409F8);
ZZ_MARK(0x800409FC);
ZZ_MARK(0x80040A00);
ZZ_MARK(0x80040A04);
ZZ_MARK(0x80040A08);
ZZ_MARK(0x80040A0C);
ZZ_MARK(0x80040A10);
ZZ_MARK(0x80040A14);
ZZ_MARK(0x80040A18);
ZZ_MARK(0x80040A1C);
ZZ_MARK(0x80040A20);
ZZ_MARK(0x80040A24);
ZZ_MARK(0x80040A28);
ZZ_MARK(0x80040A2C);
ZZ_MARK(0x80040A30);
ZZ_MARK(0x80040A34);
ZZ_MARK(0x80040A38);
ZZ_MARK(0x80040A3C);
ZZ_MARK_TARGET(0x80040A40,ZZ_3FFAC_A94);
ZZ_MARK(0x80040A44);
ZZ_MARK(0x80040A48);
ZZ_MARK(0x80040A4C);
ZZ_MARK_TARGET(0x80040A50,ZZ_3FFAC_AA4);
ZZ_MARK(0x80040A54);
ZZ_MARK(0x80040A58);
ZZ_MARK(0x80040A5C);
ZZ_MARK_TARGET(0x80040A60,ZZ_3FFAC_AB4);
ZZ_MARK(0x80040A64);
ZZ_MARK(0x80040A68);
ZZ_MARK(0x80040A6C);
ZZ_MARK(0x80040A70);
ZZ_MARK(0x80040A74);
ZZ_MARK(0x80040A78);
ZZ_MARK(0x80040A7C);
ZZ_MARK(0x80040A80);
ZZ_MARK(0x80040A84);
ZZ_MARK(0x80040A88);
ZZ_MARK(0x80040A8C);
ZZ_MARK(0x80040A90);
ZZ_MARK(0x80040A94);
ZZ_MARK(0x80040A98);
ZZ_MARK(0x80040A9C);
ZZ_MARK(0x80040AA0);
ZZ_MARK(0x80040AA4);
ZZ_MARK(0x80040AA8);
ZZ_MARK(0x80040AAC);
ZZ_MARK(0x80040AB0);
ZZ_MARK(0x80040AB4);
ZZ_MARK(0x80040AB8);
ZZ_MARK(0x80040ABC);
ZZ_MARK(0x80040AC0);
ZZ_MARK(0x80040AC4);
ZZ_MARK(0x80040AC8);
ZZ_MARK(0x80040ACC);
ZZ_MARK_TARGET(0x80040AD0,ZZ_3FFAC_B24);
ZZ_MARK(0x80040AD4);
ZZ_MARK(0x80040AD8);
ZZ_MARK(0x80040ADC);
ZZ_MARK(0x80040AE0);
ZZ_MARK_TARGET(0x80040AE4,ZZ_3FFAC_B38);
ZZ_MARK(0x80040AE8);
ZZ_MARK(0x80040AEC);
ZZ_MARK(0x80040AF0);
ZZ_MARK(0x80040AF4);
ZZ_MARK(0x80040AF8);
ZZ_MARK(0x80040AFC);
ZZ_MARK_TARGET(0x80040B00,ZZ_3FFAC_B54);
ZZ_MARK(0x80040B04);
ZZ_MARK(0x80040B08);
ZZ_MARK(0x80040B0C);
ZZ_MARK(0x80040B10);
ZZ_MARK(0x80040B14);
ZZ_MARK(0x80040B18);
ZZ_MARK_TARGET(0x80040B1C,ZZ_3FFAC_B70);
ZZ_MARK_TARGET(0x80040B20,ZZ_3FFAC_B74);
ZZ_MARK(0x80040B24);
ZZ_MARK(0x80040B28);
ZZ_MARK(0x80040B2C);
ZZ_MARK_TARGET(0x80040B30,ZZ_3FFAC_B84);
ZZ_MARK(0x80040B34);
ZZ_MARK(0x80040B38);
ZZ_MARK(0x80040B3C);
ZZ_MARK(0x80040B40);
ZZ_MARK(0x80040B44);
ZZ_MARK(0x80040B48);
ZZ_MARK(0x80040B4C);
ZZ_MARK(0x80040B50);
ZZ_MARK(0x80040B54);
ZZ_MARK(0x80040B58);
ZZ_MARK_TARGET(0x80040B5C,ZZ_3FFAC_BB0);
ZZ_MARK(0x80040B60);
ZZ_MARK(0x80040B64);
ZZ_MARK(0x80040B68);
ZZ_MARK_TARGET(0x80040B6C,ZZ_3FFAC_BC0);
ZZ_MARK(0x80040B70);
ZZ_MARK(0x80040B74);
ZZ_MARK(0x80040B78);
ZZ_MARK_TARGET(0x80040B7C,ZZ_3FFAC_BD0);
ZZ_MARK(0x80040B80);
ZZ_MARK(0x80040B84);
ZZ_MARK(0x80040B88);
ZZ_MARK(0x80040B8C);
ZZ_MARK(0x80040B90);
ZZ_MARK(0x80040B94);
ZZ_MARK(0x80040B98);
ZZ_MARK(0x80040B9C);
ZZ_MARK(0x80040BA0);
ZZ_MARK(0x80040BA4);
ZZ_MARK_TARGET(0x80040BA8,ZZ_3FFAC_BFC);
ZZ_MARK(0x80040BAC);
ZZ_MARK(0x80040BB0);
ZZ_MARK(0x80040BB4);
ZZ_MARK(0x80040BB8);
ZZ_MARK(0x80040BBC);
ZZ_MARK(0x80040BC0);
ZZ_MARK(0x80040BC4);
ZZ_MARK(0x80040BC8);
ZZ_MARK(0x80040BCC);
ZZ_MARK(0x80040BD0);
ZZ_MARK(0x80040BD4);
ZZ_MARK_TARGET(0x80040BD8,ZZ_3FFAC_C2C);
ZZ_MARK(0x80040BDC);
ZZ_MARK_TARGET(0x80040BE0,ZZ_3FFAC_C34);
ZZ_MARK(0x80040BE4);
ZZ_MARK(0x80040BE8);
ZZ_MARK(0x80040BEC);
ZZ_MARK(0x80040BF0);
ZZ_MARK(0x80040BF4);
ZZ_MARK(0x80040BF8);
ZZ_MARK(0x80040BFC);
ZZ_MARK(0x80040C00);
ZZ_MARK(0x80040C04);
ZZ_MARK(0x80040C08);
ZZ_MARK(0x80040C0C);
ZZ_MARK(0x80040C10);
ZZ_MARK(0x80040C14);
ZZ_MARK(0x80040C18);
ZZ_MARK(0x80040C1C);
ZZ_MARK(0x80040C20);
ZZ_MARK(0x80040C24);
ZZ_MARK(0x80040C28);
ZZ_MARK_TARGET(0x80040C2C,ZZ_3FFAC_C80);
ZZ_MARK(0x80040C30);
ZZ_MARK(0x80040C34);
ZZ_MARK(0x80040C38);
ZZ_MARK_TARGET(0x80040C3C,ZZ_3FFAC_C90);
ZZ_MARK(0x80040C40);
ZZ_MARK(0x80040C44);
ZZ_MARK(0x80040C48);
ZZ_MARK_TARGET(0x80040C4C,ZZ_3FFAC_CA0);
ZZ_MARK(0x80040C50);
ZZ_MARK(0x80040C54);
ZZ_MARK(0x80040C58);
ZZ_MARK(0x80040C5C);
ZZ_MARK(0x80040C60);
ZZ_MARK(0x80040C64);
ZZ_MARK(0x80040C68);
ZZ_MARK(0x80040C6C);
ZZ_MARK(0x80040C70);
ZZ_MARK(0x80040C74);
ZZ_MARK(0x80040C78);
ZZ_MARK(0x80040C7C);
ZZ_MARK(0x80040C80);
ZZ_MARK(0x80040C84);
ZZ_MARK(0x80040C88);
ZZ_MARK(0x80040C8C);
ZZ_MARK(0x80040C90);
ZZ_MARK(0x80040C94);
ZZ_MARK(0x80040C98);
ZZ_MARK(0x80040C9C);
ZZ_MARK(0x80040CA0);
ZZ_MARK(0x80040CA4);
ZZ_MARK(0x80040CA8);
ZZ_MARK(0x80040CAC);
ZZ_MARK(0x80040CB0);
ZZ_MARK(0x80040CB4);
ZZ_MARK(0x80040CB8);
ZZ_MARK_TARGET(0x80040CBC,ZZ_3FFAC_D10);
ZZ_MARK(0x80040CC0);
ZZ_MARK(0x80040CC4);
ZZ_MARK(0x80040CC8);
ZZ_MARK(0x80040CCC);
ZZ_MARK_TARGET(0x80040CD0,ZZ_3FFAC_D24);
ZZ_MARK(0x80040CD4);
ZZ_MARK(0x80040CD8);
ZZ_MARK(0x80040CDC);
ZZ_MARK(0x80040CE0);
ZZ_MARK(0x80040CE4);
ZZ_MARK(0x80040CE8);
ZZ_MARK_TARGET(0x80040CEC,ZZ_3FFAC_D40);
ZZ_MARK(0x80040CF0);
ZZ_MARK(0x80040CF4);
ZZ_MARK(0x80040CF8);
ZZ_MARK(0x80040CFC);
ZZ_MARK(0x80040D00);
ZZ_MARK(0x80040D04);
ZZ_MARK_TARGET(0x80040D08,ZZ_3FFAC_D5C);
ZZ_MARK_TARGET(0x80040D0C,ZZ_3FFAC_D60);
ZZ_MARK(0x80040D10);
ZZ_MARK(0x80040D14);
ZZ_MARK(0x80040D18);
ZZ_MARK_TARGET(0x80040D1C,ZZ_3FFAC_D70);
ZZ_MARK(0x80040D20);
ZZ_MARK(0x80040D24);
ZZ_MARK(0x80040D28);
ZZ_MARK(0x80040D2C);
ZZ_MARK(0x80040D30);
ZZ_MARK(0x80040D34);
ZZ_MARK(0x80040D38);
ZZ_MARK(0x80040D3C);
ZZ_MARK(0x80040D40);
ZZ_MARK(0x80040D44);
ZZ_MARK_TARGET(0x80040D48,ZZ_3FFAC_D9C);
ZZ_MARK(0x80040D4C);
ZZ_MARK(0x80040D50);
ZZ_MARK(0x80040D54);
ZZ_MARK_TARGET(0x80040D58,ZZ_3FFAC_DAC);
ZZ_MARK(0x80040D5C);
ZZ_MARK(0x80040D60);
ZZ_MARK(0x80040D64);
ZZ_MARK_TARGET(0x80040D68,ZZ_3FFAC_DBC);
ZZ_MARK(0x80040D6C);
ZZ_MARK(0x80040D70);
ZZ_MARK(0x80040D74);
ZZ_MARK(0x80040D78);
ZZ_MARK(0x80040D7C);
ZZ_MARK(0x80040D80);
ZZ_MARK(0x80040D84);
ZZ_MARK(0x80040D88);
ZZ_MARK(0x80040D8C);
ZZ_MARK(0x80040D90);
ZZ_MARK_TARGET(0x80040D94,ZZ_3FFAC_DE8);
ZZ_MARK(0x80040D98);
ZZ_MARK(0x80040D9C);
ZZ_MARK(0x80040DA0);
ZZ_MARK_TARGET(0x80040DA4,ZZ_3FFAC_DF8);
ZZ_MARK(0x80040DA8);
ZZ_MARK(0x80040DAC);
ZZ_MARK(0x80040DB0);
ZZ_MARK(0x80040DB4);
ZZ_MARK(0x80040DB8);
ZZ_MARK(0x80040DBC);
ZZ_MARK(0x80040DC0);
ZZ_MARK(0x80040DC4);
ZZ_MARK(0x80040DC8);
ZZ_MARK(0x80040DCC);
ZZ_MARK(0x80040DD0);
ZZ_MARK_TARGET(0x80040DD4,ZZ_3FFAC_E28);
ZZ_MARK(0x80040DD8);
ZZ_MARK_TARGET(0x80040DDC,ZZ_3FFAC_E30);
ZZ_MARK(0x80040DE0);
ZZ_MARK(0x80040DE4);
ZZ_MARK(0x80040DE8);
ZZ_MARK(0x80040DEC);
ZZ_MARK(0x80040DF0);
ZZ_MARK(0x80040DF4);
ZZ_MARK(0x80040DF8);
ZZ_MARK(0x80040DFC);
ZZ_MARK(0x80040E00);
ZZ_MARK(0x80040E04);
ZZ_MARK(0x80040E08);
ZZ_MARK(0x80040E0C);
ZZ_MARK(0x80040E10);
ZZ_MARK(0x80040E14);
ZZ_MARK(0x80040E18);
ZZ_MARK(0x80040E1C);
ZZ_MARK(0x80040E20);
ZZ_MARK(0x80040E24);
ZZ_MARK(0x80040E28);
ZZ_MARK(0x80040E2C);
ZZ_MARK(0x80040E30);
ZZ_MARK(0x80040E34);
ZZ_MARK(0x80040E38);
ZZ_MARK(0x80040E3C);
ZZ_MARK(0x80040E40);
ZZ_MARK_TARGET(0x80040E44,ZZ_3FFAC_E98);
ZZ_MARK(0x80040E48);
ZZ_MARK(0x80040E4C);
ZZ_MARK(0x80040E50);
ZZ_MARK(0x80040E54);
ZZ_MARK(0x80040E58);
ZZ_MARK(0x80040E5C);
ZZ_MARK(0x80040E60);
ZZ_MARK(0x80040E64);
ZZ_MARK(0x80040E68);
ZZ_MARK_TARGET(0x80040E6C,ZZ_3FFAC_EC0);
ZZ_MARK(0x80040E70);
ZZ_MARK(0x80040E74);
ZZ_MARK(0x80040E78);
ZZ_MARK(0x80040E7C);
ZZ_MARK(0x80040E80);
ZZ_MARK(0x80040E84);
ZZ_MARK(0x80040E88);
ZZ_MARK(0x80040E8C);
ZZ_MARK(0x80040E90);
ZZ_MARK_TARGET(0x80040E94,ZZ_3FFAC_EE8);
ZZ_MARK(0x80040E98);
ZZ_MARK(0x80040E9C);
ZZ_MARK(0x80040EA0);
ZZ_MARK(0x80040EA4);
ZZ_MARK(0x80040EA8);
ZZ_MARK_TARGET(0x80040EAC,ZZ_3FFAC_F00);
ZZ_MARK(0x80040EB0);
ZZ_MARK(0x80040EB4);
ZZ_MARK(0x80040EB8);
ZZ_MARK(0x80040EBC);
ZZ_MARK(0x80040EC0);
ZZ_MARK(0x80040EC4);
ZZ_MARK(0x80040EC8);
ZZ_MARK(0x80040ECC);
ZZ_MARK_TARGET(0x80040ED0,ZZ_3FFAC_F24);
ZZ_MARK(0x80040ED4);
ZZ_MARK(0x80040ED8);
ZZ_MARK(0x80040EDC);
ZZ_MARK(0x80040EE0);
ZZ_MARK_TARGET(0x80040EE4,ZZ_3FFAC_F38);
ZZ_MARK(0x80040EE8);
ZZ_MARK(0x80040EEC);
ZZ_MARK(0x80040EF0);
ZZ_MARK(0x80040EF4);
ZZ_MARK(0x80040EF8);
ZZ_MARK(0x80040EFC);
ZZ_MARK(0x80040F00);
ZZ_MARK(0x80040F04);
ZZ_MARK_TARGET(0x80040F08,ZZ_3FFAC_F5C);
ZZ_MARK(0x80040F0C);
ZZ_MARK(0x80040F10);
ZZ_MARK(0x80040F14);
ZZ_MARK(0x80040F18);
ZZ_MARK(0x80040F1C);
ZZ_MARK(0x80040F20);
ZZ_MARK(0x80040F24);
ZZ_MARK(0x80040F28);
ZZ_MARK(0x80040F2C);
ZZ_MARK(0x80040F30);
ZZ_MARK_TARGET(0x80040F34,ZZ_3FFAC_F88);
ZZ_MARK(0x80040F38);
ZZ_MARK(0x80040F3C);
ZZ_MARK(0x80040F40);
ZZ_MARK_TARGET(0x80040F44,ZZ_3FFAC_F98);
ZZ_MARK(0x80040F48);
ZZ_MARK(0x80040F4C);
ZZ_MARK(0x80040F50);
ZZ_MARK(0x80040F54);
ZZ_MARK(0x80040F58);
ZZ_MARK(0x80040F5C);
ZZ_MARK(0x80040F60);
ZZ_MARK(0x80040F64);
ZZ_MARK(0x80040F68);
ZZ_MARK(0x80040F6C);
ZZ_MARK(0x80040F70);
ZZ_MARK(0x80040F74);
ZZ_MARK(0x80040F78);
ZZ_MARK(0x80040F7C);
ZZ_MARK(0x80040F80);
ZZ_MARK(0x80040F84);
ZZ_MARK(0x80040F88);
ZZ_MARK(0x80040F8C);
ZZ_MARK(0x80040F90);
ZZ_MARK(0x80040F94);
ZZ_MARK(0x80040F98);
ZZ_MARK(0x80040F9C);
ZZ_MARK(0x80040FA0);
ZZ_MARK_TARGET(0x80040FA4,ZZ_3FFAC_FF8);
ZZ_MARK(0x80040FA8);
