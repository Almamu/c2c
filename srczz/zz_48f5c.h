#ifdef ZZ_INCLUDE_CODE
ZZ_48F5C:
	SP -= 40;
	EMU_Write32(SP + 28,S1); //+ 0x1C
	S1 = A0;
	A0 = R0;
	EMU_Write32(SP + 32,RA); //+ 0x20
	RA = 0x80048F78; //ZZ_48F5C_1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	ZZ_CLOCKCYCLES(7,0x80046DB8);
	goto ZZ_46DB8;
ZZ_48F5C_1C:
	RA = 0x80048F80; //ZZ_48F5C_24
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80046DD0);
	goto ZZ_46DD0;
ZZ_48F5C_24:
	V0 = 0x80060000;
	V0 -= 12888;
	V0 = EMU_ReadU32(V0);
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x80048FA4);
		goto ZZ_48F5C_48;
	}
	RA = 0x80048FA4; //ZZ_48F5C_48
	A0 = R0;
	ZZ_CLOCKCYCLES(9,0x800471F0);
	goto ZZ_471F0;
ZZ_48F5C_48:
	RA = 0x80048FAC; //ZZ_48F5C_50
	ZZ_CLOCKCYCLES(2,0x80046C2C);
	goto ZZ_46C2C;
ZZ_48F5C_50:
	V0 &= 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x8004900C);
		goto ZZ_48F5C_B0;
	}
	RA = 0x80048FC0; //ZZ_48F5C_64
	A0 = -1;
	ZZ_CLOCKCYCLES(5,0x8004A71C);
	goto ZZ_4A71C;
ZZ_48F5C_64:
	V0 &= 0x3F;
	if (V0)
	{
		A0 = 1;
		ZZ_CLOCKCYCLES(3,0x80048FE0);
		goto ZZ_48F5C_84;
	}
	A0 = 1;
	A0 = 0x80010000;
	A0 += 3032;
	RA = 0x80048FDC; //ZZ_48F5C_80
	ZZ_CLOCKCYCLES(7,0x80049424);
	goto ZZ_49424;
ZZ_48F5C_80:
	A0 = 1;
	ZZ_CLOCKCYCLES(1,0x80048FE0);
ZZ_48F5C_84:
	RA = 0x80048FE8; //ZZ_48F5C_8C
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x80046F20);
	goto ZZ_46F20;
ZZ_48F5C_8C:
	RA = 0x80048FF0; //ZZ_48F5C_94
	A0 = -1;
	ZZ_CLOCKCYCLES(2,0x8004A71C);
	goto ZZ_4A71C;
ZZ_48F5C_94:
	AT = 0x80060000;
	EMU_Write32(AT - 12908,V0); //+ 0xFFFFCD94
	V0 = -1;
	AT = 0x80060000;
	EMU_Write32(AT - 12916,V0); //+ 0xFFFFCD8C
	ZZ_CLOCKCYCLES(7,0x80049150);
	goto ZZ_48F5C_1F4;
ZZ_48F5C_B0:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x80049064);
		goto ZZ_48F5C_108;
	}
	A0 = 0x80010000;
	A0 += 3056;
	RA = 0x80049024; //ZZ_48F5C_C8
	ZZ_CLOCKCYCLES(6,0x80049424);
	goto ZZ_49424;
ZZ_48F5C_C8:
	A0 = 9;
	A1 = R0;
	RA = 0x80049034; //ZZ_48F5C_D8
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x80046DE8);
	goto ZZ_46DE8;
ZZ_48F5C_D8:
	RA = 0x8004903C; //ZZ_48F5C_E0
	ZZ_CLOCKCYCLES(2,0x80046C5C);
	goto ZZ_46C5C;
ZZ_48F5C_E0:
	A0 = 2;
	A1 = V0;
	RA = 0x8004904C; //ZZ_48F5C_F0
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x80046DE8);
	goto ZZ_46DE8;
ZZ_48F5C_F0:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x80049064);
		goto ZZ_48F5C_108;
	}
	V0 = -1;
	AT = 0x80060000;
	EMU_Write32(AT - 12916,V0); //+ 0xFFFFCD8C
	ZZ_CLOCKCYCLES(6,0x80049150);
	goto ZZ_48F5C_1F4;
ZZ_48F5C_108:
	RA = 0x8004906C; //ZZ_48F5C_110
	ZZ_CLOCKCYCLES(2,0x80046CD8);
	goto ZZ_46CD8;
ZZ_48F5C_110:
	V0 = 0x80060000;
	V0 -= 12924;
	S0 = EMU_ReadU32(V0);
	EMU_Write8(SP + 16,S0); //+ 0x10
	RA = 0x80049088; //ZZ_48F5C_12C
	S0 &= 0xFF;
	ZZ_CLOCKCYCLES(7,0x80046C3C);
	goto ZZ_46C3C;
ZZ_48F5C_12C:
	if (S0 != V0)
	{
		A0 = 14;
		ZZ_CLOCKCYCLES(2,0x80049098);
		goto ZZ_48F5C_13C;
	}
	A0 = 14;
	if (!S1)
	{
		ZZ_CLOCKCYCLES(4,0x800490BC);
		goto ZZ_48F5C_160;
	}
	ZZ_CLOCKCYCLES(4,0x80049098);
ZZ_48F5C_13C:
	A1 = SP + 16;
	RA = 0x800490A4; //ZZ_48F5C_148
	A2 = R0;
	ZZ_CLOCKCYCLES(3,0x80046DE8);
	goto ZZ_46DE8;
ZZ_48F5C_148:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x800490BC);
		goto ZZ_48F5C_160;
	}
	V0 = -1;
	AT = 0x80060000;
	EMU_Write32(AT - 12916,V0); //+ 0xFFFFCD8C
	ZZ_CLOCKCYCLES(6,0x80049150);
	goto ZZ_48F5C_1F4;
ZZ_48F5C_160:
	RA = 0x800490C4; //ZZ_48F5C_168
	ZZ_CLOCKCYCLES(2,0x80046C5C);
	goto ZZ_46C5C;
ZZ_48F5C_168:
	RA = 0x800490CC; //ZZ_48F5C_170
	A0 = V0;
	ZZ_CLOCKCYCLES(2,0x80047338);
	goto ZZ_47338;
ZZ_48F5C_170:
	A0 = 0x80050000;
	A0 -= 29808;
	AT = 0x80060000;
	EMU_Write32(AT - 12904,V0); //+ 0xFFFFCD98
	RA = 0x800490E4; //ZZ_48F5C_188
	ZZ_CLOCKCYCLES(6,0x80046DD0);
	goto ZZ_46DD0;
ZZ_48F5C_188:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12888); //+ 0xFFFFCDA8
	V0 &= 0x1;
	if (!V0)
	{
		A0 = 6;
		ZZ_CLOCKCYCLES(6,0x80049110);
		goto ZZ_48F5C_1B4;
	}
	A0 = 6;
	A0 = 0x80050000;
	A0 -= 29088;
	RA = 0x8004910C; //ZZ_48F5C_1B0
	ZZ_CLOCKCYCLES(10,0x800471F0);
	goto ZZ_471F0;
ZZ_48F5C_1B0:
	A0 = 6;
	ZZ_CLOCKCYCLES(1,0x80049110);
ZZ_48F5C_1B4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12932); //+ 0xFFFFCD7C
	A1 = R0;
	AT = 0x80060000;
	EMU_Write32(AT - 12928,V0); //+ 0xFFFFCD80
	RA = 0x8004912C; //ZZ_48F5C_1D0
	ZZ_CLOCKCYCLES(7,0x80046F20);
	goto ZZ_46F20;
ZZ_48F5C_1D0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12936); //+ 0xFFFFCD78
	A0 = -1;
	AT = 0x80060000;
	EMU_Write32(AT - 12916,V0); //+ 0xFFFFCD8C
	RA = 0x80049148; //ZZ_48F5C_1EC
	ZZ_CLOCKCYCLES(7,0x8004A71C);
	goto ZZ_4A71C;
ZZ_48F5C_1EC:
	AT = 0x80060000;
	EMU_Write32(AT - 12912,V0); //+ 0xFFFFCD90
	ZZ_CLOCKCYCLES(2,0x80049150);
ZZ_48F5C_1F4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12916); //+ 0xFFFFCD8C
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80049390,ZZ_49310_80);
	ZZ_JUMPREGISTER(0x80049300,ZZ_4920C_F4);
	ZZ_JUMPREGISTER(0x80048D60,ZZ_48B90_1D0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80048F5C,0x80048F78,ZZ_48F5C);
ZZ_MARK_TARGET(0x80048F78,0x80048F80,ZZ_48F5C_1C);
ZZ_MARK_TARGET(0x80048F80,0x80048FA4,ZZ_48F5C_24);
ZZ_MARK_TARGET(0x80048FA4,0x80048FAC,ZZ_48F5C_48);
ZZ_MARK_TARGET(0x80048FAC,0x80048FC0,ZZ_48F5C_50);
ZZ_MARK_TARGET(0x80048FC0,0x80048FDC,ZZ_48F5C_64);
ZZ_MARK_TARGET(0x80048FDC,0x80048FE0,ZZ_48F5C_80);
ZZ_MARK_TARGET(0x80048FE0,0x80048FE8,ZZ_48F5C_84);
ZZ_MARK_TARGET(0x80048FE8,0x80048FF0,ZZ_48F5C_8C);
ZZ_MARK_TARGET(0x80048FF0,0x8004900C,ZZ_48F5C_94);
ZZ_MARK_TARGET(0x8004900C,0x80049024,ZZ_48F5C_B0);
ZZ_MARK_TARGET(0x80049024,0x80049034,ZZ_48F5C_C8);
ZZ_MARK_TARGET(0x80049034,0x8004903C,ZZ_48F5C_D8);
ZZ_MARK_TARGET(0x8004903C,0x8004904C,ZZ_48F5C_E0);
ZZ_MARK_TARGET(0x8004904C,0x80049064,ZZ_48F5C_F0);
ZZ_MARK_TARGET(0x80049064,0x8004906C,ZZ_48F5C_108);
ZZ_MARK_TARGET(0x8004906C,0x80049088,ZZ_48F5C_110);
ZZ_MARK_TARGET(0x80049088,0x80049098,ZZ_48F5C_12C);
ZZ_MARK_TARGET(0x80049098,0x800490A4,ZZ_48F5C_13C);
ZZ_MARK_TARGET(0x800490A4,0x800490BC,ZZ_48F5C_148);
ZZ_MARK_TARGET(0x800490BC,0x800490C4,ZZ_48F5C_160);
ZZ_MARK_TARGET(0x800490C4,0x800490CC,ZZ_48F5C_168);
ZZ_MARK_TARGET(0x800490CC,0x800490E4,ZZ_48F5C_170);
ZZ_MARK_TARGET(0x800490E4,0x8004910C,ZZ_48F5C_188);
ZZ_MARK_TARGET(0x8004910C,0x80049110,ZZ_48F5C_1B0);
ZZ_MARK_TARGET(0x80049110,0x8004912C,ZZ_48F5C_1B4);
ZZ_MARK_TARGET(0x8004912C,0x80049148,ZZ_48F5C_1D0);
ZZ_MARK_TARGET(0x80049148,0x80049150,ZZ_48F5C_1EC);
ZZ_MARK_TARGET(0x80049150,0x80049170,ZZ_48F5C_1F4);
