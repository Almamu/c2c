#ifdef ZZ_INCLUDE_CODE
ZZ_3EFAC:
	V0 = T0 >> 13;
	V0 &= 0x7F8;
	T8 = T0 << 5;
	if ((int32_t)T8 >= 0)
	{
		V0 += V1;
		ZZ_CLOCKCYCLES(5,0x8003EFCC);
		goto ZZ_3EFAC_20;
	}
	V0 += V1;
	T9 = EMU_ReadU32(V0 + 320); //+ 0x140
	T8 = EMU_ReadU32(V0 + 324); //+ 0x144
	ZZ_CLOCKCYCLES(8,0x8003F1F8);
	goto ZZ_3EFAC_24C;
ZZ_3EFAC_20:
	if (GP)
	{
		T9 = S4 & 0x2;
		ZZ_CLOCKCYCLES(2,0x8003EFF4);
		goto ZZ_3EFAC_48;
	}
	T9 = S4 & 0x2;
	S4 = EMU_CheckedAdd(S4,3);
	S5 = EMU_CheckedAdd(S5,3);
	EMU_ReadRight(S4 + -3,&A0); //+ 0xFFFFFFFD
	if (!T9)
	{
		EMU_ReadRight(S5 + -3,&A1); //+ 0xFFFFFFFD
		ZZ_CLOCKCYCLES(7,0x8003F1BC);
		goto ZZ_3EFAC_210;
	}
	EMU_ReadRight(S5 + -3,&A1); //+ 0xFFFFFFFD
	EMU_ReadLeft(S4,&A0);
	EMU_ReadLeft(S5,&A1);
	ZZ_CLOCKCYCLES(10,0x8003F1BC);
	goto ZZ_3EFAC_210;
ZZ_3EFAC_48:
	AT = EMU_ReadU32(GP);
	GP = EMU_CheckedAdd(GP,4);
	T8 = AT >> 6;
	T8 &= 0x7;
	T9 = T8 ^ 0x1F;
	T8 += 1;
	A3 = T8 - 8;
	T4 += T8;
	A0 = (int32_t)T3 >> T9;
	if ((int32_t)T4 <= 0)
	{
		A1 = (int32_t)SP >> T9;
		ZZ_CLOCKCYCLES(11,0x8003F05C);
		goto ZZ_3EFAC_B0;
	}
	A1 = (int32_t)SP >> T9;
	A0 = T3;
	A1 = SP;
	T3 = EMU_ReadU32(S4);
	SP = EMU_ReadU32(S5);
	S4 = EMU_CheckedAdd(S4,4);
	S5 = EMU_CheckedAdd(S5,4);
	T8 = T8 - T4;
	A2 = T3 >> T8;
	T8 = SP >> T8;
	A0 |= A2;
	A1 |= T8;
	A0 = (int32_t)A0 >> T9;
	A1 = (int32_t)A1 >> T9;
	T8 = T4;
	T4 = EMU_CheckedAdd(T4,-32);
	ZZ_CLOCKCYCLES(26,0x8003F05C);
ZZ_3EFAC_B0:
	T3 <<= T8;
	if (!A3)
	{
		SP <<= T8;
		ZZ_CLOCKCYCLES(3,0x8003F088);
		goto ZZ_3EFAC_DC;
	}
	SP <<= T8;
	T9 = (int32_t)AT >> 25;
	T9 <<= 1;
	T8 = EMU_ReadS8(V1 + 272); //+ 0x110
	A0 += T9;
	A0 += T8;
	T8 = EMU_ReadS8(V1 + 276); //+ 0x114
	A1 += T9;
	A1 += T8;
	ZZ_CLOCKCYCLES(11,0x8003F088);
ZZ_3EFAC_DC:
	EMU_Write8(V1 + 272,A0); //+ 0x110
	EMU_Write8(V1 + 276,A1); //+ 0x114
	T8 = AT >> 3;
	T8 &= 0x7;
	T9 = T8 ^ 0x1F;
	T8 += 1;
	A3 = T8 - 8;
	T4 += T8;
	A0 = (int32_t)T3 >> T9;
	if ((int32_t)T4 <= 0)
	{
		A1 = (int32_t)SP >> T9;
		ZZ_CLOCKCYCLES(11,0x8003F0F0);
		goto ZZ_3EFAC_144;
	}
	A1 = (int32_t)SP >> T9;
	A0 = T3;
	A1 = SP;
	T3 = EMU_ReadU32(S4);
	SP = EMU_ReadU32(S5);
	S4 = EMU_CheckedAdd(S4,4);
	S5 = EMU_CheckedAdd(S5,4);
	T8 = T8 - T4;
	A2 = T3 >> T8;
	T8 = SP >> T8;
	A0 |= A2;
	A1 |= T8;
	A0 = (int32_t)A0 >> T9;
	A1 = (int32_t)A1 >> T9;
	T8 = T4;
	T4 = EMU_CheckedAdd(T4,-32);
	ZZ_CLOCKCYCLES(26,0x8003F0F0);
ZZ_3EFAC_144:
	T3 <<= T8;
	if (!A3)
	{
		SP <<= T8;
		ZZ_CLOCKCYCLES(3,0x8003F11C);
		goto ZZ_3EFAC_170;
	}
	SP <<= T8;
	T9 = AT << 7;
	T9 = (int32_t)T9 >> 24;
	T8 = EMU_ReadS8(V1 + 274); //+ 0x112
	A0 += T9;
	A0 += T8;
	T8 = EMU_ReadS8(V1 + 278); //+ 0x116
	A1 += T9;
	A1 += T8;
	ZZ_CLOCKCYCLES(11,0x8003F11C);
ZZ_3EFAC_170:
	EMU_Write8(V1 + 274,A0); //+ 0x112
	EMU_Write8(V1 + 278,A1); //+ 0x116
	T8 = AT & 0x7;
	T9 = T8 ^ 0x1F;
	T8 += 1;
	A3 = T8 - 8;
	T4 += T8;
	A0 = (int32_t)T3 >> T9;
	if ((int32_t)T4 <= 0)
	{
		A1 = (int32_t)SP >> T9;
		ZZ_CLOCKCYCLES(10,0x8003F180);
		goto ZZ_3EFAC_1D4;
	}
	A1 = (int32_t)SP >> T9;
	A0 = T3;
	A1 = SP;
	T3 = EMU_ReadU32(S4);
	SP = EMU_ReadU32(S5);
	S4 = EMU_CheckedAdd(S4,4);
	S5 = EMU_CheckedAdd(S5,4);
	T8 = T8 - T4;
	A2 = T3 >> T8;
	T8 = SP >> T8;
	A0 |= A2;
	A1 |= T8;
	A0 = (int32_t)A0 >> T9;
	A1 = (int32_t)A1 >> T9;
	T8 = T4;
	T4 = EMU_CheckedAdd(T4,-32);
	ZZ_CLOCKCYCLES(25,0x8003F180);
ZZ_3EFAC_1D4:
	T3 <<= T8;
	if (!A3)
	{
		SP <<= T8;
		ZZ_CLOCKCYCLES(3,0x8003F1AC);
		goto ZZ_3EFAC_200;
	}
	SP <<= T8;
	T9 = AT << 15;
	T9 = (int32_t)T9 >> 24;
	T8 = EMU_ReadS8(V1 + 273); //+ 0x111
	A0 += T9;
	A0 += T8;
	T8 = EMU_ReadS8(V1 + 277); //+ 0x115
	A1 += T9;
	A1 += T8;
	ZZ_CLOCKCYCLES(11,0x8003F1AC);
ZZ_3EFAC_200:
	EMU_Write8(V1 + 273,A0); //+ 0x111
	EMU_Write8(V1 + 277,A1); //+ 0x115
	A0 = EMU_ReadU32(V1 + 272); //+ 0x110
	A1 = EMU_ReadU32(V1 + 276); //+ 0x114
	ZZ_CLOCKCYCLES(4,0x8003F1BC);
ZZ_3EFAC_210:
	AT = EMU_ReadU32(V1 + 280); //+ 0x118
	T9 = A0 & T1;
	T8 = A1 & T1;
	T9 += T8;
	T9 <<= 1;
	T9 += AT;
	AT = EMU_ReadU32(V1 + 284); //+ 0x11C
	T9 &= T2;
	A0 &= 0xFF00;
	A1 &= 0xFF00;
	T8 = A0 + A1;
	T8 >>= 7;
	T8 += AT;
	EMU_Write32(V0 + 320,T9); //+ 0x140
	EMU_Write32(V0 + 324,T8); //+ 0x144
	ZZ_CLOCKCYCLES(15,0x8003F1F8);
ZZ_3EFAC_24C:
	A0 = T0 >> 7;
	A1 = T0 << 4;
	if ((int32_t)A1 < 0)
	{
		A0 &= 0x1FC;
		ZZ_CLOCKCYCLES(4,0x8003F214);
		goto ZZ_3EFAC_268;
	}
	A0 &= 0x1FC;
	A0 += S6;
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_ReadU32(A0);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x8003F6E4,ZZ_3EFAC_738);
	ZZ_JUMPREGISTER(0x80041A8C,ZZ_41A1C_70);
	ZZ_JUMPREGISTER(0x8003F6F8,ZZ_3EFAC_74C);
	ZZ_JUMPREGISTER(0x80041AA0,ZZ_41A1C_84);
	ZZ_JUMPREGISTER(0x8003F4C8,ZZ_3EFAC_51C);
	ZZ_JUMPREGISTER(0x8003F70C,ZZ_3EFAC_760);
	ZZ_JUMPREGISTER(0x80041AB4,ZZ_41A1C_98);
	ZZ_JUMPREGISTER(0x8003F284,ZZ_3EFAC_2D8);
	ZZ_JUMPREGISTER(0x8003F4F4,ZZ_3EFAC_548);
	ZZ_JUMPREGISTER(0x8003F2B0,ZZ_3EFAC_304);
	ZZ_JUMPREGISTER(0x8003F818,ZZ_3EFAC_86C);
	ZZ_JUMPREGISTER(0x8003F520,ZZ_3EFAC_574);
	ZZ_JUMPREGISTER(0x8003F2DC,ZZ_3EFAC_330);
	ZZ_JUMPREGISTER(0x8003F678,ZZ_3EFAC_6CC);
	ZZ_JUMPREGISTER(0x8003F430,ZZ_3EFAC_484);
	ZZ_JUMPREGISTER(0x80041CA0,ZZ_41A1C_284);
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_268:
	A0 += V1;
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_ReadU32(A0 + 320); //+ 0x140
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x8003F6E4,ZZ_3EFAC_738);
	ZZ_JUMPREGISTER(0x80041A8C,ZZ_41A1C_70);
	ZZ_JUMPREGISTER(0x8003F6F8,ZZ_3EFAC_74C);
	ZZ_JUMPREGISTER(0x80041AA0,ZZ_41A1C_84);
	ZZ_JUMPREGISTER(0x8003F4C8,ZZ_3EFAC_51C);
	ZZ_JUMPREGISTER(0x8003F70C,ZZ_3EFAC_760);
	ZZ_JUMPREGISTER(0x80041AB4,ZZ_41A1C_98);
	ZZ_JUMPREGISTER(0x8003F284,ZZ_3EFAC_2D8);
	ZZ_JUMPREGISTER(0x8003F4F4,ZZ_3EFAC_548);
	ZZ_JUMPREGISTER(0x8003F2B0,ZZ_3EFAC_304);
	ZZ_JUMPREGISTER(0x8003F818,ZZ_3EFAC_86C);
	ZZ_JUMPREGISTER(0x8003F520,ZZ_3EFAC_574);
	ZZ_JUMPREGISTER(0x8003F2DC,ZZ_3EFAC_330);
	ZZ_JUMPREGISTER(0x8003F678,ZZ_3EFAC_6CC);
	ZZ_JUMPREGISTER(0x8003F430,ZZ_3EFAC_484);
	ZZ_JUMPREGISTER(0x80041CA0,ZZ_41A1C_284);
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_278:
	RA = 0x8003F22C; //ZZ_3EFAC_280
	T8 = EMU_ReadU32(SP + 20); //+ 0x14
	ZZ_CLOCKCYCLES(2,0x80043A54);
	goto ZZ_43A54;
ZZ_3EFAC_280:
	RA = 0x8003F234; //ZZ_3EFAC_288
	T9 = EMU_ReadU32(SP + 72); //+ 0x48
	ZZ_CLOCKCYCLES(2,0x80043A34);
	goto ZZ_43A34;
ZZ_3EFAC_288:
	RA = 0x8003F23C; //ZZ_3EFAC_290
	T8 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(2,0x8004398C);
	goto ZZ_4398C;
ZZ_3EFAC_290:
	A0 = EMU_ReadU32(V1 + 280); //+ 0x118
	T9 = LO;
	A0 = (int32_t)A0 >> 16;
	A0 = T9 - A0;
	if ((int32_t)A0 < 0)
	{
		EMU_Write32(V1 + 296,T9); //+ 0x128
		ZZ_CLOCKCYCLES(6,0x8003F6B4);
		goto ZZ_3EFAC_708;
	}
	EMU_Write32(V1 + 296,T9); //+ 0x128
	RA = 0x8003F25C; //ZZ_3EFAC_2B0
	T9 = EMU_ReadU32(GP + 168); //+ 0xA8
	ZZ_CLOCKCYCLES(8,0x80043A24);
	goto ZZ_43A24;
ZZ_3EFAC_2B0:
	ZZ_JUMPREGISTER_BEGIN(T8);
	RA = 0x8003F264; //ZZ_3EFAC_2B8
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T8,8003F25C)
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_2B8:
	if (T8)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x8003F274; //ZZ_3EFAC_2C8
	ZZ_CLOCKCYCLES(4,0x800438F0);
	goto ZZ_438F0;
ZZ_3EFAC_2C8:
	if (!T9)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x8003F284; //ZZ_3EFAC_2D8
	EMU_Write32(V1 + 288,T0); //+ 0x120
	ZZ_CLOCKCYCLES(4,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_2D8:
	GTE_SetDataRegister(0,T9);
	GTE_SetDataRegister(1,T8);
	EMU_Write32(V1 + 128,T9); //+ 0x80
	EMU_Write32(V1 + 132,T8); //+ 0x84
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 116,T9); //+ 0x74
	T0 = EMU_ReadU32(S2);
	RA = 0x8003F2B0; //ZZ_3EFAC_304
	T5 = A0;
	ZZ_CLOCKCYCLES(11,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_304:
	GTE_SetDataRegister(2,T9);
	GTE_SetDataRegister(3,T8);
	EMU_Write32(V1 + 144,T9); //+ 0x90
	EMU_Write32(V1 + 148,T8); //+ 0x94
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 120,T9); //+ 0x78
	T0 = EMU_ReadU32(S2 + 4); //+ 0x4
	RA = 0x8003F2DC; //ZZ_3EFAC_330
	T6 = A0;
	ZZ_CLOCKCYCLES(11,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_330:
	GTE_SetDataRegister(4,T9);
	GTE_SetDataRegister(5,T8);
	T7 = A0;
	T0 = EMU_ReadU32(V1 + 288); //+ 0x120
	GTE_Execute(2621488);
	EMU_Write32(V1 + 160,T9); //+ 0xA0
	EMU_Write32(V1 + 164,T8); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 124,T9); //+ 0x7C
	S2 = EMU_CheckedAdd(S2,8);
	ZZ_CLOCKCYCLES(12,0x8003F30C);
ZZ_3EFAC_360:
	A0 = T0 << 23;
	if (!A0)
	{
		A2 = T0 & 0xFF;
		ZZ_CLOCKCYCLES(3,0x8003F368);
		goto ZZ_3EFAC_3BC;
	}
	A2 = T0 & 0xFF;
	if ((int32_t)A0 > 0)
	{
		A0 = A2 << 2;
		ZZ_CLOCKCYCLES(5,0x8003F35C);
		goto ZZ_3EFAC_3B0;
	}
	ZZ_CLOCKCYCLES(4,0x8003F31C);
ZZ_3EFAC_370:
	A0 = A2 << 2;
	A0 += S0;
	A2 = EMU_ReadU32(A0);
	A0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	A1 = A2 >> 26;
	A1 &= 0x1F;
	A0 >>= A1;
	A1 = A2 >> 19;
	A0 += A1;
	A1 = A2 >> 12;
	A1 &= 0x7F;
	A0 &= A1;
	A1 = A2 << 20;
	A2 += A0;
	if ((int32_t)A1 < 0)
	{
		A2 &= 0x7FF;
		ZZ_CLOCKCYCLES(16,0x8003F31C);
		goto ZZ_3EFAC_370;
	}
	A2 &= 0x7FF;
	ZZ_CLOCKCYCLES(16,0x8003F35C);
ZZ_3EFAC_3B0:
	A0 = A2 << 1;
	A2 += A0;
	A2 <<= 2;
	ZZ_CLOCKCYCLES(3,0x8003F368);
ZZ_3EFAC_3BC:
	RA = 0x8003F370; //ZZ_3EFAC_3C4
	ZZ_CLOCKCYCLES(2,0x8003F834);
	goto ZZ_3F834;
ZZ_3EFAC_3C4:
	T0 = EMU_ReadU32(S2);
	S2 = EMU_CheckedAdd(S2,4);
	if ((int32_t)T0 < 0)
	{
		T9 = EMU_CheckedAdd(T0,1);
		ZZ_CLOCKCYCLES(4,0x8003F274);
		goto ZZ_3EFAC_2C8;
	}
	T9 = EMU_CheckedAdd(T0,1);
	T9 = T0 >> 16;
	if (T9)
	{
		A0 = T0 << 1;
		ZZ_CLOCKCYCLES(7,0x8003F3D8);
		goto ZZ_3EFAC_42C;
	}
	A0 = T0 << 1;
	T9 = T0 << 31;
	T8 = T0 >> 7;
	if ((int32_t)T9 < 0)
	{
		T8 &= 0x1FC;
		ZZ_CLOCKCYCLES(11,0x8003F3A8);
		goto ZZ_3EFAC_3FC;
	}
	T8 &= 0x1FC;
	T8 += S6;
	T6 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(14,0x8003F3B0);
	goto ZZ_3EFAC_404;
ZZ_3EFAC_3FC:
	T8 += V1;
	T6 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8003F3B0);
ZZ_3EFAC_404:
	T9 = T0 << 30;
	if ((int32_t)T9 < 0)
	{
		T8 = T0 & 0x1FC;
		ZZ_CLOCKCYCLES(3,0x8003F3C8);
		goto ZZ_3EFAC_41C;
	}
	T8 = T0 & 0x1FC;
	T8 += S6;
	T7 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(6,0x8003F3D0);
	goto ZZ_3EFAC_424;
ZZ_3EFAC_41C:
	T8 += V1;
	T7 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8003F3D0);
ZZ_3EFAC_424:
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x8003F370);
	goto ZZ_3EFAC_3C4;
ZZ_3EFAC_42C:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003F3F8);
		goto ZZ_3EFAC_44C;
	}
	A0 = GTE_GetDataRegister(12);
	A1 = GTE_GetDataRegister(17);
	GTE_SetDataRegister(13,A0);
	GTE_SetDataRegister(18,A1);
	T6 = T5;
	ZZ_CLOCKCYCLES(8,0x8003F410);
	goto ZZ_3EFAC_464;
ZZ_3EFAC_44C:
	A0 = EMU_ReadU32(V1 + 144); //+ 0x90
	A1 = EMU_ReadU32(V1 + 148); //+ 0x94
	EMU_Write32(V1 + 128,A0); //+ 0x80
	A0 = EMU_ReadU32(V1 + 120); //+ 0x78
	EMU_Write32(V1 + 132,A1); //+ 0x84
	EMU_Write32(V1 + 116,A0); //+ 0x74
	ZZ_CLOCKCYCLES(6,0x8003F410);
ZZ_3EFAC_464:
	A0 = EMU_ReadU32(V1 + 160); //+ 0xA0
	A1 = EMU_ReadU32(V1 + 164); //+ 0xA4
	EMU_Write32(V1 + 144,A0); //+ 0x90
	A0 = EMU_ReadU32(V1 + 124); //+ 0x7C
	EMU_Write32(V1 + 148,A1); //+ 0x94
	EMU_Write32(V1 + 120,A0); //+ 0x78
	RA = 0x8003F430; //ZZ_3EFAC_484
	T5 = T6;
	ZZ_CLOCKCYCLES(8,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_484:
	GTE_SetDataRegister(0,T9);
	GTE_SetDataRegister(1,T8);
	T6 = T7;
	T7 = A0;
	GTE_Execute(1572865);
	EMU_Write32(V1 + 160,T9); //+ 0xA0
	EMU_Write32(V1 + 164,T8); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 124,T9); //+ 0x7C
	ZZ_CLOCKCYCLES(12,0x8003F30C);
	goto ZZ_3EFAC_360;
ZZ_3EFAC_4B4:
	T8 = 0x80040000;
	T8 += 22332;
	EMU_Write32(V1 + 304,T8); //+ 0x130
	ZZ_CLOCKCYCLES(4,0x8003F47C);
	goto ZZ_3EFAC_4D0;
ZZ_3EFAC_4C4:
	T8 = 0x80040000;
	T8 -= 6252;
	EMU_Write32(V1 + 304,T8); //+ 0x130
	ZZ_CLOCKCYCLES(3,0x8003F47C);
ZZ_3EFAC_4D0:
	EMU_Write32(V1 + 104,RA); //+ 0x68
	RA = 0x8003F488; //ZZ_3EFAC_4DC
	T8 = EMU_ReadU32(SP + 20); //+ 0x14
	ZZ_CLOCKCYCLES(3,0x80043A70);
	goto ZZ_43A70;
ZZ_3EFAC_4DC:
	RA = 0x8003F490; //ZZ_3EFAC_4E4
	T8 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(2,0x8004398C);
	goto ZZ_4398C;
ZZ_3EFAC_4E4:
	T9 = LO;
	EMU_Write32(V1 + 296,T9); //+ 0x128
	RA = 0x8003F4A0; //ZZ_3EFAC_4F4
	T9 = EMU_ReadU32(GP + 168); //+ 0xA8
	ZZ_CLOCKCYCLES(4,0x80043A24);
	goto ZZ_43A24;
ZZ_3EFAC_4F4:
	ZZ_JUMPREGISTER_BEGIN(T8);
	RA = 0x8003F4A8; //ZZ_3EFAC_4FC
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T8,8003F4A0)
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_4FC:
	if (T8)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x8003F4B8; //ZZ_3EFAC_50C
	ZZ_CLOCKCYCLES(4,0x800438F0);
	goto ZZ_438F0;
ZZ_3EFAC_50C:
	if (!T9)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x8003F4C8; //ZZ_3EFAC_51C
	EMU_Write32(V1 + 288,T0); //+ 0x120
	ZZ_CLOCKCYCLES(4,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_51C:
	GTE_SetDataRegister(0,T9);
	GTE_SetDataRegister(1,T8);
	EMU_Write32(V1 + 128,T9); //+ 0x80
	EMU_Write32(V1 + 132,T8); //+ 0x84
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 116,T9); //+ 0x74
	T0 = EMU_ReadU32(S2);
	RA = 0x8003F4F4; //ZZ_3EFAC_548
	T5 = A0;
	ZZ_CLOCKCYCLES(11,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_548:
	GTE_SetDataRegister(2,T9);
	GTE_SetDataRegister(3,T8);
	EMU_Write32(V1 + 144,T9); //+ 0x90
	EMU_Write32(V1 + 148,T8); //+ 0x94
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 120,T9); //+ 0x78
	T0 = EMU_ReadU32(S2 + 4); //+ 0x4
	RA = 0x8003F520; //ZZ_3EFAC_574
	T6 = A0;
	ZZ_CLOCKCYCLES(11,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_574:
	GTE_SetDataRegister(4,T9);
	GTE_SetDataRegister(5,T8);
	T7 = A0;
	T0 = EMU_ReadU32(V1 + 288); //+ 0x120
	GTE_Execute(2621488);
	EMU_Write32(V1 + 160,T9); //+ 0xA0
	EMU_Write32(V1 + 164,T8); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 124,T9); //+ 0x7C
	S2 = EMU_CheckedAdd(S2,8);
	ZZ_CLOCKCYCLES(12,0x8003F550);
ZZ_3EFAC_5A4:
	T8 = EMU_ReadU32(V1 + 304); //+ 0x130
	A0 = T0 << 23;
	if (!A0)
	{
		A2 = T0 & 0xFF;
		ZZ_CLOCKCYCLES(4,0x8003F5B0);
		goto ZZ_3EFAC_604;
	}
	A2 = T0 & 0xFF;
	if ((int32_t)A0 > 0)
	{
		A0 = A2 << 2;
		ZZ_CLOCKCYCLES(6,0x8003F5A4);
		goto ZZ_3EFAC_5F8;
	}
	ZZ_CLOCKCYCLES(5,0x8003F564);
ZZ_3EFAC_5B8:
	A0 = A2 << 2;
	A0 += S0;
	A2 = EMU_ReadU32(A0);
	A0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	A1 = A2 >> 26;
	A1 &= 0x1F;
	A0 >>= A1;
	A1 = A2 >> 19;
	A0 += A1;
	A1 = A2 >> 12;
	A1 &= 0x7F;
	A0 &= A1;
	A1 = A2 << 20;
	A2 += A0;
	if ((int32_t)A1 < 0)
	{
		A2 &= 0x7FF;
		ZZ_CLOCKCYCLES(16,0x8003F564);
		goto ZZ_3EFAC_5B8;
	}
	A2 &= 0x7FF;
	ZZ_CLOCKCYCLES(16,0x8003F5A4);
ZZ_3EFAC_5F8:
	A0 = A2 << 1;
	A2 += A0;
	A2 <<= 2;
	ZZ_CLOCKCYCLES(3,0x8003F5B0);
ZZ_3EFAC_604:
	ZZ_JUMPREGISTER_BEGIN(T8);
	RA = 0x8003F5B8; //ZZ_3EFAC_60C
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T8,8003F5B0)
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_60C:
	T0 = EMU_ReadU32(S2);
	S2 = EMU_CheckedAdd(S2,4);
	if ((int32_t)T0 < 0)
	{
		T9 = EMU_CheckedAdd(T0,1);
		ZZ_CLOCKCYCLES(4,0x8003F4B8);
		goto ZZ_3EFAC_50C;
	}
	T9 = EMU_CheckedAdd(T0,1);
	T9 = T0 >> 16;
	if (T9)
	{
		A0 = T0 << 1;
		ZZ_CLOCKCYCLES(7,0x8003F620);
		goto ZZ_3EFAC_674;
	}
	A0 = T0 << 1;
	T9 = T0 << 31;
	T8 = T0 >> 7;
	if ((int32_t)T9 < 0)
	{
		T8 &= 0x1FC;
		ZZ_CLOCKCYCLES(11,0x8003F5F0);
		goto ZZ_3EFAC_644;
	}
	T8 &= 0x1FC;
	T8 += S6;
	T6 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(14,0x8003F5F8);
	goto ZZ_3EFAC_64C;
ZZ_3EFAC_644:
	T8 += V1;
	T6 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8003F5F8);
ZZ_3EFAC_64C:
	T9 = T0 << 30;
	if ((int32_t)T9 < 0)
	{
		T8 = T0 & 0x1FC;
		ZZ_CLOCKCYCLES(3,0x8003F610);
		goto ZZ_3EFAC_664;
	}
	T8 = T0 & 0x1FC;
	T8 += S6;
	T7 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(6,0x8003F618);
	goto ZZ_3EFAC_66C;
ZZ_3EFAC_664:
	T8 += V1;
	T7 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8003F618);
ZZ_3EFAC_66C:
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x8003F5B8);
	goto ZZ_3EFAC_60C;
ZZ_3EFAC_674:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003F640);
		goto ZZ_3EFAC_694;
	}
	A0 = GTE_GetDataRegister(12);
	A1 = GTE_GetDataRegister(17);
	GTE_SetDataRegister(13,A0);
	GTE_SetDataRegister(18,A1);
	T6 = T5;
	ZZ_CLOCKCYCLES(8,0x8003F658);
	goto ZZ_3EFAC_6AC;
ZZ_3EFAC_694:
	A0 = EMU_ReadU32(V1 + 144); //+ 0x90
	A1 = EMU_ReadU32(V1 + 148); //+ 0x94
	EMU_Write32(V1 + 128,A0); //+ 0x80
	A0 = EMU_ReadU32(V1 + 120); //+ 0x78
	EMU_Write32(V1 + 132,A1); //+ 0x84
	EMU_Write32(V1 + 116,A0); //+ 0x74
	ZZ_CLOCKCYCLES(6,0x8003F658);
ZZ_3EFAC_6AC:
	A0 = EMU_ReadU32(V1 + 160); //+ 0xA0
	A1 = EMU_ReadU32(V1 + 164); //+ 0xA4
	EMU_Write32(V1 + 144,A0); //+ 0x90
	A0 = EMU_ReadU32(V1 + 124); //+ 0x7C
	EMU_Write32(V1 + 148,A1); //+ 0x94
	EMU_Write32(V1 + 120,A0); //+ 0x78
	RA = 0x8003F678; //ZZ_3EFAC_6CC
	T5 = T6;
	ZZ_CLOCKCYCLES(8,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_6CC:
	GTE_SetDataRegister(0,T9);
	GTE_SetDataRegister(1,T8);
	T6 = T7;
	T7 = A0;
	GTE_Execute(1572865);
	EMU_Write32(V1 + 160,T9); //+ 0xA0
	EMU_Write32(V1 + 164,T8); //+ 0xA4
	T8 = EMU_ReadU32(V1 + 296); //+ 0x128
	T9 = (int32_t)T9 >> 16;
	T9 = T8 - T9;
	EMU_Write32(V1 + 124,T9); //+ 0x7C
	ZZ_CLOCKCYCLES(12,0x8003F550);
	goto ZZ_3EFAC_5A4;
ZZ_3EFAC_6FC:
	EMU_Write32(V1 + 104,RA); //+ 0x68
	RA = 0x8003F6B4; //ZZ_3EFAC_708
	T8 = EMU_ReadU32(SP + 32); //+ 0x20
	ZZ_CLOCKCYCLES(3,0x8004398C);
	goto ZZ_4398C;
ZZ_3EFAC_708:
	RA = 0x8003F6BC; //ZZ_3EFAC_710
	T9 = EMU_ReadU32(GP + 168); //+ 0xA8
	ZZ_CLOCKCYCLES(2,0x80043A10);
	goto ZZ_43A10;
ZZ_3EFAC_710:
	ZZ_JUMPREGISTER_BEGIN(T8);
	RA = 0x8003F6C4; //ZZ_3EFAC_718
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T8,8003F6BC)
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_718:
	if (T8)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x8003F6D4; //ZZ_3EFAC_728
	ZZ_CLOCKCYCLES(4,0x800438F0);
	goto ZZ_438F0;
ZZ_3EFAC_728:
	if (!T9)
	{
		ZZ_CLOCKCYCLES(2,0x8003E784);
		goto ZZ_3DFAC_7D8;
	}
	RA = 0x8003F6E4; //ZZ_3EFAC_738
	EMU_Write32(V1 + 288,T0); //+ 0x120
	ZZ_CLOCKCYCLES(4,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_738:
	GTE_SetDataRegister(0,T9);
	GTE_SetDataRegister(1,T8);
	T0 = EMU_ReadU32(S2);
	RA = 0x8003F6F8; //ZZ_3EFAC_74C
	T5 = A0;
	ZZ_CLOCKCYCLES(5,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_74C:
	GTE_SetDataRegister(2,T9);
	GTE_SetDataRegister(3,T8);
	T0 = EMU_ReadU32(S2 + 4); //+ 0x4
	RA = 0x8003F70C; //ZZ_3EFAC_760
	T6 = A0;
	ZZ_CLOCKCYCLES(5,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_760:
	GTE_SetDataRegister(4,T9);
	GTE_SetDataRegister(5,T8);
	T7 = A0;
	T0 = EMU_ReadU32(V1 + 288); //+ 0x120
	GTE_Execute(2621488);
	S2 = EMU_CheckedAdd(S2,8);
	ZZ_CLOCKCYCLES(6,0x8003F724);
ZZ_3EFAC_778:
	A0 = T0 << 23;
	if (!A0)
	{
		A2 = T0 & 0xFF;
		ZZ_CLOCKCYCLES(3,0x8003F780);
		goto ZZ_3EFAC_7D4;
	}
	A2 = T0 & 0xFF;
	if ((int32_t)A0 > 0)
	{
		A0 = A2 << 2;
		ZZ_CLOCKCYCLES(5,0x8003F774);
		goto ZZ_3EFAC_7C8;
	}
	ZZ_CLOCKCYCLES(4,0x8003F734);
ZZ_3EFAC_788:
	A0 = A2 << 2;
	A0 += S0;
	A2 = EMU_ReadU32(A0);
	A0 = EMU_ReadU32(V1 + 28); //+ 0x1C
	A1 = A2 >> 26;
	A1 &= 0x1F;
	A0 >>= A1;
	A1 = A2 >> 19;
	A0 += A1;
	A1 = A2 >> 12;
	A1 &= 0x7F;
	A0 &= A1;
	A1 = A2 << 20;
	A2 += A0;
	if ((int32_t)A1 < 0)
	{
		A2 &= 0x7FF;
		ZZ_CLOCKCYCLES(16,0x8003F734);
		goto ZZ_3EFAC_788;
	}
	A2 &= 0x7FF;
	ZZ_CLOCKCYCLES(16,0x8003F774);
ZZ_3EFAC_7C8:
	A0 = A2 << 1;
	A2 += A0;
	A2 <<= 2;
	ZZ_CLOCKCYCLES(3,0x8003F780);
ZZ_3EFAC_7D4:
	T8 = A2 + S1;
	ZZ_JUMPREGISTER_BEGIN(S3);
	RA = 0x8003F78C; //ZZ_3EFAC_7E0
	EMU_Write32(V1 + 112,T8); //+ 0x70
	ZZ_CLOCKCYCLES_JR(3);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (S3,8003F784)
	ZZ_JUMPREGISTER_END();
ZZ_3EFAC_7E0:
	T0 = EMU_ReadU32(S2);
	S2 = EMU_CheckedAdd(S2,4);
	if ((int32_t)T0 < 0)
	{
		T9 = EMU_CheckedAdd(T0,1);
		ZZ_CLOCKCYCLES(4,0x8003F6D4);
		goto ZZ_3EFAC_728;
	}
	T9 = EMU_CheckedAdd(T0,1);
	T9 = T0 >> 16;
	if (T9)
	{
		A0 = T0 << 1;
		ZZ_CLOCKCYCLES(7,0x8003F7F4);
		goto ZZ_3EFAC_848;
	}
	A0 = T0 << 1;
	T9 = T0 << 31;
	T8 = T0 >> 7;
	if ((int32_t)T9 < 0)
	{
		T8 &= 0x1FC;
		ZZ_CLOCKCYCLES(11,0x8003F7C4);
		goto ZZ_3EFAC_818;
	}
	T8 &= 0x1FC;
	T8 += S6;
	T6 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(14,0x8003F7CC);
	goto ZZ_3EFAC_820;
ZZ_3EFAC_818:
	T8 += V1;
	T6 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8003F7CC);
ZZ_3EFAC_820:
	T9 = T0 << 30;
	if ((int32_t)T9 < 0)
	{
		T8 = T0 & 0x1FC;
		ZZ_CLOCKCYCLES(3,0x8003F7E4);
		goto ZZ_3EFAC_838;
	}
	T8 = T0 & 0x1FC;
	T8 += S6;
	T7 = EMU_ReadU32(T8);
	ZZ_CLOCKCYCLES(6,0x8003F7EC);
	goto ZZ_3EFAC_840;
ZZ_3EFAC_838:
	T8 += V1;
	T7 = EMU_ReadU32(T8 + 320); //+ 0x140
	ZZ_CLOCKCYCLES(2,0x8003F7EC);
ZZ_3EFAC_840:
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x8003F78C);
	goto ZZ_3EFAC_7E0;
ZZ_3EFAC_848:
	if ((int32_t)A0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8003F810);
		goto ZZ_3EFAC_864;
	}
	A0 = GTE_GetDataRegister(12);
	A1 = GTE_GetDataRegister(17);
	GTE_SetDataRegister(13,A0);
	GTE_SetDataRegister(18,A1);
	T6 = T5;
	ZZ_CLOCKCYCLES(7,0x8003F810);
ZZ_3EFAC_864:
	RA = 0x8003F818; //ZZ_3EFAC_86C
	T5 = T6;
	ZZ_CLOCKCYCLES(2,0x8003EFAC);
	goto ZZ_3EFAC;
ZZ_3EFAC_86C:
	GTE_SetDataRegister(0,T9);
	GTE_SetDataRegister(1,T8);
	T6 = T7;
	T7 = A0;
	GTE_Execute(1572865);
	ZZ_CLOCKCYCLES(7,0x8003F724);
	goto ZZ_3EFAC_778;
#endif
ZZ_MARK_TARGET(0x8003EFAC,ZZ_3EFAC);
ZZ_MARK(0x8003EFB0);
ZZ_MARK(0x8003EFB4);
ZZ_MARK(0x8003EFB8);
ZZ_MARK(0x8003EFBC);
ZZ_MARK(0x8003EFC0);
ZZ_MARK(0x8003EFC4);
ZZ_MARK(0x8003EFC8);
ZZ_MARK_TARGET(0x8003EFCC,ZZ_3EFAC_20);
ZZ_MARK(0x8003EFD0);
ZZ_MARK(0x8003EFD4);
ZZ_MARK(0x8003EFD8);
ZZ_MARK(0x8003EFDC);
ZZ_MARK(0x8003EFE0);
ZZ_MARK(0x8003EFE4);
ZZ_MARK(0x8003EFE8);
ZZ_MARK(0x8003EFEC);
ZZ_MARK(0x8003EFF0);
ZZ_MARK_TARGET(0x8003EFF4,ZZ_3EFAC_48);
ZZ_MARK(0x8003EFF8);
ZZ_MARK(0x8003EFFC);
ZZ_MARK(0x8003F000);
ZZ_MARK(0x8003F004);
ZZ_MARK(0x8003F008);
ZZ_MARK(0x8003F00C);
ZZ_MARK(0x8003F010);
ZZ_MARK(0x8003F014);
ZZ_MARK(0x8003F018);
ZZ_MARK(0x8003F01C);
ZZ_MARK(0x8003F020);
ZZ_MARK(0x8003F024);
ZZ_MARK(0x8003F028);
ZZ_MARK(0x8003F02C);
ZZ_MARK(0x8003F030);
ZZ_MARK(0x8003F034);
ZZ_MARK(0x8003F038);
ZZ_MARK(0x8003F03C);
ZZ_MARK(0x8003F040);
ZZ_MARK(0x8003F044);
ZZ_MARK(0x8003F048);
ZZ_MARK(0x8003F04C);
ZZ_MARK(0x8003F050);
ZZ_MARK(0x8003F054);
ZZ_MARK(0x8003F058);
ZZ_MARK_TARGET(0x8003F05C,ZZ_3EFAC_B0);
ZZ_MARK(0x8003F060);
ZZ_MARK(0x8003F064);
ZZ_MARK(0x8003F068);
ZZ_MARK(0x8003F06C);
ZZ_MARK(0x8003F070);
ZZ_MARK(0x8003F074);
ZZ_MARK(0x8003F078);
ZZ_MARK(0x8003F07C);
ZZ_MARK(0x8003F080);
ZZ_MARK(0x8003F084);
ZZ_MARK_TARGET(0x8003F088,ZZ_3EFAC_DC);
ZZ_MARK(0x8003F08C);
ZZ_MARK(0x8003F090);
ZZ_MARK(0x8003F094);
ZZ_MARK(0x8003F098);
ZZ_MARK(0x8003F09C);
ZZ_MARK(0x8003F0A0);
ZZ_MARK(0x8003F0A4);
ZZ_MARK(0x8003F0A8);
ZZ_MARK(0x8003F0AC);
ZZ_MARK(0x8003F0B0);
ZZ_MARK(0x8003F0B4);
ZZ_MARK(0x8003F0B8);
ZZ_MARK(0x8003F0BC);
ZZ_MARK(0x8003F0C0);
ZZ_MARK(0x8003F0C4);
ZZ_MARK(0x8003F0C8);
ZZ_MARK(0x8003F0CC);
ZZ_MARK(0x8003F0D0);
ZZ_MARK(0x8003F0D4);
ZZ_MARK(0x8003F0D8);
ZZ_MARK(0x8003F0DC);
ZZ_MARK(0x8003F0E0);
ZZ_MARK(0x8003F0E4);
ZZ_MARK(0x8003F0E8);
ZZ_MARK(0x8003F0EC);
ZZ_MARK_TARGET(0x8003F0F0,ZZ_3EFAC_144);
ZZ_MARK(0x8003F0F4);
ZZ_MARK(0x8003F0F8);
ZZ_MARK(0x8003F0FC);
ZZ_MARK(0x8003F100);
ZZ_MARK(0x8003F104);
ZZ_MARK(0x8003F108);
ZZ_MARK(0x8003F10C);
ZZ_MARK(0x8003F110);
ZZ_MARK(0x8003F114);
ZZ_MARK(0x8003F118);
ZZ_MARK_TARGET(0x8003F11C,ZZ_3EFAC_170);
ZZ_MARK(0x8003F120);
ZZ_MARK(0x8003F124);
ZZ_MARK(0x8003F128);
ZZ_MARK(0x8003F12C);
ZZ_MARK(0x8003F130);
ZZ_MARK(0x8003F134);
ZZ_MARK(0x8003F138);
ZZ_MARK(0x8003F13C);
ZZ_MARK(0x8003F140);
ZZ_MARK(0x8003F144);
ZZ_MARK(0x8003F148);
ZZ_MARK(0x8003F14C);
ZZ_MARK(0x8003F150);
ZZ_MARK(0x8003F154);
ZZ_MARK(0x8003F158);
ZZ_MARK(0x8003F15C);
ZZ_MARK(0x8003F160);
ZZ_MARK(0x8003F164);
ZZ_MARK(0x8003F168);
ZZ_MARK(0x8003F16C);
ZZ_MARK(0x8003F170);
ZZ_MARK(0x8003F174);
ZZ_MARK(0x8003F178);
ZZ_MARK(0x8003F17C);
ZZ_MARK_TARGET(0x8003F180,ZZ_3EFAC_1D4);
ZZ_MARK(0x8003F184);
ZZ_MARK(0x8003F188);
ZZ_MARK(0x8003F18C);
ZZ_MARK(0x8003F190);
ZZ_MARK(0x8003F194);
ZZ_MARK(0x8003F198);
ZZ_MARK(0x8003F19C);
ZZ_MARK(0x8003F1A0);
ZZ_MARK(0x8003F1A4);
ZZ_MARK(0x8003F1A8);
ZZ_MARK_TARGET(0x8003F1AC,ZZ_3EFAC_200);
ZZ_MARK(0x8003F1B0);
ZZ_MARK(0x8003F1B4);
ZZ_MARK(0x8003F1B8);
ZZ_MARK_TARGET(0x8003F1BC,ZZ_3EFAC_210);
ZZ_MARK(0x8003F1C0);
ZZ_MARK(0x8003F1C4);
ZZ_MARK(0x8003F1C8);
ZZ_MARK(0x8003F1CC);
ZZ_MARK(0x8003F1D0);
ZZ_MARK(0x8003F1D4);
ZZ_MARK(0x8003F1D8);
ZZ_MARK(0x8003F1DC);
ZZ_MARK(0x8003F1E0);
ZZ_MARK(0x8003F1E4);
ZZ_MARK(0x8003F1E8);
ZZ_MARK(0x8003F1EC);
ZZ_MARK(0x8003F1F0);
ZZ_MARK(0x8003F1F4);
ZZ_MARK_TARGET(0x8003F1F8,ZZ_3EFAC_24C);
ZZ_MARK(0x8003F1FC);
ZZ_MARK(0x8003F200);
ZZ_MARK(0x8003F204);
ZZ_MARK(0x8003F208);
ZZ_MARK(0x8003F20C);
ZZ_MARK(0x8003F210);
ZZ_MARK_TARGET(0x8003F214,ZZ_3EFAC_268);
ZZ_MARK(0x8003F218);
ZZ_MARK(0x8003F21C);
ZZ_MARK_TARGET(0x8003F224,ZZ_3EFAC_278);
ZZ_MARK(0x8003F228);
ZZ_MARK_TARGET(0x8003F22C,ZZ_3EFAC_280);
ZZ_MARK(0x8003F230);
ZZ_MARK_TARGET(0x8003F234,ZZ_3EFAC_288);
ZZ_MARK(0x8003F238);
ZZ_MARK_TARGET(0x8003F23C,ZZ_3EFAC_290);
ZZ_MARK(0x8003F240);
ZZ_MARK(0x8003F244);
ZZ_MARK(0x8003F248);
ZZ_MARK(0x8003F24C);
ZZ_MARK(0x8003F250);
ZZ_MARK(0x8003F254);
ZZ_MARK(0x8003F258);
ZZ_MARK_TARGET(0x8003F25C,ZZ_3EFAC_2B0);
ZZ_MARK(0x8003F260);
ZZ_MARK_TARGET(0x8003F264,ZZ_3EFAC_2B8);
ZZ_MARK(0x8003F268);
ZZ_MARK(0x8003F26C);
ZZ_MARK(0x8003F270);
ZZ_MARK_TARGET(0x8003F274,ZZ_3EFAC_2C8);
ZZ_MARK(0x8003F278);
ZZ_MARK(0x8003F27C);
ZZ_MARK(0x8003F280);
ZZ_MARK_TARGET(0x8003F284,ZZ_3EFAC_2D8);
ZZ_MARK(0x8003F288);
ZZ_MARK(0x8003F28C);
ZZ_MARK(0x8003F290);
ZZ_MARK(0x8003F294);
ZZ_MARK(0x8003F298);
ZZ_MARK(0x8003F29C);
ZZ_MARK(0x8003F2A0);
ZZ_MARK(0x8003F2A4);
ZZ_MARK(0x8003F2A8);
ZZ_MARK(0x8003F2AC);
ZZ_MARK_TARGET(0x8003F2B0,ZZ_3EFAC_304);
ZZ_MARK(0x8003F2B4);
ZZ_MARK(0x8003F2B8);
ZZ_MARK(0x8003F2BC);
ZZ_MARK(0x8003F2C0);
ZZ_MARK(0x8003F2C4);
ZZ_MARK(0x8003F2C8);
ZZ_MARK(0x8003F2CC);
ZZ_MARK(0x8003F2D0);
ZZ_MARK(0x8003F2D4);
ZZ_MARK(0x8003F2D8);
ZZ_MARK_TARGET(0x8003F2DC,ZZ_3EFAC_330);
ZZ_MARK(0x8003F2E0);
ZZ_MARK(0x8003F2E4);
ZZ_MARK(0x8003F2E8);
ZZ_MARK(0x8003F2EC);
ZZ_MARK(0x8003F2F0);
ZZ_MARK(0x8003F2F4);
ZZ_MARK(0x8003F2F8);
ZZ_MARK(0x8003F2FC);
ZZ_MARK(0x8003F300);
ZZ_MARK(0x8003F304);
ZZ_MARK(0x8003F308);
ZZ_MARK_TARGET(0x8003F30C,ZZ_3EFAC_360);
ZZ_MARK(0x8003F310);
ZZ_MARK(0x8003F314);
ZZ_MARK(0x8003F318);
ZZ_MARK_TARGET(0x8003F31C,ZZ_3EFAC_370);
ZZ_MARK(0x8003F320);
ZZ_MARK(0x8003F324);
ZZ_MARK(0x8003F328);
ZZ_MARK(0x8003F32C);
ZZ_MARK(0x8003F330);
ZZ_MARK(0x8003F334);
ZZ_MARK(0x8003F338);
ZZ_MARK(0x8003F33C);
ZZ_MARK(0x8003F340);
ZZ_MARK(0x8003F344);
ZZ_MARK(0x8003F348);
ZZ_MARK(0x8003F34C);
ZZ_MARK(0x8003F350);
ZZ_MARK(0x8003F354);
ZZ_MARK(0x8003F358);
ZZ_MARK_TARGET(0x8003F35C,ZZ_3EFAC_3B0);
ZZ_MARK(0x8003F360);
ZZ_MARK(0x8003F364);
ZZ_MARK_TARGET(0x8003F368,ZZ_3EFAC_3BC);
ZZ_MARK(0x8003F36C);
ZZ_MARK_TARGET(0x8003F370,ZZ_3EFAC_3C4);
ZZ_MARK(0x8003F374);
ZZ_MARK(0x8003F378);
ZZ_MARK(0x8003F37C);
ZZ_MARK(0x8003F380);
ZZ_MARK(0x8003F384);
ZZ_MARK(0x8003F388);
ZZ_MARK(0x8003F38C);
ZZ_MARK(0x8003F390);
ZZ_MARK(0x8003F394);
ZZ_MARK(0x8003F398);
ZZ_MARK(0x8003F39C);
ZZ_MARK(0x8003F3A0);
ZZ_MARK(0x8003F3A4);
ZZ_MARK_TARGET(0x8003F3A8,ZZ_3EFAC_3FC);
ZZ_MARK(0x8003F3AC);
ZZ_MARK_TARGET(0x8003F3B0,ZZ_3EFAC_404);
ZZ_MARK(0x8003F3B4);
ZZ_MARK(0x8003F3B8);
ZZ_MARK(0x8003F3BC);
ZZ_MARK(0x8003F3C0);
ZZ_MARK(0x8003F3C4);
ZZ_MARK_TARGET(0x8003F3C8,ZZ_3EFAC_41C);
ZZ_MARK(0x8003F3CC);
ZZ_MARK_TARGET(0x8003F3D0,ZZ_3EFAC_424);
ZZ_MARK(0x8003F3D4);
ZZ_MARK_TARGET(0x8003F3D8,ZZ_3EFAC_42C);
ZZ_MARK(0x8003F3DC);
ZZ_MARK(0x8003F3E0);
ZZ_MARK(0x8003F3E4);
ZZ_MARK(0x8003F3E8);
ZZ_MARK(0x8003F3EC);
ZZ_MARK(0x8003F3F0);
ZZ_MARK(0x8003F3F4);
ZZ_MARK_TARGET(0x8003F3F8,ZZ_3EFAC_44C);
ZZ_MARK(0x8003F3FC);
ZZ_MARK(0x8003F400);
ZZ_MARK(0x8003F404);
ZZ_MARK(0x8003F408);
ZZ_MARK(0x8003F40C);
ZZ_MARK_TARGET(0x8003F410,ZZ_3EFAC_464);
ZZ_MARK(0x8003F414);
ZZ_MARK(0x8003F418);
ZZ_MARK(0x8003F41C);
ZZ_MARK(0x8003F420);
ZZ_MARK(0x8003F424);
ZZ_MARK(0x8003F428);
ZZ_MARK(0x8003F42C);
ZZ_MARK_TARGET(0x8003F430,ZZ_3EFAC_484);
ZZ_MARK(0x8003F434);
ZZ_MARK(0x8003F438);
ZZ_MARK(0x8003F43C);
ZZ_MARK(0x8003F440);
ZZ_MARK(0x8003F444);
ZZ_MARK(0x8003F448);
ZZ_MARK(0x8003F44C);
ZZ_MARK(0x8003F450);
ZZ_MARK(0x8003F454);
ZZ_MARK(0x8003F458);
ZZ_MARK(0x8003F45C);
ZZ_MARK_TARGET(0x8003F460,ZZ_3EFAC_4B4);
ZZ_MARK(0x8003F464);
ZZ_MARK(0x8003F468);
ZZ_MARK(0x8003F46C);
ZZ_MARK_TARGET(0x8003F470,ZZ_3EFAC_4C4);
ZZ_MARK(0x8003F474);
ZZ_MARK(0x8003F478);
ZZ_MARK_TARGET(0x8003F47C,ZZ_3EFAC_4D0);
ZZ_MARK(0x8003F480);
ZZ_MARK(0x8003F484);
ZZ_MARK_TARGET(0x8003F488,ZZ_3EFAC_4DC);
ZZ_MARK(0x8003F48C);
ZZ_MARK_TARGET(0x8003F490,ZZ_3EFAC_4E4);
ZZ_MARK(0x8003F494);
ZZ_MARK(0x8003F498);
ZZ_MARK(0x8003F49C);
ZZ_MARK_TARGET(0x8003F4A0,ZZ_3EFAC_4F4);
ZZ_MARK(0x8003F4A4);
ZZ_MARK_TARGET(0x8003F4A8,ZZ_3EFAC_4FC);
ZZ_MARK(0x8003F4AC);
ZZ_MARK(0x8003F4B0);
ZZ_MARK(0x8003F4B4);
ZZ_MARK_TARGET(0x8003F4B8,ZZ_3EFAC_50C);
ZZ_MARK(0x8003F4BC);
ZZ_MARK(0x8003F4C0);
ZZ_MARK(0x8003F4C4);
ZZ_MARK_TARGET(0x8003F4C8,ZZ_3EFAC_51C);
ZZ_MARK(0x8003F4CC);
ZZ_MARK(0x8003F4D0);
ZZ_MARK(0x8003F4D4);
ZZ_MARK(0x8003F4D8);
ZZ_MARK(0x8003F4DC);
ZZ_MARK(0x8003F4E0);
ZZ_MARK(0x8003F4E4);
ZZ_MARK(0x8003F4E8);
ZZ_MARK(0x8003F4EC);
ZZ_MARK(0x8003F4F0);
ZZ_MARK_TARGET(0x8003F4F4,ZZ_3EFAC_548);
ZZ_MARK(0x8003F4F8);
ZZ_MARK(0x8003F4FC);
ZZ_MARK(0x8003F500);
ZZ_MARK(0x8003F504);
ZZ_MARK(0x8003F508);
ZZ_MARK(0x8003F50C);
ZZ_MARK(0x8003F510);
ZZ_MARK(0x8003F514);
ZZ_MARK(0x8003F518);
ZZ_MARK(0x8003F51C);
ZZ_MARK_TARGET(0x8003F520,ZZ_3EFAC_574);
ZZ_MARK(0x8003F524);
ZZ_MARK(0x8003F528);
ZZ_MARK(0x8003F52C);
ZZ_MARK(0x8003F530);
ZZ_MARK(0x8003F534);
ZZ_MARK(0x8003F538);
ZZ_MARK(0x8003F53C);
ZZ_MARK(0x8003F540);
ZZ_MARK(0x8003F544);
ZZ_MARK(0x8003F548);
ZZ_MARK(0x8003F54C);
ZZ_MARK_TARGET(0x8003F550,ZZ_3EFAC_5A4);
ZZ_MARK(0x8003F554);
ZZ_MARK(0x8003F558);
ZZ_MARK(0x8003F55C);
ZZ_MARK(0x8003F560);
ZZ_MARK_TARGET(0x8003F564,ZZ_3EFAC_5B8);
ZZ_MARK(0x8003F568);
ZZ_MARK(0x8003F56C);
ZZ_MARK(0x8003F570);
ZZ_MARK(0x8003F574);
ZZ_MARK(0x8003F578);
ZZ_MARK(0x8003F57C);
ZZ_MARK(0x8003F580);
ZZ_MARK(0x8003F584);
ZZ_MARK(0x8003F588);
ZZ_MARK(0x8003F58C);
ZZ_MARK(0x8003F590);
ZZ_MARK(0x8003F594);
ZZ_MARK(0x8003F598);
ZZ_MARK(0x8003F59C);
ZZ_MARK(0x8003F5A0);
ZZ_MARK_TARGET(0x8003F5A4,ZZ_3EFAC_5F8);
ZZ_MARK(0x8003F5A8);
ZZ_MARK(0x8003F5AC);
ZZ_MARK_TARGET(0x8003F5B0,ZZ_3EFAC_604);
ZZ_MARK(0x8003F5B4);
ZZ_MARK_TARGET(0x8003F5B8,ZZ_3EFAC_60C);
ZZ_MARK(0x8003F5BC);
ZZ_MARK(0x8003F5C0);
ZZ_MARK(0x8003F5C4);
ZZ_MARK(0x8003F5C8);
ZZ_MARK(0x8003F5CC);
ZZ_MARK(0x8003F5D0);
ZZ_MARK(0x8003F5D4);
ZZ_MARK(0x8003F5D8);
ZZ_MARK(0x8003F5DC);
ZZ_MARK(0x8003F5E0);
ZZ_MARK(0x8003F5E4);
ZZ_MARK(0x8003F5E8);
ZZ_MARK(0x8003F5EC);
ZZ_MARK_TARGET(0x8003F5F0,ZZ_3EFAC_644);
ZZ_MARK(0x8003F5F4);
ZZ_MARK_TARGET(0x8003F5F8,ZZ_3EFAC_64C);
ZZ_MARK(0x8003F5FC);
ZZ_MARK(0x8003F600);
ZZ_MARK(0x8003F604);
ZZ_MARK(0x8003F608);
ZZ_MARK(0x8003F60C);
ZZ_MARK_TARGET(0x8003F610,ZZ_3EFAC_664);
ZZ_MARK(0x8003F614);
ZZ_MARK_TARGET(0x8003F618,ZZ_3EFAC_66C);
ZZ_MARK(0x8003F61C);
ZZ_MARK_TARGET(0x8003F620,ZZ_3EFAC_674);
ZZ_MARK(0x8003F624);
ZZ_MARK(0x8003F628);
ZZ_MARK(0x8003F62C);
ZZ_MARK(0x8003F630);
ZZ_MARK(0x8003F634);
ZZ_MARK(0x8003F638);
ZZ_MARK(0x8003F63C);
ZZ_MARK_TARGET(0x8003F640,ZZ_3EFAC_694);
ZZ_MARK(0x8003F644);
ZZ_MARK(0x8003F648);
ZZ_MARK(0x8003F64C);
ZZ_MARK(0x8003F650);
ZZ_MARK(0x8003F654);
ZZ_MARK_TARGET(0x8003F658,ZZ_3EFAC_6AC);
ZZ_MARK(0x8003F65C);
ZZ_MARK(0x8003F660);
ZZ_MARK(0x8003F664);
ZZ_MARK(0x8003F668);
ZZ_MARK(0x8003F66C);
ZZ_MARK(0x8003F670);
ZZ_MARK(0x8003F674);
ZZ_MARK_TARGET(0x8003F678,ZZ_3EFAC_6CC);
ZZ_MARK(0x8003F67C);
ZZ_MARK(0x8003F680);
ZZ_MARK(0x8003F684);
ZZ_MARK(0x8003F688);
ZZ_MARK(0x8003F68C);
ZZ_MARK(0x8003F690);
ZZ_MARK(0x8003F694);
ZZ_MARK(0x8003F698);
ZZ_MARK(0x8003F69C);
ZZ_MARK(0x8003F6A0);
ZZ_MARK(0x8003F6A4);
ZZ_MARK_TARGET(0x8003F6A8,ZZ_3EFAC_6FC);
ZZ_MARK(0x8003F6AC);
ZZ_MARK(0x8003F6B0);
ZZ_MARK_TARGET(0x8003F6B4,ZZ_3EFAC_708);
ZZ_MARK(0x8003F6B8);
ZZ_MARK_TARGET(0x8003F6BC,ZZ_3EFAC_710);
ZZ_MARK(0x8003F6C0);
ZZ_MARK_TARGET(0x8003F6C4,ZZ_3EFAC_718);
ZZ_MARK(0x8003F6C8);
ZZ_MARK(0x8003F6CC);
ZZ_MARK(0x8003F6D0);
ZZ_MARK_TARGET(0x8003F6D4,ZZ_3EFAC_728);
ZZ_MARK(0x8003F6D8);
ZZ_MARK(0x8003F6DC);
ZZ_MARK(0x8003F6E0);
ZZ_MARK_TARGET(0x8003F6E4,ZZ_3EFAC_738);
ZZ_MARK(0x8003F6E8);
ZZ_MARK(0x8003F6EC);
ZZ_MARK(0x8003F6F0);
ZZ_MARK(0x8003F6F4);
ZZ_MARK_TARGET(0x8003F6F8,ZZ_3EFAC_74C);
ZZ_MARK(0x8003F6FC);
ZZ_MARK(0x8003F700);
ZZ_MARK(0x8003F704);
ZZ_MARK(0x8003F708);
ZZ_MARK_TARGET(0x8003F70C,ZZ_3EFAC_760);
ZZ_MARK(0x8003F710);
ZZ_MARK(0x8003F714);
ZZ_MARK(0x8003F718);
ZZ_MARK(0x8003F71C);
ZZ_MARK(0x8003F720);
ZZ_MARK_TARGET(0x8003F724,ZZ_3EFAC_778);
ZZ_MARK(0x8003F728);
ZZ_MARK(0x8003F72C);
ZZ_MARK(0x8003F730);
ZZ_MARK_TARGET(0x8003F734,ZZ_3EFAC_788);
ZZ_MARK(0x8003F738);
ZZ_MARK(0x8003F73C);
ZZ_MARK(0x8003F740);
ZZ_MARK(0x8003F744);
ZZ_MARK(0x8003F748);
ZZ_MARK(0x8003F74C);
ZZ_MARK(0x8003F750);
ZZ_MARK(0x8003F754);
ZZ_MARK(0x8003F758);
ZZ_MARK(0x8003F75C);
ZZ_MARK(0x8003F760);
ZZ_MARK(0x8003F764);
ZZ_MARK(0x8003F768);
ZZ_MARK(0x8003F76C);
ZZ_MARK(0x8003F770);
ZZ_MARK_TARGET(0x8003F774,ZZ_3EFAC_7C8);
ZZ_MARK(0x8003F778);
ZZ_MARK(0x8003F77C);
ZZ_MARK_TARGET(0x8003F780,ZZ_3EFAC_7D4);
ZZ_MARK(0x8003F784);
ZZ_MARK(0x8003F788);
ZZ_MARK_TARGET(0x8003F78C,ZZ_3EFAC_7E0);
ZZ_MARK(0x8003F790);
ZZ_MARK(0x8003F794);
ZZ_MARK(0x8003F798);
ZZ_MARK(0x8003F79C);
ZZ_MARK(0x8003F7A0);
ZZ_MARK(0x8003F7A4);
ZZ_MARK(0x8003F7A8);
ZZ_MARK(0x8003F7AC);
ZZ_MARK(0x8003F7B0);
ZZ_MARK(0x8003F7B4);
ZZ_MARK(0x8003F7B8);
ZZ_MARK(0x8003F7BC);
ZZ_MARK(0x8003F7C0);
ZZ_MARK_TARGET(0x8003F7C4,ZZ_3EFAC_818);
ZZ_MARK(0x8003F7C8);
ZZ_MARK_TARGET(0x8003F7CC,ZZ_3EFAC_820);
ZZ_MARK(0x8003F7D0);
ZZ_MARK(0x8003F7D4);
ZZ_MARK(0x8003F7D8);
ZZ_MARK(0x8003F7DC);
ZZ_MARK(0x8003F7E0);
ZZ_MARK_TARGET(0x8003F7E4,ZZ_3EFAC_838);
ZZ_MARK(0x8003F7E8);
ZZ_MARK_TARGET(0x8003F7EC,ZZ_3EFAC_840);
ZZ_MARK(0x8003F7F0);
ZZ_MARK_TARGET(0x8003F7F4,ZZ_3EFAC_848);
ZZ_MARK(0x8003F7F8);
ZZ_MARK(0x8003F7FC);
ZZ_MARK(0x8003F800);
ZZ_MARK(0x8003F804);
ZZ_MARK(0x8003F808);
ZZ_MARK(0x8003F80C);
ZZ_MARK_TARGET(0x8003F810,ZZ_3EFAC_864);
ZZ_MARK(0x8003F814);
ZZ_MARK_TARGET(0x8003F818,ZZ_3EFAC_86C);
ZZ_MARK(0x8003F81C);
ZZ_MARK(0x8003F820);
ZZ_MARK(0x8003F824);
ZZ_MARK(0x8003F828);
ZZ_MARK(0x8003F82C);
ZZ_MARK(0x8003F830);
