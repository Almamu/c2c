#ifdef ZZ_INCLUDE_CODE
ZZ_4E964:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,RA); //+ 0x14
	RA = 0x8004E97C; //ZZ_4E964_18
	A0 = R0;
	ZZ_CLOCKCYCLES(6,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E964_18:
	AT = 0x80060000;
	EMU_Write32(AT - 8004,R0); //+ 0xFFFFE0BC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	AT = 0x80060000;
	EMU_Write32(AT - 7992,V0); //+ 0xFFFFE0C8
	V0 = 1;
	AT = 0x80060000;
	EMU_Write32(AT - 8008,V1); //+ 0xFFFFE0B8
	V1 = S0 & 0x7;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 2;
		ZZ_CLOCKCYCLES(12,0x8004EA3C);
		goto ZZ_4E964_D8;
	}
	V0 = (int32_t)V1 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(14,0x8004E9C4);
		goto ZZ_4E964_60;
	}
	if (!V1)
	{
		ZZ_CLOCKCYCLES(16,0x8004E9D8);
		goto ZZ_4E964_74;
	}
	ZZ_CLOCKCYCLES(18,0x8004EA88);
	goto ZZ_4E964_124;
ZZ_4E964_60:
	V0 = 3;
	if (V1 == V0)
	{
		V0 = 5;
		ZZ_CLOCKCYCLES(3,0x8004EA3C);
		goto ZZ_4E964_D8;
	}
	V0 = 5;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004EA88);
		goto ZZ_4E964_124;
	}
	ZZ_CLOCKCYCLES(5,0x8004E9D8);
ZZ_4E964_74:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8044); //+ 0xFFFFE094
	V0 = 1025;
	EMU_Write32(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8028); //+ 0xFFFFE0A4
	A0 = 0x80060000;
	A0 += 360;
	V0 = EMU_ReadU32(V1);
	A1 = R0;
	V0 |= 0x800;
	EMU_Write32(V1,V0);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8056); //+ 0xFFFFE088
	A2 = 256;
	EMU_Write32(V0,R0);
	RA = 0x8004EA20; //ZZ_4E964_BC
	ZZ_CLOCKCYCLES(18,0x8004EE84);
	goto ZZ_4EE84;
ZZ_4E964_BC:
	A0 = 0x80070000;
	A0 -= 25516;
	A1 = R0;
	RA = 0x8004EA34; //ZZ_4E964_D0
	A2 = 6144;
	ZZ_CLOCKCYCLES(5,0x8004EE84);
	goto ZZ_4EE84;
ZZ_4E964_D0:
	ZZ_CLOCKCYCLES(2,0x8004EA88);
	goto ZZ_4E964_124;
ZZ_4E964_D8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8044); //+ 0xFFFFE094
	V0 = 1025;
	EMU_Write32(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8028); //+ 0xFFFFE0A4
	V0 = EMU_ReadU32(V1);
	V0 |= 0x800;
	EMU_Write32(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8056); //+ 0xFFFFE088
	V0 = 0x2000000;
	EMU_Write32(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8056); //+ 0xFFFFE088
	V0 = 0x1000000;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(19,0x8004EA88);
ZZ_4E964_124:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 7992); //+ 0xFFFFE0C8
	RA = 0x8004EA98; //ZZ_4E964_134
	ZZ_CLOCKCYCLES(4,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E964_134:
	V0 = S0 & 0x7;
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(3,0x8004EAAC);
		goto ZZ_4E964_148;
	}
	V0 = R0;
	RA = 0x8004EAAC; //ZZ_4E964_148
	A0 = S0;
	ZZ_CLOCKCYCLES(5,0x8004EDA8);
	goto ZZ_4EDA8;
ZZ_4E964_148:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8004BECC,ZZ_4BE1C_B0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004E964,ZZ_4E964);
ZZ_MARK(0x8004E968);
ZZ_MARK(0x8004E96C);
ZZ_MARK(0x8004E970);
ZZ_MARK(0x8004E974);
ZZ_MARK(0x8004E978);
ZZ_MARK_TARGET(0x8004E97C,ZZ_4E964_18);
ZZ_MARK(0x8004E980);
ZZ_MARK(0x8004E984);
ZZ_MARK(0x8004E988);
ZZ_MARK(0x8004E98C);
ZZ_MARK(0x8004E990);
ZZ_MARK(0x8004E994);
ZZ_MARK(0x8004E998);
ZZ_MARK(0x8004E99C);
ZZ_MARK(0x8004E9A0);
ZZ_MARK(0x8004E9A4);
ZZ_MARK(0x8004E9A8);
ZZ_MARK(0x8004E9AC);
ZZ_MARK(0x8004E9B0);
ZZ_MARK(0x8004E9B4);
ZZ_MARK(0x8004E9B8);
ZZ_MARK(0x8004E9BC);
ZZ_MARK(0x8004E9C0);
ZZ_MARK_TARGET(0x8004E9C4,ZZ_4E964_60);
ZZ_MARK(0x8004E9C8);
ZZ_MARK(0x8004E9CC);
ZZ_MARK(0x8004E9D0);
ZZ_MARK(0x8004E9D4);
ZZ_MARK_TARGET(0x8004E9D8,ZZ_4E964_74);
ZZ_MARK(0x8004E9DC);
ZZ_MARK(0x8004E9E0);
ZZ_MARK(0x8004E9E4);
ZZ_MARK(0x8004E9E8);
ZZ_MARK(0x8004E9EC);
ZZ_MARK(0x8004E9F0);
ZZ_MARK(0x8004E9F4);
ZZ_MARK(0x8004E9F8);
ZZ_MARK(0x8004E9FC);
ZZ_MARK(0x8004EA00);
ZZ_MARK(0x8004EA04);
ZZ_MARK(0x8004EA08);
ZZ_MARK(0x8004EA0C);
ZZ_MARK(0x8004EA10);
ZZ_MARK(0x8004EA14);
ZZ_MARK(0x8004EA18);
ZZ_MARK(0x8004EA1C);
ZZ_MARK_TARGET(0x8004EA20,ZZ_4E964_BC);
ZZ_MARK(0x8004EA24);
ZZ_MARK(0x8004EA28);
ZZ_MARK(0x8004EA2C);
ZZ_MARK(0x8004EA30);
ZZ_MARK_TARGET(0x8004EA34,ZZ_4E964_D0);
ZZ_MARK(0x8004EA38);
ZZ_MARK_TARGET(0x8004EA3C,ZZ_4E964_D8);
ZZ_MARK(0x8004EA40);
ZZ_MARK(0x8004EA44);
ZZ_MARK(0x8004EA48);
ZZ_MARK(0x8004EA4C);
ZZ_MARK(0x8004EA50);
ZZ_MARK(0x8004EA54);
ZZ_MARK(0x8004EA58);
ZZ_MARK(0x8004EA5C);
ZZ_MARK(0x8004EA60);
ZZ_MARK(0x8004EA64);
ZZ_MARK(0x8004EA68);
ZZ_MARK(0x8004EA6C);
ZZ_MARK(0x8004EA70);
ZZ_MARK(0x8004EA74);
ZZ_MARK(0x8004EA78);
ZZ_MARK(0x8004EA7C);
ZZ_MARK(0x8004EA80);
ZZ_MARK(0x8004EA84);
ZZ_MARK_TARGET(0x8004EA88,ZZ_4E964_124);
ZZ_MARK(0x8004EA8C);
ZZ_MARK(0x8004EA90);
ZZ_MARK(0x8004EA94);
ZZ_MARK_TARGET(0x8004EA98,ZZ_4E964_134);
ZZ_MARK(0x8004EA9C);
ZZ_MARK(0x8004EAA0);
ZZ_MARK(0x8004EAA4);
ZZ_MARK(0x8004EAA8);
ZZ_MARK_TARGET(0x8004EAAC,ZZ_4E964_148);
ZZ_MARK(0x8004EAB0);
ZZ_MARK(0x8004EAB4);
ZZ_MARK(0x8004EAB8);
ZZ_MARK(0x8004EABC);
