#ifdef ZZ_INCLUDE_CODE
ZZ_4DB50:
	SP -= 64;
	T0 = A0;
	EMU_Write32(SP + 56,RA); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	EMU_Write32(SP + 48,S0); //+ 0x30
	A0 = EMU_ReadS16(T0 + 4); //+ 0x4
	T1 = A1;
	if ((int32_t)A0 < 0)
	{
		A1 = A0;
		ZZ_CLOCKCYCLES(9,0x8004DB9C);
		goto ZZ_4DB50_4C;
	}
	A1 = A0;
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 - 8264); //+ 0xFFFFDFB8
	V1 = V0;
	V0 -= 1;
	V0 = (int32_t)V0 < (int32_t)A0;
	if (V0)
	{
		V0 = V1 - 1;
		ZZ_CLOCKCYCLES(17,0x8004DBA0);
		goto ZZ_4DB50_50;
	}
	V0 = V1 - 1;
	V0 = A1;
	ZZ_CLOCKCYCLES(19,0x8004DBA0);
	goto ZZ_4DB50_50;
ZZ_4DB50_4C:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x8004DBA0);
ZZ_4DB50_50:
	A1 = EMU_ReadS16(T0 + 6); //+ 0x6
	EMU_Write16(T0 + 4,V0); //+ 0x4
	if ((int32_t)A1 < 0)
	{
		A0 = A1;
		ZZ_CLOCKCYCLES(4,0x8004DBD8);
		goto ZZ_4DB50_88;
	}
	A0 = A1;
	V0 = 0x80060000;
	V0 = EMU_ReadS16(V0 - 8262); //+ 0xFFFFDFBA
	V1 = V0;
	V0 -= 1;
	V0 = (int32_t)V0 < (int32_t)A1;
	if (V0)
	{
		V1 -= 1;
		ZZ_CLOCKCYCLES(12,0x8004DBDC);
		goto ZZ_4DB50_8C;
	}
	V1 -= 1;
	V1 = A0;
	ZZ_CLOCKCYCLES(14,0x8004DBDC);
	goto ZZ_4DB50_8C;
ZZ_4DB50_88:
	V1 = R0;
	ZZ_CLOCKCYCLES(1,0x8004DBDC);
ZZ_4DB50_8C:
	V0 = EMU_ReadU16(T0);
	V0 &= 0x3F;
	if (V0)
	{
		EMU_Write16(T0 + 6,V1); //+ 0x6
		ZZ_CLOCKCYCLES(5,0x8004DC04);
		goto ZZ_4DB50_B4;
	}
	EMU_Write16(T0 + 6,V1); //+ 0x6
	V0 = EMU_ReadU16(T0 + 4); //+ 0x4
	V0 &= 0x3F;
	if (!V0)
	{
		V0 = 0x5FF0000;
		ZZ_CLOCKCYCLES(10,0x8004DD08);
		goto ZZ_4DB50_1B8;
	}
	V0 = 0x5FF0000;
	ZZ_CLOCKCYCLES(10,0x8004DC04);
ZZ_4DB50_B4:
	A1 = 0xFF0000;
	A1 |= 0xFFFF;
	A0 = 0xE4FF0000;
	A0 |= 0xFFFF;
	A3 = 0x3FF0000;
	A2 = 0x80060000;
	A2 += 328;
	V0 = A2 & A1;
	V1 = 0x8000000;
	V0 |= V1;
	S0 = 0xE3000000;
	S1 = 0xE5000000;
	AT = 0x80060000;
	EMU_Write32(AT + 292,V0); //+ 0x124
	V0 = 0xE6000000;
	A1 &= T1;
	V1 = 0x60000000;
	A1 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 308,V0); //+ 0x134
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8056); //+ 0xFFFFE088
	V1 = 0xE1000000;
	AT = 0x80060000;
	EMU_Write32(AT + 296,S0); //+ 0x128
	AT = 0x80060000;
	EMU_Write32(AT + 300,A0); //+ 0x12C
	AT = 0x80060000;
	EMU_Write32(AT + 304,S1); //+ 0x130
	A0 = EMU_ReadU32(V0);
	V0 = T1 >> 31;
	V0 <<= 10;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 316,A1); //+ 0x13C
	A0 &= 0x7FF;
	A0 |= V0;
	AT = 0x80060000;
	EMU_Write32(AT + 312,A0); //+ 0x138
	V0 = EMU_ReadU32(T0);
	A3 |= 0xFFFF;
	AT = 0x80060000;
	EMU_Write32(AT + 320,V0); //+ 0x140
	V0 = EMU_ReadU32(T0 + 4); //+ 0x4
	EMU_Write32(A2,A3);
	AT = 0x80060000;
	EMU_Write32(AT + 324,V0); //+ 0x144
	RA = 0x8004DCC8; //ZZ_4DB50_178
	A0 = 3;
	ZZ_CLOCKCYCLES(49,0x8004E344);
	goto ZZ_4E344;
ZZ_4DB50_178:
	V0 |= S0;
	AT = 0x80060000;
	EMU_Write32(AT + 332,V0); //+ 0x14C
	RA = 0x8004DCDC; //ZZ_4DB50_18C
	A0 = 4;
	ZZ_CLOCKCYCLES(5,0x8004E344);
	goto ZZ_4E344;
ZZ_4DB50_18C:
	V1 = 0xE4000000;
	V0 |= V1;
	AT = 0x80060000;
	EMU_Write32(AT + 336,V0); //+ 0x150
	RA = 0x8004DCF4; //ZZ_4DB50_1A4
	A0 = 5;
	ZZ_CLOCKCYCLES(6,0x8004E344);
	goto ZZ_4E344;
ZZ_4DB50_1A4:
	V0 |= S1;
	AT = 0x80060000;
	EMU_Write32(AT + 340,V0); //+ 0x154
	ZZ_CLOCKCYCLES(5,0x8004DD80);
	goto ZZ_4DB50_230;
ZZ_4DB50_1B8:
	V0 |= 0xFFFF;
	V1 = 0xFF0000;
	V1 |= 0xFFFF;
	AT = 0x80060000;
	EMU_Write32(AT + 292,V0); //+ 0x124
	V0 = 0xE6000000;
	V1 &= T1;
	A1 = 0x2000000;
	AT = 0x80060000;
	EMU_Write32(AT + 296,V0); //+ 0x128
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8056); //+ 0xFFFFE088
	V1 |= A1;
	A0 = EMU_ReadU32(V0);
	V0 = T1 >> 31;
	V0 <<= 10;
	AT = 0x80060000;
	EMU_Write32(AT + 304,V1); //+ 0x130
	V1 = 0xE1000000;
	V0 |= V1;
	A0 &= 0x7FF;
	A0 |= V0;
	AT = 0x80060000;
	EMU_Write32(AT + 300,A0); //+ 0x12C
	V0 = EMU_ReadU32(T0);
	AT = 0x80060000;
	EMU_Write32(AT + 308,V0); //+ 0x134
	V0 = EMU_ReadU32(T0 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT + 312,V0); //+ 0x138
	ZZ_CLOCKCYCLES(30,0x8004DD80);
ZZ_4DB50_230:
	A0 = 0x80060000;
	A0 += 292;
	RA = 0x8004DD90; //ZZ_4DB50_240
	ZZ_CLOCKCYCLES(4,0x8004E2F8);
	goto ZZ_4E2F8;
ZZ_4DB50_240:
	V0 = R0;
	RA = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 64;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004DB50,ZZ_4DB50);
ZZ_MARK(0x8004DB54);
ZZ_MARK(0x8004DB58);
ZZ_MARK(0x8004DB5C);
ZZ_MARK(0x8004DB60);
ZZ_MARK(0x8004DB64);
ZZ_MARK(0x8004DB68);
ZZ_MARK(0x8004DB6C);
ZZ_MARK(0x8004DB70);
ZZ_MARK(0x8004DB74);
ZZ_MARK(0x8004DB78);
ZZ_MARK(0x8004DB7C);
ZZ_MARK(0x8004DB80);
ZZ_MARK(0x8004DB84);
ZZ_MARK(0x8004DB88);
ZZ_MARK(0x8004DB8C);
ZZ_MARK(0x8004DB90);
ZZ_MARK(0x8004DB94);
ZZ_MARK(0x8004DB98);
ZZ_MARK_TARGET(0x8004DB9C,ZZ_4DB50_4C);
ZZ_MARK_TARGET(0x8004DBA0,ZZ_4DB50_50);
ZZ_MARK(0x8004DBA4);
ZZ_MARK(0x8004DBA8);
ZZ_MARK(0x8004DBAC);
ZZ_MARK(0x8004DBB0);
ZZ_MARK(0x8004DBB4);
ZZ_MARK(0x8004DBB8);
ZZ_MARK(0x8004DBBC);
ZZ_MARK(0x8004DBC0);
ZZ_MARK(0x8004DBC4);
ZZ_MARK(0x8004DBC8);
ZZ_MARK(0x8004DBCC);
ZZ_MARK(0x8004DBD0);
ZZ_MARK(0x8004DBD4);
ZZ_MARK_TARGET(0x8004DBD8,ZZ_4DB50_88);
ZZ_MARK_TARGET(0x8004DBDC,ZZ_4DB50_8C);
ZZ_MARK(0x8004DBE0);
ZZ_MARK(0x8004DBE4);
ZZ_MARK(0x8004DBE8);
ZZ_MARK(0x8004DBEC);
ZZ_MARK(0x8004DBF0);
ZZ_MARK(0x8004DBF4);
ZZ_MARK(0x8004DBF8);
ZZ_MARK(0x8004DBFC);
ZZ_MARK(0x8004DC00);
ZZ_MARK_TARGET(0x8004DC04,ZZ_4DB50_B4);
ZZ_MARK(0x8004DC08);
ZZ_MARK(0x8004DC0C);
ZZ_MARK(0x8004DC10);
ZZ_MARK(0x8004DC14);
ZZ_MARK(0x8004DC18);
ZZ_MARK(0x8004DC1C);
ZZ_MARK(0x8004DC20);
ZZ_MARK(0x8004DC24);
ZZ_MARK(0x8004DC28);
ZZ_MARK(0x8004DC2C);
ZZ_MARK(0x8004DC30);
ZZ_MARK(0x8004DC34);
ZZ_MARK(0x8004DC38);
ZZ_MARK(0x8004DC3C);
ZZ_MARK(0x8004DC40);
ZZ_MARK(0x8004DC44);
ZZ_MARK(0x8004DC48);
ZZ_MARK(0x8004DC4C);
ZZ_MARK(0x8004DC50);
ZZ_MARK(0x8004DC54);
ZZ_MARK(0x8004DC58);
ZZ_MARK(0x8004DC5C);
ZZ_MARK(0x8004DC60);
ZZ_MARK(0x8004DC64);
ZZ_MARK(0x8004DC68);
ZZ_MARK(0x8004DC6C);
ZZ_MARK(0x8004DC70);
ZZ_MARK(0x8004DC74);
ZZ_MARK(0x8004DC78);
ZZ_MARK(0x8004DC7C);
ZZ_MARK(0x8004DC80);
ZZ_MARK(0x8004DC84);
ZZ_MARK(0x8004DC88);
ZZ_MARK(0x8004DC8C);
ZZ_MARK(0x8004DC90);
ZZ_MARK(0x8004DC94);
ZZ_MARK(0x8004DC98);
ZZ_MARK(0x8004DC9C);
ZZ_MARK(0x8004DCA0);
ZZ_MARK(0x8004DCA4);
ZZ_MARK(0x8004DCA8);
ZZ_MARK(0x8004DCAC);
ZZ_MARK(0x8004DCB0);
ZZ_MARK(0x8004DCB4);
ZZ_MARK(0x8004DCB8);
ZZ_MARK(0x8004DCBC);
ZZ_MARK(0x8004DCC0);
ZZ_MARK(0x8004DCC4);
ZZ_MARK_TARGET(0x8004DCC8,ZZ_4DB50_178);
ZZ_MARK(0x8004DCCC);
ZZ_MARK(0x8004DCD0);
ZZ_MARK(0x8004DCD4);
ZZ_MARK(0x8004DCD8);
ZZ_MARK_TARGET(0x8004DCDC,ZZ_4DB50_18C);
ZZ_MARK(0x8004DCE0);
ZZ_MARK(0x8004DCE4);
ZZ_MARK(0x8004DCE8);
ZZ_MARK(0x8004DCEC);
ZZ_MARK(0x8004DCF0);
ZZ_MARK_TARGET(0x8004DCF4,ZZ_4DB50_1A4);
ZZ_MARK(0x8004DCF8);
ZZ_MARK(0x8004DCFC);
ZZ_MARK(0x8004DD00);
ZZ_MARK(0x8004DD04);
ZZ_MARK_TARGET(0x8004DD08,ZZ_4DB50_1B8);
ZZ_MARK(0x8004DD0C);
ZZ_MARK(0x8004DD10);
ZZ_MARK(0x8004DD14);
ZZ_MARK(0x8004DD18);
ZZ_MARK(0x8004DD1C);
ZZ_MARK(0x8004DD20);
ZZ_MARK(0x8004DD24);
ZZ_MARK(0x8004DD28);
ZZ_MARK(0x8004DD2C);
ZZ_MARK(0x8004DD30);
ZZ_MARK(0x8004DD34);
ZZ_MARK(0x8004DD38);
ZZ_MARK(0x8004DD3C);
ZZ_MARK(0x8004DD40);
ZZ_MARK(0x8004DD44);
ZZ_MARK(0x8004DD48);
ZZ_MARK(0x8004DD4C);
ZZ_MARK(0x8004DD50);
ZZ_MARK(0x8004DD54);
ZZ_MARK(0x8004DD58);
ZZ_MARK(0x8004DD5C);
ZZ_MARK(0x8004DD60);
ZZ_MARK(0x8004DD64);
ZZ_MARK(0x8004DD68);
ZZ_MARK(0x8004DD6C);
ZZ_MARK(0x8004DD70);
ZZ_MARK(0x8004DD74);
ZZ_MARK(0x8004DD78);
ZZ_MARK(0x8004DD7C);
ZZ_MARK_TARGET(0x8004DD80,ZZ_4DB50_230);
ZZ_MARK(0x8004DD84);
ZZ_MARK(0x8004DD88);
ZZ_MARK(0x8004DD8C);
ZZ_MARK_TARGET(0x8004DD90,ZZ_4DB50_240);
ZZ_MARK(0x8004DD94);
ZZ_MARK(0x8004DD98);
ZZ_MARK(0x8004DD9C);
ZZ_MARK(0x8004DDA0);
ZZ_MARK(0x8004DDA4);
ZZ_MARK(0x8004DDA8);
