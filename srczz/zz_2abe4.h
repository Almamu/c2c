#ifdef ZZ_INCLUDE_CODE
ZZ_2ABE4:
	SP -= 296;
	T0 = A0;
	EMU_Write32(SP + 272,S4); //+ 0x110
	EMU_Write32(SP + 292,RA); //+ 0x124
	EMU_Write32(SP + 288,FP); //+ 0x120
	EMU_Write32(SP + 284,S7); //+ 0x11C
	EMU_Write32(SP + 280,S6); //+ 0x118
	EMU_Write32(SP + 276,S5); //+ 0x114
	EMU_Write32(SP + 268,S3); //+ 0x10C
	EMU_Write32(SP + 264,S2); //+ 0x108
	EMU_Write32(SP + 260,S1); //+ 0x104
	EMU_Write32(SP + 256,S0); //+ 0x100
	EMU_Write32(SP + 224,A2); //+ 0xE0
	EMU_Write32(SP + 232,A3); //+ 0xE8
	V0 = EMU_ReadU32(T0);
	T5 = EMU_ReadU32(SP + 312); //+ 0x138
	T6 = EMU_ReadU32(SP + 316); //+ 0x13C
	FP = EMU_ReadU32(SP + 320); //+ 0x140
	V1 = V0 & 0x7;
	if (!V1)
	{
		S4 = A1;
		ZZ_CLOCKCYCLES(21,0x8002AC4C);
		goto ZZ_2ABE4_68;
	}
	S4 = A1;
	V0 = 0x1;
	if (V1 == V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(24,0x8002ADC8);
		goto ZZ_2ABE4_1E4;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(26,0x8002B440);
	goto ZZ_2ABE4_85C;
ZZ_2ABE4_68:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	V0 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 76); //+ 0x4C
	V0 &= 0x1;
	if (!V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(10,0x8002AC80);
		goto ZZ_2ABE4_9C;
	}
	A0 = R0;
	V0 = EMU_ReadU32(T0 + 4); //+ 0x4
	A0 = EMU_ReadU32(V0 + 296); //+ 0x128
	ZZ_CLOCKCYCLES(13,0x8002AC80);
ZZ_2ABE4_9C:
	T7 = EMU_ReadU32(SP + 232); //+ 0xE8
	if (!T7)
	{
		ZZ_CLOCKCYCLES(4,0x8002ACC0);
		goto ZZ_2ABE4_DC;
	}
	V1 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(10,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	V1 = EMU_ReadU32(T0 + 12); //+ 0xC
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(16,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(16,0x8002ACC0);
ZZ_2ABE4_DC:
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		V1 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002AD04);
		goto ZZ_2ABE4_120;
	}
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x8002ACF0);
		goto ZZ_2ABE4_10C;
	}
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	V0 = (int32_t)V0 < (int32_t)T5;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(12,0x8002ACF0);
ZZ_2ABE4_10C:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AD40);
		goto ZZ_2ABE4_15C;
	}
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	V0 = (int32_t)T6 < (int32_t)V0;
	ZZ_CLOCKCYCLES(5,0x8002AD38);
	goto ZZ_2ABE4_154;
ZZ_2ABE4_120:
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(3,0x8002AD24);
		goto ZZ_2ABE4_140;
	}
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	V0 = (int32_t)T5 < (int32_t)V0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(8,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(8,0x8002AD24);
ZZ_2ABE4_140:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AD40);
		goto ZZ_2ABE4_15C;
	}
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	V0 = (int32_t)V0 < (int32_t)T6;
	ZZ_CLOCKCYCLES(5,0x8002AD38);
ZZ_2ABE4_154:
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(2,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(2,0x8002AD40);
ZZ_2ABE4_15C:
	V0 = EMU_ReadU32(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(T0 + 8); //+ 0x8
	V0 = V0 - A0;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(6,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4);
	V1 = EMU_ReadU32(T0 + 20); //+ 0x14
	V0 += A0;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 20); //+ 0x14
	V1 = EMU_ReadU32(T0 + 16); //+ 0x10
	V0 = V0 - A0;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(18,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(T0 + 28); //+ 0x1C
	V0 += A0;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (V1)
	{
		ZZ_CLOCKCYCLES(24,0x8002B43C);
		goto ZZ_2ABE4_858;
	}
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		ZZ_CLOCKCYCLES(28,0x8002ADBC);
		goto ZZ_2ABE4_1D8;
	}
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	ZZ_CLOCKCYCLES(31,0x8002B444);
	goto ZZ_2ABE4_860;
ZZ_2ABE4_1D8:
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	ZZ_CLOCKCYCLES(3,0x8002B444);
	goto ZZ_2ABE4_860;
ZZ_2ABE4_1E4:
	T7 = EMU_ReadU32(SP + 232); //+ 0xE8
	if (!T7)
	{
		ZZ_CLOCKCYCLES(4,0x8002AE08);
		goto ZZ_2ABE4_224;
	}
	V1 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = EMU_ReadU32(T0 + 60); //+ 0x3C
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(10,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	V1 = EMU_ReadU32(T0 + 48); //+ 0x30
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(16,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(16,0x8002AE08);
ZZ_2ABE4_224:
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		V1 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002AE4C);
		goto ZZ_2ABE4_268;
	}
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(7,0x8002AE38);
		goto ZZ_2ABE4_254;
	}
	V0 = EMU_ReadU32(T0 + 60); //+ 0x3C
	V0 = (int32_t)V0 < (int32_t)T5;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(12,0x8002AE38);
ZZ_2ABE4_254:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AE88);
		goto ZZ_2ABE4_2A4;
	}
	V0 = EMU_ReadU32(T0 + 48); //+ 0x30
	V0 = (int32_t)T6 < (int32_t)V0;
	ZZ_CLOCKCYCLES(5,0x8002AE80);
	goto ZZ_2ABE4_29C;
ZZ_2ABE4_268:
	V1 |= 0x3601;
	if (T5 == V1)
	{
		ZZ_CLOCKCYCLES(3,0x8002AE6C);
		goto ZZ_2ABE4_288;
	}
	V0 = EMU_ReadU32(T0 + 48); //+ 0x30
	V0 = (int32_t)T5 < (int32_t)V0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(8,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(8,0x8002AE6C);
ZZ_2ABE4_288:
	if (T6 == V1)
	{
		ZZ_CLOCKCYCLES(2,0x8002AE88);
		goto ZZ_2ABE4_2A4;
	}
	V0 = EMU_ReadU32(T0 + 60); //+ 0x3C
	V0 = (int32_t)V0 < (int32_t)T6;
	ZZ_CLOCKCYCLES(5,0x8002AE80);
ZZ_2ABE4_29C:
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(2,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(2,0x8002AE88);
ZZ_2ABE4_2A4:
	V0 = EMU_ReadU32(S4 + 12); //+ 0xC
	V1 = EMU_ReadU32(T0 + 44); //+ 0x2C
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(6,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V1 = EMU_ReadU32(S4);
	V0 = EMU_ReadU32(T0 + 56); //+ 0x38
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(12,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 20); //+ 0x14
	V1 = EMU_ReadU32(T0 + 52); //+ 0x34
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(18,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V1 = EMU_ReadU32(S4 + 8); //+ 0x8
	V0 = EMU_ReadU32(T0 + 64); //+ 0x40
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(24,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(T0 + 8); //+ 0x8
	EMU_Write32(SP + 84,V0); //+ 0x54
	EMU_Write32(SP + 72,V0); //+ 0x48
	EMU_Write32(SP + 36,V0); //+ 0x24
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(T0 + 20); //+ 0x14
	EMU_Write32(SP + 108,V0); //+ 0x6C
	EMU_Write32(SP + 96,V0); //+ 0x60
	EMU_Write32(SP + 60,V0); //+ 0x3C
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(T0 + 12); //+ 0xC
	EMU_Write32(SP + 112,V0); //+ 0x70
	EMU_Write32(SP + 76,V0); //+ 0x4C
	EMU_Write32(SP + 64,V0); //+ 0x40
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(T0 + 24); //+ 0x18
	EMU_Write32(SP + 100,V0); //+ 0x64
	EMU_Write32(SP + 88,V0); //+ 0x58
	EMU_Write32(SP + 52,V0); //+ 0x34
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(T0 + 16); //+ 0x10
	A0 = SP + 24;
	EMU_Write32(SP + 68,V0); //+ 0x44
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 44,V0); //+ 0x2C
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(T0 + 28); //+ 0x1C
	A1 = A0;
	S2 = R0;
	S0 = 0x80060000;
	S0 -= 16816;
	EMU_Write32(SP + 116,V0); //+ 0x74
	EMU_Write32(SP + 104,V0); //+ 0x68
	EMU_Write32(SP + 92,V0); //+ 0x5C
	EMU_Write32(SP + 80,V0); //+ 0x50
	V1 = EMU_ReadU32(T0 + 4); //+ 0x4
	S3 = SP + 24;
	T7 = SP + 184;
	V0 = 0x8;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = 0x4;
	EMU_Write32(SP + 240,T7); //+ 0xF0
	EMU_Write32(SP + 20,V0); //+ 0x14
	A2 = EMU_ReadU32(V1 + 8); //+ 0x8
	S7 = 0xC4650000;
	S7 |= 0x3601;
	A3 = T0 + 32;
	EMU_Write32(SP + 248,T5); //+ 0xF8
	RA = 0x8002AFC0; //ZZ_2ABE4_3DC
	EMU_Write32(SP + 252,T6); //+ 0xFC
	ZZ_CLOCKCYCLES(78,0x8003ED6C);
	goto ZZ_3ED6C;
ZZ_2ABE4_3DC:
	T6 = EMU_ReadU32(SP + 252); //+ 0xFC
	T5 = EMU_ReadU32(SP + 248); //+ 0xF8
	ZZ_CLOCKCYCLES(2,0x8002AFC8);
ZZ_2ABE4_3E4:
	V0 = EMU_ReadU32(S0);
	S0 += 4;
	A2 = V0 << 1;
	A2 += V0;
	A2 <<= 2;
	A2 += S3;
	EMU_Write32(SP + 120,A2); //+ 0x78
	V0 = EMU_ReadU32(S0);
	S0 += 4;
	A1 = V0 << 1;
	A1 += V0;
	A1 <<= 2;
	A1 += S3;
	EMU_Write32(SP + 124,A1); //+ 0x7C
	V0 = EMU_ReadU32(S0);
	S0 += 4;
	A0 = V0 << 1;
	A0 += V0;
	A0 <<= 2;
	A0 += S3;
	EMU_Write32(SP + 128,A0); //+ 0x80
	V1 = EMU_ReadU32(S0);
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += S3;
	EMU_Write32(SP + 132,V0); //+ 0x84
	V0 = EMU_ReadU32(A1 + 8); //+ 0x8
	A3 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = EMU_ReadU32(A0);
	A2 = EMU_ReadU32(A2);
	V0 = V0 - A3;
	V0 = (int32_t)V0 >> 7;
	V1 = V1 - A2;
	T0 = (int32_t)V1 >> 7;
	EMU_SMultiply(V0,T0);
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = V0 - A2;
	T0 = (int32_t)V0 >> 7;
	T1 = LO;
	V1 = V1 - A3;
	V0 = (int32_t)V1 >> 7;
	EMU_SMultiply(T0,V0);
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	S0 += 4;
	V1 = LO;
	if (!T7)
	{
		T1 = T1 - V1;
		ZZ_CLOCKCYCLES(50,0x8002B0A0);
		goto ZZ_2ABE4_4BC;
	}
	T1 = T1 - V1;
	if ((int32_t)T1 >= 0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(52,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	T3 = R0;
	ZZ_CLOCKCYCLES(54,0x8002B0A8);
	goto ZZ_2ABE4_4C4;
ZZ_2ABE4_4BC:
	if ((int32_t)T1 <= 0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(2,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	T3 = R0;
	ZZ_CLOCKCYCLES(2,0x8002B0A8);
ZZ_2ABE4_4C4:
	T2 = SP + 184;
	A2 = EMU_ReadU32(SP + 120); //+ 0x78
	A3 = EMU_ReadU32(SP + 124); //+ 0x7C
	T0 = EMU_ReadU32(SP + 128); //+ 0x80
	T1 = EMU_ReadU32(SP + 132); //+ 0x84
	V1 = EMU_ReadU32(A2);
	V0 = EMU_ReadU32(A3);
	A0 = EMU_ReadU32(T0);
	A1 = EMU_ReadU32(T1);
	T4 = S3;
	V1 += V0;
	V1 += A0;
	V1 += A1;
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	A0 = EMU_ReadU32(A3 + 8); //+ 0x8
	A1 = EMU_ReadU32(T0 + 8); //+ 0x8
	A2 = EMU_ReadU32(T1 + 8); //+ 0x8
	S5 = (int32_t)V1 >> 2;
	V0 += A0;
	V0 += A1;
	V0 += A2;
	S6 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(22,0x8002B100);
ZZ_2ABE4_51C:
	A2 = EMU_ReadU32(T4 + 96); //+ 0x60
	V0 = EMU_ReadU32(A2);
	V0 = V0 - S5;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(T2,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	T4 += 4;
	T3 += 1;
	V0 = V0 - S6;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(T2 + 4,V0); //+ 0x4
	V0 = (int32_t)T3 < 4;
	if (V0)
	{
		T2 += 8;
		ZZ_CLOCKCYCLES(16,0x8002B100);
		goto ZZ_2ABE4_51C;
	}
	T2 += 8;
	V0 = EMU_ReadU32(S4);
	V1 = EMU_ReadU32(S4 + 12); //+ 0xC
	A1 = EMU_ReadU32(SP + 240); //+ 0xF0
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S5;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(SP + 216,V0); //+ 0xD8
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(S4 + 20); //+ 0x14
	A0 = SP + 216;
	EMU_Write32(SP + 248,T5); //+ 0xF8
	EMU_Write32(SP + 252,T6); //+ 0xFC
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S6;
	V0 = (int32_t)V0 >> 7;
	RA = 0x8002B18C; //ZZ_2ABE4_5A8
	EMU_Write32(SP + 220,V0); //+ 0xDC
	ZZ_CLOCKCYCLES(35,0x8003098C);
	goto ZZ_3098C;
ZZ_2ABE4_5A8:
	T5 = EMU_ReadU32(SP + 248); //+ 0xF8
	T6 = EMU_ReadU32(SP + 252); //+ 0xFC
	if (!V0)
	{
		T3 = R0;
		ZZ_CLOCKCYCLES(4,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	T3 = R0;
	A2 = SP + 136;
	T2 = EMU_ReadU32(SP + 240); //+ 0xF0
	T0 = SP + 140;
	V0 = EMU_ReadU32(SP + 120); //+ 0x78
	V1 = EMU_ReadU32(SP + 124); //+ 0x7C
	A0 = EMU_ReadU32(SP + 128); //+ 0x80
	A1 = EMU_ReadU32(SP + 132); //+ 0x84
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V1 = EMU_ReadU32(V1 + 4); //+ 0x4
	A0 = EMU_ReadU32(A0 + 4); //+ 0x4
	A1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A3 = S3;
	V0 += V1;
	V0 += A0;
	V0 += A1;
	S1 = (int32_t)V0 >> 2;
	ZZ_CLOCKCYCLES(20,0x8002B1DC);
ZZ_2ABE4_5F8:
	V0 = EMU_ReadU32(T2);
	EMU_Write32(A2,V0);
	V0 = EMU_ReadU32(T2 + 4); //+ 0x4
	EMU_Write32(T0 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(A3 + 96); //+ 0x60
	T3 += 1;
	V0 = EMU_ReadU32(V0 + 4); //+ 0x4
	A2 += 12;
	T2 += 8;
	A3 += 4;
	V0 = V0 - S1;
	V0 = (int32_t)V0 >> 7;
	EMU_Write32(T0,V0);
	V0 = (int32_t)T3 < 4;
	if (V0)
	{
		T0 += 12;
		ZZ_CLOCKCYCLES(18,0x8002B1DC);
		goto ZZ_2ABE4_5F8;
	}
	T0 += 12;
	A0 = EMU_ReadU32(SP + 216); //+ 0xD8
	A1 = EMU_ReadU32(SP + 220); //+ 0xDC
	A2 = SP + 136;
	EMU_Write32(SP + 248,T5); //+ 0xF8
	RA = 0x8002B23C; //ZZ_2ABE4_658
	EMU_Write32(SP + 252,T6); //+ 0xFC
	ZZ_CLOCKCYCLES(24,0x800307A4);
	goto ZZ_307A4;
ZZ_2ABE4_658:
	T1 = V0;
	T5 = EMU_ReadU32(SP + 248); //+ 0xF8
	T6 = EMU_ReadU32(SP + 252); //+ 0xFC
	if (T1 == S7)
	{
		V0 = T1 << 7;
		ZZ_CLOCKCYCLES(5,0x8002B42C);
		goto ZZ_2ABE4_848;
	}
	V0 = T1 << 7;
	T7 = EMU_ReadU32(SP + 232); //+ 0xE8
	if (!T7)
	{
		T1 = V0 + S1;
		ZZ_CLOCKCYCLES(9,0x8002B288);
		goto ZZ_2ABE4_6A4;
	}
	T1 = V0 + S1;
	V0 = EMU_ReadU32(S4 + 16); //+ 0x10
	V0 = (int32_t)V0 < (int32_t)T1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(14,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = (int32_t)T1 < (int32_t)V0;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(19,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(19,0x8002B288);
ZZ_2ABE4_6A4:
	T7 = EMU_ReadU32(SP + 224); //+ 0xE0
	if (!T7)
	{
		ZZ_CLOCKCYCLES(4,0x8002B404);
		goto ZZ_2ABE4_820;
	}
	if (T5 == S7)
	{
		V0 = (int32_t)T1 < (int32_t)T5;
		ZZ_CLOCKCYCLES(6,0x8002B2A8);
		goto ZZ_2ABE4_6C4;
	}
	V0 = (int32_t)T1 < (int32_t)T5;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(8,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(8,0x8002B2A8);
ZZ_2ABE4_6C4:
	if (T6 == S7)
	{
		V0 = (int32_t)T6 < (int32_t)T1;
		ZZ_CLOCKCYCLES(2,0x8002B2B8);
		goto ZZ_2ABE4_6D4;
	}
	V0 = (int32_t)T6 < (int32_t)T1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(4,0x8002B2B8);
ZZ_2ABE4_6D4:
	if (!FP)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(2,0x8002B424);
		goto ZZ_2ABE4_840;
	}
	A3 = R0;
	V0 = EMU_ReadU32(SP + 120); //+ 0x78
	S2 = 0x1;
	A0 = S3 + 4;
	A1 = EMU_ReadU32(V0 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(6,0x8002B2D0);
ZZ_2ABE4_6EC:
	V0 = EMU_ReadU32(A0 + 96); //+ 0x60
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8002B2F4);
		goto ZZ_2ABE4_710;
	}
	A1 = V1;
	A3 = S2;
	ZZ_CLOCKCYCLES(9,0x8002B2F4);
ZZ_2ABE4_710:
	S2 += 1;
	V0 = (int32_t)S2 < 4;
	if (V0)
	{
		A0 += 4;
		ZZ_CLOCKCYCLES(4,0x8002B2D0);
		goto ZZ_2ABE4_6EC;
	}
	A0 += 4;
	V0 = A1 - S1;
	V1 = A3 << 2;
	V1 += S3;
	EMU_Write32(FP + 4,V0); //+ 0x4
	V0 = A3 + 1;
	V0 &= 0x3;
	V0 <<= 2;
	V0 += S3;
	T0 = EMU_ReadU32(V0 + 96); //+ 0x60
	A2 = EMU_ReadU32(V1 + 96); //+ 0x60
	V0 = A3 - 1;
	V0 &= 0x3;
	V1 = EMU_ReadU32(T0 + 4); //+ 0x4
	V0 <<= 2;
	V0 += S3;
	A0 = EMU_ReadU32(V0 + 96); //+ 0x60
	if (V1 != A1)
	{
		ZZ_CLOCKCYCLES(22,0x8002B39C);
		goto ZZ_2ABE4_7B8;
	}
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V0 != A1)
	{
		ZZ_CLOCKCYCLES(26,0x8002B368);
		goto ZZ_2ABE4_784;
	}
	EMU_Write32(FP,R0);
	EMU_Write32(FP + 8,R0); //+ 0x8
	ZZ_CLOCKCYCLES(29,0x8002B424);
	goto ZZ_2ABE4_840;
ZZ_2ABE4_784:
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(T0);
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S5;
	EMU_Write32(FP,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = EMU_ReadU32(T0 + 8); //+ 0x8
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(13,0x8002B3F4);
	goto ZZ_2ABE4_810;
ZZ_2ABE4_7B8:
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V0 != A1)
	{
		ZZ_CLOCKCYCLES(4,0x8002B3E0);
		goto ZZ_2ABE4_7FC;
	}
	V0 = EMU_ReadU32(A2);
	V1 = EMU_ReadU32(A0);
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	V0 = V0 - S5;
	EMU_Write32(FP,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	V1 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 += V1;
	V0 = (int32_t)V0 >> 1;
	ZZ_CLOCKCYCLES(17,0x8002B3F4);
	goto ZZ_2ABE4_810;
ZZ_2ABE4_7FC:
	V0 = EMU_ReadU32(A2);
	V0 = V0 - S5;
	EMU_Write32(FP,V0);
	V0 = EMU_ReadU32(A2 + 8); //+ 0x8
	ZZ_CLOCKCYCLES(5,0x8002B3F4);
ZZ_2ABE4_810:
	V0 = V0 - S6;
	EMU_Write32(FP + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(4,0x8002B424);
	goto ZZ_2ABE4_840;
ZZ_2ABE4_820:
	if (T5 == S7)
	{
		V0 = (int32_t)T5 < (int32_t)T1;
		ZZ_CLOCKCYCLES(2,0x8002B414);
		goto ZZ_2ABE4_830;
	}
	V0 = (int32_t)T5 < (int32_t)T1;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(4,0x8002B414);
ZZ_2ABE4_830:
	if (T6 == S7)
	{
		V0 = (int32_t)T1 < (int32_t)T6;
		ZZ_CLOCKCYCLES(2,0x8002B424);
		goto ZZ_2ABE4_840;
	}
	V0 = (int32_t)T1 < (int32_t)T6;
	if (V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(4,0x8002B440);
		goto ZZ_2ABE4_85C;
	}
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(4,0x8002B424);
ZZ_2ABE4_840:
	V0 = T1;
	ZZ_CLOCKCYCLES(2,0x8002B444);
	goto ZZ_2ABE4_860;
ZZ_2ABE4_848:
	S2 += 1;
	V0 = (int32_t)S2 < 6;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002AFC8);
		goto ZZ_2ABE4_3E4;
	}
	ZZ_CLOCKCYCLES(4,0x8002B43C);
ZZ_2ABE4_858:
	V0 = 0xC4650000;
	ZZ_CLOCKCYCLES(1,0x8002B440);
ZZ_2ABE4_85C:
	V0 |= 0x3601;
	ZZ_CLOCKCYCLES(1,0x8002B444);
ZZ_2ABE4_860:
	RA = EMU_ReadU32(SP + 292); //+ 0x124
	FP = EMU_ReadU32(SP + 288); //+ 0x120
	S7 = EMU_ReadU32(SP + 284); //+ 0x11C
	S6 = EMU_ReadU32(SP + 280); //+ 0x118
	S5 = EMU_ReadU32(SP + 276); //+ 0x114
	S4 = EMU_ReadU32(SP + 272); //+ 0x110
	S3 = EMU_ReadU32(SP + 268); //+ 0x10C
	S2 = EMU_ReadU32(SP + 264); //+ 0x108
	S1 = EMU_ReadU32(SP + 260); //+ 0x104
	S0 = EMU_ReadU32(SP + 256); //+ 0x100
	SP += 296;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80028E30,ZZ_28C9C_194);
	ZZ_JUMPREGISTER(0x8002BC7C,ZZ_2B890_3EC);
	ZZ_JUMPREGISTER(0x8002AA10,ZZ_2A868_1A8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002ABE4,ZZ_2ABE4);
ZZ_MARK(0x8002ABE8);
ZZ_MARK(0x8002ABEC);
ZZ_MARK(0x8002ABF0);
ZZ_MARK(0x8002ABF4);
ZZ_MARK(0x8002ABF8);
ZZ_MARK(0x8002ABFC);
ZZ_MARK(0x8002AC00);
ZZ_MARK(0x8002AC04);
ZZ_MARK(0x8002AC08);
ZZ_MARK(0x8002AC0C);
ZZ_MARK(0x8002AC10);
ZZ_MARK(0x8002AC14);
ZZ_MARK(0x8002AC18);
ZZ_MARK(0x8002AC1C);
ZZ_MARK(0x8002AC20);
ZZ_MARK(0x8002AC24);
ZZ_MARK(0x8002AC28);
ZZ_MARK(0x8002AC2C);
ZZ_MARK(0x8002AC30);
ZZ_MARK(0x8002AC34);
ZZ_MARK(0x8002AC38);
ZZ_MARK(0x8002AC3C);
ZZ_MARK(0x8002AC40);
ZZ_MARK(0x8002AC44);
ZZ_MARK(0x8002AC48);
ZZ_MARK_TARGET(0x8002AC4C,ZZ_2ABE4_68);
ZZ_MARK(0x8002AC50);
ZZ_MARK(0x8002AC54);
ZZ_MARK(0x8002AC58);
ZZ_MARK(0x8002AC5C);
ZZ_MARK(0x8002AC60);
ZZ_MARK(0x8002AC64);
ZZ_MARK(0x8002AC68);
ZZ_MARK(0x8002AC6C);
ZZ_MARK(0x8002AC70);
ZZ_MARK(0x8002AC74);
ZZ_MARK(0x8002AC78);
ZZ_MARK(0x8002AC7C);
ZZ_MARK_TARGET(0x8002AC80,ZZ_2ABE4_9C);
ZZ_MARK(0x8002AC84);
ZZ_MARK(0x8002AC88);
ZZ_MARK(0x8002AC8C);
ZZ_MARK(0x8002AC90);
ZZ_MARK(0x8002AC94);
ZZ_MARK(0x8002AC98);
ZZ_MARK(0x8002AC9C);
ZZ_MARK(0x8002ACA0);
ZZ_MARK(0x8002ACA4);
ZZ_MARK(0x8002ACA8);
ZZ_MARK(0x8002ACAC);
ZZ_MARK(0x8002ACB0);
ZZ_MARK(0x8002ACB4);
ZZ_MARK(0x8002ACB8);
ZZ_MARK(0x8002ACBC);
ZZ_MARK_TARGET(0x8002ACC0,ZZ_2ABE4_DC);
ZZ_MARK(0x8002ACC4);
ZZ_MARK(0x8002ACC8);
ZZ_MARK(0x8002ACCC);
ZZ_MARK(0x8002ACD0);
ZZ_MARK(0x8002ACD4);
ZZ_MARK(0x8002ACD8);
ZZ_MARK(0x8002ACDC);
ZZ_MARK(0x8002ACE0);
ZZ_MARK(0x8002ACE4);
ZZ_MARK(0x8002ACE8);
ZZ_MARK(0x8002ACEC);
ZZ_MARK_TARGET(0x8002ACF0,ZZ_2ABE4_10C);
ZZ_MARK(0x8002ACF4);
ZZ_MARK(0x8002ACF8);
ZZ_MARK(0x8002ACFC);
ZZ_MARK(0x8002AD00);
ZZ_MARK_TARGET(0x8002AD04,ZZ_2ABE4_120);
ZZ_MARK(0x8002AD08);
ZZ_MARK(0x8002AD0C);
ZZ_MARK(0x8002AD10);
ZZ_MARK(0x8002AD14);
ZZ_MARK(0x8002AD18);
ZZ_MARK(0x8002AD1C);
ZZ_MARK(0x8002AD20);
ZZ_MARK_TARGET(0x8002AD24,ZZ_2ABE4_140);
ZZ_MARK(0x8002AD28);
ZZ_MARK(0x8002AD2C);
ZZ_MARK(0x8002AD30);
ZZ_MARK(0x8002AD34);
ZZ_MARK_TARGET(0x8002AD38,ZZ_2ABE4_154);
ZZ_MARK(0x8002AD3C);
ZZ_MARK_TARGET(0x8002AD40,ZZ_2ABE4_15C);
ZZ_MARK(0x8002AD44);
ZZ_MARK(0x8002AD48);
ZZ_MARK(0x8002AD4C);
ZZ_MARK(0x8002AD50);
ZZ_MARK(0x8002AD54);
ZZ_MARK(0x8002AD58);
ZZ_MARK(0x8002AD5C);
ZZ_MARK(0x8002AD60);
ZZ_MARK(0x8002AD64);
ZZ_MARK(0x8002AD68);
ZZ_MARK(0x8002AD6C);
ZZ_MARK(0x8002AD70);
ZZ_MARK(0x8002AD74);
ZZ_MARK(0x8002AD78);
ZZ_MARK(0x8002AD7C);
ZZ_MARK(0x8002AD80);
ZZ_MARK(0x8002AD84);
ZZ_MARK(0x8002AD88);
ZZ_MARK(0x8002AD8C);
ZZ_MARK(0x8002AD90);
ZZ_MARK(0x8002AD94);
ZZ_MARK(0x8002AD98);
ZZ_MARK(0x8002AD9C);
ZZ_MARK(0x8002ADA0);
ZZ_MARK(0x8002ADA4);
ZZ_MARK(0x8002ADA8);
ZZ_MARK(0x8002ADAC);
ZZ_MARK(0x8002ADB0);
ZZ_MARK(0x8002ADB4);
ZZ_MARK(0x8002ADB8);
ZZ_MARK_TARGET(0x8002ADBC,ZZ_2ABE4_1D8);
ZZ_MARK(0x8002ADC0);
ZZ_MARK(0x8002ADC4);
ZZ_MARK_TARGET(0x8002ADC8,ZZ_2ABE4_1E4);
ZZ_MARK(0x8002ADCC);
ZZ_MARK(0x8002ADD0);
ZZ_MARK(0x8002ADD4);
ZZ_MARK(0x8002ADD8);
ZZ_MARK(0x8002ADDC);
ZZ_MARK(0x8002ADE0);
ZZ_MARK(0x8002ADE4);
ZZ_MARK(0x8002ADE8);
ZZ_MARK(0x8002ADEC);
ZZ_MARK(0x8002ADF0);
ZZ_MARK(0x8002ADF4);
ZZ_MARK(0x8002ADF8);
ZZ_MARK(0x8002ADFC);
ZZ_MARK(0x8002AE00);
ZZ_MARK(0x8002AE04);
ZZ_MARK_TARGET(0x8002AE08,ZZ_2ABE4_224);
ZZ_MARK(0x8002AE0C);
ZZ_MARK(0x8002AE10);
ZZ_MARK(0x8002AE14);
ZZ_MARK(0x8002AE18);
ZZ_MARK(0x8002AE1C);
ZZ_MARK(0x8002AE20);
ZZ_MARK(0x8002AE24);
ZZ_MARK(0x8002AE28);
ZZ_MARK(0x8002AE2C);
ZZ_MARK(0x8002AE30);
ZZ_MARK(0x8002AE34);
ZZ_MARK_TARGET(0x8002AE38,ZZ_2ABE4_254);
ZZ_MARK(0x8002AE3C);
ZZ_MARK(0x8002AE40);
ZZ_MARK(0x8002AE44);
ZZ_MARK(0x8002AE48);
ZZ_MARK_TARGET(0x8002AE4C,ZZ_2ABE4_268);
ZZ_MARK(0x8002AE50);
ZZ_MARK(0x8002AE54);
ZZ_MARK(0x8002AE58);
ZZ_MARK(0x8002AE5C);
ZZ_MARK(0x8002AE60);
ZZ_MARK(0x8002AE64);
ZZ_MARK(0x8002AE68);
ZZ_MARK_TARGET(0x8002AE6C,ZZ_2ABE4_288);
ZZ_MARK(0x8002AE70);
ZZ_MARK(0x8002AE74);
ZZ_MARK(0x8002AE78);
ZZ_MARK(0x8002AE7C);
ZZ_MARK_TARGET(0x8002AE80,ZZ_2ABE4_29C);
ZZ_MARK(0x8002AE84);
ZZ_MARK_TARGET(0x8002AE88,ZZ_2ABE4_2A4);
ZZ_MARK(0x8002AE8C);
ZZ_MARK(0x8002AE90);
ZZ_MARK(0x8002AE94);
ZZ_MARK(0x8002AE98);
ZZ_MARK(0x8002AE9C);
ZZ_MARK(0x8002AEA0);
ZZ_MARK(0x8002AEA4);
ZZ_MARK(0x8002AEA8);
ZZ_MARK(0x8002AEAC);
ZZ_MARK(0x8002AEB0);
ZZ_MARK(0x8002AEB4);
ZZ_MARK(0x8002AEB8);
ZZ_MARK(0x8002AEBC);
ZZ_MARK(0x8002AEC0);
ZZ_MARK(0x8002AEC4);
ZZ_MARK(0x8002AEC8);
ZZ_MARK(0x8002AECC);
ZZ_MARK(0x8002AED0);
ZZ_MARK(0x8002AED4);
ZZ_MARK(0x8002AED8);
ZZ_MARK(0x8002AEDC);
ZZ_MARK(0x8002AEE0);
ZZ_MARK(0x8002AEE4);
ZZ_MARK(0x8002AEE8);
ZZ_MARK(0x8002AEEC);
ZZ_MARK(0x8002AEF0);
ZZ_MARK(0x8002AEF4);
ZZ_MARK(0x8002AEF8);
ZZ_MARK(0x8002AEFC);
ZZ_MARK(0x8002AF00);
ZZ_MARK(0x8002AF04);
ZZ_MARK(0x8002AF08);
ZZ_MARK(0x8002AF0C);
ZZ_MARK(0x8002AF10);
ZZ_MARK(0x8002AF14);
ZZ_MARK(0x8002AF18);
ZZ_MARK(0x8002AF1C);
ZZ_MARK(0x8002AF20);
ZZ_MARK(0x8002AF24);
ZZ_MARK(0x8002AF28);
ZZ_MARK(0x8002AF2C);
ZZ_MARK(0x8002AF30);
ZZ_MARK(0x8002AF34);
ZZ_MARK(0x8002AF38);
ZZ_MARK(0x8002AF3C);
ZZ_MARK(0x8002AF40);
ZZ_MARK(0x8002AF44);
ZZ_MARK(0x8002AF48);
ZZ_MARK(0x8002AF4C);
ZZ_MARK(0x8002AF50);
ZZ_MARK(0x8002AF54);
ZZ_MARK(0x8002AF58);
ZZ_MARK(0x8002AF5C);
ZZ_MARK(0x8002AF60);
ZZ_MARK(0x8002AF64);
ZZ_MARK(0x8002AF68);
ZZ_MARK(0x8002AF6C);
ZZ_MARK(0x8002AF70);
ZZ_MARK(0x8002AF74);
ZZ_MARK(0x8002AF78);
ZZ_MARK(0x8002AF7C);
ZZ_MARK(0x8002AF80);
ZZ_MARK(0x8002AF84);
ZZ_MARK(0x8002AF88);
ZZ_MARK(0x8002AF8C);
ZZ_MARK(0x8002AF90);
ZZ_MARK(0x8002AF94);
ZZ_MARK(0x8002AF98);
ZZ_MARK(0x8002AF9C);
ZZ_MARK(0x8002AFA0);
ZZ_MARK(0x8002AFA4);
ZZ_MARK(0x8002AFA8);
ZZ_MARK(0x8002AFAC);
ZZ_MARK(0x8002AFB0);
ZZ_MARK(0x8002AFB4);
ZZ_MARK(0x8002AFB8);
ZZ_MARK(0x8002AFBC);
ZZ_MARK_TARGET(0x8002AFC0,ZZ_2ABE4_3DC);
ZZ_MARK(0x8002AFC4);
ZZ_MARK_TARGET(0x8002AFC8,ZZ_2ABE4_3E4);
ZZ_MARK(0x8002AFCC);
ZZ_MARK(0x8002AFD0);
ZZ_MARK(0x8002AFD4);
ZZ_MARK(0x8002AFD8);
ZZ_MARK(0x8002AFDC);
ZZ_MARK(0x8002AFE0);
ZZ_MARK(0x8002AFE4);
ZZ_MARK(0x8002AFE8);
ZZ_MARK(0x8002AFEC);
ZZ_MARK(0x8002AFF0);
ZZ_MARK(0x8002AFF4);
ZZ_MARK(0x8002AFF8);
ZZ_MARK(0x8002AFFC);
ZZ_MARK(0x8002B000);
ZZ_MARK(0x8002B004);
ZZ_MARK(0x8002B008);
ZZ_MARK(0x8002B00C);
ZZ_MARK(0x8002B010);
ZZ_MARK(0x8002B014);
ZZ_MARK(0x8002B018);
ZZ_MARK(0x8002B01C);
ZZ_MARK(0x8002B020);
ZZ_MARK(0x8002B024);
ZZ_MARK(0x8002B028);
ZZ_MARK(0x8002B02C);
ZZ_MARK(0x8002B030);
ZZ_MARK(0x8002B034);
ZZ_MARK(0x8002B038);
ZZ_MARK(0x8002B03C);
ZZ_MARK(0x8002B040);
ZZ_MARK(0x8002B044);
ZZ_MARK(0x8002B048);
ZZ_MARK(0x8002B04C);
ZZ_MARK(0x8002B050);
ZZ_MARK(0x8002B054);
ZZ_MARK(0x8002B058);
ZZ_MARK(0x8002B05C);
ZZ_MARK(0x8002B060);
ZZ_MARK(0x8002B064);
ZZ_MARK(0x8002B068);
ZZ_MARK(0x8002B06C);
ZZ_MARK(0x8002B070);
ZZ_MARK(0x8002B074);
ZZ_MARK(0x8002B078);
ZZ_MARK(0x8002B07C);
ZZ_MARK(0x8002B080);
ZZ_MARK(0x8002B084);
ZZ_MARK(0x8002B088);
ZZ_MARK(0x8002B08C);
ZZ_MARK(0x8002B090);
ZZ_MARK(0x8002B094);
ZZ_MARK(0x8002B098);
ZZ_MARK(0x8002B09C);
ZZ_MARK_TARGET(0x8002B0A0,ZZ_2ABE4_4BC);
ZZ_MARK(0x8002B0A4);
ZZ_MARK_TARGET(0x8002B0A8,ZZ_2ABE4_4C4);
ZZ_MARK(0x8002B0AC);
ZZ_MARK(0x8002B0B0);
ZZ_MARK(0x8002B0B4);
ZZ_MARK(0x8002B0B8);
ZZ_MARK(0x8002B0BC);
ZZ_MARK(0x8002B0C0);
ZZ_MARK(0x8002B0C4);
ZZ_MARK(0x8002B0C8);
ZZ_MARK(0x8002B0CC);
ZZ_MARK(0x8002B0D0);
ZZ_MARK(0x8002B0D4);
ZZ_MARK(0x8002B0D8);
ZZ_MARK(0x8002B0DC);
ZZ_MARK(0x8002B0E0);
ZZ_MARK(0x8002B0E4);
ZZ_MARK(0x8002B0E8);
ZZ_MARK(0x8002B0EC);
ZZ_MARK(0x8002B0F0);
ZZ_MARK(0x8002B0F4);
ZZ_MARK(0x8002B0F8);
ZZ_MARK(0x8002B0FC);
ZZ_MARK_TARGET(0x8002B100,ZZ_2ABE4_51C);
ZZ_MARK(0x8002B104);
ZZ_MARK(0x8002B108);
ZZ_MARK(0x8002B10C);
ZZ_MARK(0x8002B110);
ZZ_MARK(0x8002B114);
ZZ_MARK(0x8002B118);
ZZ_MARK(0x8002B11C);
ZZ_MARK(0x8002B120);
ZZ_MARK(0x8002B124);
ZZ_MARK(0x8002B128);
ZZ_MARK(0x8002B12C);
ZZ_MARK(0x8002B130);
ZZ_MARK(0x8002B134);
ZZ_MARK(0x8002B138);
ZZ_MARK(0x8002B13C);
ZZ_MARK(0x8002B140);
ZZ_MARK(0x8002B144);
ZZ_MARK(0x8002B148);
ZZ_MARK(0x8002B14C);
ZZ_MARK(0x8002B150);
ZZ_MARK(0x8002B154);
ZZ_MARK(0x8002B158);
ZZ_MARK(0x8002B15C);
ZZ_MARK(0x8002B160);
ZZ_MARK(0x8002B164);
ZZ_MARK(0x8002B168);
ZZ_MARK(0x8002B16C);
ZZ_MARK(0x8002B170);
ZZ_MARK(0x8002B174);
ZZ_MARK(0x8002B178);
ZZ_MARK(0x8002B17C);
ZZ_MARK(0x8002B180);
ZZ_MARK(0x8002B184);
ZZ_MARK(0x8002B188);
ZZ_MARK_TARGET(0x8002B18C,ZZ_2ABE4_5A8);
ZZ_MARK(0x8002B190);
ZZ_MARK(0x8002B194);
ZZ_MARK(0x8002B198);
ZZ_MARK(0x8002B19C);
ZZ_MARK(0x8002B1A0);
ZZ_MARK(0x8002B1A4);
ZZ_MARK(0x8002B1A8);
ZZ_MARK(0x8002B1AC);
ZZ_MARK(0x8002B1B0);
ZZ_MARK(0x8002B1B4);
ZZ_MARK(0x8002B1B8);
ZZ_MARK(0x8002B1BC);
ZZ_MARK(0x8002B1C0);
ZZ_MARK(0x8002B1C4);
ZZ_MARK(0x8002B1C8);
ZZ_MARK(0x8002B1CC);
ZZ_MARK(0x8002B1D0);
ZZ_MARK(0x8002B1D4);
ZZ_MARK(0x8002B1D8);
ZZ_MARK_TARGET(0x8002B1DC,ZZ_2ABE4_5F8);
ZZ_MARK(0x8002B1E0);
ZZ_MARK(0x8002B1E4);
ZZ_MARK(0x8002B1E8);
ZZ_MARK(0x8002B1EC);
ZZ_MARK(0x8002B1F0);
ZZ_MARK(0x8002B1F4);
ZZ_MARK(0x8002B1F8);
ZZ_MARK(0x8002B1FC);
ZZ_MARK(0x8002B200);
ZZ_MARK(0x8002B204);
ZZ_MARK(0x8002B208);
ZZ_MARK(0x8002B20C);
ZZ_MARK(0x8002B210);
ZZ_MARK(0x8002B214);
ZZ_MARK(0x8002B218);
ZZ_MARK(0x8002B21C);
ZZ_MARK(0x8002B220);
ZZ_MARK(0x8002B224);
ZZ_MARK(0x8002B228);
ZZ_MARK(0x8002B22C);
ZZ_MARK(0x8002B230);
ZZ_MARK(0x8002B234);
ZZ_MARK(0x8002B238);
ZZ_MARK_TARGET(0x8002B23C,ZZ_2ABE4_658);
ZZ_MARK(0x8002B240);
ZZ_MARK(0x8002B244);
ZZ_MARK(0x8002B248);
ZZ_MARK(0x8002B24C);
ZZ_MARK(0x8002B250);
ZZ_MARK(0x8002B254);
ZZ_MARK(0x8002B258);
ZZ_MARK(0x8002B25C);
ZZ_MARK(0x8002B260);
ZZ_MARK(0x8002B264);
ZZ_MARK(0x8002B268);
ZZ_MARK(0x8002B26C);
ZZ_MARK(0x8002B270);
ZZ_MARK(0x8002B274);
ZZ_MARK(0x8002B278);
ZZ_MARK(0x8002B27C);
ZZ_MARK(0x8002B280);
ZZ_MARK(0x8002B284);
ZZ_MARK_TARGET(0x8002B288,ZZ_2ABE4_6A4);
ZZ_MARK(0x8002B28C);
ZZ_MARK(0x8002B290);
ZZ_MARK(0x8002B294);
ZZ_MARK(0x8002B298);
ZZ_MARK(0x8002B29C);
ZZ_MARK(0x8002B2A0);
ZZ_MARK(0x8002B2A4);
ZZ_MARK_TARGET(0x8002B2A8,ZZ_2ABE4_6C4);
ZZ_MARK(0x8002B2AC);
ZZ_MARK(0x8002B2B0);
ZZ_MARK(0x8002B2B4);
ZZ_MARK_TARGET(0x8002B2B8,ZZ_2ABE4_6D4);
ZZ_MARK(0x8002B2BC);
ZZ_MARK(0x8002B2C0);
ZZ_MARK(0x8002B2C4);
ZZ_MARK(0x8002B2C8);
ZZ_MARK(0x8002B2CC);
ZZ_MARK_TARGET(0x8002B2D0,ZZ_2ABE4_6EC);
ZZ_MARK(0x8002B2D4);
ZZ_MARK(0x8002B2D8);
ZZ_MARK(0x8002B2DC);
ZZ_MARK(0x8002B2E0);
ZZ_MARK(0x8002B2E4);
ZZ_MARK(0x8002B2E8);
ZZ_MARK(0x8002B2EC);
ZZ_MARK(0x8002B2F0);
ZZ_MARK_TARGET(0x8002B2F4,ZZ_2ABE4_710);
ZZ_MARK(0x8002B2F8);
ZZ_MARK(0x8002B2FC);
ZZ_MARK(0x8002B300);
ZZ_MARK(0x8002B304);
ZZ_MARK(0x8002B308);
ZZ_MARK(0x8002B30C);
ZZ_MARK(0x8002B310);
ZZ_MARK(0x8002B314);
ZZ_MARK(0x8002B318);
ZZ_MARK(0x8002B31C);
ZZ_MARK(0x8002B320);
ZZ_MARK(0x8002B324);
ZZ_MARK(0x8002B328);
ZZ_MARK(0x8002B32C);
ZZ_MARK(0x8002B330);
ZZ_MARK(0x8002B334);
ZZ_MARK(0x8002B338);
ZZ_MARK(0x8002B33C);
ZZ_MARK(0x8002B340);
ZZ_MARK(0x8002B344);
ZZ_MARK(0x8002B348);
ZZ_MARK(0x8002B34C);
ZZ_MARK(0x8002B350);
ZZ_MARK(0x8002B354);
ZZ_MARK(0x8002B358);
ZZ_MARK(0x8002B35C);
ZZ_MARK(0x8002B360);
ZZ_MARK(0x8002B364);
ZZ_MARK_TARGET(0x8002B368,ZZ_2ABE4_784);
ZZ_MARK(0x8002B36C);
ZZ_MARK(0x8002B370);
ZZ_MARK(0x8002B374);
ZZ_MARK(0x8002B378);
ZZ_MARK(0x8002B37C);
ZZ_MARK(0x8002B380);
ZZ_MARK(0x8002B384);
ZZ_MARK(0x8002B388);
ZZ_MARK(0x8002B38C);
ZZ_MARK(0x8002B390);
ZZ_MARK(0x8002B394);
ZZ_MARK(0x8002B398);
ZZ_MARK_TARGET(0x8002B39C,ZZ_2ABE4_7B8);
ZZ_MARK(0x8002B3A0);
ZZ_MARK(0x8002B3A4);
ZZ_MARK(0x8002B3A8);
ZZ_MARK(0x8002B3AC);
ZZ_MARK(0x8002B3B0);
ZZ_MARK(0x8002B3B4);
ZZ_MARK(0x8002B3B8);
ZZ_MARK(0x8002B3BC);
ZZ_MARK(0x8002B3C0);
ZZ_MARK(0x8002B3C4);
ZZ_MARK(0x8002B3C8);
ZZ_MARK(0x8002B3CC);
ZZ_MARK(0x8002B3D0);
ZZ_MARK(0x8002B3D4);
ZZ_MARK(0x8002B3D8);
ZZ_MARK(0x8002B3DC);
ZZ_MARK_TARGET(0x8002B3E0,ZZ_2ABE4_7FC);
ZZ_MARK(0x8002B3E4);
ZZ_MARK(0x8002B3E8);
ZZ_MARK(0x8002B3EC);
ZZ_MARK(0x8002B3F0);
ZZ_MARK_TARGET(0x8002B3F4,ZZ_2ABE4_810);
ZZ_MARK(0x8002B3F8);
ZZ_MARK(0x8002B3FC);
ZZ_MARK(0x8002B400);
ZZ_MARK_TARGET(0x8002B404,ZZ_2ABE4_820);
ZZ_MARK(0x8002B408);
ZZ_MARK(0x8002B40C);
ZZ_MARK(0x8002B410);
ZZ_MARK_TARGET(0x8002B414,ZZ_2ABE4_830);
ZZ_MARK(0x8002B418);
ZZ_MARK(0x8002B41C);
ZZ_MARK(0x8002B420);
ZZ_MARK_TARGET(0x8002B424,ZZ_2ABE4_840);
ZZ_MARK(0x8002B428);
ZZ_MARK_TARGET(0x8002B42C,ZZ_2ABE4_848);
ZZ_MARK(0x8002B430);
ZZ_MARK(0x8002B434);
ZZ_MARK(0x8002B438);
ZZ_MARK_TARGET(0x8002B43C,ZZ_2ABE4_858);
ZZ_MARK_TARGET(0x8002B440,ZZ_2ABE4_85C);
ZZ_MARK_TARGET(0x8002B444,ZZ_2ABE4_860);
ZZ_MARK(0x8002B448);
ZZ_MARK(0x8002B44C);
ZZ_MARK(0x8002B450);
ZZ_MARK(0x8002B454);
ZZ_MARK(0x8002B458);
ZZ_MARK(0x8002B45C);
ZZ_MARK(0x8002B460);
ZZ_MARK(0x8002B464);
ZZ_MARK(0x8002B468);
ZZ_MARK(0x8002B46C);
ZZ_MARK(0x8002B470);
ZZ_MARK(0x8002B474);
