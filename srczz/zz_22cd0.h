#ifdef ZZ_INCLUDE_CODE
ZZ_22CD0:
	SP -= 176;
	EMU_Write32(SP + 172,RA); //+ 0xAC
	EMU_Write32(SP + 168,S2); //+ 0xA8
	EMU_Write32(SP + 164,S1); //+ 0xA4
	EMU_Write32(SP + 160,S0); //+ 0xA0
	V0 = EMU_ReadU32(A0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2916); //+ 0xB64
	A3 = 0x80060000;
	A3 = EMU_ReadU32(A3 + 2924); //+ 0xB6C
	T0 = 0x80060000;
	T0 = EMU_ReadU32(T0 + 2936); //+ 0xB78
	EMU_Write32(SP + 88,V0); //+ 0x58
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	EMU_Write32(SP + 92,V0); //+ 0x5C
	T1 = EMU_ReadU32(A0 + 8); //+ 0x8
	A0 = 0x80060000;
	A0 -= 17028;
	V0 = EMU_ReadU32(A0);
	A1 = 0x1;
	A2 = R0;
	A0 -= 12;
	EMU_Write32(SP + 24,V1); //+ 0x18
	EMU_Write32(SP + 28,A3); //+ 0x1C
	EMU_Write32(SP + 32,T0); //+ 0x20
	EMU_Write32(SP + 36,V0); //+ 0x24
	RA = 0x80022D44; //ZZ_22CD0_74
	EMU_Write32(SP + 96,T1); //+ 0x60
	ZZ_CLOCKCYCLES(29,0x80014364);
	goto ZZ_14364;
ZZ_22CD0_74:
	EMU_Write32(SP + 40,V0); //+ 0x28
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 17036); //+ 0xFFFFBD74
	A1 = EMU_ReadU32(V1 + 388); //+ 0x184
	V1 = A0 << 1;
	V1 += A0;
	V1 += A1;
	V1 <<= 2;
	V1 += V0;
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2924); //+ 0xB6C
	if (V1 != V0)
	{
		EMU_Write32(SP + 44,V0); //+ 0x2C
		ZZ_CLOCKCYCLES(16,0x80022D94);
		goto ZZ_22CD0_C4;
	}
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2936); //+ 0xB78
	ZZ_CLOCKCYCLES(20,0x80022D9C);
	goto ZZ_22CD0_CC;
ZZ_22CD0_C4:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17032); //+ 0xFFFFBD78
	ZZ_CLOCKCYCLES(2,0x80022D9C);
ZZ_22CD0_CC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 17032); //+ 0xFFFFBD78
	T0 = 0x1;
	if (V0)
	{
		EMU_Write32(SP + 48,V1); //+ 0x30
		ZZ_CLOCKCYCLES(5,0x80022DB4);
		goto ZZ_22CD0_E4;
	}
	EMU_Write32(SP + 48,V1); //+ 0x30
	T0 = 0x2;
	ZZ_CLOCKCYCLES(6,0x80022DB4);
ZZ_22CD0_E4:
	A0 = SP + 40;
	S2 = SP + 88;
	A1 = S2;
	A2 = SP + 104;
	A3 = SP + 108;
	V0 = SP + 112;
	EMU_Write32(SP + 52,T0); //+ 0x34
	RA = 0x80022DD8; //ZZ_22CD0_108
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(9,0x800245B0);
	goto ZZ_245B0;
ZZ_22CD0_108:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17236); //+ 0xFFFFBCAC
	if (!V1)
	{
		S1 = V0;
		ZZ_CLOCKCYCLES(5,0x8002300C);
		goto ZZ_22CD0_33C;
	}
	S1 = V0;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2924); //+ 0xB6C
	V0 = EMU_ReadU32(SP + 44); //+ 0x2C
	if (V1 != V0)
	{
		S0 = 0x2;
		ZZ_CLOCKCYCLES(11,0x80022E08);
		goto ZZ_22CD0_138;
	}
	S0 = 0x2;
	S0 = 0x1;
	ZZ_CLOCKCYCLES(12,0x80022E08);
ZZ_22CD0_138:
	if ((int32_t)S1 <= 0)
	{
		A0 = SP + 24;
		ZZ_CLOCKCYCLES(2,0x80022E2C);
		goto ZZ_22CD0_15C;
	}
	A0 = SP + 24;
	V0 = EMU_ReadU32(SP + 112); //+ 0x70
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 = EMU_ReadU32(SP + 108); //+ 0x6C
	A1 = S2;
	A3 = R0;
	ZZ_CLOCKCYCLES(9,0x80022E48);
	goto ZZ_22CD0_178;
ZZ_22CD0_15C:
	if ((int32_t)S1 >= 0)
	{
		A1 = S2;
		ZZ_CLOCKCYCLES(2,0x80022E58);
		goto ZZ_22CD0_188;
	}
	A1 = S2;
	V0 = EMU_ReadU32(SP + 112); //+ 0x70
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 = EMU_ReadU32(SP + 104); //+ 0x68
	A3 = 0x1;
	ZZ_CLOCKCYCLES(7,0x80022E48);
ZZ_22CD0_178:
	RA = 0x80022E50; //ZZ_22CD0_180
	ZZ_CLOCKCYCLES(2,0x800248CC);
	goto ZZ_248CC;
ZZ_22CD0_180:
	S0 = V0;
	ZZ_CLOCKCYCLES(2,0x80022E78);
	goto ZZ_22CD0_1A8;
ZZ_22CD0_188:
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	A1 = EMU_ReadU32(SP + 36); //+ 0x24
	EMU_Write32(SP + 40,V0); //+ 0x28
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,A0); //+ 0x30
	EMU_Write32(SP + 52,A1); //+ 0x34
	ZZ_CLOCKCYCLES(8,0x80022E78);
ZZ_22CD0_1A8:
	EMU_Write32(SP + 16,R0); //+ 0x10
	A0 = EMU_ReadU32(SP + 44); //+ 0x2C
	A1 = EMU_ReadU32(SP + 48); //+ 0x30
	A2 = SP + 120;
	RA = 0x80022E90; //ZZ_22CD0_1C0
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x80026C7C);
	goto ZZ_26C7C;
ZZ_22CD0_1C0:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17236); //+ 0xFFFFBCAC
	V0 = 0x100;
	EMU_SDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(6,0x80022EAC);
		goto ZZ_22CD0_1DC;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x80022EAC);
ZZ_22CD0_1DC:
	AT = -1;
	if (V1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80022EC4);
		goto ZZ_22CD0_1F4;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80022EC4);
		goto ZZ_22CD0_1F4;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80022EC4);
ZZ_22CD0_1F4:
	A3 = LO;
	if (!S1)
	{
		A1 = S0;
		ZZ_CLOCKCYCLES(3,0x80022EF0);
		goto ZZ_22CD0_220;
	}
	A1 = S0;
	A0 = SP + 24;
	RA = 0x80022EDC; //ZZ_22CD0_20C
	A2 = SP + 72;
	ZZ_CLOCKCYCLES(6,0x800240D4);
	goto ZZ_240D4;
ZZ_22CD0_20C:
	A0 = EMU_ReadU32(SP + 72); //+ 0x48
	A1 = EMU_ReadU32(SP + 76); //+ 0x4C
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	ZZ_CLOCKCYCLES(5,0x80022F08);
	goto ZZ_22CD0_238;
ZZ_22CD0_220:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2916); //+ 0xB64
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2924); //+ 0xB6C
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	ZZ_CLOCKCYCLES(6,0x80022F08);
ZZ_22CD0_238:
	RA = 0x80022F10; //ZZ_22CD0_240
	A3 = R0;
	ZZ_CLOCKCYCLES(2,0x80020304);
	goto ZZ_20304;
ZZ_22CD0_240:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 17236); //+ 0xFFFFBCAC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17232); //+ 0xFFFFBCB0
	V0 -= 1;
	V0 = V1 - V0;
	V0 <<= 10;
	EMU_SDivide(V0,V1);
	if (V1)
	{
		ZZ_CLOCKCYCLES(10,0x80022F3C);
		goto ZZ_22CD0_26C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(11,0x80022F3C);
ZZ_22CD0_26C:
	AT = -1;
	if (V1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80022F54);
		goto ZZ_22CD0_284;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80022F54);
		goto ZZ_22CD0_284;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80022F54);
ZZ_22CD0_284:
	A3 = LO;
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 17228); //+ 0xFFFFBCB4
	V0 = EMU_ReadU32(SP + 120); //+ 0x78
	V0 = V0 - A2;
	EMU_SMultiply(V0,A3);
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 17224); //+ 0xFFFFBCB8
	V0 = EMU_ReadU32(SP + 124); //+ 0x7C
	T1 = LO;
	V0 = V0 - A1;
	EMU_SMultiply(V0,A3);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17220); //+ 0xFFFFBCBC
	V0 = EMU_ReadU32(SP + 128); //+ 0x80
	T0 = LO;
	V0 = V0 - V1;
	EMU_SMultiply(V0,A3);
	V0 = (int32_t)T1 >> 10;
	V0 += A2;
	AT = 0x80060000;
	EMU_Write32(AT + 2700,V0); //+ 0xA8C
	V0 = (int32_t)T0 >> 10;
	V0 += A1;
	AT = 0x80060000;
	EMU_Write32(AT + 2704,V0); //+ 0xA90
	T3 = LO;
	V0 = (int32_t)T3 >> 10;
	V0 += V1;
	AT = 0x80060000;
	EMU_Write32(AT + 2708,V0); //+ 0xA94
	RA = 0x80022FE4; //ZZ_22CD0_314
	A0 = SP + 88;
	ZZ_CLOCKCYCLES(36,0x80023424);
	goto ZZ_23424;
ZZ_22CD0_314:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 17236); //+ 0xFFFFBCAC
	V0 -= 1;
	AT = 0x80060000;
	EMU_Write32(AT - 17236,V0); //+ 0xFFFFBCAC
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x800230A8);
		goto ZZ_22CD0_3D8;
	}
	ZZ_CLOCKCYCLES(10,0x800230CC);
	goto ZZ_22CD0_3FC;
ZZ_22CD0_33C:
	if ((int32_t)S1 <= 0)
	{
		S0 = 0x2;
		ZZ_CLOCKCYCLES(2,0x80023034);
		goto ZZ_22CD0_364;
	}
	S0 = 0x2;
	V0 = EMU_ReadU32(SP + 112); //+ 0x70
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 = EMU_ReadU32(SP + 108); //+ 0x6C
	A0 = SP + 24;
	A1 = S2;
	A3 = R0;
	ZZ_CLOCKCYCLES(10,0x80023054);
	goto ZZ_22CD0_384;
ZZ_22CD0_364:
	if ((int32_t)S1 >= 0)
	{
		A1 = S2;
		ZZ_CLOCKCYCLES(2,0x80023060);
		goto ZZ_22CD0_390;
	}
	A1 = S2;
	V0 = EMU_ReadU32(SP + 112); //+ 0x70
	EMU_Write32(SP + 20,S0); //+ 0x14
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 = EMU_ReadU32(SP + 104); //+ 0x68
	A0 = SP + 24;
	A3 = 0x1;
	ZZ_CLOCKCYCLES(8,0x80023054);
ZZ_22CD0_384:
	RA = 0x8002305C; //ZZ_22CD0_38C
	ZZ_CLOCKCYCLES(2,0x800248CC);
	goto ZZ_248CC;
ZZ_22CD0_38C:
	S0 = V0;
	ZZ_CLOCKCYCLES(1,0x80023060);
ZZ_22CD0_390:
	A0 = SP + 24;
	A1 = S0;
	A2 = SP + 72;
	RA = 0x80023074; //ZZ_22CD0_3A4
	A3 = -1;
	ZZ_CLOCKCYCLES(5,0x800240D4);
	goto ZZ_240D4;
ZZ_22CD0_3A4:
	A0 = EMU_ReadU32(SP + 72); //+ 0x48
	A1 = EMU_ReadU32(SP + 76); //+ 0x4C
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	RA = 0x80023088; //ZZ_22CD0_3B8
	A3 = R0;
	ZZ_CLOCKCYCLES(5,0x80020304);
	goto ZZ_20304;
ZZ_22CD0_3B8:
	RA = 0x80023090; //ZZ_22CD0_3C0
	A0 = SP + 88;
	ZZ_CLOCKCYCLES(2,0x80023424);
	goto ZZ_23424;
ZZ_22CD0_3C0:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 2924); //+ 0xB6C
	V0 = EMU_ReadU32(SP + 44); //+ 0x2C
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x800230CC);
		goto ZZ_22CD0_3FC;
	}
	ZZ_CLOCKCYCLES(6,0x800230A8);
ZZ_22CD0_3D8:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2924); //+ 0xB6C
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 17032); //+ 0xFFFFBD78
	V0 = 0x5;
	AT = 0x80060000;
	EMU_Write8(AT - 17364,V0); //+ 0xFFFFBC2C
	RA = 0x800230CC; //ZZ_22CD0_3FC
	ZZ_CLOCKCYCLES(9,0x800232F8);
	goto ZZ_232F8;
ZZ_22CD0_3FC:
	RA = EMU_ReadU32(SP + 172); //+ 0xAC
	S2 = EMU_ReadU32(SP + 168); //+ 0xA8
	S1 = EMU_ReadU32(SP + 164); //+ 0xA4
	S0 = EMU_ReadU32(SP + 160); //+ 0xA0
	SP += 176;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80027050,ZZ_26F14_13C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80022CD0,0x80022D44,ZZ_22CD0);
ZZ_MARK_TARGET(0x80022D44,0x80022D94,ZZ_22CD0_74);
ZZ_MARK_TARGET(0x80022D94,0x80022D9C,ZZ_22CD0_C4);
ZZ_MARK_TARGET(0x80022D9C,0x80022DB4,ZZ_22CD0_CC);
ZZ_MARK_TARGET(0x80022DB4,0x80022DD8,ZZ_22CD0_E4);
ZZ_MARK_TARGET(0x80022DD8,0x80022E08,ZZ_22CD0_108);
ZZ_MARK_TARGET(0x80022E08,0x80022E2C,ZZ_22CD0_138);
ZZ_MARK_TARGET(0x80022E2C,0x80022E48,ZZ_22CD0_15C);
ZZ_MARK_TARGET(0x80022E48,0x80022E50,ZZ_22CD0_178);
ZZ_MARK_TARGET(0x80022E50,0x80022E58,ZZ_22CD0_180);
ZZ_MARK_TARGET(0x80022E58,0x80022E78,ZZ_22CD0_188);
ZZ_MARK_TARGET(0x80022E78,0x80022E90,ZZ_22CD0_1A8);
ZZ_MARK_TARGET(0x80022E90,0x80022EAC,ZZ_22CD0_1C0);
ZZ_MARK_TARGET(0x80022EAC,0x80022EC4,ZZ_22CD0_1DC);
ZZ_MARK_TARGET(0x80022EC4,0x80022EDC,ZZ_22CD0_1F4);
ZZ_MARK_TARGET(0x80022EDC,0x80022EF0,ZZ_22CD0_20C);
ZZ_MARK_TARGET(0x80022EF0,0x80022F08,ZZ_22CD0_220);
ZZ_MARK_TARGET(0x80022F08,0x80022F10,ZZ_22CD0_238);
ZZ_MARK_TARGET(0x80022F10,0x80022F3C,ZZ_22CD0_240);
ZZ_MARK_TARGET(0x80022F3C,0x80022F54,ZZ_22CD0_26C);
ZZ_MARK_TARGET(0x80022F54,0x80022FE4,ZZ_22CD0_284);
ZZ_MARK_TARGET(0x80022FE4,0x8002300C,ZZ_22CD0_314);
ZZ_MARK_TARGET(0x8002300C,0x80023034,ZZ_22CD0_33C);
ZZ_MARK_TARGET(0x80023034,0x80023054,ZZ_22CD0_364);
ZZ_MARK_TARGET(0x80023054,0x8002305C,ZZ_22CD0_384);
ZZ_MARK_TARGET(0x8002305C,0x80023060,ZZ_22CD0_38C);
ZZ_MARK_TARGET(0x80023060,0x80023074,ZZ_22CD0_390);
ZZ_MARK_TARGET(0x80023074,0x80023088,ZZ_22CD0_3A4);
ZZ_MARK_TARGET(0x80023088,0x80023090,ZZ_22CD0_3B8);
ZZ_MARK_TARGET(0x80023090,0x800230A8,ZZ_22CD0_3C0);
ZZ_MARK_TARGET(0x800230A8,0x800230CC,ZZ_22CD0_3D8);
ZZ_MARK_TARGET(0x800230CC,0x800230E8,ZZ_22CD0_3FC);
