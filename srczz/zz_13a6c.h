#ifdef ZZ_INCLUDE_CODE
ZZ_13A6C:
	SP -= 32;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0;
	V0 = S1 << 1;
	V0 += S1;
	V0 <<= 2;
	V0 = V0 - S1;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = V0 << 2;
	EMU_Write32(SP + 24,RA); //+ 0x18
	AT = 0x80060000;
	AT += S0;
	V1 = EMU_ReadS16(AT + 12296); //+ 0x3008
	V0 = 0x14;
	if (V1 == V0)
	{
		V0 = 0x15;
		ZZ_CLOCKCYCLES(16,0x80013ABC);
		goto ZZ_13A6C_50;
	}
	V0 = 0x15;
	if (V1 == V0)
	{
		V0 = S1 << 1;
		ZZ_CLOCKCYCLES(18,0x80013B1C);
		goto ZZ_13A6C_B0;
	}
	V0 = S1 << 1;
	V0 = -14;
	ZZ_CLOCKCYCLES(20,0x80013B40);
	goto ZZ_13A6C_D4;
ZZ_13A6C_50:
	AT = 0x80060000;
	AT += S0;
	A0 = EMU_ReadU32(AT + 12316); //+ 0x301C
	RA = 0x80013AD0; //ZZ_13A6C_64
	A1 = R0;
	ZZ_CLOCKCYCLES(5,0x800171D8);
	goto ZZ_171D8;
ZZ_13A6C_64:
	AT = 0x80060000;
	AT += S0;
	V1 = EMU_ReadU32(AT + 12324); //+ 0x3024
	AT = 0x80060000;
	AT += S0;
	V0 = EMU_ReadU32(AT + 12312); //+ 0x3018
	EMU_Write32(V1,V0);
	AT = 0x80060000;
	AT += S0;
	V0 = EMU_ReadU32(AT + 12312); //+ 0x3018
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 32164); //+ 0xFFFF825C
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	V1 = -18;
	EMU_Write32(V0,V1);
	V0 = S1 << 1;
	ZZ_CLOCKCYCLES(19,0x80013B1C);
ZZ_13A6C_B0:
	V0 += S1;
	V0 <<= 2;
	V0 = V0 - S1;
	V0 <<= 2;
	V1 = 0x1;
	AT = 0x80060000;
	AT += V0;
	EMU_Write16(AT + 12296,V1); //+ 0x3008
	V0 = -14;
	ZZ_CLOCKCYCLES(9,0x80013B40);
ZZ_13A6C_D4:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80013B74,ZZ_13B58_1C);
	ZZ_JUMPREGISTER(0x80013A3C,ZZ_1398C_B0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013A6C,ZZ_13A6C);
ZZ_MARK(0x80013A70);
ZZ_MARK(0x80013A74);
ZZ_MARK(0x80013A78);
ZZ_MARK(0x80013A7C);
ZZ_MARK(0x80013A80);
ZZ_MARK(0x80013A84);
ZZ_MARK(0x80013A88);
ZZ_MARK(0x80013A8C);
ZZ_MARK(0x80013A90);
ZZ_MARK(0x80013A94);
ZZ_MARK(0x80013A98);
ZZ_MARK(0x80013A9C);
ZZ_MARK(0x80013AA0);
ZZ_MARK(0x80013AA4);
ZZ_MARK(0x80013AA8);
ZZ_MARK(0x80013AAC);
ZZ_MARK(0x80013AB0);
ZZ_MARK(0x80013AB4);
ZZ_MARK(0x80013AB8);
ZZ_MARK_TARGET(0x80013ABC,ZZ_13A6C_50);
ZZ_MARK(0x80013AC0);
ZZ_MARK(0x80013AC4);
ZZ_MARK(0x80013AC8);
ZZ_MARK(0x80013ACC);
ZZ_MARK_TARGET(0x80013AD0,ZZ_13A6C_64);
ZZ_MARK(0x80013AD4);
ZZ_MARK(0x80013AD8);
ZZ_MARK(0x80013ADC);
ZZ_MARK(0x80013AE0);
ZZ_MARK(0x80013AE4);
ZZ_MARK(0x80013AE8);
ZZ_MARK(0x80013AEC);
ZZ_MARK(0x80013AF0);
ZZ_MARK(0x80013AF4);
ZZ_MARK(0x80013AF8);
ZZ_MARK(0x80013AFC);
ZZ_MARK(0x80013B00);
ZZ_MARK(0x80013B04);
ZZ_MARK(0x80013B08);
ZZ_MARK(0x80013B0C);
ZZ_MARK(0x80013B10);
ZZ_MARK(0x80013B14);
ZZ_MARK(0x80013B18);
ZZ_MARK_TARGET(0x80013B1C,ZZ_13A6C_B0);
ZZ_MARK(0x80013B20);
ZZ_MARK(0x80013B24);
ZZ_MARK(0x80013B28);
ZZ_MARK(0x80013B2C);
ZZ_MARK(0x80013B30);
ZZ_MARK(0x80013B34);
ZZ_MARK(0x80013B38);
ZZ_MARK(0x80013B3C);
ZZ_MARK_TARGET(0x80013B40,ZZ_13A6C_D4);
ZZ_MARK(0x80013B44);
ZZ_MARK(0x80013B48);
ZZ_MARK(0x80013B4C);
ZZ_MARK(0x80013B50);
ZZ_MARK(0x80013B54);
