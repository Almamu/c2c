#ifdef ZZ_INCLUDE_CODE
ZZ_22480:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2924); //+ 0xB6C
	SP -= 40;
	EMU_Write32(SP + 32,S0); //+ 0x20
	S0 = A0;
	EMU_Write32(SP + 36,RA); //+ 0x24
	AT = 0x80060000;
	EMU_Write32(AT + 2964,S0); //+ 0xB94
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8002255C);
		goto ZZ_22480_DC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	if (!V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(15,0x8002255C);
		goto ZZ_22480_DC;
	}
	V0 = 0x2;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2924); //+ 0xB6C
	A1 = 0x173;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	RA = 0x800224E0; //ZZ_22480_60
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(24,0x800324E0);
	goto ZZ_324E0;
ZZ_22480_60:
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 2916); //+ 0xB64
	V1 = EMU_ReadU32(A1 + 16); //+ 0x10
	V1 = EMU_ReadU32(V1 + 388); //+ 0x184
	A0 = V0 << 1;
	A0 += V0;
	V1 += A0;
	V1 <<= 2;
	V1 += A1;
	V1 = EMU_ReadU32(V1 + 20); //+ 0x14
	V0 = 0x1;
	AT = 0x80060000;
	EMU_Write32(AT + 2928,V1); //+ 0xB70
	if (S0 == V0)
	{
		ZZ_CLOCKCYCLES(17,0x80022554);
		goto ZZ_22480_D4;
	}
	V0 = EMU_ReadU32(A1 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 388); //+ 0x184
	V0 = A0 + S0;
	V0 += V1;
	V0 <<= 2;
	V0 += A1;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	AT = 0x80060000;
	EMU_Write32(AT + 2932,V0); //+ 0xB74
	ZZ_CLOCKCYCLES(29,0x8002255C);
	goto ZZ_22480_DC;
ZZ_22480_D4:
	AT = 0x80060000;
	EMU_Write32(AT + 2932,V1); //+ 0xB74
	ZZ_CLOCKCYCLES(2,0x8002255C);
ZZ_22480_DC:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x800244CC,ZZ_2441C_B0);
	ZZ_JUMPREGISTER(0x80026444,ZZ_26368_DC);
	ZZ_JUMPREGISTER(0x8002677C,ZZ_26700_7C);
	ZZ_JUMPREGISTER(0x8002098C,ZZ_20304_688);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80022480,0x800224E0,ZZ_22480);
ZZ_MARK_TARGET(0x800224E0,0x80022554,ZZ_22480_60);
ZZ_MARK_TARGET(0x80022554,0x8002255C,ZZ_22480_D4);
ZZ_MARK_TARGET(0x8002255C,0x80022570,ZZ_22480_DC);
