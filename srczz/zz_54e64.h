#ifdef ZZ_INCLUDE_CODE
ZZ_54E64:
	SP -= 32;
	V0 = 999;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V0 -= 1;
	ZZ_CLOCKCYCLES(6,0x80054E7C);
ZZ_54E64_18:
	if ((int32_t)V0 >= 0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(2,0x80054E7C);
		goto ZZ_54E64_18;
	}
	V0 -= 1;
	S1 = 0xF2000000;
	S1 |= 0x2;
	A1 = 0x80060000;
	A1 -= 3456;
	EMU_Write8(A1,R0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 3472); //+ 0xFFFFF270
	V0 = 6;
	AT = 0x80060000;
	EMU_Write8(AT - 3454,V0); //+ 0xFFFFF282
	V0 = 2;
	AT = 0x80060000;
	EMU_Write8(AT - 3455,R0); //+ 0xFFFFF281
	AT = 0x80060000;
	EMU_Write32(AT - 3460,R0); //+ 0xFFFFF27C
	if (V1 == V0)
	{
		S0 = 17640;
		ZZ_CLOCKCYCLES(19,0x80054FF0);
		goto ZZ_54E64_18C;
	}
	S0 = 17640;
	V0 = (int32_t)V1 < 3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(22,0x80054EE4);
		goto ZZ_54E64_80;
	}
	if (!V1)
	{
		V0 = 127;
		ZZ_CLOCKCYCLES(24,0x80054F00);
		goto ZZ_54E64_9C;
	}
	V0 = 127;
	ZZ_CLOCKCYCLES(26,0x80054F40);
	goto ZZ_54E64_DC;
ZZ_54E64_80:
	V0 = 3;
	if (V1 == V0)
	{
		V0 = 5;
		ZZ_CLOCKCYCLES(3,0x80054F38);
		goto ZZ_54E64_D4;
	}
	V0 = 5;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x80054F10);
		goto ZZ_54E64_AC;
	}
	ZZ_CLOCKCYCLES(7,0x80054F40);
	goto ZZ_54E64_DC;
ZZ_54E64_9C:
	AT = 0x80060000;
	EMU_Write8(AT - 3454,V0); //+ 0xFFFFF282
	ZZ_CLOCKCYCLES(4,0x800550B4);
	goto ZZ_54E64_250;
ZZ_54E64_AC:
	AT = 0x80060000;
	EMU_Write8(AT - 3454,R0); //+ 0xFFFFF282
	if (A0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(4,0x80054F28);
		goto ZZ_54E64_C4;
	}
	V0 = 1;
	EMU_Write8(A1,V0);
	ZZ_CLOCKCYCLES(6,0x80054FF0);
	goto ZZ_54E64_18C;
ZZ_54E64_C4:
	S1 = 0xF2000000;
	S1 |= 0x3;
	S0 = 1;
	ZZ_CLOCKCYCLES(4,0x80054FF0);
	goto ZZ_54E64_18C;
ZZ_54E64_D4:
	S0 = 0x89D0;
	ZZ_CLOCKCYCLES(2,0x80054FF0);
	goto ZZ_54E64_18C;
ZZ_54E64_DC:
	A1 = 0x80060000;
	A1 -= 3468;
	V0 = EMU_ReadU32(A1);
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800550B4);
		goto ZZ_54E64_250;
	}
	A0 = EMU_ReadU32(A1 - 4); //+ 0xFFFFFFFC
	V0 = (int32_t)A0 < 70;
	if (!V0)
	{
		V1 = 0x200000;
		ZZ_CLOCKCYCLES(11,0x80054FB4);
		goto ZZ_54E64_150;
	}
	V1 = 0x200000;
	V1 |= 0x4CC0;
	EMU_SDivide(V1,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(15,0x80054F80);
		goto ZZ_54E64_11C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(16,0x80054F80);
ZZ_54E64_11C:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80054F98);
		goto ZZ_54E64_134;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80054F98);
		goto ZZ_54E64_134;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80054F98);
ZZ_54E64_134:
	V1 = LO;
	V0 = EMU_ReadU8(A1 + 13); //+ 0xD
	V0 += 1;
	EMU_Write8(A1 + 13,V0); //+ 0xD
	S0 = V1;
	ZZ_CLOCKCYCLES(7,0x80054FF0);
	goto ZZ_54E64_18C;
ZZ_54E64_150:
	V0 = 0x400000;
	V0 |= 0x9980;
	EMU_SDivide(V0,A0);
	if (A0)
	{
		ZZ_CLOCKCYCLES(5,0x80054FCC);
		goto ZZ_54E64_168;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(6,0x80054FCC);
ZZ_54E64_168:
	AT = -1;
	if (A0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x80054FE4);
		goto ZZ_54E64_180;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x80054FE4);
		goto ZZ_54E64_180;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x80054FE4);
ZZ_54E64_180:
	V0 = LO;
	S0 = V0;
	ZZ_CLOCKCYCLES(3,0x80054FF0);
ZZ_54E64_18C:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 3456); //+ 0xFFFFF280
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80055024);
		goto ZZ_54E64_1C0;
	}
	RA = 0x8005500C; //ZZ_54E64_1A8
	ZZ_CLOCKCYCLES(7,0x80049FB4);
	goto ZZ_49FB4;
ZZ_54E64_1A8:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 3464); //+ 0xFFFFF278
	RA = 0x8005501C; //ZZ_54E64_1B8
	ZZ_CLOCKCYCLES(4,0x8004A9A0);
	goto ZZ_4A9A0;
ZZ_54E64_1B8:
	ZZ_CLOCKCYCLES(2,0x800550AC);
	goto ZZ_54E64_248;
ZZ_54E64_1C0:
	RA = 0x8005502C; //ZZ_54E64_1C8
	ZZ_CLOCKCYCLES(2,0x80049FB4);
	goto ZZ_49FB4;
ZZ_54E64_1C8:
	RA = 0x80055034; //ZZ_54E64_1D0
	A0 = S1;
	ZZ_CLOCKCYCLES(2,0x8004A1A4);
	goto ZZ_4A1A4;
ZZ_54E64_1D0:
	A0 = S1;
	A1 = S0 & 0xFFFF;
	RA = 0x80055044; //ZZ_54E64_1E0
	A2 = 4096;
	ZZ_CLOCKCYCLES(4,0x8004A064);
	goto ZZ_4A064;
ZZ_54E64_1E0:
	A0 = 0x80060000;
	A0 = EMU_ReadU8(A0 - 3454); //+ 0xFFFFF282
	if (A0)
	{
		ZZ_CLOCKCYCLES(5,0x80055084);
		goto ZZ_54E64_220;
	}
	A0 = R0;
	RA = 0x80055064; //ZZ_54E64_200
	A1 = R0;
	ZZ_CLOCKCYCLES(8,0x8004A940);
	goto ZZ_4A940;
ZZ_54E64_200:
	A0 = 0x80060000;
	A0 = EMU_ReadU8(A0 - 3454); //+ 0xFFFFF282
	A1 = 0x80050000;
	A1 += 20748;
	AT = 0x80060000;
	EMU_Write32(AT - 3460,V0); //+ 0xFFFFF27C
	ZZ_CLOCKCYCLES(8,0x800550A4);
	goto ZZ_54E64_240;
ZZ_54E64_220:
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 3455); //+ 0xFFFFF281
	A1 = 0x80050000;
	A1 += 20812;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800550A4);
		goto ZZ_54E64_240;
	}
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 - 3464); //+ 0xFFFFF278
	ZZ_CLOCKCYCLES(8,0x800550A4);
ZZ_54E64_240:
	RA = 0x800550AC; //ZZ_54E64_248
	ZZ_CLOCKCYCLES(2,0x8004A940);
	goto ZZ_4A940;
ZZ_54E64_248:
	RA = 0x800550B4; //ZZ_54E64_250
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_54E64_250:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800550DC,ZZ_550CC_10);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80054E64,0x80054E7C,ZZ_54E64);
ZZ_MARK_TARGET(0x80054E7C,0x80054EE4,ZZ_54E64_18);
ZZ_MARK_TARGET(0x80054EE4,0x80054F00,ZZ_54E64_80);
ZZ_MARK_TARGET(0x80054F00,0x80054F10,ZZ_54E64_9C);
ZZ_MARK_TARGET(0x80054F10,0x80054F28,ZZ_54E64_AC);
ZZ_MARK_TARGET(0x80054F28,0x80054F38,ZZ_54E64_C4);
ZZ_MARK_TARGET(0x80054F38,0x80054F40,ZZ_54E64_D4);
ZZ_MARK_TARGET(0x80054F40,0x80054F80,ZZ_54E64_DC);
ZZ_MARK_TARGET(0x80054F80,0x80054F98,ZZ_54E64_11C);
ZZ_MARK_TARGET(0x80054F98,0x80054FB4,ZZ_54E64_134);
ZZ_MARK_TARGET(0x80054FB4,0x80054FCC,ZZ_54E64_150);
ZZ_MARK_TARGET(0x80054FCC,0x80054FE4,ZZ_54E64_168);
ZZ_MARK_TARGET(0x80054FE4,0x80054FF0,ZZ_54E64_180);
ZZ_MARK_TARGET(0x80054FF0,0x8005500C,ZZ_54E64_18C);
ZZ_MARK_TARGET(0x8005500C,0x8005501C,ZZ_54E64_1A8);
ZZ_MARK_TARGET(0x8005501C,0x80055024,ZZ_54E64_1B8);
ZZ_MARK_TARGET(0x80055024,0x8005502C,ZZ_54E64_1C0);
ZZ_MARK_TARGET(0x8005502C,0x80055034,ZZ_54E64_1C8);
ZZ_MARK_TARGET(0x80055034,0x80055044,ZZ_54E64_1D0);
ZZ_MARK_TARGET(0x80055044,0x80055064,ZZ_54E64_1E0);
ZZ_MARK_TARGET(0x80055064,0x80055084,ZZ_54E64_200);
ZZ_MARK_TARGET(0x80055084,0x800550A4,ZZ_54E64_220);
ZZ_MARK_TARGET(0x800550A4,0x800550AC,ZZ_54E64_240);
ZZ_MARK_TARGET(0x800550AC,0x800550B4,ZZ_54E64_248);
ZZ_MARK_TARGET(0x800550B4,0x800550CC,ZZ_54E64_250);
