#ifdef ZZ_INCLUDE_CODE
ZZ_36270:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A0;
	EMU_Write32(SP + 20,RA); //+ 0x14
	A0 = EMU_ReadU32(S0);
	if ((int32_t)A0 < 0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(8,0x8003629C);
		goto ZZ_36270_2C;
	}
	V0 = -1;
	RA = 0x80036298; //ZZ_36270_28
	ZZ_CLOCKCYCLES(10,0x8004A004);
	goto ZZ_4A004;
ZZ_36270_28:
	V0 = -1;
	ZZ_CLOCKCYCLES(1,0x8003629C);
ZZ_36270_2C:
	EMU_Write32(S0,V0);
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80035A88,ZZ_3578C_2FC);
	ZZ_JUMPREGISTER(0x80034DF8,ZZ_34D74_84);
	ZZ_JUMPREGISTER(0x80035370,ZZ_34F00_470);
	ZZ_JUMPREGISTER(0x80035CF0,ZZ_3578C_564);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80036270,ZZ_36270);
ZZ_MARK(0x80036274);
ZZ_MARK(0x80036278);
ZZ_MARK(0x8003627C);
ZZ_MARK(0x80036280);
ZZ_MARK(0x80036284);
ZZ_MARK(0x80036288);
ZZ_MARK(0x8003628C);
ZZ_MARK(0x80036290);
ZZ_MARK(0x80036294);
ZZ_MARK_TARGET(0x80036298,ZZ_36270_28);
ZZ_MARK_TARGET(0x8003629C,ZZ_36270_2C);
ZZ_MARK(0x800362A0);
ZZ_MARK(0x800362A4);
ZZ_MARK(0x800362A8);
ZZ_MARK(0x800362AC);
ZZ_MARK(0x800362B0);
