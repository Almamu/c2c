#ifdef ZZ_INCLUDE_CODE
ZZ_15340:
	SP -= 40;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A0;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	V1 = EMU_ReadU32(S2);
	V0 = 0x1;
	if (V1 != V0)
	{
		V0 = -255;
		ZZ_CLOCKCYCLES(10,0x8001544C);
		goto ZZ_15340_10C;
	}
	V0 = -255;
	V0 = EMU_ReadU32(GP + 40); //+ 0x28
	if (!V0)
	{
		ZZ_CLOCKCYCLES(14,0x80015394);
		goto ZZ_15340_54;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32180); //+ 0xFFFF824C
	if (!V0)
	{
		ZZ_CLOCKCYCLES(19,0x80015394);
		goto ZZ_15340_54;
	}
	RA = 0x80015394; //ZZ_15340_54
	A0 = 0x1;
	ZZ_CLOCKCYCLES(21,0x80012F94);
	goto ZZ_12F94;
ZZ_15340_54:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32172); //+ 0xFFFF8254
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x800153B0);
		goto ZZ_15340_70;
	}
	RA = 0x800153B0; //ZZ_15340_70
	A0 = 0x1;
	ZZ_CLOCKCYCLES(7,0x800515C0);
	goto ZZ_515C0;
ZZ_15340_70:
	RA = 0x800153B8; //ZZ_15340_78
	S0 = R0;
	ZZ_CLOCKCYCLES(2,0x800346B8);
	goto ZZ_346B8;
ZZ_15340_78:
	RA = 0x800153C0; //ZZ_15340_80
	S1 = R0;
	ZZ_CLOCKCYCLES(2,0x80032894);
	goto ZZ_32894;
ZZ_15340_80:
	AT = 0x80060000;
	AT += S1;
	V0 = EMU_ReadU32(AT - 19320); //+ 0xFFFFB488
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x800153E0);
		goto ZZ_15340_A0;
	}
	ZZ_JUMPREGISTER_BEGIN(V0);
	RA = 0x800153E0; //ZZ_15340_A0
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8001642C,ZZ_1642C);
	ZZ_JUMPREGISTER(0x80029A3C,ZZ_29A3C);
	ZZ_JUMPREGISTER(0x8002CE28,ZZ_2CE28);
	ZZ_JUMPREGISTER(0x8001F220,ZZ_1F220);
	ZZ_JUMPREGISTER(0x80032894,ZZ_32894);
	ZZ_JUMPREGISTER(0x800346B8,ZZ_346B8);
	ZZ_JUMPREGISTER(0x8002FFF4,ZZ_2FFF4);
	ZZ_JUMPREGISTER(0x80027E10,ZZ_27E10);
	ZZ_JUMPREGISTER_END();
ZZ_15340_A0:
	S0 += 1;
	V0 = (int32_t)S0 < 22;
	if (V0)
	{
		S1 += 28;
		ZZ_CLOCKCYCLES(4,0x800153C0);
		goto ZZ_15340_80;
	}
	S1 += 28;
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	if ((int32_t)V0 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(8,0x80015420);
		goto ZZ_15340_E0;
	}
	S0 = R0;
	A0 = S2;
	ZZ_CLOCKCYCLES(9,0x80015404);
ZZ_15340_C4:
	RA = 0x8001540C; //ZZ_15340_CC
	A1 = S0;
	ZZ_CLOCKCYCLES(2,0x80015704);
	goto ZZ_15704;
ZZ_15340_CC:
	V0 = EMU_ReadU32(S2 + 40); //+ 0x28
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)V0;
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(5,0x80015404);
		goto ZZ_15340_C4;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(5,0x80015420);
ZZ_15340_E0:
	A0 = EMU_ReadU32(S2 + 44); //+ 0x2C
	RA = 0x8001542C; //ZZ_15340_EC
	ZZ_CLOCKCYCLES(3,0x800116C0);
	goto ZZ_116C0;
ZZ_15340_EC:
	A0 = EMU_ReadU32(S2 + 2620); //+ 0xA3C
	RA = 0x80015438; //ZZ_15340_F8
	ZZ_CLOCKCYCLES(3,0x800116C0);
	goto ZZ_116C0;
ZZ_15340_F8:
	A0 = EMU_ReadU32(S2 + 24); //+ 0x18
	RA = 0x80015444; //ZZ_15340_104
	ZZ_CLOCKCYCLES(3,0x800116C0);
	goto ZZ_116C0;
ZZ_15340_104:
	V0 = -255;
	EMU_Write32(S2,R0);
	ZZ_CLOCKCYCLES(2,0x8001544C);
ZZ_15340_10C:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x80011AD8,ZZ_11800_2D8);
	ZZ_JUMPREGISTER(0x80011E00,ZZ_11800_600);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80015340,ZZ_15340);
ZZ_MARK(0x80015344);
ZZ_MARK(0x80015348);
ZZ_MARK(0x8001534C);
ZZ_MARK(0x80015350);
ZZ_MARK(0x80015354);
ZZ_MARK(0x80015358);
ZZ_MARK(0x8001535C);
ZZ_MARK(0x80015360);
ZZ_MARK(0x80015364);
ZZ_MARK(0x80015368);
ZZ_MARK(0x8001536C);
ZZ_MARK(0x80015370);
ZZ_MARK(0x80015374);
ZZ_MARK(0x80015378);
ZZ_MARK(0x8001537C);
ZZ_MARK(0x80015380);
ZZ_MARK(0x80015384);
ZZ_MARK(0x80015388);
ZZ_MARK(0x8001538C);
ZZ_MARK(0x80015390);
ZZ_MARK_TARGET(0x80015394,ZZ_15340_54);
ZZ_MARK(0x80015398);
ZZ_MARK(0x8001539C);
ZZ_MARK(0x800153A0);
ZZ_MARK(0x800153A4);
ZZ_MARK(0x800153A8);
ZZ_MARK(0x800153AC);
ZZ_MARK_TARGET(0x800153B0,ZZ_15340_70);
ZZ_MARK(0x800153B4);
ZZ_MARK_TARGET(0x800153B8,ZZ_15340_78);
ZZ_MARK(0x800153BC);
ZZ_MARK_TARGET(0x800153C0,ZZ_15340_80);
ZZ_MARK(0x800153C4);
ZZ_MARK(0x800153C8);
ZZ_MARK(0x800153CC);
ZZ_MARK(0x800153D0);
ZZ_MARK(0x800153D4);
ZZ_MARK(0x800153D8);
ZZ_MARK(0x800153DC);
ZZ_MARK_TARGET(0x800153E0,ZZ_15340_A0);
ZZ_MARK(0x800153E4);
ZZ_MARK(0x800153E8);
ZZ_MARK(0x800153EC);
ZZ_MARK(0x800153F0);
ZZ_MARK(0x800153F4);
ZZ_MARK(0x800153F8);
ZZ_MARK(0x800153FC);
ZZ_MARK(0x80015400);
ZZ_MARK_TARGET(0x80015404,ZZ_15340_C4);
ZZ_MARK(0x80015408);
ZZ_MARK_TARGET(0x8001540C,ZZ_15340_CC);
ZZ_MARK(0x80015410);
ZZ_MARK(0x80015414);
ZZ_MARK(0x80015418);
ZZ_MARK(0x8001541C);
ZZ_MARK_TARGET(0x80015420,ZZ_15340_E0);
ZZ_MARK(0x80015424);
ZZ_MARK(0x80015428);
ZZ_MARK_TARGET(0x8001542C,ZZ_15340_EC);
ZZ_MARK(0x80015430);
ZZ_MARK(0x80015434);
ZZ_MARK_TARGET(0x80015438,ZZ_15340_F8);
ZZ_MARK(0x8001543C);
ZZ_MARK(0x80015440);
ZZ_MARK_TARGET(0x80015444,ZZ_15340_104);
ZZ_MARK(0x80015448);
ZZ_MARK_TARGET(0x8001544C,ZZ_15340_10C);
ZZ_MARK(0x80015450);
ZZ_MARK(0x80015454);
ZZ_MARK(0x80015458);
ZZ_MARK(0x8001545C);
ZZ_MARK(0x80015460);
ZZ_MARK(0x80015464);
