#ifdef ZZ_INCLUDE_CODE
ZZ_34104:
	V0 = EMU_ReadS16(GP + 380); //+ 0x17C
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	V0 = (int32_t)V0 < 2;
	if (V0)
	{
		EMU_Write32(SP + 16,S0); //+ 0x10
		ZZ_CLOCKCYCLES(6,0x800341F0);
		goto ZZ_34104_EC;
	}
	EMU_Write32(SP + 16,S0); //+ 0x10
	V1 = EMU_ReadU32(GP + 544); //+ 0x220
	V0 = 0x3;
	if (V1 != V0)
	{
		A0 = (int32_t)A0 >> 8;
		ZZ_CLOCKCYCLES(10,0x800341F0);
		goto ZZ_34104_EC;
	}
	A0 = (int32_t)A0 >> 8;
	if ((int32_t)A0 <= 0)
	{
		V0 = (int32_t)A0 < 3;
		ZZ_CLOCKCYCLES(12,0x80034144);
		goto ZZ_34104_40;
	}
	V0 = (int32_t)A0 < 3;
	if (V0)
	{
		ZZ_CLOCKCYCLES(14,0x80034144);
		goto ZZ_34104_40;
	}
	if (A0 == V1)
	{
		ZZ_CLOCKCYCLES(16,0x80034178);
		goto ZZ_34104_74;
	}
	ZZ_CLOCKCYCLES(16,0x80034144);
ZZ_34104_40:
	S0 = 0x80060000;
	S0 -= 132;
	A0 = S0;
	A1 = 0x1;
	RA = 0x8003415C; //ZZ_34104_58
	A2 = R0;
	ZZ_CLOCKCYCLES(6,0x800347D4);
	goto ZZ_347D4;
ZZ_34104_58:
	A0 = S0 - 20;
	A1 = 0x3;
	RA = 0x8003416C; //ZZ_34104_68
	A2 = R0;
	ZZ_CLOCKCYCLES(4,0x800347D4);
	goto ZZ_347D4;
ZZ_34104_68:
	EMU_Write32(GP + 396,R0); //+ 0x18C
	ZZ_CLOCKCYCLES(3,0x800341D8);
	goto ZZ_34104_D4;
ZZ_34104_74:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12652); //+ 0xFFFFCE94
	if (V0)
	{
		V0 = 0x3FFF;
		ZZ_CLOCKCYCLES(5,0x800341A0);
		goto ZZ_34104_9C;
	}
	V0 = 0x3FFF;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12656); //+ 0xFFFFCE90
	if (!V0)
	{
		V0 = 0x3FFF;
		ZZ_CLOCKCYCLES(10,0x800341AC);
		goto ZZ_34104_A8;
	}
	V0 = 0x3FFF;
	ZZ_CLOCKCYCLES(10,0x800341A0);
ZZ_34104_9C:
	EMU_Write32(GP + 396,V0); //+ 0x18C
	ZZ_CLOCKCYCLES(3,0x800341B0);
	goto ZZ_34104_AC;
ZZ_34104_A8:
	EMU_Write32(GP + 396,R0); //+ 0x18C
	ZZ_CLOCKCYCLES(1,0x800341B0);
ZZ_34104_AC:
	S0 = 0x80060000;
	S0 -= 152;
	A0 = S0;
	A1 = 0x2;
	RA = 0x800341C8; //ZZ_34104_C4
	A2 = R0;
	ZZ_CLOCKCYCLES(6,0x800347D4);
	goto ZZ_347D4;
ZZ_34104_C4:
	A0 = S0 + 20;
	A1 = R0;
	RA = 0x800341D8; //ZZ_34104_D4
	A2 = 0x1;
	ZZ_CLOCKCYCLES(4,0x800347D4);
	goto ZZ_347D4;
ZZ_34104_D4:
	A2 = EMU_ReadS16(GP + 396); //+ 0x18C
	A0 = EMU_ReadS16(GP + 616); //+ 0x268
	A1 = 0x80060000;
	A1 = EMU_ReadS16(A1 - 132); //+ 0xFFFFFF7C
	RA = 0x800341F0; //ZZ_34104_EC
	A3 = A2;
	ZZ_CLOCKCYCLES(6,0x800569F8);
	goto ZZ_569F8;
ZZ_34104_EC:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80037FF0,ZZ_37930_6C0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80034104,0x80034144,ZZ_34104);
ZZ_MARK_TARGET(0x80034144,0x8003415C,ZZ_34104_40);
ZZ_MARK_TARGET(0x8003415C,0x8003416C,ZZ_34104_58);
ZZ_MARK_TARGET(0x8003416C,0x80034178,ZZ_34104_68);
ZZ_MARK_TARGET(0x80034178,0x800341A0,ZZ_34104_74);
ZZ_MARK_TARGET(0x800341A0,0x800341AC,ZZ_34104_9C);
ZZ_MARK_TARGET(0x800341AC,0x800341B0,ZZ_34104_A8);
ZZ_MARK_TARGET(0x800341B0,0x800341C8,ZZ_34104_AC);
ZZ_MARK_TARGET(0x800341C8,0x800341D8,ZZ_34104_C4);
ZZ_MARK_TARGET(0x800341D8,0x800341F0,ZZ_34104_D4);
ZZ_MARK_TARGET(0x800341F0,0x80034204,ZZ_34104_EC);
