#ifdef ZZ_INCLUDE_CODE
ZZ_28EBC:
	SP -= 128;
	EMU_Write32(SP + 112,S6); //+ 0x70
	S6 = A1;
	EMU_Write32(SP + 116,S7); //+ 0x74
	S7 = 0xC4650000;
	S7 |= 0x3601;
	EMU_Write32(SP + 124,RA); //+ 0x7C
	EMU_Write32(SP + 120,FP); //+ 0x78
	EMU_Write32(SP + 108,S5); //+ 0x6C
	EMU_Write32(SP + 104,S4); //+ 0x68
	EMU_Write32(SP + 100,S3); //+ 0x64
	EMU_Write32(SP + 96,S2); //+ 0x60
	EMU_Write32(SP + 92,S1); //+ 0x5C
	EMU_Write32(SP + 88,S0); //+ 0x58
	EMU_Write32(SP + 56,A0); //+ 0x38
	V1 = EMU_ReadU32(A0 + 172); //+ 0xAC
	S5 = R0;
	FP = R0;
	V0 = 0x4000000;
	V1 &= V0;
	if (V1)
	{
		EMU_Write32(SP + 64,R0); //+ 0x40
		ZZ_CLOCKCYCLES(22,0x80028F2C);
		goto ZZ_28EBC_70;
	}
	EMU_Write32(SP + 64,R0); //+ 0x40
	V0 = R0;
	ZZ_CLOCKCYCLES(24,0x80029220);
	goto ZZ_28EBC_364;
ZZ_28EBC_60:
	S5 = A2;
	T4 = 0x1;
	EMU_Write32(S6 + 4,A1); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x800291C0);
	goto ZZ_28EBC_304;
ZZ_28EBC_70:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	S4 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(S6);
	V1 = EMU_ReadU32(S6 + 4); //+ 0x4
	A0 = EMU_ReadU32(S6 + 8); //+ 0x8
	EMU_Write32(SP + 40,V0); //+ 0x28
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,A0); //+ 0x30
	ZZ_CLOCKCYCLES(10,0x80028F54);
ZZ_28EBC_98:
	V0 = EMU_ReadU32(S4 + 400); //+ 0x190
	if ((int32_t)V0 <= 0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(4,0x80028FC0);
		goto ZZ_28EBC_104;
	}
	S3 = R0;
	S2 = 0x194;
	S1 = S4;
	ZZ_CLOCKCYCLES(6,0x80028F6C);
ZZ_28EBC_B0:
	V0 = EMU_ReadU32(S1 + 436); //+ 0x1B4
	V0 &= 0x4;
	if (!V0)
	{
		A0 = S4 + S2;
		ZZ_CLOCKCYCLES(5,0x80028FA4);
		goto ZZ_28EBC_E8;
	}
	A0 = S4 + S2;
	A1 = 0x1;
	RA = 0x80028F8C; //ZZ_28EBC_D0
	A2 = R0;
	ZZ_CLOCKCYCLES(8,0x80014364);
	goto ZZ_14364;
ZZ_28EBC_D0:
	S0 = V0;
	A0 = S0;
	RA = 0x80028F9C; //ZZ_28EBC_E0
	A1 = S6;
	ZZ_CLOCKCYCLES(4,0x80031080);
	goto ZZ_31080;
ZZ_28EBC_E0:
	if (V0)
	{
		A2 = 0x1;
		ZZ_CLOCKCYCLES(2,0x80028FD4);
		goto ZZ_28EBC_118;
	}
	A2 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80028FA4);
ZZ_28EBC_E8:
	V0 = EMU_ReadU32(S4 + 400); //+ 0x190
	S2 += 4;
	S3 += 1;
	V0 = (int32_t)S3 < (int32_t)V0;
	if (V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(6,0x80028F6C);
		goto ZZ_28EBC_B0;
	}
	S1 += 4;
	ZZ_CLOCKCYCLES(6,0x80028FBC);
ZZ_28EBC_100:
	V0 = EMU_ReadU32(S4 + 400); //+ 0x190
	ZZ_CLOCKCYCLES(1,0x80028FC0);
ZZ_28EBC_104:
	if (S3 != V0)
	{
		ZZ_CLOCKCYCLES(3,0x80029048);
		goto ZZ_28EBC_18C;
	}
	S5 = R0;
	ZZ_CLOCKCYCLES(5,0x80029050);
	goto ZZ_28EBC_194;
ZZ_28EBC_118:
	A0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V0 = EMU_ReadU32(A0);
	V0 <<= 8;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 <<= 8;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 <<= 8;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(A0 + 12); //+ 0xC
	V0 <<= 8;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 <<= 8;
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(A0 + 20); //+ 0x14
	A1 = S6;
	V0 <<= 8;
	RA = 0x80029040; //ZZ_28EBC_184
	EMU_Write32(SP + 36,V0); //+ 0x24
	ZZ_CLOCKCYCLES(27,0x8003DC98);
	goto ZZ_3DC98;
ZZ_28EBC_184:
	S5 = V0;
	ZZ_CLOCKCYCLES(2,0x80028FBC);
	goto ZZ_28EBC_100;
ZZ_28EBC_18C:
	if (!S5)
	{
		ZZ_CLOCKCYCLES(2,0x80028F54);
		goto ZZ_28EBC_98;
	}
	ZZ_CLOCKCYCLES(2,0x80029050);
ZZ_28EBC_194:
	V1 = 0x80070000;
	V1 -= 12796;
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(6,0x800291C4);
		goto ZZ_28EBC_308;
	}
	if ((int32_t)V0 <= 0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(8,0x80029190);
		goto ZZ_28EBC_2D4;
	}
	S3 = R0;
	T1 = EMU_ReadU32(SP + 40); //+ 0x28
	T2 = 0x88B8;
	T0 = EMU_ReadU32(SP + 48); //+ 0x30
	T3 = V0;
	A3 = V1 + 656;
	ZZ_CLOCKCYCLES(13,0x80029084);
ZZ_28EBC_1C8:
	A0 = EMU_ReadU32(A3);
	A2 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 = EMU_ReadU32(A2 + 172); //+ 0xAC
	V1 = 0x40020000;
	V0 &= V1;
	V1 = 0x20000;
	if (V0 != V1)
	{
		V1 = 0x1;
		ZZ_CLOCKCYCLES(10,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	V1 = 0x1;
	V0 = EMU_ReadU32(A0);
	V0 &= 0x7;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(15,0x800290C8);
		goto ZZ_28EBC_20C;
	}
	A0 += 44;
	ZZ_CLOCKCYCLES(17,0x800290CC);
	goto ZZ_28EBC_210;
ZZ_28EBC_20C:
	A0 += 8;
	ZZ_CLOCKCYCLES(1,0x800290CC);
ZZ_28EBC_210:
	V0 = EMU_ReadU32(A0);
	V1 = 0xFFFF0000;
	V1 |= 0x7748;
	A1 = EMU_ReadU32(A0 + 16); //+ 0x10
	V0 += V1;
	V0 = (int32_t)T1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	V0 = EMU_ReadU32(A0 + 12); //+ 0xC
	V0 += T2;
	V0 = (int32_t)V0 < (int32_t)T1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(14,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = V0 - T2;
	V0 = (int32_t)T0 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(20,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	V0 = EMU_ReadU32(A0 + 20); //+ 0x14
	V0 += T2;
	V0 = (int32_t)V0 < (int32_t)T0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(26,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	V1 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 = (int32_t)A1 < (int32_t)V1;
	if (V0)
	{
		V0 = (int32_t)S7 < (int32_t)A1;
		ZZ_CLOCKCYCLES(31,0x8002915C);
		goto ZZ_28EBC_2A0;
	}
	V0 = (int32_t)S7 < (int32_t)A1;
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		V0 = (int32_t)S7 < (int32_t)A1;
		ZZ_CLOCKCYCLES(36,0x80028F1C);
		goto ZZ_28EBC_60;
	}
	V0 = (int32_t)S7 < (int32_t)A1;
	ZZ_CLOCKCYCLES(36,0x8002915C);
ZZ_28EBC_2A0:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	V0 = EMU_ReadU32(SP + 44); //+ 0x2C
	V0 = (int32_t)V0 < (int32_t)A1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x80029180);
		goto ZZ_28EBC_2C4;
	}
	FP = A2;
	S7 = A1;
	ZZ_CLOCKCYCLES(9,0x80029180);
ZZ_28EBC_2C4:
	S3 += 1;
	V0 = (int32_t)S3 < (int32_t)T3;
	if (V0)
	{
		A3 += 4;
		ZZ_CLOCKCYCLES(4,0x80029084);
		goto ZZ_28EBC_1C8;
	}
	A3 += 4;
	ZZ_CLOCKCYCLES(4,0x80029190);
ZZ_28EBC_2D4:
	if (!FP)
	{
		ZZ_CLOCKCYCLES(2,0x800291C4);
		goto ZZ_28EBC_308;
	}
	if (!S5)
	{
		ZZ_CLOCKCYCLES(4,0x800291B4);
		goto ZZ_28EBC_2F8;
	}
	V0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 = (int32_t)S7 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(9,0x800291C4);
		goto ZZ_28EBC_308;
	}
	ZZ_CLOCKCYCLES(9,0x800291B4);
ZZ_28EBC_2F8:
	EMU_Write32(S6 + 4,S7); //+ 0x4
	S5 = FP;
	T4 = 0x1;
	ZZ_CLOCKCYCLES(3,0x800291C0);
ZZ_28EBC_304:
	EMU_Write32(SP + 64,T4); //+ 0x40
	ZZ_CLOCKCYCLES(1,0x800291C4);
ZZ_28EBC_308:
	if (!S5)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(2,0x80029204);
		goto ZZ_28EBC_348;
	}
	A1 = R0;
	T4 = EMU_ReadU32(SP + 64); //+ 0x40
	if (!T4)
	{
		A1 = S5 & 0x3C00;
		ZZ_CLOCKCYCLES(6,0x800291F0);
		goto ZZ_28EBC_334;
	}
	A1 = S5 & 0x3C00;
	T4 = EMU_ReadU32(SP + 56); //+ 0x38
	A2 = EMU_ReadU32(S5 + 280); //+ 0x118
	A0 = EMU_ReadU32(T4 + 68); //+ 0x44
	A1 = -1;
	ZZ_CLOCKCYCLES(11,0x80029214);
	goto ZZ_28EBC_358;
ZZ_28EBC_334:
	T4 = EMU_ReadU32(SP + 56); //+ 0x38
	A0 = EMU_ReadU32(T4 + 68); //+ 0x44
	A1 >>= 10;
	ZZ_CLOCKCYCLES(5,0x80029210);
	goto ZZ_28EBC_354;
ZZ_28EBC_348:
	T4 = EMU_ReadU32(SP + 56); //+ 0x38
	A0 = EMU_ReadU32(T4 + 68); //+ 0x44
	ZZ_CLOCKCYCLES(3,0x80029210);
ZZ_28EBC_354:
	A2 = -1;
	ZZ_CLOCKCYCLES(1,0x80029214);
ZZ_28EBC_358:
	RA = 0x8002921C; //ZZ_28EBC_360
	ZZ_CLOCKCYCLES(2,0x80028B80);
	goto ZZ_28B80;
ZZ_28EBC_360:
	V0 = S5;
	ZZ_CLOCKCYCLES(1,0x80029220);
ZZ_28EBC_364:
	RA = EMU_ReadU32(SP + 124); //+ 0x7C
	FP = EMU_ReadU32(SP + 120); //+ 0x78
	S7 = EMU_ReadU32(SP + 116); //+ 0x74
	S6 = EMU_ReadU32(SP + 112); //+ 0x70
	S5 = EMU_ReadU32(SP + 108); //+ 0x6C
	S4 = EMU_ReadU32(SP + 104); //+ 0x68
	S3 = EMU_ReadU32(SP + 100); //+ 0x64
	S2 = EMU_ReadU32(SP + 96); //+ 0x60
	S1 = EMU_ReadU32(SP + 92); //+ 0x5C
	S0 = EMU_ReadU32(SP + 88); //+ 0x58
	SP += 128;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80038B6C,ZZ_38998_1D4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80028EBC,0x80028F1C,ZZ_28EBC);
ZZ_MARK_TARGET(0x80028F1C,0x80028F2C,ZZ_28EBC_60);
ZZ_MARK_TARGET(0x80028F2C,0x80028F54,ZZ_28EBC_70);
ZZ_MARK_TARGET(0x80028F54,0x80028F6C,ZZ_28EBC_98);
ZZ_MARK_TARGET(0x80028F6C,0x80028F8C,ZZ_28EBC_B0);
ZZ_MARK_TARGET(0x80028F8C,0x80028F9C,ZZ_28EBC_D0);
ZZ_MARK_TARGET(0x80028F9C,0x80028FA4,ZZ_28EBC_E0);
ZZ_MARK_TARGET(0x80028FA4,0x80028FBC,ZZ_28EBC_E8);
ZZ_MARK_TARGET(0x80028FBC,0x80028FC0,ZZ_28EBC_100);
ZZ_MARK_TARGET(0x80028FC0,0x80028FD4,ZZ_28EBC_104);
ZZ_MARK_TARGET(0x80028FD4,0x80029040,ZZ_28EBC_118);
ZZ_MARK_TARGET(0x80029040,0x80029048,ZZ_28EBC_184);
ZZ_MARK_TARGET(0x80029048,0x80029050,ZZ_28EBC_18C);
ZZ_MARK_TARGET(0x80029050,0x80029084,ZZ_28EBC_194);
ZZ_MARK_TARGET(0x80029084,0x800290C8,ZZ_28EBC_1C8);
ZZ_MARK_TARGET(0x800290C8,0x800290CC,ZZ_28EBC_20C);
ZZ_MARK_TARGET(0x800290CC,0x8002915C,ZZ_28EBC_210);
ZZ_MARK_TARGET(0x8002915C,0x80029180,ZZ_28EBC_2A0);
ZZ_MARK_TARGET(0x80029180,0x80029190,ZZ_28EBC_2C4);
ZZ_MARK_TARGET(0x80029190,0x800291B4,ZZ_28EBC_2D4);
ZZ_MARK_TARGET(0x800291B4,0x800291C0,ZZ_28EBC_2F8);
ZZ_MARK_TARGET(0x800291C0,0x800291C4,ZZ_28EBC_304);
ZZ_MARK_TARGET(0x800291C4,0x800291F0,ZZ_28EBC_308);
ZZ_MARK_TARGET(0x800291F0,0x80029204,ZZ_28EBC_334);
ZZ_MARK_TARGET(0x80029204,0x80029210,ZZ_28EBC_348);
ZZ_MARK_TARGET(0x80029210,0x80029214,ZZ_28EBC_354);
ZZ_MARK_TARGET(0x80029214,0x8002921C,ZZ_28EBC_358);
ZZ_MARK_TARGET(0x8002921C,0x80029220,ZZ_28EBC_360);
ZZ_MARK_TARGET(0x80029220,0x80029254,ZZ_28EBC_364);
