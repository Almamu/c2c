#ifdef ZZ_INCLUDE_CODE
ZZ_13164:
	SP -= 32;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	T1 = EMU_ReadS16(S0 + 4); //+ 0x4
	T2 = EMU_ReadU32(S0 + 28); //+ 0x1C
	V0 = 0x3;
	if (T1 == V0)
	{
		T0 = R0;
		ZZ_CLOCKCYCLES(9,0x80013194);
		goto ZZ_13164_30;
	}
	T0 = R0;
	V0 = 0xD;
	if (T1 != V0)
	{
		ZZ_CLOCKCYCLES(12,0x800131E4);
		goto ZZ_13164_80;
	}
	ZZ_CLOCKCYCLES(12,0x80013194);
ZZ_13164_30:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32160); //+ 0xFFFF8260
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x800131CC);
		goto ZZ_13164_68;
	}
	A0 = EMU_ReadU32(S0);
	RA = 0x800131B4; //ZZ_13164_50
	ZZ_CLOCKCYCLES(8,0x80012688);
	goto ZZ_12688;
ZZ_13164_50:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x800131CC);
		goto ZZ_13164_68;
	}
	RA = 0x800131C4; //ZZ_13164_60
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80013148);
	goto ZZ_13148;
ZZ_13164_60:
	ZZ_CLOCKCYCLES(2,0x800132F0);
	goto ZZ_13164_18C;
ZZ_13164_68:
	A0 = EMU_ReadU32(S0);
	V0 = 0x4;
	RA = 0x800131DC; //ZZ_13164_78
	EMU_Write16(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(4,0x8001254C);
	goto ZZ_1254C;
ZZ_13164_78:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x800132F0);
	goto ZZ_13164_18C;
ZZ_13164_80:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30776); //+ 0x7838
	V1 = EMU_ReadU32(S0 + 20); //+ 0x14
	V0 = EMU_ReadU32(V0 + 1052); //+ 0x41C
	V1 = (int32_t)V1 >> 1;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (!V1)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(8,0x80013214);
		goto ZZ_13164_B0;
	}
	A2 = R0;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32160); //+ 0xFFFF8260
	A2 = R0 < V0;
	ZZ_CLOCKCYCLES(12,0x80013214);
ZZ_13164_B0:
	if ((int32_t)T2 <= 0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(2,0x800132EC);
		goto ZZ_13164_188;
	}
	A1 = R0;
	T5 = 0x2;
	T4 = 0x3;
	T3 = 0xD;
	ZZ_CLOCKCYCLES(5,0x80013228);
ZZ_13164_C4:
	if (T1 != T5)
	{
		ZZ_CLOCKCYCLES(2,0x800132D8);
		goto ZZ_13164_174;
	}
	if (!A2)
	{
		EMU_Write16(S0 + 10,A2); //+ 0xA
		ZZ_CLOCKCYCLES(4,0x80013264);
		goto ZZ_13164_100;
	}
	EMU_Write16(S0 + 10,A2); //+ 0xA
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 30776); //+ 0x7838
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	V1 = T0 + 32;
	V0 &= 0x3F;
	T0 = V1 - V0;
	EMU_Write16(S0 + 8,T0); //+ 0x8
	ZZ_CLOCKCYCLES(15,0x80013264);
ZZ_13164_100:
	V0 = EMU_ReadS16(S0 + 4); //+ 0x4
	if (V0 != T1)
	{
		ZZ_CLOCKCYCLES(4,0x8001327C);
		goto ZZ_13164_118;
	}
	EMU_Write16(S0 + 4,T4); //+ 0x4
	ZZ_CLOCKCYCLES(6,0x800132D8);
	goto ZZ_13164_174;
ZZ_13164_118:
	if (!A2)
	{
		EMU_Write16(S0 + 4,T3); //+ 0x4
		ZZ_CLOCKCYCLES(2,0x800132C0);
		goto ZZ_13164_15C;
	}
	EMU_Write16(S0 + 4,T3); //+ 0x4
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 30776); //+ 0x7838
	V0 = (int32_t)V0 >> 1;
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 1056); //+ 0x420
	A0 = EMU_ReadS16(S0 + 8); //+ 0x8
	V1 = EMU_ReadU32(S0);
	V0 &= 0x3F;
	V0 += A0;
	V0 <<= 11;
	V1 += V0;
	EMU_Write32(S0 + 16,V1); //+ 0x10
	ZZ_CLOCKCYCLES(17,0x800132CC);
	goto ZZ_13164_168;
ZZ_13164_15C:
	V0 = EMU_ReadU32(S0 + 44); //+ 0x2C
	EMU_Write32(S0 + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(3,0x800132CC);
ZZ_13164_168:
	V1 = EMU_ReadU32(S0 + 16); //+ 0x10
	V0 = 0x8765;
	EMU_Write16(V1,V0);
	ZZ_CLOCKCYCLES(3,0x800132D8);
ZZ_13164_174:
	A3 = S0;
	A1 += 1;
	V0 = (int32_t)A1 < (int32_t)T2;
	if (V0)
	{
		S0 = A3 - 44;
		ZZ_CLOCKCYCLES(5,0x80013228);
		goto ZZ_13164_C4;
	}
	S0 = A3 - 44;
	ZZ_CLOCKCYCLES(5,0x800132EC);
ZZ_13164_188:
	V0 = A3;
	ZZ_CLOCKCYCLES(1,0x800132F0);
ZZ_13164_18C:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8001337C,ZZ_13304_78);
	ZZ_JUMPREGISTER(0x80013488,ZZ_13304_184);
	ZZ_JUMPREGISTER(0x80013418,ZZ_13304_114);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013164,ZZ_13164);
ZZ_MARK(0x80013168);
ZZ_MARK(0x8001316C);
ZZ_MARK(0x80013170);
ZZ_MARK(0x80013174);
ZZ_MARK(0x80013178);
ZZ_MARK(0x8001317C);
ZZ_MARK(0x80013180);
ZZ_MARK(0x80013184);
ZZ_MARK(0x80013188);
ZZ_MARK(0x8001318C);
ZZ_MARK(0x80013190);
ZZ_MARK_TARGET(0x80013194,ZZ_13164_30);
ZZ_MARK(0x80013198);
ZZ_MARK(0x8001319C);
ZZ_MARK(0x800131A0);
ZZ_MARK(0x800131A4);
ZZ_MARK(0x800131A8);
ZZ_MARK(0x800131AC);
ZZ_MARK(0x800131B0);
ZZ_MARK_TARGET(0x800131B4,ZZ_13164_50);
ZZ_MARK(0x800131B8);
ZZ_MARK(0x800131BC);
ZZ_MARK(0x800131C0);
ZZ_MARK_TARGET(0x800131C4,ZZ_13164_60);
ZZ_MARK(0x800131C8);
ZZ_MARK_TARGET(0x800131CC,ZZ_13164_68);
ZZ_MARK(0x800131D0);
ZZ_MARK(0x800131D4);
ZZ_MARK(0x800131D8);
ZZ_MARK_TARGET(0x800131DC,ZZ_13164_78);
ZZ_MARK(0x800131E0);
ZZ_MARK_TARGET(0x800131E4,ZZ_13164_80);
ZZ_MARK(0x800131E8);
ZZ_MARK(0x800131EC);
ZZ_MARK(0x800131F0);
ZZ_MARK(0x800131F4);
ZZ_MARK(0x800131F8);
ZZ_MARK(0x800131FC);
ZZ_MARK(0x80013200);
ZZ_MARK(0x80013204);
ZZ_MARK(0x80013208);
ZZ_MARK(0x8001320C);
ZZ_MARK(0x80013210);
ZZ_MARK_TARGET(0x80013214,ZZ_13164_B0);
ZZ_MARK(0x80013218);
ZZ_MARK(0x8001321C);
ZZ_MARK(0x80013220);
ZZ_MARK(0x80013224);
ZZ_MARK_TARGET(0x80013228,ZZ_13164_C4);
ZZ_MARK(0x8001322C);
ZZ_MARK(0x80013230);
ZZ_MARK(0x80013234);
ZZ_MARK(0x80013238);
ZZ_MARK(0x8001323C);
ZZ_MARK(0x80013240);
ZZ_MARK(0x80013244);
ZZ_MARK(0x80013248);
ZZ_MARK(0x8001324C);
ZZ_MARK(0x80013250);
ZZ_MARK(0x80013254);
ZZ_MARK(0x80013258);
ZZ_MARK(0x8001325C);
ZZ_MARK(0x80013260);
ZZ_MARK_TARGET(0x80013264,ZZ_13164_100);
ZZ_MARK(0x80013268);
ZZ_MARK(0x8001326C);
ZZ_MARK(0x80013270);
ZZ_MARK(0x80013274);
ZZ_MARK(0x80013278);
ZZ_MARK_TARGET(0x8001327C,ZZ_13164_118);
ZZ_MARK(0x80013280);
ZZ_MARK(0x80013284);
ZZ_MARK(0x80013288);
ZZ_MARK(0x8001328C);
ZZ_MARK(0x80013290);
ZZ_MARK(0x80013294);
ZZ_MARK(0x80013298);
ZZ_MARK(0x8001329C);
ZZ_MARK(0x800132A0);
ZZ_MARK(0x800132A4);
ZZ_MARK(0x800132A8);
ZZ_MARK(0x800132AC);
ZZ_MARK(0x800132B0);
ZZ_MARK(0x800132B4);
ZZ_MARK(0x800132B8);
ZZ_MARK(0x800132BC);
ZZ_MARK_TARGET(0x800132C0,ZZ_13164_15C);
ZZ_MARK(0x800132C4);
ZZ_MARK(0x800132C8);
ZZ_MARK_TARGET(0x800132CC,ZZ_13164_168);
ZZ_MARK(0x800132D0);
ZZ_MARK(0x800132D4);
ZZ_MARK_TARGET(0x800132D8,ZZ_13164_174);
ZZ_MARK(0x800132DC);
ZZ_MARK(0x800132E0);
ZZ_MARK(0x800132E4);
ZZ_MARK(0x800132E8);
ZZ_MARK_TARGET(0x800132EC,ZZ_13164_188);
ZZ_MARK_TARGET(0x800132F0,ZZ_13164_18C);
ZZ_MARK(0x800132F4);
ZZ_MARK(0x800132F8);
ZZ_MARK(0x800132FC);
ZZ_MARK(0x80013300);
