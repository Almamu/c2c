#ifdef ZZ_INCLUDE_CODE
ZZ_52830:
	SP -= 32;
	A0 <<= 16;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = (int32_t)A0 >> 16;
	A0 = S0;
	A1 = R0;
	A2 = R0;
	EMU_Write32(SP + 28,RA); //+ 0x1C
	RA = 0x80052858; //ZZ_52830_28
	A3 = 1;
	ZZ_CLOCKCYCLES(10,0x800598A0);
	goto ZZ_598A0;
ZZ_52830_28:
	RA = 0x80052860; //ZZ_52830_30
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80059ED0);
	goto ZZ_59ED0;
ZZ_52830_30:
	V1 = 1;
	V1 <<= S0;
	V1 = ~V1;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 26636); //+ 0xFFFF97F4
	A0 = 0x80070000;
	A0 = EMU_ReadS16(A0 - 13088); //+ 0xFFFFCCE0
	V0 &= V1;
	AT = 0x80070000;
	EMU_Write32(AT - 26636,V0); //+ 0xFFFF97F4
	if ((int32_t)A0 <= 0)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(12,0x80052998);
		goto ZZ_52830_168;
	}
	A2 = R0;
	V1 = 0x80070000;
	V1 -= 15268;
	V0 = S0 << 2;
	A1 = V0 + V1;
	A3 = 127;
	A0 = R0;
	ZZ_CLOCKCYCLES(18,0x800528A8);
ZZ_52830_78:
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 152,R0); //+ 0x98
	V0 = EMU_ReadU32(A1);
	V1 = 255;
	V0 += A0;
	EMU_Write8(V0 + 34,V1); //+ 0x22
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write8(V0 + 35,R0); //+ 0x23
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 72,R0); //+ 0x48
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 74,R0); //+ 0x4A
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 156,R0); //+ 0x9C
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 160,R0); //+ 0xA0
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 76,R0); //+ 0x4C
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 172,R0); //+ 0xAC
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 168,R0); //+ 0xA8
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 164,R0); //+ 0xA4
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 78,R0); //+ 0x4E
	V0 = EMU_ReadU32(A1);
	A2 += 1;
	V0 += A0;
	EMU_Write16(V0 + 88,A3); //+ 0x58
	V1 = EMU_ReadU32(A1);
	V0 = 0x80070000;
	V0 = EMU_ReadS16(V0 - 13088); //+ 0xFFFFCCE0
	V1 += A0;
	A0 += 176;
	V0 = (int32_t)A2 < (int32_t)V0;
	if (V0)
	{
		EMU_Write16(V1 + 90,A3); //+ 0x5A
		ZZ_CLOCKCYCLES(60,0x800528A8);
		goto ZZ_52830_78;
	}
	EMU_Write16(V1 + 90,A3); //+ 0x5A
	ZZ_CLOCKCYCLES(60,0x80052998);
ZZ_52830_168:
	RA = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x800529E4,ZZ_529D0_14);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80052830,0x80052858,ZZ_52830);
ZZ_MARK_TARGET(0x80052858,0x80052860,ZZ_52830_28);
ZZ_MARK_TARGET(0x80052860,0x800528A8,ZZ_52830_30);
ZZ_MARK_TARGET(0x800528A8,0x80052998,ZZ_52830_78);
ZZ_MARK_TARGET(0x80052998,0x800529AC,ZZ_52830_168);
