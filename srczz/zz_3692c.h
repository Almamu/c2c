#ifdef ZZ_INCLUDE_CODE
ZZ_3692C:
	V0 = EMU_ReadU32(GP + 232); //+ 0xE8
	SP -= 24;
	if (!V0)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(4,0x80036958);
		goto ZZ_3692C_2C;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	RA = 0x80036944; //ZZ_3692C_18
	ZZ_CLOCKCYCLES(6,0x80036494);
	goto ZZ_36494;
ZZ_3692C_18:
	V0 &= 0x10;
	RA = 0x80036950; //ZZ_3692C_24
	A0 = V0 | 0x4;
	ZZ_CLOCKCYCLES(3,0x80036668);
	goto ZZ_36668;
ZZ_3692C_24:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x8003695C);
	goto ZZ_3692C_30;
ZZ_3692C_2C:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x8003695C);
ZZ_3692C_30:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80036A28,ZZ_369C4_64);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003692C,ZZ_3692C);
ZZ_MARK(0x80036930);
ZZ_MARK(0x80036934);
ZZ_MARK(0x80036938);
ZZ_MARK(0x8003693C);
ZZ_MARK(0x80036940);
ZZ_MARK_TARGET(0x80036944,ZZ_3692C_18);
ZZ_MARK(0x80036948);
ZZ_MARK(0x8003694C);
ZZ_MARK_TARGET(0x80036950,ZZ_3692C_24);
ZZ_MARK(0x80036954);
ZZ_MARK_TARGET(0x80036958,ZZ_3692C_2C);
ZZ_MARK_TARGET(0x8003695C,ZZ_3692C_30);
ZZ_MARK(0x80036960);
ZZ_MARK(0x80036964);
ZZ_MARK(0x80036968);
