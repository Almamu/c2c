#ifdef ZZ_INCLUDE_CODE
ZZ_50068:
	SP -= 8;
	V0 = 13;
	EMU_Write32(SP + 4,V0); //+ 0x4
	EMU_Write32(SP,R0);
	ZZ_CLOCKCYCLES(5,0x800500A8);
	goto ZZ_50068_40;
ZZ_50068_14:
	V1 = EMU_ReadU32(SP + 4); //+ 0x4
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	EMU_Write32(SP + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(SP);
	V0 += 1;
	EMU_Write32(SP,V0);
	ZZ_CLOCKCYCLES(11,0x800500A8);
ZZ_50068_40:
	V0 = EMU_ReadU32(SP);
	V0 = (int32_t)V0 < 60;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8005007C);
		goto ZZ_50068_14;
	}
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 8;
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x8004F5EC,ZZ_4F590_5C);
	ZZ_JUMPREGISTER(0x8004F850,ZZ_4F810_40);
	ZZ_JUMPREGISTER(0x8004F784,ZZ_4F590_1F4);
	ZZ_JUMPREGISTER(0x8004F78C,ZZ_4F590_1FC);
	ZZ_JUMPREGISTER(0x8004F794,ZZ_4F590_204);
	ZZ_JUMPREGISTER(0x8004F79C,ZZ_4F590_20C);
	ZZ_JUMPREGISTER(0x8004F8B4,ZZ_4F810_A4);
	ZZ_JUMPREGISTER(0x8004F7B4,ZZ_4F590_224);
	ZZ_JUMPREGISTER(0x8004F7BC,ZZ_4F590_22C);
	ZZ_JUMPREGISTER(0x8004F7C4,ZZ_4F590_234);
	ZZ_JUMPREGISTER(0x8004F7CC,ZZ_4F590_23C);
	ZZ_JUMPREGISTER(0x8004F928,ZZ_4F810_118);
	ZZ_JUMPREGISTER(0x8004F930,ZZ_4F810_120);
	ZZ_JUMPREGISTER(0x8004F9EC,ZZ_4F9D0_1C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80050068,ZZ_50068);
ZZ_MARK(0x8005006C);
ZZ_MARK(0x80050070);
ZZ_MARK(0x80050074);
ZZ_MARK(0x80050078);
ZZ_MARK_TARGET(0x8005007C,ZZ_50068_14);
ZZ_MARK(0x80050080);
ZZ_MARK(0x80050084);
ZZ_MARK(0x80050088);
ZZ_MARK(0x8005008C);
ZZ_MARK(0x80050090);
ZZ_MARK(0x80050094);
ZZ_MARK(0x80050098);
ZZ_MARK(0x8005009C);
ZZ_MARK(0x800500A0);
ZZ_MARK(0x800500A4);
ZZ_MARK_TARGET(0x800500A8,ZZ_50068_40);
ZZ_MARK(0x800500AC);
ZZ_MARK(0x800500B0);
ZZ_MARK(0x800500B4);
ZZ_MARK(0x800500B8);
ZZ_MARK(0x800500BC);
ZZ_MARK(0x800500C0);
