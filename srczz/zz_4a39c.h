#ifdef ZZ_INCLUDE_CODE
ZZ_4A39C:
	SP -= 24;
	EMU_Write32(SP + 20,RA); //+ 0x14
	RA = 0x8004A3AC; //ZZ_4A39C_10
	EMU_Write32(SP + 16,S0); //+ 0x10
	ZZ_CLOCKCYCLES(4,0x80049FB4);
	goto ZZ_49FB4;
ZZ_4A39C_10:
	A0 = 1;
	V1 = 0x80060000;
	V1 += 280;
	S0 = V1 - 4;
	V0 = 0x80050000;
	V0 -= 23468;
	EMU_Write32(V1,V0);
	V0 = 0x80050000;
	V0 -= 23364;
	AT = 0x80060000;
	EMU_Write32(AT + 284,V0); //+ 0x11C
	AT = 0x80060000;
	EMU_Write32(AT + 276,R0); //+ 0x114
	AT = 0x80060000;
	EMU_Write32(AT + 288,R0); //+ 0x120
	RA = 0x8004A3F0; //ZZ_4A39C_54
	A1 = S0;
	ZZ_CLOCKCYCLES(17,0x8004A54C);
	goto ZZ_4A54C;
ZZ_4A39C_54:
	A0 = 1;
	RA = 0x8004A3FC; //ZZ_4A39C_60
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x8004A53C);
	goto ZZ_4A53C;
ZZ_4A39C_60:
	RA = 0x8004A404; //ZZ_4A39C_68
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_4A39C_68:
	V0 = 1;
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8004A2EC,ZZ_4A298_54);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004A39C,ZZ_4A39C);
ZZ_MARK(0x8004A3A0);
ZZ_MARK(0x8004A3A4);
ZZ_MARK(0x8004A3A8);
ZZ_MARK_TARGET(0x8004A3AC,ZZ_4A39C_10);
ZZ_MARK(0x8004A3B0);
ZZ_MARK(0x8004A3B4);
ZZ_MARK(0x8004A3B8);
ZZ_MARK(0x8004A3BC);
ZZ_MARK(0x8004A3C0);
ZZ_MARK(0x8004A3C4);
ZZ_MARK(0x8004A3C8);
ZZ_MARK(0x8004A3CC);
ZZ_MARK(0x8004A3D0);
ZZ_MARK(0x8004A3D4);
ZZ_MARK(0x8004A3D8);
ZZ_MARK(0x8004A3DC);
ZZ_MARK(0x8004A3E0);
ZZ_MARK(0x8004A3E4);
ZZ_MARK(0x8004A3E8);
ZZ_MARK(0x8004A3EC);
ZZ_MARK_TARGET(0x8004A3F0,ZZ_4A39C_54);
ZZ_MARK(0x8004A3F4);
ZZ_MARK(0x8004A3F8);
ZZ_MARK_TARGET(0x8004A3FC,ZZ_4A39C_60);
ZZ_MARK(0x8004A400);
ZZ_MARK_TARGET(0x8004A404,ZZ_4A39C_68);
ZZ_MARK(0x8004A408);
ZZ_MARK(0x8004A40C);
ZZ_MARK(0x8004A410);
ZZ_MARK(0x8004A414);
ZZ_MARK(0x8004A418);
