#ifdef ZZ_INCLUDE_CODE
ZZ_2CD30:
	V1 = 0x80070000;
	V1 -= 12796;
	V0 = EMU_ReadU32(V1);
	if (!V0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(6,0x8002CDA4);
		goto ZZ_2CD30_74;
	}
	V0 -= 1;
	EMU_Write32(V1,V0);
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	V0 <<= 2;
	V0 += V1;
	V0 = EMU_ReadU32(V0 + 656); //+ 0x290
	V0 = EMU_ReadU32(V0);
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12800); //+ 0xFFFFCE00
	A0 = V0 & 0x7;
	if (!A0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(20,0x8002CD90);
		goto ZZ_2CD30_60;
	}
	V0 = 0x1;
	if (A0 == V0)
	{
		ZZ_CLOCKCYCLES(22,0x8002CD98);
		goto ZZ_2CD30_68;
	}
	ZZ_CLOCKCYCLES(24,0x8002CD9C);
	goto ZZ_2CD30_6C;
ZZ_2CD30_60:
	V1 -= 32;
	ZZ_CLOCKCYCLES(2,0x8002CD9C);
	goto ZZ_2CD30_6C;
ZZ_2CD30_68:
	V1 -= 68;
	ZZ_CLOCKCYCLES(1,0x8002CD9C);
ZZ_2CD30_6C:
	AT = 0x80070000;
	EMU_Write32(AT - 12800,V1); //+ 0xFFFFCE00
	ZZ_CLOCKCYCLES(2,0x8002CDA4);
ZZ_2CD30_74:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x800383D4,ZZ_37930_AA4);
	ZZ_JUMPREGISTER(0x8002C708,ZZ_2C638_D0);
	ZZ_JUMPREGISTER(0x8001D118,ZZ_1D014_104);
	ZZ_JUMPREGISTER(0x8001D110,ZZ_1D014_FC);
	ZZ_JUMPREGISTER(0x8001D270,ZZ_1D014_25C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002CD30,0x8002CD90,ZZ_2CD30);
ZZ_MARK_TARGET(0x8002CD90,0x8002CD98,ZZ_2CD30_60);
ZZ_MARK_TARGET(0x8002CD98,0x8002CD9C,ZZ_2CD30_68);
ZZ_MARK_TARGET(0x8002CD9C,0x8002CDA4,ZZ_2CD30_6C);
ZZ_MARK_TARGET(0x8002CDA4,0x8002CDAC,ZZ_2CD30_74);
