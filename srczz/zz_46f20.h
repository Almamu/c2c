#ifdef ZZ_INCLUDE_CODE
ZZ_46F20:
	SP -= 48;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A0;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 3;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = S3 & 0xFF;
	V1 = 0x80060000;
	V1 -= 13860;
	EMU_Write32(SP + 32,S4); //+ 0x20
	S4 = 0x80060000;
	S4 = EMU_ReadU32(S4 - 13724); //+ 0xFFFFCA64
	V0 = S2 << 2;
	EMU_Write32(SP + 36,S5); //+ 0x24
	S5 = V0 + V1;
	EMU_Write32(SP + 40,S6); //+ 0x28
	S6 = R0;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	ZZ_CLOCKCYCLES(20,0x80046F70);
ZZ_46F20_50:
	AT = 0x80060000;
	EMU_Write32(AT - 13724,R0); //+ 0xFFFFCA64
	V0 = 1;
	if (S2 == V0)
	{
		ZZ_CLOCKCYCLES(5,0x80046FAC);
		goto ZZ_46F20_8C;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU8(V0 - 13708); //+ 0xFFFFCA74
	V0 &= 0x10;
	if (!V0)
	{
		A0 = 1;
		ZZ_CLOCKCYCLES(11,0x80046FAC);
		goto ZZ_46F20_8C;
	}
	A0 = 1;
	A1 = R0;
	A2 = R0;
	RA = 0x80046FAC; //ZZ_46F20_8C
	A3 = R0;
	ZZ_CLOCKCYCLES(15,0x80047E8C);
	goto ZZ_47E8C;
ZZ_46F20_8C:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x80046FDC);
		goto ZZ_46F20_BC;
	}
	V0 = EMU_ReadU32(S5);
	if (!V0)
	{
		A0 = 2;
		ZZ_CLOCKCYCLES(6,0x80046FDC);
		goto ZZ_46F20_BC;
	}
	A0 = 2;
	A1 = S1;
	A2 = R0;
	RA = 0x80046FD4; //ZZ_46F20_B4
	A3 = R0;
	ZZ_CLOCKCYCLES(10,0x80047E8C);
	goto ZZ_47E8C;
ZZ_46F20_B4:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x80047000);
		goto ZZ_46F20_E0;
	}
	ZZ_CLOCKCYCLES(2,0x80046FDC);
ZZ_46F20_BC:
	AT = 0x80060000;
	EMU_Write32(AT - 13724,S4); //+ 0xFFFFCA64
	A0 = S3 & 0xFF;
	A1 = S1;
	A2 = R0;
	RA = 0x80046FF8; //ZZ_46F20_D8
	A3 = 1;
	ZZ_CLOCKCYCLES(7,0x80047E8C);
	goto ZZ_47E8C;
ZZ_46F20_D8:
	if (!V0)
	{
		V0 = S6 + 1;
		ZZ_CLOCKCYCLES(2,0x80047020);
		goto ZZ_46F20_100;
	}
	V0 = S6 + 1;
	ZZ_CLOCKCYCLES(2,0x80047000);
ZZ_46F20_E0:
	S0 -= 1;
	V0 = -1;
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x80046F70);
		goto ZZ_46F20_50;
	}
	AT = 0x80060000;
	EMU_Write32(AT - 13724,S4); //+ 0xFFFFCA64
	S6 = -1;
	V0 = S6 + 1;
	ZZ_CLOCKCYCLES(8,0x80047020);
ZZ_46F20_100:
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S6 = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80013094,ZZ_12FE8_AC);
	ZZ_JUMPREGISTER(0x80048FE8,ZZ_48F5C_8C);
	ZZ_JUMPREGISTER(0x80012F80,ZZ_12F10_70);
	ZZ_JUMPREGISTER(0x8004912C,ZZ_48F5C_1D0);
	ZZ_JUMPREGISTER(0x80048E18,ZZ_48B90_288);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80046F20,0x80046F70,ZZ_46F20);
ZZ_MARK_TARGET(0x80046F70,0x80046FAC,ZZ_46F20_50);
ZZ_MARK_TARGET(0x80046FAC,0x80046FD4,ZZ_46F20_8C);
ZZ_MARK_TARGET(0x80046FD4,0x80046FDC,ZZ_46F20_B4);
ZZ_MARK_TARGET(0x80046FDC,0x80046FF8,ZZ_46F20_BC);
ZZ_MARK_TARGET(0x80046FF8,0x80047000,ZZ_46F20_D8);
ZZ_MARK_TARGET(0x80047000,0x80047020,ZZ_46F20_E0);
ZZ_MARK_TARGET(0x80047020,0x8004704C,ZZ_46F20_100);
