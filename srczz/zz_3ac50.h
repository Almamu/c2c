#ifdef ZZ_INCLUDE_CODE
ZZ_3AC50:
	A2 = 0x80060000;
	A2 -= 16568;
	A3 = A0 << 20;
	if ((int32_t)A3 < 0)
	{
		A3 <<= 1;
		ZZ_CLOCKCYCLES(5,0x8003AC84);
		goto ZZ_3AC50_34;
	}
	A3 <<= 1;
	if ((int32_t)A3 < 0)
	{
		A3 >>= 20;
		ZZ_CLOCKCYCLES(7,0x8003AC78);
		goto ZZ_3AC50_28;
	}
	A3 >>= 20;
	A3 += A2;
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_ReadS16(A3);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x8003AC24,ZZ_3AA64_1C0);
	ZZ_JUMPREGISTER(0x8003AC48,ZZ_3AA64_1E4);
	ZZ_JUMPREGISTER(0x8003A854,ZZ_3A2AC_5A8);
	ZZ_JUMPREGISTER_END();
ZZ_3AC50_28:
	A3 = A2 - A3;
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_ReadS16(A3 + 4096); //+ 0x1000
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x8003AC24,ZZ_3AA64_1C0);
	ZZ_JUMPREGISTER(0x8003AC48,ZZ_3AA64_1E4);
	ZZ_JUMPREGISTER(0x8003A854,ZZ_3A2AC_5A8);
	ZZ_JUMPREGISTER_END();
ZZ_3AC50_34:
	if ((int32_t)A3 < 0)
	{
		A3 >>= 20;
		ZZ_CLOCKCYCLES(2,0x8003AC9C);
		goto ZZ_3AC50_4C;
	}
	A3 >>= 20;
	A3 += A2;
	A0 = EMU_ReadS16(A3);
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_CheckedSubtract(R0,A0);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003AC24,ZZ_3AA64_1C0);
	ZZ_JUMPREGISTER(0x8003AC48,ZZ_3AA64_1E4);
	ZZ_JUMPREGISTER(0x8003A854,ZZ_3A2AC_5A8);
	ZZ_JUMPREGISTER_END();
ZZ_3AC50_4C:
	A3 = A2 - A3;
	A0 = EMU_ReadS16(A3 + 4096); //+ 0x1000
	ZZ_JUMPREGISTER_BEGIN(RA);
	A0 = EMU_CheckedSubtract(R0,A0);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x8003AC24,ZZ_3AA64_1C0);
	ZZ_JUMPREGISTER(0x8003AC48,ZZ_3AA64_1E4);
	ZZ_JUMPREGISTER(0x8003A854,ZZ_3A2AC_5A8);
	ZZ_JUMPREGISTER_END();
ZZ_3AC50_5C:
	RA = 0x8003ACB4; //ZZ_3AC50_64
	A0 = A1 >> 12;
	ZZ_CLOCKCYCLES(2,0x8003A118);
	goto ZZ_3A118;
ZZ_3AC50_64:
	V1 = V0;
	A2 = 24;
	RA = 0x8003ACC4; //ZZ_3AC50_74
	A0 = A1;
	ZZ_CLOCKCYCLES(4,0x80039FC4);
	goto ZZ_39FC4;
ZZ_3AC50_74:
	A0 = EMU_ReadU32(V0);
	RA = 0x8003ACD0; //ZZ_3AC50_80
	A1 = V1;
	ZZ_CLOCKCYCLES(3,0x8004F310);
	goto ZZ_4F310;
ZZ_3AC50_80:
	S6 += 4;
	EMU_Write32(S6 - 4,V0); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(3,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_8C:
	RA = 0x8003ACE4; //ZZ_3AC50_94
	A0 = A1 >> 12;
	ZZ_CLOCKCYCLES(2,0x8003A118);
	goto ZZ_3A118;
ZZ_3AC50_94:
	V1 = V0;
	RA = 0x8003ACF0; //ZZ_3AC50_A0
	A0 = A1;
	ZZ_CLOCKCYCLES(3,0x8003A118);
	goto ZZ_3A118;
ZZ_3AC50_A0:
	V1 <<= 20;
	V0 <<= 20;
	V0 = V1 - V0;
	V0 = (int32_t)V0 >> 20;
	S6 += 4;
	EMU_Write32(S6 - 4,V0); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(7,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_BC:
	A3 = 0x80030000;
	A3 |= 0x76D8;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_C8:
	A3 = 0x80030000;
	A3 |= 0x8414;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_D4:
	A3 = 0x80030000;
	A3 |= 0x8998;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_E0:
	A3 = 0x80030000;
	A3 |= 0x8D94;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_EC:
	A3 = 0x80030000;
	A3 |= 0x8EAC;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_F8:
	A3 = 0x80030000;
	A3 |= 0x8FA0;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_104:
	A3 = 0x80030000;
	A3 |= 0x90AC;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_110:
	A3 = 0x80030000;
	A3 |= 0x9198;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_11C:
	{
		extern void GOOL_MIPS_ExecuteFromZZ(uint32_t pc);
		GOOL_MIPS_ExecuteFromZZ(S5);
	}
ZZ_3AC50_124:
	if (S5)
	{
		ZZ_CLOCKCYCLES(2,0x8003A304);
		goto ZZ_3A2AC_58;
	}
	ZZ_CLOCKCYCLES(4,0x8003AE80);
	goto ZZ_3AC50_230;
ZZ_3AC50_134:
	A0 = A1 & 0x3FFF;
	A2 = A1 >> 20;
	A2 &= 0xF;
	EMU_Write32(S6,S1);
	A2 <<= 2;
	A2 = S6 - A2;
	A2 = A2 - S0;
	A2 = EMU_CheckedAdd(A2,-64);
	A3 = S7 - S0;
	EMU_Write32(S6 + 4,S5); //+ 0x4
	A3 = EMU_CheckedAdd(A3,-64);
	A3 <<= 16;
	A2 |= A3;
	S7 = S6;
	EMU_Write32(S6 + 8,A2); //+ 0x8
	S6 = EMU_CheckedAdd(S6,12);
	S5 = A0 - 16383;
	if (!S5)
	{
		V0 = A1 & 0x4000;
		ZZ_CLOCKCYCLES(19,0x8003ADEC);
		goto ZZ_3AC50_19C;
	}
	V0 = A1 & 0x4000;
	if (!V0)
	{
		V0 = EMU_ReadU32(S0 + 12); //+ 0xC
		ZZ_CLOCKCYCLES(21,0x8003ADDC);
		goto ZZ_3AC50_18C;
	}
	V0 = EMU_ReadU32(S0 + 12); //+ 0xC
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	ZZ_CLOCKCYCLES(22,0x8003ADDC);
ZZ_3AC50_18C:
	A0 <<= 2;
	V0 = EMU_ReadU32(V0 + 20); //+ 0x14
	S5 = V0 + A0;
	ZZ_CLOCKCYCLES(4,0x8003ADEC);
ZZ_3AC50_19C:
	A2 = 9;
	A2 = ~A2;
	S1 &= A2;
	ZZ_CLOCKCYCLES(4,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_1AC:
	RA = 0x8003AE04; //ZZ_3AC50_1B4
	A0 = A1 >> 12;
	ZZ_CLOCKCYCLES(2,0x8003A118);
	goto ZZ_3A118;
ZZ_3AC50_1B4:
	V1 = V0;
	A2 = 24;
	RA = 0x8003AE14; //ZZ_3AC50_1C4
	A0 = A1;
	ZZ_CLOCKCYCLES(4,0x80039FC4);
	goto ZZ_39FC4;
ZZ_3AC50_1C4:
	if (!V0)
	{
		A2 = (int32_t)V1 >> 8;
		ZZ_CLOCKCYCLES(2,0x8003AE74);
		goto ZZ_3AC50_224;
	}
	A2 = (int32_t)V1 >> 8;
	A0 = EMU_ReadU32(V0);
	if (!A0)
	{
		ZZ_CLOCKCYCLES(6,0x8003AE74);
		goto ZZ_3AC50_224;
	}
	EMU_Write32(S6,S1);
	A2 <<= 2;
	A2 = S6 - A2;
	A2 = A2 - S0;
	A2 = EMU_CheckedAdd(A2,-64);
	A3 = S7 - S0;
	EMU_Write32(S6 + 4,S5); //+ 0x4
	A3 = EMU_CheckedAdd(A3,-64);
	A3 <<= 16;
	A2 |= A3;
	S7 = S6;
	EMU_Write32(S6 + 8,A2); //+ 0x8
	S6 = EMU_CheckedAdd(S6,12);
	S5 = A0;
	A2 = 9;
	A2 = ~A2;
	S1 &= A2;
	ZZ_CLOCKCYCLES(24,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_224:
	A0 = V1 << 2;
	S6 = S6 - A0;
	ZZ_CLOCKCYCLES(3,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_230:
	A2 = EMU_ReadU32(S7 + 8); //+ 0x8
	V0 = -25;
	A3 = A2 >> 16;
	if (!A3)
	{
		A3 = EMU_CheckedAdd(A3,64);
		ZZ_CLOCKCYCLES(5,0x8003AEBC);
		goto ZZ_3AC50_26C;
	}
	A3 = EMU_CheckedAdd(A3,64);
	A2 &= 0xFFFF;
	A2 = EMU_CheckedAdd(A2,64);
	S6 = A2 + S0;
	S5 = EMU_ReadU32(S7 + 4); //+ 0x4
	A2 = EMU_ReadU16(S7);
	S7 = A3 + S0;
	A3 = 0xFFFF0000;
	V1 = S1 & A3;
	V1 |= A2;
	V0 = -255;
	ZZ_CLOCKCYCLES(15,0x8003AEBC);
ZZ_3AC50_26C:
	A0 = S1 & 0x8;
	if (!A0)
	{
		A0 = S1 & 0x20;
		ZZ_CLOCKCYCLES(3,0x8003AEE4);
		goto ZZ_3AC50_294;
	}
	A0 = S1 & 0x20;
	if (!A0)
	{
		A0 = 255;
		ZZ_CLOCKCYCLES(5,0x8003AEDC);
		goto ZZ_3AC50_28C;
	}
	A0 = 255;
	EMU_Write32(S2,A0);
	V0 = -255;
	ZZ_CLOCKCYCLES(8,0x8003A330);
	goto ZZ_3A2AC_84;
ZZ_3AC50_28C:
	V0 = -26;
	ZZ_CLOCKCYCLES(2,0x8003A330);
	goto ZZ_3A2AC_84;
ZZ_3AC50_294:
	A0 = S1 & 0x1;
	A3 = -255;
	A3 = (int32_t)A3 < (int32_t)V0;
	A0 |= A3;
	if (!A0)
	{
		A0 = S1 & 0x10;
		ZZ_CLOCKCYCLES(6,0x8003AF18);
		goto ZZ_3AC50_2C8;
	}
	A0 = S1 & 0x10;
	if (!A0)
	{
		A0 = (int32_t)V0 < -254;
		ZZ_CLOCKCYCLES(8,0x8003A330);
		goto ZZ_3A2AC_84;
	}
	A0 = (int32_t)V0 < -254;
	if (!A0)
	{
		ZZ_CLOCKCYCLES(10,0x8003A330);
		goto ZZ_3A2AC_84;
	}
	S6 = EMU_CheckedAdd(S6,4);
	EMU_Write32(S6 - 4,R0); //+ 0xFFFFFFFC
	ZZ_CLOCKCYCLES(13,0x8003A330);
	goto ZZ_3A2AC_84;
ZZ_3AC50_2C8:
	A2 = 0xFFFF;
	A0 = V1 & 0xFFFF;
	if (A2 == A0)
	{
		ZZ_CLOCKCYCLES(4,0x8003A304);
		goto ZZ_3A2AC_58;
	}
	S1 = V1;
	ZZ_CLOCKCYCLES(6,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_2E0:
	A3 = A1 << 22;
	A3 = (int32_t)A3 >> 20;
	S5 += A3;
	A3 = A1 >> 8;
	A3 &= 0x3C;
	S6 = S6 - A3;
	ZZ_CLOCKCYCLES(7,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_2FC:
	A0 = A1 >> 14;
	RA = 0x8003AF58; //ZZ_3AC50_308
	A0 &= 0x3F;
	ZZ_CLOCKCYCLES(3,0x8003A20C);
	goto ZZ_3A20C;
ZZ_3AC50_308:
	A0 = EMU_ReadU32(V0);
	A3 = A1 << 22;
	if (!A0)
	{
		A3 = (int32_t)A3 >> 20;
		ZZ_CLOCKCYCLES(4,0x8003AF98);
		goto ZZ_3AC50_348;
	}
	A3 = (int32_t)A3 >> 20;
	ZZ_CLOCKCYCLES(4,0x8003AF68);
ZZ_3AC50_318:
	S5 += A3;
	A3 = A1 >> 8;
	A3 &= 0x3C;
	S6 = S6 - A3;
	ZZ_CLOCKCYCLES(5,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_32C:
	A0 = A1 >> 14;
	RA = 0x8003AF88; //ZZ_3AC50_338
	A0 &= 0x3F;
	ZZ_CLOCKCYCLES(3,0x8003A20C);
	goto ZZ_3A20C;
ZZ_3AC50_338:
	A0 = EMU_ReadU32(V0);
	A3 = A1 << 22;
	if (!A0)
	{
		A3 = (int32_t)A3 >> 20;
		ZZ_CLOCKCYCLES(4,0x8003AF68);
		goto ZZ_3AC50_318;
	}
	A3 = (int32_t)A3 >> 20;
	ZZ_CLOCKCYCLES(4,0x8003AF98);
ZZ_3AC50_348:
	ZZ_CLOCKCYCLES(2,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_350:
	V0 = 0x80030000;
	V0 |= 0x92A4;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_35C:
	A0 = A1 >> 14;
	RA = 0x8003AFB8; //ZZ_3AC50_368
	A0 &= 0x3F;
	ZZ_CLOCKCYCLES(3,0x8003A20C);
	goto ZZ_3A20C;
ZZ_3AC50_368:
	A0 = EMU_ReadU32(V0);
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x8003AFF0);
		goto ZZ_3AC50_3A0;
	}
	ZZ_CLOCKCYCLES(4,0x8003AFC8);
ZZ_3AC50_378:
	V0 = 0x80030000;
	V0 |= 0x92A4;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_384:
	A0 = A1 >> 14;
	RA = 0x8003AFE0; //ZZ_3AC50_390
	A0 &= 0x3F;
	ZZ_CLOCKCYCLES(3,0x8003A20C);
	goto ZZ_3A20C;
ZZ_3AC50_390:
	A0 = EMU_ReadU32(V0);
	if (!A0)
	{
		ZZ_CLOCKCYCLES(4,0x8003AFC8);
		goto ZZ_3AC50_378;
	}
	ZZ_CLOCKCYCLES(4,0x8003AFF0);
ZZ_3AC50_3A0:
	A3 = A1 >> 8;
	A3 &= 0x3C;
	S6 = S6 - A3;
	ZZ_CLOCKCYCLES(4,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_3B0:
	V0 = 0x80030000;
	V0 |= 0x939C;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_3BC:
	V0 = 0x80030000;
	V0 |= 0x9470;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_3C8:
	V0 = 0x80030000;
	V0 |= 0x95A8;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_3D4:
	V0 = 0x80030000;
	V0 |= 0x975C;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_3E0:
	V0 = 0x80030000;
	V0 |= 0x991C;
	ZZ_CLOCKCYCLES(3,0x8003A27C);
	goto ZZ_3A234_48;
ZZ_3AC50_3EC:
	EMU_Write32(S0 + 188,S6); //+ 0xBC
	EMU_Write32(S0 + 196,S7); //+ 0xC4
	A0 = S0;
	A2 = S1;
	RA = 0x8003B054; //ZZ_3AC50_404
	A3 = S2;
	ZZ_CLOCKCYCLES(6,0x80039AB4);
	goto ZZ_39AB4;
ZZ_3AC50_404:
	S1 = EMU_ReadU32(FP + 72); //+ 0x48
	S5 = EMU_ReadU32(S0 + 192); //+ 0xC0
	S6 = EMU_ReadU32(S0 + 188); //+ 0xBC
	if (V0)
	{
		S7 = EMU_ReadU32(S0 + 196); //+ 0xC4
		ZZ_CLOCKCYCLES(5,0x8003A330);
		goto ZZ_3A2AC_84;
	}
	S7 = EMU_ReadU32(S0 + 196); //+ 0xC4
	ZZ_CLOCKCYCLES(7,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_420:
	A2 = 28;
	RA = 0x8003B07C; //ZZ_3AC50_42C
	A0 = A1 >> 12;
	ZZ_CLOCKCYCLES(3,0x80039FC4);
	goto ZZ_39FC4;
ZZ_3AC50_42C:
	V1 = V0;
	RA = 0x8003B088; //ZZ_3AC50_438
	A0 = A1 << 21;
	ZZ_CLOCKCYCLES(3,0x8003A0A8);
	goto ZZ_3A0A8;
ZZ_3AC50_438:
	A0 = EMU_ReadU32(V1);
	A1 = EMU_ReadU32(V1 + 4); //+ 0x4
	A2 = EMU_ReadU32(V1 + 8); //+ 0x8
	EMU_Write32(FP + 32,A0); //+ 0x20
	EMU_Write32(FP + 36,A1); //+ 0x24
	EMU_Write32(FP + 40,A2); //+ 0x28
	A0 = V1;
	RA = 0x8003B0AC; //ZZ_3AC50_45C
	A1 = V0;
	ZZ_CLOCKCYCLES(9,0x8001ED20);
	goto ZZ_1ED20;
ZZ_3AC50_45C:
	ZZ_CLOCKCYCLES(2,0x8003A304);
	goto ZZ_3A2AC_58;
ZZ_3AC50_46C:
	A3 = 0x80030000;
	A3 |= 0x9CAC;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_478:
	A3 = 0x80030000;
	A3 |= 0x9D3C;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_484:
	A3 = 0x80030000;
	A3 |= 0x9DAC;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
ZZ_3AC50_490:
	A3 = 0x80030000;
	A3 |= 0x9EA0;
	ZZ_CLOCKCYCLES(3,0x8003A25C);
	goto ZZ_3A234_28;
#endif
ZZ_MARK_TARGET(0x8003AC50,ZZ_3AC50);
ZZ_MARK(0x8003AC54);
ZZ_MARK(0x8003AC58);
ZZ_MARK(0x8003AC5C);
ZZ_MARK(0x8003AC60);
ZZ_MARK(0x8003AC64);
ZZ_MARK(0x8003AC68);
ZZ_MARK(0x8003AC6C);
ZZ_MARK(0x8003AC70);
ZZ_MARK(0x8003AC74);
ZZ_MARK_TARGET(0x8003AC78,ZZ_3AC50_28);
ZZ_MARK(0x8003AC7C);
ZZ_MARK(0x8003AC80);
ZZ_MARK_TARGET(0x8003AC84,ZZ_3AC50_34);
ZZ_MARK(0x8003AC88);
ZZ_MARK(0x8003AC8C);
ZZ_MARK(0x8003AC90);
ZZ_MARK(0x8003AC94);
ZZ_MARK(0x8003AC98);
ZZ_MARK_TARGET(0x8003AC9C,ZZ_3AC50_4C);
ZZ_MARK(0x8003ACA0);
ZZ_MARK(0x8003ACA4);
ZZ_MARK(0x8003ACA8);
ZZ_MARK_TARGET(0x8003ACAC,ZZ_3AC50_5C);
ZZ_MARK(0x8003ACB0);
ZZ_MARK_TARGET(0x8003ACB4,ZZ_3AC50_64);
ZZ_MARK(0x8003ACB8);
ZZ_MARK(0x8003ACBC);
ZZ_MARK(0x8003ACC0);
ZZ_MARK_TARGET(0x8003ACC4,ZZ_3AC50_74);
ZZ_MARK(0x8003ACC8);
ZZ_MARK(0x8003ACCC);
ZZ_MARK_TARGET(0x8003ACD0,ZZ_3AC50_80);
ZZ_MARK(0x8003ACD4);
ZZ_MARK(0x8003ACD8);
ZZ_MARK_TARGET(0x8003ACDC,ZZ_3AC50_8C);
ZZ_MARK(0x8003ACE0);
ZZ_MARK_TARGET(0x8003ACE4,ZZ_3AC50_94);
ZZ_MARK(0x8003ACE8);
ZZ_MARK(0x8003ACEC);
ZZ_MARK_TARGET(0x8003ACF0,ZZ_3AC50_A0);
ZZ_MARK(0x8003ACF4);
ZZ_MARK(0x8003ACF8);
ZZ_MARK(0x8003ACFC);
ZZ_MARK(0x8003AD00);
ZZ_MARK(0x8003AD04);
ZZ_MARK(0x8003AD08);
ZZ_MARK_TARGET(0x8003AD0C,ZZ_3AC50_BC);
ZZ_MARK(0x8003AD10);
ZZ_MARK(0x8003AD14);
ZZ_MARK_TARGET(0x8003AD18,ZZ_3AC50_C8);
ZZ_MARK(0x8003AD1C);
ZZ_MARK(0x8003AD20);
ZZ_MARK_TARGET(0x8003AD24,ZZ_3AC50_D4);
ZZ_MARK(0x8003AD28);
ZZ_MARK(0x8003AD2C);
ZZ_MARK_TARGET(0x8003AD30,ZZ_3AC50_E0);
ZZ_MARK(0x8003AD34);
ZZ_MARK(0x8003AD38);
ZZ_MARK_TARGET(0x8003AD3C,ZZ_3AC50_EC);
ZZ_MARK(0x8003AD40);
ZZ_MARK(0x8003AD44);
ZZ_MARK_TARGET(0x8003AD48,ZZ_3AC50_F8);
ZZ_MARK(0x8003AD4C);
ZZ_MARK(0x8003AD50);
ZZ_MARK_TARGET(0x8003AD54,ZZ_3AC50_104);
ZZ_MARK(0x8003AD58);
ZZ_MARK(0x8003AD5C);
ZZ_MARK_TARGET(0x8003AD60,ZZ_3AC50_110);
ZZ_MARK(0x8003AD64);
ZZ_MARK(0x8003AD68);
ZZ_MARK_TARGET(0x8003AD6C,ZZ_3AC50_11C);
ZZ_MARK(0x8003AD70);
ZZ_MARK_TARGET(0x8003AD74,ZZ_3AC50_124);
ZZ_MARK(0x8003AD78);
ZZ_MARK(0x8003AD7C);
ZZ_MARK(0x8003AD80);
ZZ_MARK_TARGET(0x8003AD84,ZZ_3AC50_134);
ZZ_MARK(0x8003AD88);
ZZ_MARK(0x8003AD8C);
ZZ_MARK(0x8003AD90);
ZZ_MARK(0x8003AD94);
ZZ_MARK(0x8003AD98);
ZZ_MARK(0x8003AD9C);
ZZ_MARK(0x8003ADA0);
ZZ_MARK(0x8003ADA4);
ZZ_MARK(0x8003ADA8);
ZZ_MARK(0x8003ADAC);
ZZ_MARK(0x8003ADB0);
ZZ_MARK(0x8003ADB4);
ZZ_MARK(0x8003ADB8);
ZZ_MARK(0x8003ADBC);
ZZ_MARK(0x8003ADC0);
ZZ_MARK(0x8003ADC4);
ZZ_MARK(0x8003ADC8);
ZZ_MARK(0x8003ADCC);
ZZ_MARK(0x8003ADD0);
ZZ_MARK(0x8003ADD4);
ZZ_MARK(0x8003ADD8);
ZZ_MARK_TARGET(0x8003ADDC,ZZ_3AC50_18C);
ZZ_MARK(0x8003ADE0);
ZZ_MARK(0x8003ADE4);
ZZ_MARK(0x8003ADE8);
ZZ_MARK_TARGET(0x8003ADEC,ZZ_3AC50_19C);
ZZ_MARK(0x8003ADF0);
ZZ_MARK(0x8003ADF4);
ZZ_MARK(0x8003ADF8);
ZZ_MARK_TARGET(0x8003ADFC,ZZ_3AC50_1AC);
ZZ_MARK(0x8003AE00);
ZZ_MARK_TARGET(0x8003AE04,ZZ_3AC50_1B4);
ZZ_MARK(0x8003AE08);
ZZ_MARK(0x8003AE0C);
ZZ_MARK(0x8003AE10);
ZZ_MARK_TARGET(0x8003AE14,ZZ_3AC50_1C4);
ZZ_MARK(0x8003AE18);
ZZ_MARK(0x8003AE1C);
ZZ_MARK(0x8003AE20);
ZZ_MARK(0x8003AE24);
ZZ_MARK(0x8003AE28);
ZZ_MARK(0x8003AE2C);
ZZ_MARK(0x8003AE30);
ZZ_MARK(0x8003AE34);
ZZ_MARK(0x8003AE38);
ZZ_MARK(0x8003AE3C);
ZZ_MARK(0x8003AE40);
ZZ_MARK(0x8003AE44);
ZZ_MARK(0x8003AE48);
ZZ_MARK(0x8003AE4C);
ZZ_MARK(0x8003AE50);
ZZ_MARK(0x8003AE54);
ZZ_MARK(0x8003AE58);
ZZ_MARK(0x8003AE5C);
ZZ_MARK(0x8003AE60);
ZZ_MARK(0x8003AE64);
ZZ_MARK(0x8003AE68);
ZZ_MARK(0x8003AE6C);
ZZ_MARK(0x8003AE70);
ZZ_MARK_TARGET(0x8003AE74,ZZ_3AC50_224);
ZZ_MARK(0x8003AE78);
ZZ_MARK(0x8003AE7C);
ZZ_MARK_TARGET(0x8003AE80,ZZ_3AC50_230);
ZZ_MARK(0x8003AE84);
ZZ_MARK(0x8003AE88);
ZZ_MARK(0x8003AE8C);
ZZ_MARK(0x8003AE90);
ZZ_MARK(0x8003AE94);
ZZ_MARK(0x8003AE98);
ZZ_MARK(0x8003AE9C);
ZZ_MARK(0x8003AEA0);
ZZ_MARK(0x8003AEA4);
ZZ_MARK(0x8003AEA8);
ZZ_MARK(0x8003AEAC);
ZZ_MARK(0x8003AEB0);
ZZ_MARK(0x8003AEB4);
ZZ_MARK(0x8003AEB8);
ZZ_MARK_TARGET(0x8003AEBC,ZZ_3AC50_26C);
ZZ_MARK(0x8003AEC0);
ZZ_MARK(0x8003AEC4);
ZZ_MARK(0x8003AEC8);
ZZ_MARK(0x8003AECC);
ZZ_MARK(0x8003AED0);
ZZ_MARK(0x8003AED4);
ZZ_MARK(0x8003AED8);
ZZ_MARK_TARGET(0x8003AEDC,ZZ_3AC50_28C);
ZZ_MARK(0x8003AEE0);
ZZ_MARK_TARGET(0x8003AEE4,ZZ_3AC50_294);
ZZ_MARK(0x8003AEE8);
ZZ_MARK(0x8003AEEC);
ZZ_MARK(0x8003AEF0);
ZZ_MARK(0x8003AEF4);
ZZ_MARK(0x8003AEF8);
ZZ_MARK(0x8003AEFC);
ZZ_MARK(0x8003AF00);
ZZ_MARK(0x8003AF04);
ZZ_MARK(0x8003AF08);
ZZ_MARK(0x8003AF0C);
ZZ_MARK(0x8003AF10);
ZZ_MARK(0x8003AF14);
ZZ_MARK_TARGET(0x8003AF18,ZZ_3AC50_2C8);
ZZ_MARK(0x8003AF1C);
ZZ_MARK(0x8003AF20);
ZZ_MARK(0x8003AF24);
ZZ_MARK(0x8003AF28);
ZZ_MARK(0x8003AF2C);
ZZ_MARK_TARGET(0x8003AF30,ZZ_3AC50_2E0);
ZZ_MARK(0x8003AF34);
ZZ_MARK(0x8003AF38);
ZZ_MARK(0x8003AF3C);
ZZ_MARK(0x8003AF40);
ZZ_MARK(0x8003AF44);
ZZ_MARK(0x8003AF48);
ZZ_MARK_TARGET(0x8003AF4C,ZZ_3AC50_2FC);
ZZ_MARK(0x8003AF50);
ZZ_MARK(0x8003AF54);
ZZ_MARK_TARGET(0x8003AF58,ZZ_3AC50_308);
ZZ_MARK(0x8003AF5C);
ZZ_MARK(0x8003AF60);
ZZ_MARK(0x8003AF64);
ZZ_MARK_TARGET(0x8003AF68,ZZ_3AC50_318);
ZZ_MARK(0x8003AF6C);
ZZ_MARK(0x8003AF70);
ZZ_MARK(0x8003AF74);
ZZ_MARK(0x8003AF78);
ZZ_MARK_TARGET(0x8003AF7C,ZZ_3AC50_32C);
ZZ_MARK(0x8003AF80);
ZZ_MARK(0x8003AF84);
ZZ_MARK_TARGET(0x8003AF88,ZZ_3AC50_338);
ZZ_MARK(0x8003AF8C);
ZZ_MARK(0x8003AF90);
ZZ_MARK(0x8003AF94);
ZZ_MARK_TARGET(0x8003AF98,ZZ_3AC50_348);
ZZ_MARK(0x8003AF9C);
ZZ_MARK_TARGET(0x8003AFA0,ZZ_3AC50_350);
ZZ_MARK(0x8003AFA4);
ZZ_MARK(0x8003AFA8);
ZZ_MARK_TARGET(0x8003AFAC,ZZ_3AC50_35C);
ZZ_MARK(0x8003AFB0);
ZZ_MARK(0x8003AFB4);
ZZ_MARK_TARGET(0x8003AFB8,ZZ_3AC50_368);
ZZ_MARK(0x8003AFBC);
ZZ_MARK(0x8003AFC0);
ZZ_MARK(0x8003AFC4);
ZZ_MARK_TARGET(0x8003AFC8,ZZ_3AC50_378);
ZZ_MARK(0x8003AFCC);
ZZ_MARK(0x8003AFD0);
ZZ_MARK_TARGET(0x8003AFD4,ZZ_3AC50_384);
ZZ_MARK(0x8003AFD8);
ZZ_MARK(0x8003AFDC);
ZZ_MARK_TARGET(0x8003AFE0,ZZ_3AC50_390);
ZZ_MARK(0x8003AFE4);
ZZ_MARK(0x8003AFE8);
ZZ_MARK(0x8003AFEC);
ZZ_MARK_TARGET(0x8003AFF0,ZZ_3AC50_3A0);
ZZ_MARK(0x8003AFF4);
ZZ_MARK(0x8003AFF8);
ZZ_MARK(0x8003AFFC);
ZZ_MARK_TARGET(0x8003B000,ZZ_3AC50_3B0);
ZZ_MARK(0x8003B004);
ZZ_MARK(0x8003B008);
ZZ_MARK_TARGET(0x8003B00C,ZZ_3AC50_3BC);
ZZ_MARK(0x8003B010);
ZZ_MARK(0x8003B014);
ZZ_MARK_TARGET(0x8003B018,ZZ_3AC50_3C8);
ZZ_MARK(0x8003B01C);
ZZ_MARK(0x8003B020);
ZZ_MARK_TARGET(0x8003B024,ZZ_3AC50_3D4);
ZZ_MARK(0x8003B028);
ZZ_MARK(0x8003B02C);
ZZ_MARK_TARGET(0x8003B030,ZZ_3AC50_3E0);
ZZ_MARK(0x8003B034);
ZZ_MARK(0x8003B038);
ZZ_MARK_TARGET(0x8003B03C,ZZ_3AC50_3EC);
ZZ_MARK(0x8003B040);
ZZ_MARK(0x8003B044);
ZZ_MARK(0x8003B048);
ZZ_MARK(0x8003B04C);
ZZ_MARK(0x8003B050);
ZZ_MARK_TARGET(0x8003B054,ZZ_3AC50_404);
ZZ_MARK(0x8003B058);
ZZ_MARK(0x8003B05C);
ZZ_MARK(0x8003B060);
ZZ_MARK(0x8003B064);
ZZ_MARK(0x8003B068);
ZZ_MARK(0x8003B06C);
ZZ_MARK_TARGET(0x8003B070,ZZ_3AC50_420);
ZZ_MARK(0x8003B074);
ZZ_MARK(0x8003B078);
ZZ_MARK_TARGET(0x8003B07C,ZZ_3AC50_42C);
ZZ_MARK(0x8003B080);
ZZ_MARK(0x8003B084);
ZZ_MARK_TARGET(0x8003B088,ZZ_3AC50_438);
ZZ_MARK(0x8003B08C);
ZZ_MARK(0x8003B090);
ZZ_MARK(0x8003B094);
ZZ_MARK(0x8003B098);
ZZ_MARK(0x8003B09C);
ZZ_MARK(0x8003B0A0);
ZZ_MARK(0x8003B0A4);
ZZ_MARK(0x8003B0A8);
ZZ_MARK_TARGET(0x8003B0AC,ZZ_3AC50_45C);
ZZ_MARK(0x8003B0B0);
ZZ_MARK_TARGET(0x8003B0BC,ZZ_3AC50_46C);
ZZ_MARK(0x8003B0C0);
ZZ_MARK(0x8003B0C4);
ZZ_MARK_TARGET(0x8003B0C8,ZZ_3AC50_478);
ZZ_MARK(0x8003B0CC);
ZZ_MARK(0x8003B0D0);
ZZ_MARK_TARGET(0x8003B0D4,ZZ_3AC50_484);
ZZ_MARK(0x8003B0D8);
ZZ_MARK(0x8003B0DC);
ZZ_MARK_TARGET(0x8003B0E0,ZZ_3AC50_490);
ZZ_MARK(0x8003B0E4);
ZZ_MARK(0x8003B0E8);
