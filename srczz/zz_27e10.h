#ifdef ZZ_INCLUDE_CODE
ZZ_27E10:
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 27180); //+ 0xFFFF95D4
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	AT = 0x80070000;
	EMU_Write32(AT - 27188,R0); //+ 0xFFFF95CC
	if (!A0)
	{
		ZZ_CLOCKCYCLES(8,0x80027E40);
		goto ZZ_27E10_30;
	}
	RA = 0x80027E38; //ZZ_27E10_28
	ZZ_CLOCKCYCLES(10,0x800116C0);
	goto ZZ_116C0;
ZZ_27E10_28:
	AT = 0x80070000;
	EMU_Write32(AT - 27180,R0); //+ 0xFFFF95D4
	ZZ_CLOCKCYCLES(2,0x80027E40);
ZZ_27E10_30:
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 27184); //+ 0xFFFF95D0
	if (!A0)
	{
		ZZ_CLOCKCYCLES(5,0x80027E64);
		goto ZZ_27E10_54;
	}
	RA = 0x80027E5C; //ZZ_27E10_4C
	ZZ_CLOCKCYCLES(7,0x800116C0);
	goto ZZ_116C0;
ZZ_27E10_4C:
	AT = 0x80070000;
	EMU_Write32(AT - 27184,R0); //+ 0xFFFF95D0
	ZZ_CLOCKCYCLES(2,0x80027E64);
ZZ_27E10_54:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	V0 = -255;
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 24;
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x800153E0,ZZ_15340_A0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80027E10,0x80027E38,ZZ_27E10);
ZZ_MARK_TARGET(0x80027E38,0x80027E40,ZZ_27E10_28);
ZZ_MARK_TARGET(0x80027E40,0x80027E5C,ZZ_27E10_30);
ZZ_MARK_TARGET(0x80027E5C,0x80027E64,ZZ_27E10_4C);
ZZ_MARK_TARGET(0x80027E64,0x80027E74,ZZ_27E10_54);
