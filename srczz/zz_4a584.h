#ifdef ZZ_INCLUDE_CODE
ZZ_4A584:
	AT = 0x80060000;
	EMU_Write32(AT - 2628,RA); //+ 0xFFFFF5BC
	RA = 0x8004A594; //ZZ_4A584_10
	ZZ_CLOCKCYCLES(4,0x80049FB4);
	goto ZZ_49FB4;
ZZ_4A584_10:
	T2 = 176;
	ZZ_JUMPREGISTER_BEGIN(T2);
	RA = 0x8004A5A0; //ZZ_4A584_1C
	T1 = 87;
	ZZ_CLOCKCYCLES_JR(3);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (T2,8004A598)
	ZZ_JUMPREGISTER_END();
ZZ_4A584_1C:
	V0 = EMU_ReadU32(V0 + 364); //+ 0x16C
	AT = 0x80060000;
	V1 = EMU_CheckedAdd(V0,2180);
	EMU_Write32(AT - 2620,V1); //+ 0xFFFFF5C4
	AT = 0x80060000;
	V1 = EMU_CheckedAdd(V0,2196);
	T1 = 11;
	EMU_Write32(AT - 2616,V1); //+ 0xFFFFF5C8
	ZZ_CLOCKCYCLES(8,0x8004A5C0);
ZZ_4A584_3C:
	T1 -= 1;
	EMU_Write32(V0 + 1428,R0); //+ 0x594
	if (T1)
	{
		V0 += 4;
		ZZ_CLOCKCYCLES(4,0x8004A5C0);
		goto ZZ_4A584_3C;
	}
	V0 += 4;
	RA = 0x8004A5D8; //ZZ_4A584_54
	ZZ_CLOCKCYCLES(6,0x8004A5EC);
	goto ZZ_4A5EC;
ZZ_4A584_54:
	RA = 0x80060000;
	RA = EMU_ReadU32(RA - 2628); //+ 0xFFFFF5BC
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8004A2D4,ZZ_4A298_3C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004A584,0x8004A594,ZZ_4A584);
ZZ_MARK_TARGET(0x8004A594,0x8004A5A0,ZZ_4A584_10);
ZZ_MARK_TARGET(0x8004A5A0,0x8004A5C0,ZZ_4A584_1C);
ZZ_MARK_TARGET(0x8004A5C0,0x8004A5D8,ZZ_4A584_3C);
ZZ_MARK_TARGET(0x8004A5D8,0x8004A5EC,ZZ_4A584_54);
