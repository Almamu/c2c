#ifdef ZZ_INCLUDE_CODE
ZZ_31514:
	SP -= 40;
	EMU_Write32(SP + 32,RA); //+ 0x20
	V0 = EMU_ReadU32(A0);
	V1 = EMU_ReadU32(A1);
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V1 = EMU_ReadU32(A1 + 8); //+ 0x8
	A2 = LO;
	V0 = V0 - V1;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	EMU_Write32(SP + 24,V0); //+ 0x18
	V1 = LO;
	RA = 0x80031560; //ZZ_31514_4C
	A0 = A2 + V1;
	ZZ_CLOCKCYCLES(19,0x80041D10);
	goto ZZ_41D10;
ZZ_31514_4C:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	V0 <<= 8;
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 40;
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80038024,ZZ_37930_6F4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80031514,ZZ_31514);
ZZ_MARK(0x80031518);
ZZ_MARK(0x8003151C);
ZZ_MARK(0x80031520);
ZZ_MARK(0x80031524);
ZZ_MARK(0x80031528);
ZZ_MARK(0x8003152C);
ZZ_MARK(0x80031530);
ZZ_MARK(0x80031534);
ZZ_MARK(0x80031538);
ZZ_MARK(0x8003153C);
ZZ_MARK(0x80031540);
ZZ_MARK(0x80031544);
ZZ_MARK(0x80031548);
ZZ_MARK(0x8003154C);
ZZ_MARK(0x80031550);
ZZ_MARK(0x80031554);
ZZ_MARK(0x80031558);
ZZ_MARK(0x8003155C);
ZZ_MARK_TARGET(0x80031560,ZZ_31514_4C);
ZZ_MARK(0x80031564);
ZZ_MARK(0x80031568);
ZZ_MARK(0x8003156C);
