#ifdef ZZ_INCLUDE_CODE
ZZ_18FA4:
	SP -= 48;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A1;
	EMU_Write32(SP + 40,RA); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 28,S1); //+ 0x1C
	EMU_Write32(SP + 24,S0); //+ 0x18
	A1 = EMU_ReadU32(S2 + 4); //+ 0x4
	S1 = A0;
	if (S1 == A1)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(11,0x80019190);
		goto ZZ_18FA4_1EC;
	}
	V0 = R0;
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	A0 = EMU_ReadU32(S2);
	V0 = 0x1;
	V1 = (int32_t)V1 >> 8;
	V0 <<= V1;
	V0 &= A0;
	if (!V0)
	{
		A0 = S1 + 96;
		ZZ_CLOCKCYCLES(23,0x8001918C);
		goto ZZ_18FA4_1E8;
	}
	A0 = S1 + 96;
	RA = 0x80019008; //ZZ_18FA4_64
	A1 += 96;
	ZZ_CLOCKCYCLES(25,0x800312F8);
	goto ZZ_312F8;
ZZ_18FA4_64:
	V1 = EMU_ReadU32(S2 + 12); //+ 0xC
	S3 = V0;
	V1 = (int32_t)S3 < (int32_t)V1;
	if (!V1)
	{
		A2 = 0xFF;
		ZZ_CLOCKCYCLES(5,0x8001918C);
		goto ZZ_18FA4_1E8;
	}
	A2 = 0xFF;
	A0 = EMU_ReadU32(S2 + 16); //+ 0x10
	if (A0 == A2)
	{
		V0 = (int32_t)A0 >> 8;
		ZZ_CLOCKCYCLES(9,0x80019174);
		goto ZZ_18FA4_1D0;
	}
	V0 = (int32_t)A0 >> 8;
	A1 = EMU_ReadU32(S1 + 12); //+ 0xC
	V1 = EMU_ReadU32(A1 + 28); //+ 0x1C
	V0 <<= 1;
	V0 += V1;
	S0 = EMU_ReadU16(V0);
	if (S0 != A2)
	{
		V0 = S0 & 0x8000;
		ZZ_CLOCKCYCLES(18,0x800190CC);
		goto ZZ_18FA4_128;
	}
	V0 = S0 & 0x8000;
	V0 = 0x300;
	if (A0 != V0)
	{
		ZZ_CLOCKCYCLES(21,0x80019084);
		goto ZZ_18FA4_E0;
	}
	V1 = EMU_ReadU32(S1 + 264); //+ 0x108
	A0 = EMU_ReadU32(S1 + 176); //+ 0xB0
	V0 = V1 - 3;
	V0 = V0 < 2;
	if (V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(27,0x80019084);
		goto ZZ_18FA4_E0;
	}
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = A0 & 0x2;
		ZZ_CLOCKCYCLES(29,0x80019084);
		goto ZZ_18FA4_E0;
	}
	V0 = A0 & 0x2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(31,0x80019174);
		goto ZZ_18FA4_1D0;
	}
	ZZ_CLOCKCYCLES(31,0x80019084);
ZZ_18FA4_E0:
	V1 = EMU_ReadU32(S2 + 16); //+ 0x10
	V0 = 0xA00;
	if (V1 != V0)
	{
		V0 = 0x1D00;
		ZZ_CLOCKCYCLES(4,0x800190A8);
		goto ZZ_18FA4_104;
	}
	V0 = 0x1D00;
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 &= 0x800;
	if (!V0)
	{
		V0 = 0x1D00;
		ZZ_CLOCKCYCLES(9,0x80019174);
		goto ZZ_18FA4_1D0;
	}
	V0 = 0x1D00;
	ZZ_CLOCKCYCLES(9,0x800190A8);
ZZ_18FA4_104:
	if (V1 != V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x80019190);
		goto ZZ_18FA4_1EC;
	}
	V0 = R0;
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V1 = 0x2000000;
	V0 &= V1;
	if (!V0)
	{
		S0 = 0xFE;
		ZZ_CLOCKCYCLES(7,0x80019178);
		goto ZZ_18FA4_1D4;
	}
	S0 = 0xFE;
	V0 = R0;
	ZZ_CLOCKCYCLES(9,0x80019190);
	goto ZZ_18FA4_1EC;
ZZ_18FA4_128:
	if (V0)
	{
		V1 = S0 << 4;
		ZZ_CLOCKCYCLES(2,0x80019120);
		goto ZZ_18FA4_17C;
	}
	V1 = S0 << 4;
	V0 = EMU_ReadU32(A1 + 32); //+ 0x20
	A1 = EMU_ReadU32(S1 + 176); //+ 0xB0
	A0 = EMU_ReadU32(S1 + 264); //+ 0x108
	V1 += V0;
	V1 = EMU_ReadU32(V1);
	V0 = A0 - 3;
	V0 = V0 < 2;
	if (V0)
	{
		V0 = A1 | 0x1002;
		ZZ_CLOCKCYCLES(11,0x80019108);
		goto ZZ_18FA4_164;
	}
	V0 = A1 | 0x1002;
	V0 = 0x2;
	if (A0 != V0)
	{
		V0 = A1 & V1;
		ZZ_CLOCKCYCLES(14,0x8001910C);
		goto ZZ_18FA4_168;
	}
	V0 = A1 & V1;
	V0 = A1 | 0x1002;
	ZZ_CLOCKCYCLES(15,0x80019108);
ZZ_18FA4_164:
	V0 &= V1;
	ZZ_CLOCKCYCLES(1,0x8001910C);
ZZ_18FA4_168:
	if (V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x80019190);
		goto ZZ_18FA4_1EC;
	}
	V0 = R0;
	V0 = S0 & 0x8000;
	if (!V0)
	{
		V0 = 0xFF;
		ZZ_CLOCKCYCLES(5,0x8001917C);
		goto ZZ_18FA4_1D8;
	}
	V0 = 0xFF;
	ZZ_CLOCKCYCLES(5,0x80019120);
ZZ_18FA4_17C:
	V1 = EMU_ReadU32(S2 + 16); //+ 0x10
	V0 = 0xF00;
	if (V1 != V0)
	{
		V0 = 0xFF;
		ZZ_CLOCKCYCLES(4,0x8001917C);
		goto ZZ_18FA4_1D8;
	}
	V0 = 0xFF;
	V1 = EMU_ReadU32(S2 + 4); //+ 0x4
	A0 = S1;
	A1 = S0;
	V0 = 0x100;
	A2 = 0x1;
	A3 = SP + 16;
	EMU_Write32(SP + 16,V0); //+ 0x10
	RA = 0x80019154; //ZZ_18FA4_1B0
	EMU_Write32(S1 + 92,V1); //+ 0x5C
	ZZ_CLOCKCYCLES(13,0x8001D448);
	goto ZZ_1D448;
ZZ_18FA4_1B0:
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = EMU_ReadU32(V0 + 216); //+ 0xD8
	if (V0)
	{
		V0 = 0xFF;
		ZZ_CLOCKCYCLES(6,0x8001917C);
		goto ZZ_18FA4_1D8;
	}
	V0 = 0xFF;
	V0 = R0;
	ZZ_CLOCKCYCLES(8,0x80019190);
	goto ZZ_18FA4_1EC;
ZZ_18FA4_1D0:
	S0 = 0xFE;
	ZZ_CLOCKCYCLES(1,0x80019178);
ZZ_18FA4_1D4:
	V0 = 0xFF;
	ZZ_CLOCKCYCLES(1,0x8001917C);
ZZ_18FA4_1D8:
	if (S0 == V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x80019190);
		goto ZZ_18FA4_1EC;
	}
	V0 = R0;
	EMU_Write32(S2 + 8,S1); //+ 0x8
	EMU_Write32(S2 + 12,S3); //+ 0xC
	ZZ_CLOCKCYCLES(4,0x8001918C);
ZZ_18FA4_1E8:
	V0 = R0;
	ZZ_CLOCKCYCLES(1,0x80019190);
ZZ_18FA4_1EC:
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80018FA4,ZZ_18FA4);
ZZ_MARK(0x80018FA8);
ZZ_MARK(0x80018FAC);
ZZ_MARK(0x80018FB0);
ZZ_MARK(0x80018FB4);
ZZ_MARK(0x80018FB8);
ZZ_MARK(0x80018FBC);
ZZ_MARK(0x80018FC0);
ZZ_MARK(0x80018FC4);
ZZ_MARK(0x80018FC8);
ZZ_MARK(0x80018FCC);
ZZ_MARK(0x80018FD0);
ZZ_MARK(0x80018FD4);
ZZ_MARK(0x80018FD8);
ZZ_MARK(0x80018FDC);
ZZ_MARK(0x80018FE0);
ZZ_MARK(0x80018FE4);
ZZ_MARK(0x80018FE8);
ZZ_MARK(0x80018FEC);
ZZ_MARK(0x80018FF0);
ZZ_MARK(0x80018FF4);
ZZ_MARK(0x80018FF8);
ZZ_MARK(0x80018FFC);
ZZ_MARK(0x80019000);
ZZ_MARK(0x80019004);
ZZ_MARK_TARGET(0x80019008,ZZ_18FA4_64);
ZZ_MARK(0x8001900C);
ZZ_MARK(0x80019010);
ZZ_MARK(0x80019014);
ZZ_MARK(0x80019018);
ZZ_MARK(0x8001901C);
ZZ_MARK(0x80019020);
ZZ_MARK(0x80019024);
ZZ_MARK(0x80019028);
ZZ_MARK(0x8001902C);
ZZ_MARK(0x80019030);
ZZ_MARK(0x80019034);
ZZ_MARK(0x80019038);
ZZ_MARK(0x8001903C);
ZZ_MARK(0x80019040);
ZZ_MARK(0x80019044);
ZZ_MARK(0x80019048);
ZZ_MARK(0x8001904C);
ZZ_MARK(0x80019050);
ZZ_MARK(0x80019054);
ZZ_MARK(0x80019058);
ZZ_MARK(0x8001905C);
ZZ_MARK(0x80019060);
ZZ_MARK(0x80019064);
ZZ_MARK(0x80019068);
ZZ_MARK(0x8001906C);
ZZ_MARK(0x80019070);
ZZ_MARK(0x80019074);
ZZ_MARK(0x80019078);
ZZ_MARK(0x8001907C);
ZZ_MARK(0x80019080);
ZZ_MARK_TARGET(0x80019084,ZZ_18FA4_E0);
ZZ_MARK(0x80019088);
ZZ_MARK(0x8001908C);
ZZ_MARK(0x80019090);
ZZ_MARK(0x80019094);
ZZ_MARK(0x80019098);
ZZ_MARK(0x8001909C);
ZZ_MARK(0x800190A0);
ZZ_MARK(0x800190A4);
ZZ_MARK_TARGET(0x800190A8,ZZ_18FA4_104);
ZZ_MARK(0x800190AC);
ZZ_MARK(0x800190B0);
ZZ_MARK(0x800190B4);
ZZ_MARK(0x800190B8);
ZZ_MARK(0x800190BC);
ZZ_MARK(0x800190C0);
ZZ_MARK(0x800190C4);
ZZ_MARK(0x800190C8);
ZZ_MARK_TARGET(0x800190CC,ZZ_18FA4_128);
ZZ_MARK(0x800190D0);
ZZ_MARK(0x800190D4);
ZZ_MARK(0x800190D8);
ZZ_MARK(0x800190DC);
ZZ_MARK(0x800190E0);
ZZ_MARK(0x800190E4);
ZZ_MARK(0x800190E8);
ZZ_MARK(0x800190EC);
ZZ_MARK(0x800190F0);
ZZ_MARK(0x800190F4);
ZZ_MARK(0x800190F8);
ZZ_MARK(0x800190FC);
ZZ_MARK(0x80019100);
ZZ_MARK(0x80019104);
ZZ_MARK_TARGET(0x80019108,ZZ_18FA4_164);
ZZ_MARK_TARGET(0x8001910C,ZZ_18FA4_168);
ZZ_MARK(0x80019110);
ZZ_MARK(0x80019114);
ZZ_MARK(0x80019118);
ZZ_MARK(0x8001911C);
ZZ_MARK_TARGET(0x80019120,ZZ_18FA4_17C);
ZZ_MARK(0x80019124);
ZZ_MARK(0x80019128);
ZZ_MARK(0x8001912C);
ZZ_MARK(0x80019130);
ZZ_MARK(0x80019134);
ZZ_MARK(0x80019138);
ZZ_MARK(0x8001913C);
ZZ_MARK(0x80019140);
ZZ_MARK(0x80019144);
ZZ_MARK(0x80019148);
ZZ_MARK(0x8001914C);
ZZ_MARK(0x80019150);
ZZ_MARK_TARGET(0x80019154,ZZ_18FA4_1B0);
ZZ_MARK(0x80019158);
ZZ_MARK(0x8001915C);
ZZ_MARK(0x80019160);
ZZ_MARK(0x80019164);
ZZ_MARK(0x80019168);
ZZ_MARK(0x8001916C);
ZZ_MARK(0x80019170);
ZZ_MARK_TARGET(0x80019174,ZZ_18FA4_1D0);
ZZ_MARK_TARGET(0x80019178,ZZ_18FA4_1D4);
ZZ_MARK_TARGET(0x8001917C,ZZ_18FA4_1D8);
ZZ_MARK(0x80019180);
ZZ_MARK(0x80019184);
ZZ_MARK(0x80019188);
ZZ_MARK_TARGET(0x8001918C,ZZ_18FA4_1E8);
ZZ_MARK_TARGET(0x80019190,ZZ_18FA4_1EC);
ZZ_MARK(0x80019194);
ZZ_MARK(0x80019198);
ZZ_MARK(0x8001919C);
ZZ_MARK(0x800191A0);
ZZ_MARK(0x800191A4);
ZZ_MARK(0x800191A8);
ZZ_MARK(0x800191AC);
