#ifdef ZZ_INCLUDE_CODE
ZZ_22978:
	SP -= 120;
	V1 = A0;
	EMU_Write32(SP + 116,RA); //+ 0x74
	EMU_Write32(SP + 112,S2); //+ 0x70
	EMU_Write32(SP + 108,S1); //+ 0x6C
	EMU_Write32(SP + 104,S0); //+ 0x68
	V0 = EMU_ReadU32(V1);
	S2 = A1;
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(V1 + 4); //+ 0x4
	S1 = SP + 40;
	A0 = S1;
	S0 = 0x80060000;
	S0 += 2916;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	T1 = EMU_ReadU32(V1 + 8); //+ 0x8
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU32(S0 + 8); //+ 0x8
	T0 = EMU_ReadU32(S0 + 20); //+ 0x14
	A1 = SP + 24;
	A2 = SP + 88;
	A3 = SP + 92;
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = SP + 96;
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,T0); //+ 0x30
	EMU_Write32(SP + 32,T1); //+ 0x20
	RA = 0x800229EC; //ZZ_22978_74
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(29,0x800245B0);
	goto ZZ_245B0;
ZZ_22978_74:
	if ((int32_t)V0 <= 0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x80022A44);
		goto ZZ_22978_CC;
	}
	A0 = S1;
	V1 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = 0x1;
	EMU_Write32(SP + 20,V0); //+ 0x14
	EMU_Write32(SP + 16,V1); //+ 0x10
	A2 = EMU_ReadU32(SP + 92); //+ 0x5C
	A1 = SP + 24;
	RA = 0x80022A14; //ZZ_22978_9C
	A3 = R0;
	ZZ_CLOCKCYCLES(10,0x800248CC);
	goto ZZ_248CC;
ZZ_22978_9C:
	A3 = -1;
	if (!S2)
	{
		A2 = SP + 72;
		ZZ_CLOCKCYCLES(3,0x80022A24);
		goto ZZ_22978_AC;
	}
	A2 = SP + 72;
	A3 = 0x100;
	ZZ_CLOCKCYCLES(4,0x80022A24);
ZZ_22978_AC:
	A0 = S1;
	RA = 0x80022A30; //ZZ_22978_B8
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x800240D4);
	goto ZZ_240D4;
ZZ_22978_B8:
	A0 = EMU_ReadU32(SP + 72); //+ 0x48
	A1 = EMU_ReadU32(SP + 76); //+ 0x4C
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	ZZ_CLOCKCYCLES(5,0x80022AA8);
	goto ZZ_22978_130;
ZZ_22978_CC:
	if ((int32_t)V0 >= 0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x80022A9C);
		goto ZZ_22978_124;
	}
	V0 = 0x1;
	V1 = EMU_ReadU32(SP + 96); //+ 0x60
	EMU_Write32(SP + 20,V0); //+ 0x14
	EMU_Write32(SP + 16,V1); //+ 0x10
	A2 = EMU_ReadU32(SP + 88); //+ 0x58
	A0 = S1;
	A1 = SP + 24;
	RA = 0x80022A6C; //ZZ_22978_F4
	A3 = 0x1;
	ZZ_CLOCKCYCLES(10,0x800248CC);
	goto ZZ_248CC;
ZZ_22978_F4:
	A3 = -1;
	if (!S2)
	{
		A2 = SP + 72;
		ZZ_CLOCKCYCLES(3,0x80022A7C);
		goto ZZ_22978_104;
	}
	A2 = SP + 72;
	A3 = 0x100;
	ZZ_CLOCKCYCLES(4,0x80022A7C);
ZZ_22978_104:
	A0 = S1;
	RA = 0x80022A88; //ZZ_22978_110
	A1 = V0;
	ZZ_CLOCKCYCLES(3,0x800240D4);
	goto ZZ_240D4;
ZZ_22978_110:
	A0 = EMU_ReadU32(SP + 72); //+ 0x48
	A1 = EMU_ReadU32(SP + 76); //+ 0x4C
	A2 = EMU_ReadU32(SP + 80); //+ 0x50
	ZZ_CLOCKCYCLES(5,0x80022AA8);
	goto ZZ_22978_130;
ZZ_22978_124:
	A0 = EMU_ReadU32(S0);
	A1 = EMU_ReadU32(S0 + 8); //+ 0x8
	A2 = EMU_ReadU32(S0 + 20); //+ 0x14
	ZZ_CLOCKCYCLES(3,0x80022AA8);
ZZ_22978_130:
	RA = 0x80022AB0; //ZZ_22978_138
	A3 = R0;
	ZZ_CLOCKCYCLES(2,0x80020304);
	goto ZZ_20304;
ZZ_22978_138:
	RA = 0x80022AB8; //ZZ_22978_140
	A0 = SP + 24;
	ZZ_CLOCKCYCLES(2,0x80023424);
	goto ZZ_23424;
ZZ_22978_140:
	RA = EMU_ReadU32(SP + 116); //+ 0x74
	S2 = EMU_ReadU32(SP + 112); //+ 0x70
	S1 = EMU_ReadU32(SP + 108); //+ 0x6C
	S0 = EMU_ReadU32(SP + 104); //+ 0x68
	SP += 120;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(7);
	ZZ_JUMPREGISTER(0x800270C4,ZZ_26F14_1B0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80022978,ZZ_22978);
ZZ_MARK(0x8002297C);
ZZ_MARK(0x80022980);
ZZ_MARK(0x80022984);
ZZ_MARK(0x80022988);
ZZ_MARK(0x8002298C);
ZZ_MARK(0x80022990);
ZZ_MARK(0x80022994);
ZZ_MARK(0x80022998);
ZZ_MARK(0x8002299C);
ZZ_MARK(0x800229A0);
ZZ_MARK(0x800229A4);
ZZ_MARK(0x800229A8);
ZZ_MARK(0x800229AC);
ZZ_MARK(0x800229B0);
ZZ_MARK(0x800229B4);
ZZ_MARK(0x800229B8);
ZZ_MARK(0x800229BC);
ZZ_MARK(0x800229C0);
ZZ_MARK(0x800229C4);
ZZ_MARK(0x800229C8);
ZZ_MARK(0x800229CC);
ZZ_MARK(0x800229D0);
ZZ_MARK(0x800229D4);
ZZ_MARK(0x800229D8);
ZZ_MARK(0x800229DC);
ZZ_MARK(0x800229E0);
ZZ_MARK(0x800229E4);
ZZ_MARK(0x800229E8);
ZZ_MARK_TARGET(0x800229EC,ZZ_22978_74);
ZZ_MARK(0x800229F0);
ZZ_MARK(0x800229F4);
ZZ_MARK(0x800229F8);
ZZ_MARK(0x800229FC);
ZZ_MARK(0x80022A00);
ZZ_MARK(0x80022A04);
ZZ_MARK(0x80022A08);
ZZ_MARK(0x80022A0C);
ZZ_MARK(0x80022A10);
ZZ_MARK_TARGET(0x80022A14,ZZ_22978_9C);
ZZ_MARK(0x80022A18);
ZZ_MARK(0x80022A1C);
ZZ_MARK(0x80022A20);
ZZ_MARK_TARGET(0x80022A24,ZZ_22978_AC);
ZZ_MARK(0x80022A28);
ZZ_MARK(0x80022A2C);
ZZ_MARK_TARGET(0x80022A30,ZZ_22978_B8);
ZZ_MARK(0x80022A34);
ZZ_MARK(0x80022A38);
ZZ_MARK(0x80022A3C);
ZZ_MARK(0x80022A40);
ZZ_MARK_TARGET(0x80022A44,ZZ_22978_CC);
ZZ_MARK(0x80022A48);
ZZ_MARK(0x80022A4C);
ZZ_MARK(0x80022A50);
ZZ_MARK(0x80022A54);
ZZ_MARK(0x80022A58);
ZZ_MARK(0x80022A5C);
ZZ_MARK(0x80022A60);
ZZ_MARK(0x80022A64);
ZZ_MARK(0x80022A68);
ZZ_MARK_TARGET(0x80022A6C,ZZ_22978_F4);
ZZ_MARK(0x80022A70);
ZZ_MARK(0x80022A74);
ZZ_MARK(0x80022A78);
ZZ_MARK_TARGET(0x80022A7C,ZZ_22978_104);
ZZ_MARK(0x80022A80);
ZZ_MARK(0x80022A84);
ZZ_MARK_TARGET(0x80022A88,ZZ_22978_110);
ZZ_MARK(0x80022A8C);
ZZ_MARK(0x80022A90);
ZZ_MARK(0x80022A94);
ZZ_MARK(0x80022A98);
ZZ_MARK_TARGET(0x80022A9C,ZZ_22978_124);
ZZ_MARK(0x80022AA0);
ZZ_MARK(0x80022AA4);
ZZ_MARK_TARGET(0x80022AA8,ZZ_22978_130);
ZZ_MARK(0x80022AAC);
ZZ_MARK_TARGET(0x80022AB0,ZZ_22978_138);
ZZ_MARK(0x80022AB4);
ZZ_MARK_TARGET(0x80022AB8,ZZ_22978_140);
ZZ_MARK(0x80022ABC);
ZZ_MARK(0x80022AC0);
ZZ_MARK(0x80022AC4);
ZZ_MARK(0x80022AC8);
ZZ_MARK(0x80022ACC);
ZZ_MARK(0x80022AD0);
