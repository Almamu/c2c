#ifdef ZZ_INCLUDE_CODE
ZZ_2B478:
	SP -= 104;
	EMU_Write32(SP + 80,S4); //+ 0x50
	S4 = A2;
	EMU_Write32(SP + 100,RA); //+ 0x64
	EMU_Write32(SP + 96,FP); //+ 0x60
	EMU_Write32(SP + 92,S7); //+ 0x5C
	EMU_Write32(SP + 88,S6); //+ 0x58
	EMU_Write32(SP + 84,S5); //+ 0x54
	EMU_Write32(SP + 76,S3); //+ 0x4C
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(SP + 68,S1); //+ 0x44
	EMU_Write32(SP + 64,S0); //+ 0x40
	V0 = EMU_ReadU32(S4);
	S3 = A3;
	V1 = 0xFFFF0000;
	V1 |= 0x6A00;
	V0 += V1;
	EMU_Write32(S3 + 4128,V0); //+ 0x1020
	V0 = EMU_ReadU32(S4 + 4); //+ 0x4
	EMU_Write32(S3 + 4132,V0); //+ 0x1024
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	S1 = A0;
	S7 = A1;
	FP = R0;
	V0 += V1;
	EMU_Write32(S3 + 4136,V0); //+ 0x1028
	V1 = EMU_ReadU32(S4);
	S5 = 0x40000;
	S5 |= 0x1;
	V0 = 0x9600;
	V1 += V0;
	EMU_Write32(S3 + 4140,V1); //+ 0x102C
	V1 = EMU_ReadU32(S1 + 256); //+ 0x100
	A0 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = 0x40000000;
	V1 &= V0;
	if (V1)
	{
		S6 = S3 + 4128;
		ZZ_CLOCKCYCLES(39,0x8002B528);
		goto ZZ_2B478_B0;
	}
	S6 = S3 + 4128;
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 += A0;
	ZZ_CLOCKCYCLES(44,0x8002B534);
	goto ZZ_2B478_BC;
ZZ_2B478_B0:
	V0 = 0x20000;
	V0 |= 0x9900;
	V0 += A0;
	ZZ_CLOCKCYCLES(3,0x8002B534);
ZZ_2B478_BC:
	EMU_Write32(S6 + 16,V0); //+ 0x10
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = 0x9600;
	V0 += V1;
	EMU_Write32(S6 + 20,V0); //+ 0x14
	V0 = EMU_ReadU32(S3 + 4096); //+ 0x1000
	if (!V0)
	{
		A0 = S6;
		ZZ_CLOCKCYCLES(9,0x8002B568);
		goto ZZ_2B478_F0;
	}
	A0 = S6;
	RA = 0x8002B560; //ZZ_2B478_E8
	A1 = S3 + 4104;
	ZZ_CLOCKCYCLES(11,0x80031264);
	goto ZZ_31264;
ZZ_2B478_E8:
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(2,0x8002B57C);
		goto ZZ_2B478_104;
	}
	A0 = S1;
	ZZ_CLOCKCYCLES(2,0x8002B568);
ZZ_2B478_F0:
	A0 = S4;
	A1 = S1;
	RA = 0x8002B578; //ZZ_2B478_100
	A2 = S3;
	ZZ_CLOCKCYCLES(4,0x800297AC);
	goto ZZ_297AC;
ZZ_2B478_100:
	A0 = S1;
	ZZ_CLOCKCYCLES(1,0x8002B57C);
ZZ_2B478_104:
	A1 = S7;
	A2 = S4;
	A3 = S3;
	V0 = 0x8;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = SP + 24;
	RA = 0x8002B59C; //ZZ_2B478_124
	EMU_Write32(SP + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(8,0x8002A6C4);
	goto ZZ_2A6C4;
ZZ_2B478_124:
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	S2 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 32); //+ 0x20
	V0 &= 0x40;
	if (!V0)
	{
		V0 = 0xC4650000;
		ZZ_CLOCKCYCLES(6,0x8002B5C4);
		goto ZZ_2B478_14C;
	}
	V0 = 0xC4650000;
	S2 = 0xC4650000;
	S2 |= 0x3601;
	S0 = 0xC4650000;
	S0 |= 0x3601;
	ZZ_CLOCKCYCLES(10,0x8002B5C4);
ZZ_2B478_14C:
	V0 |= 0x3601;
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(3,0x8002B5D8);
		goto ZZ_2B478_160;
	}
	EMU_Write32(S3 + 4160,R0); //+ 0x1040
	ZZ_CLOCKCYCLES(5,0x8002B5DC);
	goto ZZ_2B478_164;
ZZ_2B478_160:
	EMU_Write32(S3 + 4160,S0); //+ 0x1040
	ZZ_CLOCKCYCLES(1,0x8002B5DC);
ZZ_2B478_164:
	V0 = 0xC4650000;
	V0 |= 0x3601;
	if (S2 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002B5F4);
		goto ZZ_2B478_17C;
	}
	EMU_Write32(S3 + 4164,R0); //+ 0x1044
	ZZ_CLOCKCYCLES(6,0x8002B5F8);
	goto ZZ_2B478_180;
ZZ_2B478_17C:
	EMU_Write32(S3 + 4164,S2); //+ 0x1044
	ZZ_CLOCKCYCLES(1,0x8002B5F8);
ZZ_2B478_180:
	A0 = S1;
	A1 = S7;
	A2 = S4;
	RA = 0x8002B60C; //ZZ_2B478_194
	A3 = S3;
	ZZ_CLOCKCYCLES(5,0x8002A868);
	goto ZZ_2A868;
ZZ_2B478_194:
	A0 = 0xC4650000;
	A0 |= 0x3601;
	V1 = V0;
	if (V1 != A0)
	{
		ZZ_CLOCKCYCLES(5,0x8002B628);
		goto ZZ_2B478_1B0;
	}
	EMU_Write32(S3 + 4168,R0); //+ 0x1048
	ZZ_CLOCKCYCLES(7,0x8002B698);
	goto ZZ_2B478_220;
ZZ_2B478_1B0:
	if (S0 == A0)
	{
		V0 = (int32_t)V1 < (int32_t)S0;
		ZZ_CLOCKCYCLES(2,0x8002B638);
		goto ZZ_2B478_1C0;
	}
	V0 = (int32_t)V1 < (int32_t)S0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002B698);
		goto ZZ_2B478_220;
	}
	ZZ_CLOCKCYCLES(4,0x8002B638);
ZZ_2B478_1C0:
	S0 = V1;
	EMU_Write32(S3 + 4168,S0); //+ 0x1048
	V1 = EMU_ReadU32(S1 + 88); //+ 0x58
	V0 = 0xFFFB0000;
	V0 |= 0xFFFF;
	if (!V1)
	{
		S5 &= V0;
		ZZ_CLOCKCYCLES(7,0x8002B690);
		goto ZZ_2B478_218;
	}
	S5 &= V0;
	V0 = EMU_ReadU32(V1 + 172); //+ 0xAC
	V1 = 0x400000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x8002B670);
		goto ZZ_2B478_1F8;
	}
	FP = 0x10000;
	FP |= 0x9000;
	ZZ_CLOCKCYCLES(14,0x8002B670);
ZZ_2B478_1F8:
	V0 = EMU_ReadU32(S1 + 220); //+ 0xDC
	V1 = EMU_ReadU32(S1 + 272); //+ 0x110
	V0 = V0 - V1;
	V0 = V0 < 4;
	if (V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(7,0x8002B694);
		goto ZZ_2B478_21C;
	}
	V0 = 0x200000;
	S5 = 0x4001;
	ZZ_CLOCKCYCLES(8,0x8002B690);
ZZ_2B478_218:
	V0 = 0x200000;
	ZZ_CLOCKCYCLES(1,0x8002B694);
ZZ_2B478_21C:
	S5 |= V0;
	ZZ_CLOCKCYCLES(1,0x8002B698);
ZZ_2B478_220:
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (S0 != V1)
	{
		ZZ_CLOCKCYCLES(4,0x8002B6B0);
		goto ZZ_2B478_238;
	}
	if (S2 == S0)
	{
		ZZ_CLOCKCYCLES(6,0x8002B6C0);
		goto ZZ_2B478_248;
	}
	ZZ_CLOCKCYCLES(6,0x8002B6B0);
ZZ_2B478_238:
	V0 = EMU_ReadU32(S1 + 136); //+ 0x88
	if ((int32_t)V0 <= 0)
	{
		ZZ_CLOCKCYCLES(4,0x8002B6F0);
		goto ZZ_2B478_278;
	}
	ZZ_CLOCKCYCLES(4,0x8002B6C0);
ZZ_2B478_248:
	V0 = EMU_ReadU32(S1 + 136); //+ 0x88
	if ((int32_t)V0 <= 0)
	{
		V1 = 0xFFDB0000;
		ZZ_CLOCKCYCLES(4,0x8002B6E0);
		goto ZZ_2B478_268;
	}
	V1 = 0xFFDB0000;
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V1 |= 0xBFFE;
	V0 &= V1;
	EMU_Write32(S1 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(8,0x8002B6E0);
ZZ_2B478_268:
	EMU_Write32(S3 + 4152,R0); //+ 0x1038
	S2 = 0xC4650000;
	S2 |= 0x3601;
	ZZ_CLOCKCYCLES(4,0x8002B858);
	goto ZZ_2B478_3E0;
ZZ_2B478_278:
	if (S0 != V1)
	{
		V0 = S0;
		ZZ_CLOCKCYCLES(2,0x8002B700);
		goto ZZ_2B478_288;
	}
	V0 = S0;
	V0 = S2;
	S5 = 0x1;
	ZZ_CLOCKCYCLES(4,0x8002B700);
ZZ_2B478_288:
	EMU_Write32(S3 + 4152,V0); //+ 0x1038
	S2 = V0 + 1;
	V0 = 0xC4650000;
	V0 |= 0x3601;
	if (S0 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002B724);
		goto ZZ_2B478_2AC;
	}
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	ZZ_CLOCKCYCLES(9,0x8002B738);
	goto ZZ_2B478_2C0;
ZZ_2B478_2AC:
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	V1 = EMU_ReadU32(GP + 136); //+ 0x88
	V0 += V1;
	V0 += FP;
	ZZ_CLOCKCYCLES(5,0x8002B738);
ZZ_2B478_2C0:
	T0 = EMU_ReadU32(SP + 120); //+ 0x78
	EMU_Write32(T0,V0);
	V0 = (int32_t)V0 < (int32_t)S2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002B75C);
		goto ZZ_2B478_2E4;
	}
	S2 = EMU_ReadU32(S7 + 4); //+ 0x4
	EMU_Write32(S6 + 4,S2); //+ 0x4
	ZZ_CLOCKCYCLES(9,0x8002B7B0);
	goto ZZ_2B478_338;
ZZ_2B478_2E4:
	V1 = EMU_ReadU32(S4 + 4); //+ 0x4
	V0 = (int32_t)S2 < (int32_t)V1;
	if (V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(5,0x8002B7A8);
		goto ZZ_2B478_330;
	}
	V0 = 0x200000;
	V0 &= S5;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8002B7AC);
		goto ZZ_2B478_334;
	}
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V1 = EMU_ReadU32(V0 + 72); //+ 0x48
	if (!V1)
	{
		ZZ_CLOCKCYCLES(14,0x8002B7AC);
		goto ZZ_2B478_334;
	}
	V0 = EMU_ReadU32(V1 + 168); //+ 0xA8
	V0 |= 0x4000;
	EMU_Write32(V1 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(19,0x8002B7AC);
	goto ZZ_2B478_334;
ZZ_2B478_330:
	S2 = V1;
	ZZ_CLOCKCYCLES(1,0x8002B7AC);
ZZ_2B478_334:
	EMU_Write32(S6 + 4,S2); //+ 0x4
	ZZ_CLOCKCYCLES(1,0x8002B7B0);
ZZ_2B478_338:
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V1 = 0x40000000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(5,0x8002B7D8);
		goto ZZ_2B478_360;
	}
	V0 = 0x20000;
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 += S2;
	ZZ_CLOCKCYCLES(10,0x8002B7E0);
	goto ZZ_2B478_368;
ZZ_2B478_360:
	V0 |= 0x9900;
	V0 += S2;
	ZZ_CLOCKCYCLES(2,0x8002B7E0);
ZZ_2B478_368:
	EMU_Write32(S6 + 16,V0); //+ 0x10
	EMU_Write32(S4 + 4,S2); //+ 0x4
	V0 = EMU_ReadU32(S3 + 4096); //+ 0x1000
	if (!V0)
	{
		A0 = S6;
		ZZ_CLOCKCYCLES(6,0x8002B808);
		goto ZZ_2B478_390;
	}
	A0 = S6;
	RA = 0x8002B800; //ZZ_2B478_388
	A1 = S3 + 4104;
	ZZ_CLOCKCYCLES(8,0x80031264);
	goto ZZ_31264;
ZZ_2B478_388:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8002B818);
		goto ZZ_2B478_3A0;
	}
	ZZ_CLOCKCYCLES(2,0x8002B808);
ZZ_2B478_390:
	A0 = S4;
	A1 = S1;
	RA = 0x8002B818; //ZZ_2B478_3A0
	A2 = S3;
	ZZ_CLOCKCYCLES(4,0x800297AC);
	goto ZZ_297AC;
ZZ_2B478_3A0:
	V1 = EMU_ReadU32(S1 + 136); //+ 0x88
	if ((int32_t)V1 >= 0)
	{
		V0 = S5 & 0x1;
		ZZ_CLOCKCYCLES(4,0x8002B838);
		goto ZZ_2B478_3C0;
	}
	V0 = S5 & 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002B838);
		goto ZZ_2B478_3C0;
	}
	EMU_Write32(S1 + 276,V1); //+ 0x114
	EMU_Write32(S1 + 136,R0); //+ 0x88
	ZZ_CLOCKCYCLES(8,0x8002B838);
ZZ_2B478_3C0:
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 |= S5;
	EMU_Write32(S1 + 168,V0); //+ 0xA8
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12804); //+ 0xFFFFCDFC
	EMU_Write32(S1 + 272,V0); //+ 0x110
	ZZ_CLOCKCYCLES(8,0x8002B858);
ZZ_2B478_3E0:
	V0 = S2;
	RA = EMU_ReadU32(SP + 100); //+ 0x64
	FP = EMU_ReadU32(SP + 96); //+ 0x60
	S7 = EMU_ReadU32(SP + 92); //+ 0x5C
	S6 = EMU_ReadU32(SP + 88); //+ 0x58
	S5 = EMU_ReadU32(SP + 84); //+ 0x54
	S4 = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 104;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x8002C49C,ZZ_2C404_98);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8002B478,0x8002B528,ZZ_2B478);
ZZ_MARK_TARGET(0x8002B528,0x8002B534,ZZ_2B478_B0);
ZZ_MARK_TARGET(0x8002B534,0x8002B560,ZZ_2B478_BC);
ZZ_MARK_TARGET(0x8002B560,0x8002B568,ZZ_2B478_E8);
ZZ_MARK_TARGET(0x8002B568,0x8002B578,ZZ_2B478_F0);
ZZ_MARK_TARGET(0x8002B578,0x8002B57C,ZZ_2B478_100);
ZZ_MARK_TARGET(0x8002B57C,0x8002B59C,ZZ_2B478_104);
ZZ_MARK_TARGET(0x8002B59C,0x8002B5C4,ZZ_2B478_124);
ZZ_MARK_TARGET(0x8002B5C4,0x8002B5D8,ZZ_2B478_14C);
ZZ_MARK_TARGET(0x8002B5D8,0x8002B5DC,ZZ_2B478_160);
ZZ_MARK_TARGET(0x8002B5DC,0x8002B5F4,ZZ_2B478_164);
ZZ_MARK_TARGET(0x8002B5F4,0x8002B5F8,ZZ_2B478_17C);
ZZ_MARK_TARGET(0x8002B5F8,0x8002B60C,ZZ_2B478_180);
ZZ_MARK_TARGET(0x8002B60C,0x8002B628,ZZ_2B478_194);
ZZ_MARK_TARGET(0x8002B628,0x8002B638,ZZ_2B478_1B0);
ZZ_MARK_TARGET(0x8002B638,0x8002B670,ZZ_2B478_1C0);
ZZ_MARK_TARGET(0x8002B670,0x8002B690,ZZ_2B478_1F8);
ZZ_MARK_TARGET(0x8002B690,0x8002B694,ZZ_2B478_218);
ZZ_MARK_TARGET(0x8002B694,0x8002B698,ZZ_2B478_21C);
ZZ_MARK_TARGET(0x8002B698,0x8002B6B0,ZZ_2B478_220);
ZZ_MARK_TARGET(0x8002B6B0,0x8002B6C0,ZZ_2B478_238);
ZZ_MARK_TARGET(0x8002B6C0,0x8002B6E0,ZZ_2B478_248);
ZZ_MARK_TARGET(0x8002B6E0,0x8002B6F0,ZZ_2B478_268);
ZZ_MARK_TARGET(0x8002B6F0,0x8002B700,ZZ_2B478_278);
ZZ_MARK_TARGET(0x8002B700,0x8002B724,ZZ_2B478_288);
ZZ_MARK_TARGET(0x8002B724,0x8002B738,ZZ_2B478_2AC);
ZZ_MARK_TARGET(0x8002B738,0x8002B75C,ZZ_2B478_2C0);
ZZ_MARK_TARGET(0x8002B75C,0x8002B7A8,ZZ_2B478_2E4);
ZZ_MARK_TARGET(0x8002B7A8,0x8002B7AC,ZZ_2B478_330);
ZZ_MARK_TARGET(0x8002B7AC,0x8002B7B0,ZZ_2B478_334);
ZZ_MARK_TARGET(0x8002B7B0,0x8002B7D8,ZZ_2B478_338);
ZZ_MARK_TARGET(0x8002B7D8,0x8002B7E0,ZZ_2B478_360);
ZZ_MARK_TARGET(0x8002B7E0,0x8002B800,ZZ_2B478_368);
ZZ_MARK_TARGET(0x8002B800,0x8002B808,ZZ_2B478_388);
ZZ_MARK_TARGET(0x8002B808,0x8002B818,ZZ_2B478_390);
ZZ_MARK_TARGET(0x8002B818,0x8002B838,ZZ_2B478_3A0);
ZZ_MARK_TARGET(0x8002B838,0x8002B858,ZZ_2B478_3C0);
ZZ_MARK_TARGET(0x8002B858,0x8002B890,ZZ_2B478_3E0);
