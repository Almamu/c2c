#ifdef ZZ_INCLUDE_CODE
ZZ_1D860:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	SP -= 136;
	EMU_Write32(SP + 100,S1); //+ 0x64
	S1 = A0;
	EMU_Write32(SP + 124,S7); //+ 0x7C
	S7 = A1;
	EMU_Write32(SP + 128,FP); //+ 0x80
	EMU_Write32(SP + 132,RA); //+ 0x84
	EMU_Write32(SP + 120,S6); //+ 0x78
	EMU_Write32(SP + 116,S5); //+ 0x74
	EMU_Write32(SP + 112,S4); //+ 0x70
	EMU_Write32(SP + 108,S3); //+ 0x6C
	EMU_Write32(SP + 104,S2); //+ 0x68
	EMU_Write32(SP + 96,S0); //+ 0x60
	S6 = EMU_ReadU32(S1 + 168); //+ 0xA8
	S5 = EMU_ReadU32(S1 + 88); //+ 0x58
	if (S1 != V0)
	{
		FP = A2;
		ZZ_CLOCKCYCLES(19,0x8001DA4C);
		goto ZZ_1D860_1EC;
	}
	FP = A2;
	V0 = 0x2000000;
	V0 &= S6;
	if (V0)
	{
		V0 = 0x4000000;
		ZZ_CLOCKCYCLES(23,0x8001D900);
		goto ZZ_1D860_A0;
	}
	V0 = 0x4000000;
	A0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 &= A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(28,0x8001D900);
		goto ZZ_1D860_A0;
	}
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12804); //+ 0xFFFFCDFC
	V1 = EMU_ReadU32(S1 + 364); //+ 0x16C
	V0 = V0 - V1;
	V0 = V0 < 9;
	if (!V0)
	{
		V0 = 0xA00000;
		ZZ_CLOCKCYCLES(36,0x8001DA4C);
		goto ZZ_1D860_1EC;
	}
	V0 = 0xA00000;
	V0 |= 0x8000;
	V0 &= A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(40,0x8001DA4C);
		goto ZZ_1D860_1EC;
	}
	ZZ_CLOCKCYCLES(40,0x8001D900);
ZZ_1D860_A0:
	V1 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 = 0x4A00000;
	V0 |= 0x8000;
	V0 &= V1;
	if (V0)
	{
		V0 = 0x4000000;
		ZZ_CLOCKCYCLES(6,0x8001D93C);
		goto ZZ_1D860_DC;
	}
	V0 = 0x4000000;
	A1 = 0x80060000;
	A1 -= 17628;
	EMU_Write32(GP + 112,A1); //+ 0x70
	A2 = 0x80060000;
	A2 -= 2260;
	RA = 0x8001D934; //ZZ_1D860_D4
	A0 = S1;
	ZZ_CLOCKCYCLES(13,0x8001D4E0);
	goto ZZ_1D4E0;
ZZ_1D860_D4:
	ZZ_CLOCKCYCLES(2,0x8001DEE0);
	goto ZZ_1D860_680;
ZZ_1D860_DC:
	V0 &= V1;
	if (V0)
	{
		V1 = 0x2000000;
		ZZ_CLOCKCYCLES(3,0x8001DEE0);
		goto ZZ_1D860_680;
	}
	V1 = 0x2000000;
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001D9AC);
		goto ZZ_1D860_14C;
	}
	V1 = EMU_ReadU32(S1 + 132); //+ 0x84
	A0 = EMU_ReadU32(S1 + 140); //+ 0x8C
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 1;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(S1 + 132,V0); //+ 0x84
	V0 = A0 << 3;
	V0 = V0 - A0;
	V0 <<= 2;
	V0 += A0;
	V0 <<= 2;
	V0 = V0 - A0;
	V0 <<= 1;
	V0 = (int32_t)V0 >> 8;
	EMU_Write32(S1 + 140,V0); //+ 0x8C
	ZZ_CLOCKCYCLES(28,0x8001D9AC);
ZZ_1D860_14C:
	A0 = EMU_ReadU32(S1 + 132); //+ 0x84
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17584); //+ 0xFFFFBB50
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = -V1;
		ZZ_CLOCKCYCLES(7,0x8001D9DC);
		goto ZZ_1D860_17C;
	}
	V0 = -V1;
	V1 = V0;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x8001D9DC);
		goto ZZ_1D860_17C;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(12,0x8001D9DC);
ZZ_1D860_17C:
	A0 = EMU_ReadU32(S1 + 136); //+ 0x88
	EMU_Write32(S1 + 132,V1); //+ 0x84
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17584); //+ 0xFFFFBB50
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = -V1;
		ZZ_CLOCKCYCLES(8,0x8001DA10);
		goto ZZ_1D860_1B0;
	}
	V0 = -V1;
	V1 = V0;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001DA10);
		goto ZZ_1D860_1B0;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(13,0x8001DA10);
ZZ_1D860_1B0:
	A0 = EMU_ReadU32(S1 + 140); //+ 0x8C
	EMU_Write32(S1 + 136,V1); //+ 0x88
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 17584); //+ 0xFFFFBB50
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		V0 = -V1;
		ZZ_CLOCKCYCLES(8,0x8001DA44);
		goto ZZ_1D860_1E4;
	}
	V0 = -V1;
	V1 = V0;
	V0 = (int32_t)A0 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001DA44);
		goto ZZ_1D860_1E4;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(13,0x8001DA44);
ZZ_1D860_1E4:
	EMU_Write32(S1 + 140,V1); //+ 0x8C
	ZZ_CLOCKCYCLES(2,0x8001DEE0);
	goto ZZ_1D860_680;
ZZ_1D860_1EC:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x80;
	if (!V0)
	{
		V0 = 0x100;
		ZZ_CLOCKCYCLES(5,0x8001DEE0);
		goto ZZ_1D860_680;
	}
	V0 = 0x100;
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12724); //+ 0xFFFFCE4C
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(10,0x8001DEE0);
		goto ZZ_1D860_680;
	}
	V1 = EMU_ReadU32(S1 + 256); //+ 0x100
	S2 = 0x80060000;
	S2 -= 17848;
	V0 = V1 & 0x4;
	if (!V0)
	{
		V0 = V1 & 0x40;
		ZZ_CLOCKCYCLES(16,0x8001DAF8);
		goto ZZ_1D860_298;
	}
	V0 = V1 & 0x40;
	if (!V0)
	{
		V0 = 0x8000000;
		ZZ_CLOCKCYCLES(18,0x8001DA9C);
		goto ZZ_1D860_23C;
	}
	V0 = 0x8000000;
	S2 += 200;
	ZZ_CLOCKCYCLES(20,0x8001DAF8);
	goto ZZ_1D860_298;
ZZ_1D860_23C:
	V0 &= V1;
	if (!V0)
	{
		V0 = 0x800000;
		ZZ_CLOCKCYCLES(3,0x8001DAB0);
		goto ZZ_1D860_250;
	}
	V0 = 0x800000;
	S2 += 300;
	ZZ_CLOCKCYCLES(5,0x8001DAF8);
	goto ZZ_1D860_298;
ZZ_1D860_250:
	V0 &= V1;
	if (!V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(3,0x8001DAC4);
		goto ZZ_1D860_264;
	}
	V0 = 0x200000;
	S2 += 180;
	ZZ_CLOCKCYCLES(5,0x8001DAF8);
	goto ZZ_1D860_298;
ZZ_1D860_264:
	V0 &= V1;
	if (!V0)
	{
		V0 = V1 & 0x100;
		ZZ_CLOCKCYCLES(3,0x8001DAE0);
		goto ZZ_1D860_280;
	}
	V0 = V1 & 0x100;
	if (!V0)
	{
		S2 += 140;
		ZZ_CLOCKCYCLES(5,0x8001DAF8);
		goto ZZ_1D860_298;
	}
	S2 += 140;
	S2 += 140;
	ZZ_CLOCKCYCLES(7,0x8001DAF8);
	goto ZZ_1D860_298;
ZZ_1D860_280:
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 &= 0x2000;
	if (!V0)
	{
		S2 += 20;
		ZZ_CLOCKCYCLES(5,0x8001DAF8);
		goto ZZ_1D860_298;
	}
	S2 += 20;
	S2 += 80;
	ZZ_CLOCKCYCLES(6,0x8001DAF8);
ZZ_1D860_298:
	V1 = EMU_ReadU32(S1 + 264); //+ 0x108
	V0 = 0x5;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001DB10);
		goto ZZ_1D860_2B0;
	}
	S2 = 0x80060000;
	S2 -= 17768;
	ZZ_CLOCKCYCLES(6,0x8001DB10);
ZZ_1D860_2B0:
	V1 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 = V1 & 0x8;
	if (!V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(5,0x8001DB64);
		goto ZZ_1D860_304;
	}
	V0 = 0x200000;
	V0 &= V1;
	if (!V0)
	{
		V0 = V1 & 0x100;
		ZZ_CLOCKCYCLES(8,0x8001DB48);
		goto ZZ_1D860_2E8;
	}
	V0 = V1 & 0x100;
	S2 = 0x80060000;
	S2 -= 17688;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x8001DB64);
		goto ZZ_1D860_304;
	}
	S2 += 120;
	ZZ_CLOCKCYCLES(14,0x8001DB64);
	goto ZZ_1D860_304;
ZZ_1D860_2E8:
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	S2 = 0x80060000;
	S2 -= 17808;
	V0 &= 0x2000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001DB64);
		goto ZZ_1D860_304;
	}
	S2 += 80;
	ZZ_CLOCKCYCLES(7,0x8001DB64);
ZZ_1D860_304:
	A0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 = A0 & 0x10;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001DB80);
		goto ZZ_1D860_320;
	}
	S2 = 0x80060000;
	S2 -= 17788;
	ZZ_CLOCKCYCLES(7,0x8001DB80);
ZZ_1D860_320:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 25612); //+ 0xFFFF9BF4
	V0 = V1 << 4;
	V0 += V1;
	V0 <<= 2;
	V0 += V1;
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 25608); //+ 0xFFFF9BF8
	if ((int32_t)V0 >= 0)
	{
		S4 = (int32_t)V0 >> 6;
		ZZ_CLOCKCYCLES(11,0x8001DBB4);
		goto ZZ_1D860_354;
	}
	S4 = (int32_t)V0 >> 6;
	V0 += 63;
	S4 = (int32_t)V0 >> 6;
	ZZ_CLOCKCYCLES(13,0x8001DBB4);
ZZ_1D860_354:
	V0 = 0x8;
	if (V1 == V0)
	{
		V1 = 0x2000000;
		ZZ_CLOCKCYCLES(3,0x8001DE0C);
		goto ZZ_1D860_5AC;
	}
	V1 = 0x2000000;
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 25616); //+ 0xFFFF9BF0
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2988); //+ 0xBAC
	A0 = EMU_ReadU32(S1 + 148); //+ 0x94
	V0 += V1;
	S3 = V0 & 0xFFF;
	S0 = S3 - A0;
	if ((int32_t)S0 >= 0)
	{
		EMU_Write32(S1 + 360,S3); //+ 0x168
		ZZ_CLOCKCYCLES(13,0x8001DBEC);
		goto ZZ_1D860_38C;
	}
	EMU_Write32(S1 + 360,S3); //+ 0x168
	S0 = A0 - S3;
	ZZ_CLOCKCYCLES(14,0x8001DBEC);
ZZ_1D860_38C:
	V0 = (int32_t)S0 < 2049;
	if (V0)
	{
		V0 = 0x1000;
		ZZ_CLOCKCYCLES(3,0x8001DBFC);
		goto ZZ_1D860_39C;
	}
	V0 = 0x1000;
	S0 = V0 - S0;
	ZZ_CLOCKCYCLES(4,0x8001DBFC);
ZZ_1D860_39C:
	V1 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 = V1 & 0x8;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001DCDC);
		goto ZZ_1D860_47C;
	}
	RA = 0x8001DC18; //ZZ_1D860_3B8
	A0 = S0;
	ZZ_CLOCKCYCLES(7,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_1D860_3B8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14056); //+ 0x36E8
	V1 = EMU_ReadU32(V1 + 20); //+ 0x14
	A0 = V0;
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001DC3C);
		goto ZZ_1D860_3DC;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(9,0x8001DC3C);
ZZ_1D860_3DC:
	V0 = EMU_ReadU32(S2);
	EMU_SMultiply(V0,V1);
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		V1 = (int32_t)V0 >> 10;
		ZZ_CLOCKCYCLES(6,0x8001DC5C);
		goto ZZ_1D860_3FC;
	}
	V1 = (int32_t)V0 >> 10;
	V0 += 1023;
	V1 = (int32_t)V0 >> 10;
	ZZ_CLOCKCYCLES(8,0x8001DC5C);
ZZ_1D860_3FC:
	V0 = (int32_t)A0 >> 6;
	EMU_SMultiply(V1,V0);
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	T0 = LO;
	V1 = (int32_t)T0 >> 6;
	V0 += V1;
	EMU_Write32(S1 + 260,V0); //+ 0x104
	V0 = (int32_t)V0 < 257;
	if (!V0)
	{
		V1 = 0x200000;
		ZZ_CLOCKCYCLES(10,0x8001DCA0);
		goto ZZ_1D860_440;
	}
	V1 = 0x200000;
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 &= V1;
	if (V0)
	{
		V0 = (int32_t)S0 < 1992;
		ZZ_CLOCKCYCLES(15,0x8001DCA4);
		goto ZZ_1D860_444;
	}
	V0 = (int32_t)S0 < 1992;
	EMU_Write32(S1 + 148,S3); //+ 0x94
	ZZ_CLOCKCYCLES(17,0x8001DDEC);
	goto ZZ_1D860_58C;
ZZ_1D860_440:
	V0 = (int32_t)S0 < 1992;
	ZZ_CLOCKCYCLES(1,0x8001DCA4);
ZZ_1D860_444:
	if (V0)
	{
		V1 = 0x200000;
		ZZ_CLOCKCYCLES(2,0x8001DCC0);
		goto ZZ_1D860_460;
	}
	V1 = 0x200000;
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8001DD94);
		goto ZZ_1D860_534;
	}
	ZZ_CLOCKCYCLES(7,0x8001DCC0);
ZZ_1D860_460:
	A0 = EMU_ReadU32(S1 + 148); //+ 0x94
	A2 = EMU_ReadU32(S2 + 16); //+ 0x10
	A1 = S3;
	RA = 0x8001DCD4; //ZZ_1D860_474
	A3 = R0;
	ZZ_CLOCKCYCLES(5,0x8001E624);
	goto ZZ_1E624;
ZZ_1D860_474:
	EMU_Write32(S1 + 148,V0); //+ 0x94
	ZZ_CLOCKCYCLES(2,0x8001DDEC);
	goto ZZ_1D860_58C;
ZZ_1D860_47C:
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	V0 = (int32_t)V0 < 257;
	if (V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(5,0x8001DCFC);
		goto ZZ_1D860_49C;
	}
	V0 = 0x200000;
	V0 = (int32_t)S0 < 1025;
	if (!V0)
	{
		V0 = 0x200000;
		ZZ_CLOCKCYCLES(8,0x8001DD74);
		goto ZZ_1D860_514;
	}
	V0 = 0x200000;
	ZZ_CLOCKCYCLES(8,0x8001DCFC);
ZZ_1D860_49C:
	V0 &= V1;
	if (!V0)
	{
		A1 = S3;
		ZZ_CLOCKCYCLES(3,0x8001DD1C);
		goto ZZ_1D860_4BC;
	}
	A1 = S3;
	A2 = EMU_ReadU32(S2 + 16); //+ 0x10
	RA = 0x8001DD14; //ZZ_1D860_4B4
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x8001E624);
	goto ZZ_1E624;
ZZ_1D860_4B4:
	EMU_Write32(S1 + 148,V0); //+ 0x94
	ZZ_CLOCKCYCLES(2,0x8001DD20);
	goto ZZ_1D860_4C0;
ZZ_1D860_4BC:
	EMU_Write32(S1 + 148,S3); //+ 0x94
	ZZ_CLOCKCYCLES(1,0x8001DD20);
ZZ_1D860_4C0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14056); //+ 0x36E8
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001DD44);
		goto ZZ_1D860_4E4;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(9,0x8001DD44);
ZZ_1D860_4E4:
	V0 = EMU_ReadU32(S2);
	EMU_SMultiply(V0,V1);
	V1 = LO;
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8001DD60);
		goto ZZ_1D860_500;
	}
	V1 += 1023;
	ZZ_CLOCKCYCLES(7,0x8001DD60);
ZZ_1D860_500:
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	V1 = (int32_t)V1 >> 10;
	V0 += V1;
	EMU_Write32(S1 + 260,V0); //+ 0x104
	ZZ_CLOCKCYCLES(5,0x8001DDEC);
	goto ZZ_1D860_58C;
ZZ_1D860_514:
	V0 &= V1;
	if (V0)
	{
		V1 = 0x2000000;
		ZZ_CLOCKCYCLES(3,0x8001DD94);
		goto ZZ_1D860_534;
	}
	V1 = 0x2000000;
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001DDE8);
		goto ZZ_1D860_588;
	}
	ZZ_CLOCKCYCLES(8,0x8001DD94);
ZZ_1D860_534:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14056); //+ 0x36E8
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001DDB8);
		goto ZZ_1D860_558;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(9,0x8001DDB8);
ZZ_1D860_558:
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	EMU_SMultiply(V0,V1);
	V1 = LO;
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8001DDD4);
		goto ZZ_1D860_574;
	}
	V1 += 1023;
	ZZ_CLOCKCYCLES(7,0x8001DDD4);
ZZ_1D860_574:
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	V1 = (int32_t)V1 >> 10;
	V0 = V0 - V1;
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(S1 + 260,V0); //+ 0x104
		ZZ_CLOCKCYCLES(5,0x8001DDEC);
		goto ZZ_1D860_58C;
	}
	EMU_Write32(S1 + 260,V0); //+ 0x104
	ZZ_CLOCKCYCLES(5,0x8001DDE8);
ZZ_1D860_588:
	EMU_Write32(S1 + 260,R0); //+ 0x104
	ZZ_CLOCKCYCLES(1,0x8001DDEC);
ZZ_1D860_58C:
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	V1 = EMU_ReadU32(S2 + 4); //+ 0x4
	V0 = (int32_t)V1 < (int32_t)V0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001DE94);
		goto ZZ_1D860_634;
	}
	EMU_Write32(S1 + 260,V1); //+ 0x104
	ZZ_CLOCKCYCLES(8,0x8001DE94);
	goto ZZ_1D860_634;
ZZ_1D860_5AC:
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 &= V1;
	if (V0)
	{
		V0 = 0xA00000;
		ZZ_CLOCKCYCLES(5,0x8001DE34);
		goto ZZ_1D860_5D4;
	}
	V0 = 0xA00000;
	V0 |= 0x8;
	V0 &= A0;
	V1 = 0x200000;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(10,0x8001DE3C);
		goto ZZ_1D860_5DC;
	}
	ZZ_CLOCKCYCLES(10,0x8001DE34);
ZZ_1D860_5D4:
	S4 = 0x100;
	ZZ_CLOCKCYCLES(2,0x8001DE94);
	goto ZZ_1D860_634;
ZZ_1D860_5DC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14056); //+ 0x36E8
	V1 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001DE60);
		goto ZZ_1D860_600;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(9,0x8001DE60);
ZZ_1D860_600:
	V0 = EMU_ReadU32(S2 + 12); //+ 0xC
	EMU_SMultiply(V0,V1);
	V1 = LO;
	if ((int32_t)V1 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8001DE7C);
		goto ZZ_1D860_61C;
	}
	V1 += 1023;
	ZZ_CLOCKCYCLES(7,0x8001DE7C);
ZZ_1D860_61C:
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	V1 = (int32_t)V1 >> 10;
	V0 = V0 - V1;
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(S1 + 260,V0); //+ 0x104
		ZZ_CLOCKCYCLES(5,0x8001DE94);
		goto ZZ_1D860_634;
	}
	EMU_Write32(S1 + 260,V0); //+ 0x104
	EMU_Write32(S1 + 260,R0); //+ 0x104
	ZZ_CLOCKCYCLES(6,0x8001DE94);
ZZ_1D860_634:
	V0 = EMU_ReadU32(S1 + 260); //+ 0x104
	EMU_SMultiply(S4,V0);
	A0 = EMU_ReadU32(S1 + 148); //+ 0x94
	T0 = LO;
	RA = 0x8001DEB0; //ZZ_1D860_650
	S4 = (int32_t)T0 >> 8;
	ZZ_CLOCKCYCLES(7,0x8003D584);
	goto ZZ_3D584;
ZZ_1D860_650:
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,S4);
	A0 = EMU_ReadU32(S1 + 148); //+ 0x94
	T0 = LO;
	V0 = (int32_t)T0 >> 8;
	RA = 0x8001DECC; //ZZ_1D860_66C
	EMU_Write32(S1 + 132,V0); //+ 0x84
	ZZ_CLOCKCYCLES(7,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_1D860_66C:
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,S4);
	T0 = LO;
	V0 = (int32_t)T0 >> 8;
	EMU_Write32(S1 + 140,V0); //+ 0x8C
	ZZ_CLOCKCYCLES(5,0x8001DEE0);
ZZ_1D860_680:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	if (S1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001DF40);
		goto ZZ_1D860_6E0;
	}
	A1 = 0x80060000;
	A1 -= 2260;
	V0 = EMU_ReadU32(S1 + 96); //+ 0x60
	V1 = EMU_ReadU32(S1 + 100); //+ 0x64
	A0 = EMU_ReadU32(S1 + 104); //+ 0x68
	EMU_Write32(A1,V0);
	EMU_Write32(A1 + 4,V1); //+ 0x4
	EMU_Write32(A1 + 8,A0); //+ 0x8
	A0 = 0x7;
	ZZ_CLOCKCYCLES(14,0x8001DF18);
ZZ_1D860_6B8:
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V1 = A0 << 2;
	V1 += V0;
	V0 = EMU_ReadU32(V1 + 72); //+ 0x48
	A0 -= 1;
	if ((int32_t)A0 > 0)
	{
		EMU_Write32(V1 + 76,V0); //+ 0x4C
		ZZ_CLOCKCYCLES(7,0x8001DF18);
		goto ZZ_1D860_6B8;
	}
	EMU_Write32(V1 + 76,V0); //+ 0x4C
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	EMU_Write32(V0 + 76,S6); //+ 0x4C
	ZZ_CLOCKCYCLES(10,0x8001DF40);
ZZ_1D860_6E0:
	V1 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 = V1 & 0x1;
	if (!V0)
	{
		V0 = 0xFACA0000;
		ZZ_CLOCKCYCLES(5,0x8001DF6C);
		goto ZZ_1D860_70C;
	}
	V0 = 0xFACA0000;
	V0 = EMU_ReadU32(S1 + 256); //+ 0x100
	V0 &= 0x8;
	if (V0)
	{
		V0 = 0xFACA0000;
		ZZ_CLOCKCYCLES(10,0x8001DF6C);
		goto ZZ_1D860_70C;
	}
	V0 = 0xFACA0000;
	V0 = 0xF8CA0000;
	ZZ_CLOCKCYCLES(11,0x8001DF6C);
ZZ_1D860_70C:
	V0 |= 0x207E;
	V0 &= V1;
	EMU_Write32(S1 + 168,V0); //+ 0xA8
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001DFA4);
		goto ZZ_1D860_744;
	}
	A0 = EMU_ReadU32(S1 + 112); //+ 0x70
	A1 = EMU_ReadU32(S1 + 148); //+ 0x94
	A2 = EMU_ReadU32(S1 + 144); //+ 0x90
	RA = 0x8001DFA0; //ZZ_1D860_740
	A3 = S1;
	ZZ_CLOCKCYCLES(13,0x8001E624);
	goto ZZ_1E624;
ZZ_1D860_740:
	EMU_Write32(S1 + 112,V0); //+ 0x70
	ZZ_CLOCKCYCLES(1,0x8001DFA4);
ZZ_1D860_744:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V1 = 0x80000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001DFD0);
		goto ZZ_1D860_770;
	}
	A0 = EMU_ReadU32(S1 + 112); //+ 0x70
	A1 = EMU_ReadU32(S1 + 148); //+ 0x94
	A2 = EMU_ReadU32(S1 + 144); //+ 0x90
	RA = 0x8001DFCC; //ZZ_1D860_76C
	A3 = S1;
	ZZ_CLOCKCYCLES(10,0x8001E78C);
	goto ZZ_1E78C;
ZZ_1D860_76C:
	EMU_Write32(S1 + 112,V0); //+ 0x70
	ZZ_CLOCKCYCLES(1,0x8001DFD0);
ZZ_1D860_770:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x2000;
	if (!V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(5,0x8001E000);
		goto ZZ_1D860_7A0;
	}
	A0 = S1;
	A0 = EMU_ReadU32(S1 + 108); //+ 0x6C
	A1 = EMU_ReadU32(S1 + 152); //+ 0x98
	A2 = EMU_ReadU32(S1 + 292); //+ 0x124
	RA = 0x8001DFF8; //ZZ_1D860_798
	A3 = R0;
	ZZ_CLOCKCYCLES(10,0x8001E624);
	goto ZZ_1E624;
ZZ_1D860_798:
	EMU_Write32(S1 + 108,V0); //+ 0x6C
	A0 = S1;
	ZZ_CLOCKCYCLES(2,0x8001E000);
ZZ_1D860_7A0:
	RA = 0x8001E008; //ZZ_1D860_7A8
	A1 = S1 + 120;
	ZZ_CLOCKCYCLES(2,0x8001A5DC);
	goto ZZ_1A5DC;
ZZ_1D860_7A8:
	A0 = S1;
	RA = 0x8001E014; //ZZ_1D860_7B4
	A1 = FP;
	ZZ_CLOCKCYCLES(3,0x8001ABB8);
	goto ZZ_1ABB8;
ZZ_1D860_7B4:
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0);
	V0 = 0x5;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001E038);
		goto ZZ_1D860_7D8;
	}
	EMU_Write32(S1 + 88,R0); //+ 0x58
	ZZ_CLOCKCYCLES(9,0x8001E038);
ZZ_1D860_7D8:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E36C);
		goto ZZ_1D860_B0C;
	}
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 14056); //+ 0x36E8
	V0 = EMU_ReadU32(S1 + 96); //+ 0x60
	V1 = EMU_ReadU32(S1 + 100); //+ 0x64
	A0 = EMU_ReadU32(S1 + 104); //+ 0x68
	EMU_Write32(SP + 40,V0); //+ 0x28
	EMU_Write32(SP + 44,V1); //+ 0x2C
	EMU_Write32(SP + 48,A0); //+ 0x30
	V1 = EMU_ReadU32(A2 + 20); //+ 0x14
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(18,0x8001E084);
		goto ZZ_1D860_824;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(19,0x8001E084);
ZZ_1D860_824:
	V0 = EMU_ReadU32(S1 + 132); //+ 0x84
	EMU_SMultiply(V0,V1);
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		A0 = (int32_t)V0 >> 10;
		ZZ_CLOCKCYCLES(6,0x8001E0A4);
		goto ZZ_1D860_844;
	}
	A0 = (int32_t)V0 >> 10;
	V0 += 1023;
	A0 = (int32_t)V0 >> 10;
	ZZ_CLOCKCYCLES(8,0x8001E0A4);
ZZ_1D860_844:
	EMU_Write32(SP + 24,A0); //+ 0x18
	V1 = EMU_ReadU32(A2 + 20); //+ 0x14
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001E0C0);
		goto ZZ_1D860_860;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(7,0x8001E0C0);
ZZ_1D860_860:
	V0 = EMU_ReadU32(S1 + 136); //+ 0x88
	EMU_SMultiply(V0,V1);
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8001E0DC);
		goto ZZ_1D860_87C;
	}
	V0 += 1023;
	ZZ_CLOCKCYCLES(7,0x8001E0DC);
ZZ_1D860_87C:
	V0 = (int32_t)V0 >> 10;
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V1 = EMU_ReadU32(A2 + 20); //+ 0x14
	V0 = V1 < 121;
	if (V0)
	{
		ZZ_CLOCKCYCLES(7,0x8001E0FC);
		goto ZZ_1D860_89C;
	}
	V1 = 0x78;
	ZZ_CLOCKCYCLES(8,0x8001E0FC);
ZZ_1D860_89C:
	V0 = EMU_ReadU32(S1 + 140); //+ 0x8C
	EMU_SMultiply(V0,V1);
	V0 = LO;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x8001E118);
		goto ZZ_1D860_8B8;
	}
	V0 += 1023;
	ZZ_CLOCKCYCLES(7,0x8001E118);
ZZ_1D860_8B8:
	V0 = (int32_t)V0 >> 10;
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x8;
	if (!V0)
	{
		V0 = 0xFF;
		ZZ_CLOCKCYCLES(7,0x8001E1DC);
		goto ZZ_1D860_97C;
	}
	V0 = 0xFF;
	EMU_Write32(S1 + 284,V0); //+ 0x11C
	V0 = 0x80060000;
	V0 -= 14420;
	AT = 0x1F800000;
	EMU_Write32(AT + 92,V0); //+ 0x5C
	RA = 0x8001E150; //ZZ_1D860_8F0
	ZZ_CLOCKCYCLES(14,0x8002CDCC);
	goto ZZ_2CDCC;
ZZ_1D860_8F0:
	A0 = S1;
	A2 = 0x80070000;
	A2 -= 32132;
	RA = 0x8001E164; //ZZ_1D860_904
	A1 = SP + 24;
	ZZ_CLOCKCYCLES(5,0x80029AF8);
	goto ZZ_29AF8;
ZZ_1D860_904:
	A0 = 0x2000000;
	V0 = S6 & A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E194);
		goto ZZ_1D860_934;
	}
	V1 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V0 = V1 & 0x1;
	if (V0)
	{
		V0 = S6 & 0x1;
		ZZ_CLOCKCYCLES(9,0x8001E194);
		goto ZZ_1D860_934;
	}
	V0 = S6 & 0x1;
	if (!V0)
	{
		V0 = V1 | A0;
		ZZ_CLOCKCYCLES(11,0x8001E194);
		goto ZZ_1D860_934;
	}
	V0 = V1 | A0;
	EMU_Write32(S1 + 168,V0); //+ 0xA8
	ZZ_CLOCKCYCLES(12,0x8001E194);
ZZ_1D860_934:
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V1 = 0x40000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E1CC);
		goto ZZ_1D860_96C;
	}
	V0 = EMU_ReadU32(S1 + 96); //+ 0x60
	AT = 0x80070000;
	EMU_Write32(AT - 12308,V0); //+ 0xFFFFCFEC
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	AT = 0x80070000;
	EMU_Write32(AT - 12304,V0); //+ 0xFFFFCFF0
	V0 = EMU_ReadU32(S1 + 104); //+ 0x68
	AT = 0x80070000;
	EMU_Write32(AT - 12300,V0); //+ 0xFFFFCFF4
	ZZ_CLOCKCYCLES(14,0x8001E1CC);
ZZ_1D860_96C:
	RA = 0x8001E1D4; //ZZ_1D860_974
	ZZ_CLOCKCYCLES(2,0x8001A040);
	goto ZZ_1A040;
ZZ_1D860_974:
	ZZ_CLOCKCYCLES(2,0x8001E214);
	goto ZZ_1D860_9B4;
ZZ_1D860_97C:
	V0 = EMU_ReadU32(S1 + 96); //+ 0x60
	V0 += A0;
	EMU_Write32(S1 + 96,V0); //+ 0x60
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	V0 += V1;
	EMU_Write32(S1 + 100,V0); //+ 0x64
	V0 = EMU_ReadU32(S1 + 104); //+ 0x68
	V1 = EMU_ReadU32(SP + 32); //+ 0x20
	V0 += V1;
	EMU_Write32(S1 + 104,V0); //+ 0x68
	ZZ_CLOCKCYCLES(14,0x8001E214);
ZZ_1D860_9B4:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x8000;
	if (!V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(5,0x8001E260);
		goto ZZ_1D860_A00;
	}
	A0 = S1;
	A1 = R0;
	RA = 0x8001E234; //ZZ_1D860_9D4
	A2 = SP + 56;
	ZZ_CLOCKCYCLES(8,0x8001F29C);
	goto ZZ_1F29C;
ZZ_1D860_9D4:
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	V1 = EMU_ReadU32(SP + 60); //+ 0x3C
	V0 &= 0x200;
	if (!V0)
	{
		EMU_Write32(S1 + 252,V1); //+ 0xFC
		ZZ_CLOCKCYCLES(5,0x8001E260);
		goto ZZ_1D860_A00;
	}
	EMU_Write32(S1 + 252,V1); //+ 0xFC
	V0 = EMU_ReadU32(SP + 40); //+ 0x28
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	A0 = EMU_ReadU32(SP + 48); //+ 0x30
	EMU_Write32(S1 + 96,V0); //+ 0x60
	EMU_Write32(S1 + 100,V1); //+ 0x64
	EMU_Write32(S1 + 104,A0); //+ 0x68
	ZZ_CLOCKCYCLES(11,0x8001E260);
ZZ_1D860_A00:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x1000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E314);
		goto ZZ_1D860_AB4;
	}
	A1 = EMU_ReadU32(S1 + 132); //+ 0x84
	V1 = EMU_ReadU32(S1 + 152); //+ 0x98
	V0 = (int32_t)A1 < (int32_t)V1;
	if (V0)
	{
		V0 = -V1;
		ZZ_CLOCKCYCLES(11,0x8001E294);
		goto ZZ_1D860_A34;
	}
	V0 = -V1;
	A0 = V1;
	ZZ_CLOCKCYCLES(13,0x8001E2A8);
	goto ZZ_1D860_A48;
ZZ_1D860_A34:
	A0 = V0;
	V0 = (int32_t)A1 < (int32_t)A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001E2A8);
		goto ZZ_1D860_A48;
	}
	A0 = A1;
	ZZ_CLOCKCYCLES(5,0x8001E2A8);
ZZ_1D860_A48:
	A1 = EMU_ReadU32(S1 + 136); //+ 0x88
	V1 = EMU_ReadU32(S1 + 152); //+ 0x98
	V0 = (int32_t)A1 < (int32_t)V1;
	if (V0)
	{
		EMU_Write32(S1 + 132,A0); //+ 0x84
		ZZ_CLOCKCYCLES(6,0x8001E2C8);
		goto ZZ_1D860_A68;
	}
	EMU_Write32(S1 + 132,A0); //+ 0x84
	A0 = V1;
	ZZ_CLOCKCYCLES(8,0x8001E2E0);
	goto ZZ_1D860_A80;
ZZ_1D860_A68:
	V0 = -V1;
	A0 = V0;
	V0 = (int32_t)A1 < (int32_t)A0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E2E0);
		goto ZZ_1D860_A80;
	}
	A0 = A1;
	ZZ_CLOCKCYCLES(6,0x8001E2E0);
ZZ_1D860_A80:
	A1 = EMU_ReadU32(S1 + 140); //+ 0x8C
	V1 = EMU_ReadU32(S1 + 152); //+ 0x98
	V0 = (int32_t)A1 < (int32_t)V1;
	if (!V0)
	{
		EMU_Write32(S1 + 136,A0); //+ 0x88
		ZZ_CLOCKCYCLES(6,0x8001E310);
		goto ZZ_1D860_AB0;
	}
	EMU_Write32(S1 + 136,A0); //+ 0x88
	V0 = -V1;
	V1 = V0;
	V0 = (int32_t)A1 < (int32_t)V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x8001E310);
		goto ZZ_1D860_AB0;
	}
	V1 = A1;
	ZZ_CLOCKCYCLES(12,0x8001E310);
ZZ_1D860_AB0:
	EMU_Write32(S1 + 140,V1); //+ 0x8C
	ZZ_CLOCKCYCLES(1,0x8001E314);
ZZ_1D860_AB4:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x4000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E36C);
		goto ZZ_1D860_B0C;
	}
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	V1 = EMU_ReadU32(S1 + 252); //+ 0xFC
	V0 = (int32_t)V1 < (int32_t)V0;
	if (V0)
	{
		ZZ_CLOCKCYCLES(11,0x8001E36C);
		goto ZZ_1D860_B0C;
	}
	V0 = EMU_ReadU32(S1 + 168); //+ 0xA8
	EMU_Write32(S1 + 100,V1); //+ 0x64
	V1 = EMU_ReadU32(S1 + 136); //+ 0x88
	V0 |= 0x1;
	EMU_Write32(S1 + 168,V0); //+ 0xA8
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12804); //+ 0xFFFFCDFC
	if ((int32_t)V1 >= 0)
	{
		EMU_Write32(S1 + 272,V0); //+ 0x110
		ZZ_CLOCKCYCLES(20,0x8001E36C);
		goto ZZ_1D860_B0C;
	}
	EMU_Write32(S1 + 272,V0); //+ 0x110
	EMU_Write32(S1 + 276,V1); //+ 0x114
	EMU_Write32(S1 + 136,R0); //+ 0x88
	ZZ_CLOCKCYCLES(22,0x8001E36C);
ZZ_1D860_B0C:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V1 = 0x200000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E4C0);
		goto ZZ_1D860_C60;
	}
	if (!S5)
	{
		V0 = S6 & 0x4000;
		ZZ_CLOCKCYCLES(7,0x8001E4C0);
		goto ZZ_1D860_C60;
	}
	V0 = S6 & 0x4000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x8001E4C0);
		goto ZZ_1D860_C60;
	}
	A0 = EMU_ReadU32(S1 + 96); //+ 0x60
	V0 = EMU_ReadU32(S7);
	A0 = A0 - V0;
	EMU_Write32(SP + 40,A0); //+ 0x28
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	V1 = EMU_ReadU32(S7 + 4); //+ 0x4
	V0 = V0 - V1;
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S1 + 104); //+ 0x68
	V1 = EMU_ReadU32(S7 + 8); //+ 0x8
	V0 = V0 - V1;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = EMU_ReadU32(S5 + 96); //+ 0x60
	V0 += A0;
	EMU_Write32(S5 + 96,V0); //+ 0x60
	V0 = EMU_ReadU32(S5 + 100); //+ 0x64
	V1 = EMU_ReadU32(SP + 44); //+ 0x2C
	V0 += V1;
	EMU_Write32(S5 + 100,V0); //+ 0x64
	V0 = EMU_ReadU32(S5 + 104); //+ 0x68
	V1 = EMU_ReadU32(SP + 48); //+ 0x30
	V0 += V1;
	EMU_Write32(S5 + 104,V0); //+ 0x68
	V0 = EMU_ReadU32(S5 + 96); //+ 0x60
	V1 = EMU_ReadU32(S1 + 96); //+ 0x60
	V0 = V0 - V1;
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(S5 + 100); //+ 0x64
	V1 = EMU_ReadU32(S1 + 100); //+ 0x64
	V0 = V0 - V1;
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S5 + 104); //+ 0x68
	V1 = EMU_ReadU32(S1 + 104); //+ 0x68
	V0 = V0 - V1;
	EMU_Write32(SP + 48,V0); //+ 0x30
	A0 = EMU_ReadU32(S1 + 108); //+ 0x6C
	V0 = EMU_ReadU32(S7 + 12); //+ 0xC
	A0 = A0 - V0;
	A0 <<= 20;
	A0 = (int32_t)A0 >> 20;
	EMU_Write32(SP + 72,A0); //+ 0x48
	V0 = EMU_ReadU32(S1 + 112); //+ 0x70
	V1 = EMU_ReadU32(S7 + 16); //+ 0x10
	V0 = V0 - V1;
	V0 <<= 20;
	V1 = (int32_t)V0 >> 20;
	EMU_Write32(SP + 76,V1); //+ 0x4C
	V0 = EMU_ReadU32(S1 + 116); //+ 0x74
	EMU_Write32(SP + 80,V0); //+ 0x50
	if (A0)
	{
		V0 = S5 + 96;
		ZZ_CLOCKCYCLES(72,0x8001E494);
		goto ZZ_1D860_C34;
	}
	V0 = S5 + 96;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(74,0x8001E4C0);
		goto ZZ_1D860_C60;
	}
	ZZ_CLOCKCYCLES(74,0x8001E494);
ZZ_1D860_C34:
	A0 = SP + 40;
	A1 = S1 + 96;
	A2 = SP + 72;
	A3 = R0;
	RA = 0x8001E4AC; //ZZ_1D860_C4C
	EMU_Write32(SP + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(6,0x8001EB2C);
	goto ZZ_1EB2C;
ZZ_1D860_C4C:
	V0 = EMU_ReadU32(S5 + 148); //+ 0x94
	V1 = EMU_ReadU32(SP + 76); //+ 0x4C
	V0 += V1;
	EMU_Write32(S5 + 148,V0); //+ 0x94
	ZZ_CLOCKCYCLES(5,0x8001E4C0);
ZZ_1D860_C60:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x20;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001E52C);
		goto ZZ_1D860_CCC;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14056); //+ 0x36E8
	A0 = EMU_ReadU32(V0 + 20); //+ 0x14
	V0 = A0 < 121;
	if (V0)
	{
		A1 = 0xFFD10000;
		ZZ_CLOCKCYCLES(13,0x8001E4F8);
		goto ZZ_1D860_C98;
	}
	A1 = 0xFFD10000;
	A0 = 0x78;
	ZZ_CLOCKCYCLES(14,0x8001E4F8);
ZZ_1D860_C98:
	A1 |= 0x2000;
	V0 = A0 << 5;
	V0 = V0 - A0;
	V1 = EMU_ReadU32(S1 + 136); //+ 0x88
	V0 <<= 2;
	V0 += A0;
	V0 <<= 5;
	V1 = V1 - V0;
	EMU_Write32(S1 + 136,V1); //+ 0x88
	V1 = (int32_t)V1 < (int32_t)A1;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(12,0x8001E52C);
		goto ZZ_1D860_CCC;
	}
	EMU_Write32(S1 + 136,A1); //+ 0x88
	ZZ_CLOCKCYCLES(13,0x8001E52C);
ZZ_1D860_CCC:
	V0 = EMU_ReadU32(S1 + 172); //+ 0xAC
	V0 &= 0x10;
	if (!V0)
	{
		V1 = 0xA0000;
		ZZ_CLOCKCYCLES(5,0x8001E5F0);
		goto ZZ_1D860_D90;
	}
	V1 = 0xA0000;
	V1 |= 0xF000;
	V0 = 0x70000;
	V0 |= 0xD000;
	A0 = S1;
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 - 2524); //+ 0xFFFFF624
	A1 = S1 + 96;
	A3 = 0x70000;
	A3 |= 0xD000;
	EMU_Write32(SP + 16,V1); //+ 0x10
	EMU_Write32(SP + 20,V0); //+ 0x14
	RA = 0x8001E574; //ZZ_1D860_D14
	A2 += 96;
	ZZ_CLOCKCYCLES(18,0x800313F8);
	goto ZZ_313F8;
ZZ_1D860_D14:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001E5F0);
		goto ZZ_1D860_D90;
	}
	V0 = EMU_ReadU32(S1 + 232); //+ 0xE8
	if (!V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(6,0x8001E5E4);
		goto ZZ_1D860_D84;
	}
	A0 = S1;
	V1 = EMU_ReadU8(V0);
	V0 = 0x1;
	if (V1 != V0)
	{
		A1 = 0x1;
		ZZ_CLOCKCYCLES(10,0x8001E5E8);
		goto ZZ_1D860_D88;
	}
	A1 = 0x1;
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 32); //+ 0x20
	S2 = EMU_ReadU32(V0 + 12); //+ 0xC
	if ((int32_t)S2 <= 0)
	{
		S0 = R0;
		ZZ_CLOCKCYCLES(18,0x8001E5F0);
		goto ZZ_1D860_D90;
	}
	S0 = R0;
	A0 = S1;
	ZZ_CLOCKCYCLES(19,0x8001E5C0);
ZZ_1D860_D60:
	A1 = 0x1;
	RA = 0x8001E5CC; //ZZ_1D860_D6C
	A2 = S0;
	ZZ_CLOCKCYCLES(3,0x8002C638);
	goto ZZ_2C638;
ZZ_1D860_D6C:
	S0 += 1;
	V0 = (int32_t)S0 < (int32_t)S2;
	if (V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(4,0x8001E5C0);
		goto ZZ_1D860_D60;
	}
	A0 = S1;
	ZZ_CLOCKCYCLES(6,0x8001E5F0);
	goto ZZ_1D860_D90;
ZZ_1D860_D84:
	A1 = 0x1;
	ZZ_CLOCKCYCLES(1,0x8001E5E8);
ZZ_1D860_D88:
	RA = 0x8001E5F0; //ZZ_1D860_D90
	A2 = -1;
	ZZ_CLOCKCYCLES(2,0x8002C638);
	goto ZZ_2C638;
ZZ_1D860_D90:
	RA = EMU_ReadU32(SP + 132); //+ 0x84
	FP = EMU_ReadU32(SP + 128); //+ 0x80
	S7 = EMU_ReadU32(SP + 124); //+ 0x7C
	S6 = EMU_ReadU32(SP + 120); //+ 0x78
	S5 = EMU_ReadU32(SP + 116); //+ 0x74
	S4 = EMU_ReadU32(SP + 112); //+ 0x70
	S3 = EMU_ReadU32(SP + 108); //+ 0x6C
	S2 = EMU_ReadU32(SP + 104); //+ 0x68
	S1 = EMU_ReadU32(SP + 100); //+ 0x64
	S0 = EMU_ReadU32(SP + 96); //+ 0x60
	SP += 136;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x8001CB24,ZZ_1C850_2D4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001D860,ZZ_1D860);
ZZ_MARK(0x8001D864);
ZZ_MARK(0x8001D868);
ZZ_MARK(0x8001D86C);
ZZ_MARK(0x8001D870);
ZZ_MARK(0x8001D874);
ZZ_MARK(0x8001D878);
ZZ_MARK(0x8001D87C);
ZZ_MARK(0x8001D880);
ZZ_MARK(0x8001D884);
ZZ_MARK(0x8001D888);
ZZ_MARK(0x8001D88C);
ZZ_MARK(0x8001D890);
ZZ_MARK(0x8001D894);
ZZ_MARK(0x8001D898);
ZZ_MARK(0x8001D89C);
ZZ_MARK(0x8001D8A0);
ZZ_MARK(0x8001D8A4);
ZZ_MARK(0x8001D8A8);
ZZ_MARK(0x8001D8AC);
ZZ_MARK(0x8001D8B0);
ZZ_MARK(0x8001D8B4);
ZZ_MARK(0x8001D8B8);
ZZ_MARK(0x8001D8BC);
ZZ_MARK(0x8001D8C0);
ZZ_MARK(0x8001D8C4);
ZZ_MARK(0x8001D8C8);
ZZ_MARK(0x8001D8CC);
ZZ_MARK(0x8001D8D0);
ZZ_MARK(0x8001D8D4);
ZZ_MARK(0x8001D8D8);
ZZ_MARK(0x8001D8DC);
ZZ_MARK(0x8001D8E0);
ZZ_MARK(0x8001D8E4);
ZZ_MARK(0x8001D8E8);
ZZ_MARK(0x8001D8EC);
ZZ_MARK(0x8001D8F0);
ZZ_MARK(0x8001D8F4);
ZZ_MARK(0x8001D8F8);
ZZ_MARK(0x8001D8FC);
ZZ_MARK_TARGET(0x8001D900,ZZ_1D860_A0);
ZZ_MARK(0x8001D904);
ZZ_MARK(0x8001D908);
ZZ_MARK(0x8001D90C);
ZZ_MARK(0x8001D910);
ZZ_MARK(0x8001D914);
ZZ_MARK(0x8001D918);
ZZ_MARK(0x8001D91C);
ZZ_MARK(0x8001D920);
ZZ_MARK(0x8001D924);
ZZ_MARK(0x8001D928);
ZZ_MARK(0x8001D92C);
ZZ_MARK(0x8001D930);
ZZ_MARK_TARGET(0x8001D934,ZZ_1D860_D4);
ZZ_MARK(0x8001D938);
ZZ_MARK_TARGET(0x8001D93C,ZZ_1D860_DC);
ZZ_MARK(0x8001D940);
ZZ_MARK(0x8001D944);
ZZ_MARK(0x8001D948);
ZZ_MARK(0x8001D94C);
ZZ_MARK(0x8001D950);
ZZ_MARK(0x8001D954);
ZZ_MARK(0x8001D958);
ZZ_MARK(0x8001D95C);
ZZ_MARK(0x8001D960);
ZZ_MARK(0x8001D964);
ZZ_MARK(0x8001D968);
ZZ_MARK(0x8001D96C);
ZZ_MARK(0x8001D970);
ZZ_MARK(0x8001D974);
ZZ_MARK(0x8001D978);
ZZ_MARK(0x8001D97C);
ZZ_MARK(0x8001D980);
ZZ_MARK(0x8001D984);
ZZ_MARK(0x8001D988);
ZZ_MARK(0x8001D98C);
ZZ_MARK(0x8001D990);
ZZ_MARK(0x8001D994);
ZZ_MARK(0x8001D998);
ZZ_MARK(0x8001D99C);
ZZ_MARK(0x8001D9A0);
ZZ_MARK(0x8001D9A4);
ZZ_MARK(0x8001D9A8);
ZZ_MARK_TARGET(0x8001D9AC,ZZ_1D860_14C);
ZZ_MARK(0x8001D9B0);
ZZ_MARK(0x8001D9B4);
ZZ_MARK(0x8001D9B8);
ZZ_MARK(0x8001D9BC);
ZZ_MARK(0x8001D9C0);
ZZ_MARK(0x8001D9C4);
ZZ_MARK(0x8001D9C8);
ZZ_MARK(0x8001D9CC);
ZZ_MARK(0x8001D9D0);
ZZ_MARK(0x8001D9D4);
ZZ_MARK(0x8001D9D8);
ZZ_MARK_TARGET(0x8001D9DC,ZZ_1D860_17C);
ZZ_MARK(0x8001D9E0);
ZZ_MARK(0x8001D9E4);
ZZ_MARK(0x8001D9E8);
ZZ_MARK(0x8001D9EC);
ZZ_MARK(0x8001D9F0);
ZZ_MARK(0x8001D9F4);
ZZ_MARK(0x8001D9F8);
ZZ_MARK(0x8001D9FC);
ZZ_MARK(0x8001DA00);
ZZ_MARK(0x8001DA04);
ZZ_MARK(0x8001DA08);
ZZ_MARK(0x8001DA0C);
ZZ_MARK_TARGET(0x8001DA10,ZZ_1D860_1B0);
ZZ_MARK(0x8001DA14);
ZZ_MARK(0x8001DA18);
ZZ_MARK(0x8001DA1C);
ZZ_MARK(0x8001DA20);
ZZ_MARK(0x8001DA24);
ZZ_MARK(0x8001DA28);
ZZ_MARK(0x8001DA2C);
ZZ_MARK(0x8001DA30);
ZZ_MARK(0x8001DA34);
ZZ_MARK(0x8001DA38);
ZZ_MARK(0x8001DA3C);
ZZ_MARK(0x8001DA40);
ZZ_MARK_TARGET(0x8001DA44,ZZ_1D860_1E4);
ZZ_MARK(0x8001DA48);
ZZ_MARK_TARGET(0x8001DA4C,ZZ_1D860_1EC);
ZZ_MARK(0x8001DA50);
ZZ_MARK(0x8001DA54);
ZZ_MARK(0x8001DA58);
ZZ_MARK(0x8001DA5C);
ZZ_MARK(0x8001DA60);
ZZ_MARK(0x8001DA64);
ZZ_MARK(0x8001DA68);
ZZ_MARK(0x8001DA6C);
ZZ_MARK(0x8001DA70);
ZZ_MARK(0x8001DA74);
ZZ_MARK(0x8001DA78);
ZZ_MARK(0x8001DA7C);
ZZ_MARK(0x8001DA80);
ZZ_MARK(0x8001DA84);
ZZ_MARK(0x8001DA88);
ZZ_MARK(0x8001DA8C);
ZZ_MARK(0x8001DA90);
ZZ_MARK(0x8001DA94);
ZZ_MARK(0x8001DA98);
ZZ_MARK_TARGET(0x8001DA9C,ZZ_1D860_23C);
ZZ_MARK(0x8001DAA0);
ZZ_MARK(0x8001DAA4);
ZZ_MARK(0x8001DAA8);
ZZ_MARK(0x8001DAAC);
ZZ_MARK_TARGET(0x8001DAB0,ZZ_1D860_250);
ZZ_MARK(0x8001DAB4);
ZZ_MARK(0x8001DAB8);
ZZ_MARK(0x8001DABC);
ZZ_MARK(0x8001DAC0);
ZZ_MARK_TARGET(0x8001DAC4,ZZ_1D860_264);
ZZ_MARK(0x8001DAC8);
ZZ_MARK(0x8001DACC);
ZZ_MARK(0x8001DAD0);
ZZ_MARK(0x8001DAD4);
ZZ_MARK(0x8001DAD8);
ZZ_MARK(0x8001DADC);
ZZ_MARK_TARGET(0x8001DAE0,ZZ_1D860_280);
ZZ_MARK(0x8001DAE4);
ZZ_MARK(0x8001DAE8);
ZZ_MARK(0x8001DAEC);
ZZ_MARK(0x8001DAF0);
ZZ_MARK(0x8001DAF4);
ZZ_MARK_TARGET(0x8001DAF8,ZZ_1D860_298);
ZZ_MARK(0x8001DAFC);
ZZ_MARK(0x8001DB00);
ZZ_MARK(0x8001DB04);
ZZ_MARK(0x8001DB08);
ZZ_MARK(0x8001DB0C);
ZZ_MARK_TARGET(0x8001DB10,ZZ_1D860_2B0);
ZZ_MARK(0x8001DB14);
ZZ_MARK(0x8001DB18);
ZZ_MARK(0x8001DB1C);
ZZ_MARK(0x8001DB20);
ZZ_MARK(0x8001DB24);
ZZ_MARK(0x8001DB28);
ZZ_MARK(0x8001DB2C);
ZZ_MARK(0x8001DB30);
ZZ_MARK(0x8001DB34);
ZZ_MARK(0x8001DB38);
ZZ_MARK(0x8001DB3C);
ZZ_MARK(0x8001DB40);
ZZ_MARK(0x8001DB44);
ZZ_MARK_TARGET(0x8001DB48,ZZ_1D860_2E8);
ZZ_MARK(0x8001DB4C);
ZZ_MARK(0x8001DB50);
ZZ_MARK(0x8001DB54);
ZZ_MARK(0x8001DB58);
ZZ_MARK(0x8001DB5C);
ZZ_MARK(0x8001DB60);
ZZ_MARK_TARGET(0x8001DB64,ZZ_1D860_304);
ZZ_MARK(0x8001DB68);
ZZ_MARK(0x8001DB6C);
ZZ_MARK(0x8001DB70);
ZZ_MARK(0x8001DB74);
ZZ_MARK(0x8001DB78);
ZZ_MARK(0x8001DB7C);
ZZ_MARK_TARGET(0x8001DB80,ZZ_1D860_320);
ZZ_MARK(0x8001DB84);
ZZ_MARK(0x8001DB88);
ZZ_MARK(0x8001DB8C);
ZZ_MARK(0x8001DB90);
ZZ_MARK(0x8001DB94);
ZZ_MARK(0x8001DB98);
ZZ_MARK(0x8001DB9C);
ZZ_MARK(0x8001DBA0);
ZZ_MARK(0x8001DBA4);
ZZ_MARK(0x8001DBA8);
ZZ_MARK(0x8001DBAC);
ZZ_MARK(0x8001DBB0);
ZZ_MARK_TARGET(0x8001DBB4,ZZ_1D860_354);
ZZ_MARK(0x8001DBB8);
ZZ_MARK(0x8001DBBC);
ZZ_MARK(0x8001DBC0);
ZZ_MARK(0x8001DBC4);
ZZ_MARK(0x8001DBC8);
ZZ_MARK(0x8001DBCC);
ZZ_MARK(0x8001DBD0);
ZZ_MARK(0x8001DBD4);
ZZ_MARK(0x8001DBD8);
ZZ_MARK(0x8001DBDC);
ZZ_MARK(0x8001DBE0);
ZZ_MARK(0x8001DBE4);
ZZ_MARK(0x8001DBE8);
ZZ_MARK_TARGET(0x8001DBEC,ZZ_1D860_38C);
ZZ_MARK(0x8001DBF0);
ZZ_MARK(0x8001DBF4);
ZZ_MARK(0x8001DBF8);
ZZ_MARK_TARGET(0x8001DBFC,ZZ_1D860_39C);
ZZ_MARK(0x8001DC00);
ZZ_MARK(0x8001DC04);
ZZ_MARK(0x8001DC08);
ZZ_MARK(0x8001DC0C);
ZZ_MARK(0x8001DC10);
ZZ_MARK(0x8001DC14);
ZZ_MARK_TARGET(0x8001DC18,ZZ_1D860_3B8);
ZZ_MARK(0x8001DC1C);
ZZ_MARK(0x8001DC20);
ZZ_MARK(0x8001DC24);
ZZ_MARK(0x8001DC28);
ZZ_MARK(0x8001DC2C);
ZZ_MARK(0x8001DC30);
ZZ_MARK(0x8001DC34);
ZZ_MARK(0x8001DC38);
ZZ_MARK_TARGET(0x8001DC3C,ZZ_1D860_3DC);
ZZ_MARK(0x8001DC40);
ZZ_MARK(0x8001DC44);
ZZ_MARK(0x8001DC48);
ZZ_MARK(0x8001DC4C);
ZZ_MARK(0x8001DC50);
ZZ_MARK(0x8001DC54);
ZZ_MARK(0x8001DC58);
ZZ_MARK_TARGET(0x8001DC5C,ZZ_1D860_3FC);
ZZ_MARK(0x8001DC60);
ZZ_MARK(0x8001DC64);
ZZ_MARK(0x8001DC68);
ZZ_MARK(0x8001DC6C);
ZZ_MARK(0x8001DC70);
ZZ_MARK(0x8001DC74);
ZZ_MARK(0x8001DC78);
ZZ_MARK(0x8001DC7C);
ZZ_MARK(0x8001DC80);
ZZ_MARK(0x8001DC84);
ZZ_MARK(0x8001DC88);
ZZ_MARK(0x8001DC8C);
ZZ_MARK(0x8001DC90);
ZZ_MARK(0x8001DC94);
ZZ_MARK(0x8001DC98);
ZZ_MARK(0x8001DC9C);
ZZ_MARK_TARGET(0x8001DCA0,ZZ_1D860_440);
ZZ_MARK_TARGET(0x8001DCA4,ZZ_1D860_444);
ZZ_MARK(0x8001DCA8);
ZZ_MARK(0x8001DCAC);
ZZ_MARK(0x8001DCB0);
ZZ_MARK(0x8001DCB4);
ZZ_MARK(0x8001DCB8);
ZZ_MARK(0x8001DCBC);
ZZ_MARK_TARGET(0x8001DCC0,ZZ_1D860_460);
ZZ_MARK(0x8001DCC4);
ZZ_MARK(0x8001DCC8);
ZZ_MARK(0x8001DCCC);
ZZ_MARK(0x8001DCD0);
ZZ_MARK_TARGET(0x8001DCD4,ZZ_1D860_474);
ZZ_MARK(0x8001DCD8);
ZZ_MARK_TARGET(0x8001DCDC,ZZ_1D860_47C);
ZZ_MARK(0x8001DCE0);
ZZ_MARK(0x8001DCE4);
ZZ_MARK(0x8001DCE8);
ZZ_MARK(0x8001DCEC);
ZZ_MARK(0x8001DCF0);
ZZ_MARK(0x8001DCF4);
ZZ_MARK(0x8001DCF8);
ZZ_MARK_TARGET(0x8001DCFC,ZZ_1D860_49C);
ZZ_MARK(0x8001DD00);
ZZ_MARK(0x8001DD04);
ZZ_MARK(0x8001DD08);
ZZ_MARK(0x8001DD0C);
ZZ_MARK(0x8001DD10);
ZZ_MARK_TARGET(0x8001DD14,ZZ_1D860_4B4);
ZZ_MARK(0x8001DD18);
ZZ_MARK_TARGET(0x8001DD1C,ZZ_1D860_4BC);
ZZ_MARK_TARGET(0x8001DD20,ZZ_1D860_4C0);
ZZ_MARK(0x8001DD24);
ZZ_MARK(0x8001DD28);
ZZ_MARK(0x8001DD2C);
ZZ_MARK(0x8001DD30);
ZZ_MARK(0x8001DD34);
ZZ_MARK(0x8001DD38);
ZZ_MARK(0x8001DD3C);
ZZ_MARK(0x8001DD40);
ZZ_MARK_TARGET(0x8001DD44,ZZ_1D860_4E4);
ZZ_MARK(0x8001DD48);
ZZ_MARK(0x8001DD4C);
ZZ_MARK(0x8001DD50);
ZZ_MARK(0x8001DD54);
ZZ_MARK(0x8001DD58);
ZZ_MARK(0x8001DD5C);
ZZ_MARK_TARGET(0x8001DD60,ZZ_1D860_500);
ZZ_MARK(0x8001DD64);
ZZ_MARK(0x8001DD68);
ZZ_MARK(0x8001DD6C);
ZZ_MARK(0x8001DD70);
ZZ_MARK_TARGET(0x8001DD74,ZZ_1D860_514);
ZZ_MARK(0x8001DD78);
ZZ_MARK(0x8001DD7C);
ZZ_MARK(0x8001DD80);
ZZ_MARK(0x8001DD84);
ZZ_MARK(0x8001DD88);
ZZ_MARK(0x8001DD8C);
ZZ_MARK(0x8001DD90);
ZZ_MARK_TARGET(0x8001DD94,ZZ_1D860_534);
ZZ_MARK(0x8001DD98);
ZZ_MARK(0x8001DD9C);
ZZ_MARK(0x8001DDA0);
ZZ_MARK(0x8001DDA4);
ZZ_MARK(0x8001DDA8);
ZZ_MARK(0x8001DDAC);
ZZ_MARK(0x8001DDB0);
ZZ_MARK(0x8001DDB4);
ZZ_MARK_TARGET(0x8001DDB8,ZZ_1D860_558);
ZZ_MARK(0x8001DDBC);
ZZ_MARK(0x8001DDC0);
ZZ_MARK(0x8001DDC4);
ZZ_MARK(0x8001DDC8);
ZZ_MARK(0x8001DDCC);
ZZ_MARK(0x8001DDD0);
ZZ_MARK_TARGET(0x8001DDD4,ZZ_1D860_574);
ZZ_MARK(0x8001DDD8);
ZZ_MARK(0x8001DDDC);
ZZ_MARK(0x8001DDE0);
ZZ_MARK(0x8001DDE4);
ZZ_MARK_TARGET(0x8001DDE8,ZZ_1D860_588);
ZZ_MARK_TARGET(0x8001DDEC,ZZ_1D860_58C);
ZZ_MARK(0x8001DDF0);
ZZ_MARK(0x8001DDF4);
ZZ_MARK(0x8001DDF8);
ZZ_MARK(0x8001DDFC);
ZZ_MARK(0x8001DE00);
ZZ_MARK(0x8001DE04);
ZZ_MARK(0x8001DE08);
ZZ_MARK_TARGET(0x8001DE0C,ZZ_1D860_5AC);
ZZ_MARK(0x8001DE10);
ZZ_MARK(0x8001DE14);
ZZ_MARK(0x8001DE18);
ZZ_MARK(0x8001DE1C);
ZZ_MARK(0x8001DE20);
ZZ_MARK(0x8001DE24);
ZZ_MARK(0x8001DE28);
ZZ_MARK(0x8001DE2C);
ZZ_MARK(0x8001DE30);
ZZ_MARK_TARGET(0x8001DE34,ZZ_1D860_5D4);
ZZ_MARK(0x8001DE38);
ZZ_MARK_TARGET(0x8001DE3C,ZZ_1D860_5DC);
ZZ_MARK(0x8001DE40);
ZZ_MARK(0x8001DE44);
ZZ_MARK(0x8001DE48);
ZZ_MARK(0x8001DE4C);
ZZ_MARK(0x8001DE50);
ZZ_MARK(0x8001DE54);
ZZ_MARK(0x8001DE58);
ZZ_MARK(0x8001DE5C);
ZZ_MARK_TARGET(0x8001DE60,ZZ_1D860_600);
ZZ_MARK(0x8001DE64);
ZZ_MARK(0x8001DE68);
ZZ_MARK(0x8001DE6C);
ZZ_MARK(0x8001DE70);
ZZ_MARK(0x8001DE74);
ZZ_MARK(0x8001DE78);
ZZ_MARK_TARGET(0x8001DE7C,ZZ_1D860_61C);
ZZ_MARK(0x8001DE80);
ZZ_MARK(0x8001DE84);
ZZ_MARK(0x8001DE88);
ZZ_MARK(0x8001DE8C);
ZZ_MARK(0x8001DE90);
ZZ_MARK_TARGET(0x8001DE94,ZZ_1D860_634);
ZZ_MARK(0x8001DE98);
ZZ_MARK(0x8001DE9C);
ZZ_MARK(0x8001DEA0);
ZZ_MARK(0x8001DEA4);
ZZ_MARK(0x8001DEA8);
ZZ_MARK(0x8001DEAC);
ZZ_MARK_TARGET(0x8001DEB0,ZZ_1D860_650);
ZZ_MARK(0x8001DEB4);
ZZ_MARK(0x8001DEB8);
ZZ_MARK(0x8001DEBC);
ZZ_MARK(0x8001DEC0);
ZZ_MARK(0x8001DEC4);
ZZ_MARK(0x8001DEC8);
ZZ_MARK_TARGET(0x8001DECC,ZZ_1D860_66C);
ZZ_MARK(0x8001DED0);
ZZ_MARK(0x8001DED4);
ZZ_MARK(0x8001DED8);
ZZ_MARK(0x8001DEDC);
ZZ_MARK_TARGET(0x8001DEE0,ZZ_1D860_680);
ZZ_MARK(0x8001DEE4);
ZZ_MARK(0x8001DEE8);
ZZ_MARK(0x8001DEEC);
ZZ_MARK(0x8001DEF0);
ZZ_MARK(0x8001DEF4);
ZZ_MARK(0x8001DEF8);
ZZ_MARK(0x8001DEFC);
ZZ_MARK(0x8001DF00);
ZZ_MARK(0x8001DF04);
ZZ_MARK(0x8001DF08);
ZZ_MARK(0x8001DF0C);
ZZ_MARK(0x8001DF10);
ZZ_MARK(0x8001DF14);
ZZ_MARK_TARGET(0x8001DF18,ZZ_1D860_6B8);
ZZ_MARK(0x8001DF1C);
ZZ_MARK(0x8001DF20);
ZZ_MARK(0x8001DF24);
ZZ_MARK(0x8001DF28);
ZZ_MARK(0x8001DF2C);
ZZ_MARK(0x8001DF30);
ZZ_MARK(0x8001DF34);
ZZ_MARK(0x8001DF38);
ZZ_MARK(0x8001DF3C);
ZZ_MARK_TARGET(0x8001DF40,ZZ_1D860_6E0);
ZZ_MARK(0x8001DF44);
ZZ_MARK(0x8001DF48);
ZZ_MARK(0x8001DF4C);
ZZ_MARK(0x8001DF50);
ZZ_MARK(0x8001DF54);
ZZ_MARK(0x8001DF58);
ZZ_MARK(0x8001DF5C);
ZZ_MARK(0x8001DF60);
ZZ_MARK(0x8001DF64);
ZZ_MARK(0x8001DF68);
ZZ_MARK_TARGET(0x8001DF6C,ZZ_1D860_70C);
ZZ_MARK(0x8001DF70);
ZZ_MARK(0x8001DF74);
ZZ_MARK(0x8001DF78);
ZZ_MARK(0x8001DF7C);
ZZ_MARK(0x8001DF80);
ZZ_MARK(0x8001DF84);
ZZ_MARK(0x8001DF88);
ZZ_MARK(0x8001DF8C);
ZZ_MARK(0x8001DF90);
ZZ_MARK(0x8001DF94);
ZZ_MARK(0x8001DF98);
ZZ_MARK(0x8001DF9C);
ZZ_MARK_TARGET(0x8001DFA0,ZZ_1D860_740);
ZZ_MARK_TARGET(0x8001DFA4,ZZ_1D860_744);
ZZ_MARK(0x8001DFA8);
ZZ_MARK(0x8001DFAC);
ZZ_MARK(0x8001DFB0);
ZZ_MARK(0x8001DFB4);
ZZ_MARK(0x8001DFB8);
ZZ_MARK(0x8001DFBC);
ZZ_MARK(0x8001DFC0);
ZZ_MARK(0x8001DFC4);
ZZ_MARK(0x8001DFC8);
ZZ_MARK_TARGET(0x8001DFCC,ZZ_1D860_76C);
ZZ_MARK_TARGET(0x8001DFD0,ZZ_1D860_770);
ZZ_MARK(0x8001DFD4);
ZZ_MARK(0x8001DFD8);
ZZ_MARK(0x8001DFDC);
ZZ_MARK(0x8001DFE0);
ZZ_MARK(0x8001DFE4);
ZZ_MARK(0x8001DFE8);
ZZ_MARK(0x8001DFEC);
ZZ_MARK(0x8001DFF0);
ZZ_MARK(0x8001DFF4);
ZZ_MARK_TARGET(0x8001DFF8,ZZ_1D860_798);
ZZ_MARK(0x8001DFFC);
ZZ_MARK_TARGET(0x8001E000,ZZ_1D860_7A0);
ZZ_MARK(0x8001E004);
ZZ_MARK_TARGET(0x8001E008,ZZ_1D860_7A8);
ZZ_MARK(0x8001E00C);
ZZ_MARK(0x8001E010);
ZZ_MARK_TARGET(0x8001E014,ZZ_1D860_7B4);
ZZ_MARK(0x8001E018);
ZZ_MARK(0x8001E01C);
ZZ_MARK(0x8001E020);
ZZ_MARK(0x8001E024);
ZZ_MARK(0x8001E028);
ZZ_MARK(0x8001E02C);
ZZ_MARK(0x8001E030);
ZZ_MARK(0x8001E034);
ZZ_MARK_TARGET(0x8001E038,ZZ_1D860_7D8);
ZZ_MARK(0x8001E03C);
ZZ_MARK(0x8001E040);
ZZ_MARK(0x8001E044);
ZZ_MARK(0x8001E048);
ZZ_MARK(0x8001E04C);
ZZ_MARK(0x8001E050);
ZZ_MARK(0x8001E054);
ZZ_MARK(0x8001E058);
ZZ_MARK(0x8001E05C);
ZZ_MARK(0x8001E060);
ZZ_MARK(0x8001E064);
ZZ_MARK(0x8001E068);
ZZ_MARK(0x8001E06C);
ZZ_MARK(0x8001E070);
ZZ_MARK(0x8001E074);
ZZ_MARK(0x8001E078);
ZZ_MARK(0x8001E07C);
ZZ_MARK(0x8001E080);
ZZ_MARK_TARGET(0x8001E084,ZZ_1D860_824);
ZZ_MARK(0x8001E088);
ZZ_MARK(0x8001E08C);
ZZ_MARK(0x8001E090);
ZZ_MARK(0x8001E094);
ZZ_MARK(0x8001E098);
ZZ_MARK(0x8001E09C);
ZZ_MARK(0x8001E0A0);
ZZ_MARK_TARGET(0x8001E0A4,ZZ_1D860_844);
ZZ_MARK(0x8001E0A8);
ZZ_MARK(0x8001E0AC);
ZZ_MARK(0x8001E0B0);
ZZ_MARK(0x8001E0B4);
ZZ_MARK(0x8001E0B8);
ZZ_MARK(0x8001E0BC);
ZZ_MARK_TARGET(0x8001E0C0,ZZ_1D860_860);
ZZ_MARK(0x8001E0C4);
ZZ_MARK(0x8001E0C8);
ZZ_MARK(0x8001E0CC);
ZZ_MARK(0x8001E0D0);
ZZ_MARK(0x8001E0D4);
ZZ_MARK(0x8001E0D8);
ZZ_MARK_TARGET(0x8001E0DC,ZZ_1D860_87C);
ZZ_MARK(0x8001E0E0);
ZZ_MARK(0x8001E0E4);
ZZ_MARK(0x8001E0E8);
ZZ_MARK(0x8001E0EC);
ZZ_MARK(0x8001E0F0);
ZZ_MARK(0x8001E0F4);
ZZ_MARK(0x8001E0F8);
ZZ_MARK_TARGET(0x8001E0FC,ZZ_1D860_89C);
ZZ_MARK(0x8001E100);
ZZ_MARK(0x8001E104);
ZZ_MARK(0x8001E108);
ZZ_MARK(0x8001E10C);
ZZ_MARK(0x8001E110);
ZZ_MARK(0x8001E114);
ZZ_MARK_TARGET(0x8001E118,ZZ_1D860_8B8);
ZZ_MARK(0x8001E11C);
ZZ_MARK(0x8001E120);
ZZ_MARK(0x8001E124);
ZZ_MARK(0x8001E128);
ZZ_MARK(0x8001E12C);
ZZ_MARK(0x8001E130);
ZZ_MARK(0x8001E134);
ZZ_MARK(0x8001E138);
ZZ_MARK(0x8001E13C);
ZZ_MARK(0x8001E140);
ZZ_MARK(0x8001E144);
ZZ_MARK(0x8001E148);
ZZ_MARK(0x8001E14C);
ZZ_MARK_TARGET(0x8001E150,ZZ_1D860_8F0);
ZZ_MARK(0x8001E154);
ZZ_MARK(0x8001E158);
ZZ_MARK(0x8001E15C);
ZZ_MARK(0x8001E160);
ZZ_MARK_TARGET(0x8001E164,ZZ_1D860_904);
ZZ_MARK(0x8001E168);
ZZ_MARK(0x8001E16C);
ZZ_MARK(0x8001E170);
ZZ_MARK(0x8001E174);
ZZ_MARK(0x8001E178);
ZZ_MARK(0x8001E17C);
ZZ_MARK(0x8001E180);
ZZ_MARK(0x8001E184);
ZZ_MARK(0x8001E188);
ZZ_MARK(0x8001E18C);
ZZ_MARK(0x8001E190);
ZZ_MARK_TARGET(0x8001E194,ZZ_1D860_934);
ZZ_MARK(0x8001E198);
ZZ_MARK(0x8001E19C);
ZZ_MARK(0x8001E1A0);
ZZ_MARK(0x8001E1A4);
ZZ_MARK(0x8001E1A8);
ZZ_MARK(0x8001E1AC);
ZZ_MARK(0x8001E1B0);
ZZ_MARK(0x8001E1B4);
ZZ_MARK(0x8001E1B8);
ZZ_MARK(0x8001E1BC);
ZZ_MARK(0x8001E1C0);
ZZ_MARK(0x8001E1C4);
ZZ_MARK(0x8001E1C8);
ZZ_MARK_TARGET(0x8001E1CC,ZZ_1D860_96C);
ZZ_MARK(0x8001E1D0);
ZZ_MARK_TARGET(0x8001E1D4,ZZ_1D860_974);
ZZ_MARK(0x8001E1D8);
ZZ_MARK_TARGET(0x8001E1DC,ZZ_1D860_97C);
ZZ_MARK(0x8001E1E0);
ZZ_MARK(0x8001E1E4);
ZZ_MARK(0x8001E1E8);
ZZ_MARK(0x8001E1EC);
ZZ_MARK(0x8001E1F0);
ZZ_MARK(0x8001E1F4);
ZZ_MARK(0x8001E1F8);
ZZ_MARK(0x8001E1FC);
ZZ_MARK(0x8001E200);
ZZ_MARK(0x8001E204);
ZZ_MARK(0x8001E208);
ZZ_MARK(0x8001E20C);
ZZ_MARK(0x8001E210);
ZZ_MARK_TARGET(0x8001E214,ZZ_1D860_9B4);
ZZ_MARK(0x8001E218);
ZZ_MARK(0x8001E21C);
ZZ_MARK(0x8001E220);
ZZ_MARK(0x8001E224);
ZZ_MARK(0x8001E228);
ZZ_MARK(0x8001E22C);
ZZ_MARK(0x8001E230);
ZZ_MARK_TARGET(0x8001E234,ZZ_1D860_9D4);
ZZ_MARK(0x8001E238);
ZZ_MARK(0x8001E23C);
ZZ_MARK(0x8001E240);
ZZ_MARK(0x8001E244);
ZZ_MARK(0x8001E248);
ZZ_MARK(0x8001E24C);
ZZ_MARK(0x8001E250);
ZZ_MARK(0x8001E254);
ZZ_MARK(0x8001E258);
ZZ_MARK(0x8001E25C);
ZZ_MARK_TARGET(0x8001E260,ZZ_1D860_A00);
ZZ_MARK(0x8001E264);
ZZ_MARK(0x8001E268);
ZZ_MARK(0x8001E26C);
ZZ_MARK(0x8001E270);
ZZ_MARK(0x8001E274);
ZZ_MARK(0x8001E278);
ZZ_MARK(0x8001E27C);
ZZ_MARK(0x8001E280);
ZZ_MARK(0x8001E284);
ZZ_MARK(0x8001E288);
ZZ_MARK(0x8001E28C);
ZZ_MARK(0x8001E290);
ZZ_MARK_TARGET(0x8001E294,ZZ_1D860_A34);
ZZ_MARK(0x8001E298);
ZZ_MARK(0x8001E29C);
ZZ_MARK(0x8001E2A0);
ZZ_MARK(0x8001E2A4);
ZZ_MARK_TARGET(0x8001E2A8,ZZ_1D860_A48);
ZZ_MARK(0x8001E2AC);
ZZ_MARK(0x8001E2B0);
ZZ_MARK(0x8001E2B4);
ZZ_MARK(0x8001E2B8);
ZZ_MARK(0x8001E2BC);
ZZ_MARK(0x8001E2C0);
ZZ_MARK(0x8001E2C4);
ZZ_MARK_TARGET(0x8001E2C8,ZZ_1D860_A68);
ZZ_MARK(0x8001E2CC);
ZZ_MARK(0x8001E2D0);
ZZ_MARK(0x8001E2D4);
ZZ_MARK(0x8001E2D8);
ZZ_MARK(0x8001E2DC);
ZZ_MARK_TARGET(0x8001E2E0,ZZ_1D860_A80);
ZZ_MARK(0x8001E2E4);
ZZ_MARK(0x8001E2E8);
ZZ_MARK(0x8001E2EC);
ZZ_MARK(0x8001E2F0);
ZZ_MARK(0x8001E2F4);
ZZ_MARK(0x8001E2F8);
ZZ_MARK(0x8001E2FC);
ZZ_MARK(0x8001E300);
ZZ_MARK(0x8001E304);
ZZ_MARK(0x8001E308);
ZZ_MARK(0x8001E30C);
ZZ_MARK_TARGET(0x8001E310,ZZ_1D860_AB0);
ZZ_MARK_TARGET(0x8001E314,ZZ_1D860_AB4);
ZZ_MARK(0x8001E318);
ZZ_MARK(0x8001E31C);
ZZ_MARK(0x8001E320);
ZZ_MARK(0x8001E324);
ZZ_MARK(0x8001E328);
ZZ_MARK(0x8001E32C);
ZZ_MARK(0x8001E330);
ZZ_MARK(0x8001E334);
ZZ_MARK(0x8001E338);
ZZ_MARK(0x8001E33C);
ZZ_MARK(0x8001E340);
ZZ_MARK(0x8001E344);
ZZ_MARK(0x8001E348);
ZZ_MARK(0x8001E34C);
ZZ_MARK(0x8001E350);
ZZ_MARK(0x8001E354);
ZZ_MARK(0x8001E358);
ZZ_MARK(0x8001E35C);
ZZ_MARK(0x8001E360);
ZZ_MARK(0x8001E364);
ZZ_MARK(0x8001E368);
ZZ_MARK_TARGET(0x8001E36C,ZZ_1D860_B0C);
ZZ_MARK(0x8001E370);
ZZ_MARK(0x8001E374);
ZZ_MARK(0x8001E378);
ZZ_MARK(0x8001E37C);
ZZ_MARK(0x8001E380);
ZZ_MARK(0x8001E384);
ZZ_MARK(0x8001E388);
ZZ_MARK(0x8001E38C);
ZZ_MARK(0x8001E390);
ZZ_MARK(0x8001E394);
ZZ_MARK(0x8001E398);
ZZ_MARK(0x8001E39C);
ZZ_MARK(0x8001E3A0);
ZZ_MARK(0x8001E3A4);
ZZ_MARK(0x8001E3A8);
ZZ_MARK(0x8001E3AC);
ZZ_MARK(0x8001E3B0);
ZZ_MARK(0x8001E3B4);
ZZ_MARK(0x8001E3B8);
ZZ_MARK(0x8001E3BC);
ZZ_MARK(0x8001E3C0);
ZZ_MARK(0x8001E3C4);
ZZ_MARK(0x8001E3C8);
ZZ_MARK(0x8001E3CC);
ZZ_MARK(0x8001E3D0);
ZZ_MARK(0x8001E3D4);
ZZ_MARK(0x8001E3D8);
ZZ_MARK(0x8001E3DC);
ZZ_MARK(0x8001E3E0);
ZZ_MARK(0x8001E3E4);
ZZ_MARK(0x8001E3E8);
ZZ_MARK(0x8001E3EC);
ZZ_MARK(0x8001E3F0);
ZZ_MARK(0x8001E3F4);
ZZ_MARK(0x8001E3F8);
ZZ_MARK(0x8001E3FC);
ZZ_MARK(0x8001E400);
ZZ_MARK(0x8001E404);
ZZ_MARK(0x8001E408);
ZZ_MARK(0x8001E40C);
ZZ_MARK(0x8001E410);
ZZ_MARK(0x8001E414);
ZZ_MARK(0x8001E418);
ZZ_MARK(0x8001E41C);
ZZ_MARK(0x8001E420);
ZZ_MARK(0x8001E424);
ZZ_MARK(0x8001E428);
ZZ_MARK(0x8001E42C);
ZZ_MARK(0x8001E430);
ZZ_MARK(0x8001E434);
ZZ_MARK(0x8001E438);
ZZ_MARK(0x8001E43C);
ZZ_MARK(0x8001E440);
ZZ_MARK(0x8001E444);
ZZ_MARK(0x8001E448);
ZZ_MARK(0x8001E44C);
ZZ_MARK(0x8001E450);
ZZ_MARK(0x8001E454);
ZZ_MARK(0x8001E458);
ZZ_MARK(0x8001E45C);
ZZ_MARK(0x8001E460);
ZZ_MARK(0x8001E464);
ZZ_MARK(0x8001E468);
ZZ_MARK(0x8001E46C);
ZZ_MARK(0x8001E470);
ZZ_MARK(0x8001E474);
ZZ_MARK(0x8001E478);
ZZ_MARK(0x8001E47C);
ZZ_MARK(0x8001E480);
ZZ_MARK(0x8001E484);
ZZ_MARK(0x8001E488);
ZZ_MARK(0x8001E48C);
ZZ_MARK(0x8001E490);
ZZ_MARK_TARGET(0x8001E494,ZZ_1D860_C34);
ZZ_MARK(0x8001E498);
ZZ_MARK(0x8001E49C);
ZZ_MARK(0x8001E4A0);
ZZ_MARK(0x8001E4A4);
ZZ_MARK(0x8001E4A8);
ZZ_MARK_TARGET(0x8001E4AC,ZZ_1D860_C4C);
ZZ_MARK(0x8001E4B0);
ZZ_MARK(0x8001E4B4);
ZZ_MARK(0x8001E4B8);
ZZ_MARK(0x8001E4BC);
ZZ_MARK_TARGET(0x8001E4C0,ZZ_1D860_C60);
ZZ_MARK(0x8001E4C4);
ZZ_MARK(0x8001E4C8);
ZZ_MARK(0x8001E4CC);
ZZ_MARK(0x8001E4D0);
ZZ_MARK(0x8001E4D4);
ZZ_MARK(0x8001E4D8);
ZZ_MARK(0x8001E4DC);
ZZ_MARK(0x8001E4E0);
ZZ_MARK(0x8001E4E4);
ZZ_MARK(0x8001E4E8);
ZZ_MARK(0x8001E4EC);
ZZ_MARK(0x8001E4F0);
ZZ_MARK(0x8001E4F4);
ZZ_MARK_TARGET(0x8001E4F8,ZZ_1D860_C98);
ZZ_MARK(0x8001E4FC);
ZZ_MARK(0x8001E500);
ZZ_MARK(0x8001E504);
ZZ_MARK(0x8001E508);
ZZ_MARK(0x8001E50C);
ZZ_MARK(0x8001E510);
ZZ_MARK(0x8001E514);
ZZ_MARK(0x8001E518);
ZZ_MARK(0x8001E51C);
ZZ_MARK(0x8001E520);
ZZ_MARK(0x8001E524);
ZZ_MARK(0x8001E528);
ZZ_MARK_TARGET(0x8001E52C,ZZ_1D860_CCC);
ZZ_MARK(0x8001E530);
ZZ_MARK(0x8001E534);
ZZ_MARK(0x8001E538);
ZZ_MARK(0x8001E53C);
ZZ_MARK(0x8001E540);
ZZ_MARK(0x8001E544);
ZZ_MARK(0x8001E548);
ZZ_MARK(0x8001E54C);
ZZ_MARK(0x8001E550);
ZZ_MARK(0x8001E554);
ZZ_MARK(0x8001E558);
ZZ_MARK(0x8001E55C);
ZZ_MARK(0x8001E560);
ZZ_MARK(0x8001E564);
ZZ_MARK(0x8001E568);
ZZ_MARK(0x8001E56C);
ZZ_MARK(0x8001E570);
ZZ_MARK_TARGET(0x8001E574,ZZ_1D860_D14);
ZZ_MARK(0x8001E578);
ZZ_MARK(0x8001E57C);
ZZ_MARK(0x8001E580);
ZZ_MARK(0x8001E584);
ZZ_MARK(0x8001E588);
ZZ_MARK(0x8001E58C);
ZZ_MARK(0x8001E590);
ZZ_MARK(0x8001E594);
ZZ_MARK(0x8001E598);
ZZ_MARK(0x8001E59C);
ZZ_MARK(0x8001E5A0);
ZZ_MARK(0x8001E5A4);
ZZ_MARK(0x8001E5A8);
ZZ_MARK(0x8001E5AC);
ZZ_MARK(0x8001E5B0);
ZZ_MARK(0x8001E5B4);
ZZ_MARK(0x8001E5B8);
ZZ_MARK(0x8001E5BC);
ZZ_MARK_TARGET(0x8001E5C0,ZZ_1D860_D60);
ZZ_MARK(0x8001E5C4);
ZZ_MARK(0x8001E5C8);
ZZ_MARK_TARGET(0x8001E5CC,ZZ_1D860_D6C);
ZZ_MARK(0x8001E5D0);
ZZ_MARK(0x8001E5D4);
ZZ_MARK(0x8001E5D8);
ZZ_MARK(0x8001E5DC);
ZZ_MARK(0x8001E5E0);
ZZ_MARK_TARGET(0x8001E5E4,ZZ_1D860_D84);
ZZ_MARK_TARGET(0x8001E5E8,ZZ_1D860_D88);
ZZ_MARK(0x8001E5EC);
ZZ_MARK_TARGET(0x8001E5F0,ZZ_1D860_D90);
ZZ_MARK(0x8001E5F4);
ZZ_MARK(0x8001E5F8);
ZZ_MARK(0x8001E5FC);
ZZ_MARK(0x8001E600);
ZZ_MARK(0x8001E604);
ZZ_MARK(0x8001E608);
ZZ_MARK(0x8001E60C);
ZZ_MARK(0x8001E610);
ZZ_MARK(0x8001E614);
ZZ_MARK(0x8001E618);
ZZ_MARK(0x8001E61C);
ZZ_MARK(0x8001E620);
