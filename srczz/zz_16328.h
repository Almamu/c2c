#ifdef ZZ_INCLUDE_CODE
ZZ_16328:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2428); //+ 0xFFFFF684
	SP -= 48;
	V0 = 0x2;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	EMU_Write32(SP + 40,S4); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 32,S2); //+ 0x20
	EMU_Write32(SP + 28,S1); //+ 0x1C
	if (V1 != V0)
	{
		EMU_Write32(SP + 24,S0); //+ 0x18
		ZZ_CLOCKCYCLES(11,0x8001635C);
		goto ZZ_16328_34;
	}
	EMU_Write32(SP + 24,S0); //+ 0x18
	RA = 0x8001635C; //ZZ_16328_34
	ZZ_CLOCKCYCLES(13,0x800366AC);
	goto ZZ_366AC;
ZZ_16328_34:
	S0 = 0x80060000;
	S0 += 14064;
	A0 = EMU_ReadU32(S0);
	A1 = 0x800;
	RA = 0x80016374; //ZZ_16328_4C
	A0 += 24;
	ZZ_CLOCKCYCLES(6,0x8003BEF4);
	goto ZZ_3BEF4;
ZZ_16328_4C:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14060); //+ 0x36EC
	A1 = 0x800;
	RA = 0x80016388; //ZZ_16328_60
	A0 += 24;
	ZZ_CLOCKCYCLES(5,0x8003BEF4);
	goto ZZ_3BEF4;
ZZ_16328_60:
	RA = 0x80016390; //ZZ_16328_68
	A0 = 0x1770;
	ZZ_CLOCKCYCLES(2,0x8001148C);
	goto ZZ_1148C;
ZZ_16328_68:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14052); //+ 0x36E4
	S1 = R0;
	if ((int32_t)V1 <= 0)
	{
		S3 = V0;
		ZZ_CLOCKCYCLES(5,0x80016404);
		goto ZZ_16328_DC;
	}
	S3 = V0;
	S4 = 0x28;
	S2 = S0 + 4;
	S0 = S2;
	ZZ_CLOCKCYCLES(8,0x800163B0);
ZZ_16328_88:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2428); //+ 0xFFFFF684
	A0 = 0x10000;
	A0 |= 0x6400;
	if (V0 != S4)
	{
		EMU_Write32(S0 + 8332,S3); //+ 0x208C
		ZZ_CLOCKCYCLES(6,0x800163D0);
		goto ZZ_16328_A8;
	}
	EMU_Write32(S0 + 8332,S3); //+ 0x208C
	A0 = 0x20000;
	A0 |= 0xC800;
	ZZ_CLOCKCYCLES(8,0x800163D0);
ZZ_16328_A8:
	RA = 0x800163D8; //ZZ_16328_B0
	ZZ_CLOCKCYCLES(2,0x8001148C);
	goto ZZ_1148C;
ZZ_16328_B0:
	if (V0)
	{
		EMU_Write32(S0 + 4,V0); //+ 0x4
		ZZ_CLOCKCYCLES(2,0x800163E8);
		goto ZZ_16328_C0;
	}
	EMU_Write32(S0 + 4,V0); //+ 0x4
	RA = 0x800163E8; //ZZ_16328_C0
	A0 = -15;
	ZZ_CLOCKCYCLES(4,0x8004940C);
	goto ZZ_4940C;
ZZ_16328_C0:
	RA = 0x800163F0; //ZZ_16328_C8
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x800164F4);
	goto ZZ_164F4;
ZZ_16328_C8:
	V0 = EMU_ReadU32(S2 - 16); //+ 0xFFFFFFF0
	S1 += 1;
	V0 = (int32_t)S1 < (int32_t)V0;
	if (V0)
	{
		S0 += 8340;
		ZZ_CLOCKCYCLES(5,0x800163B0);
		goto ZZ_16328_88;
	}
	S0 += 8340;
	ZZ_CLOCKCYCLES(5,0x80016404);
ZZ_16328_DC:
	V0 = -255;
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S4 = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(10);
	ZZ_JUMPREGISTER(0x80014FC8,ZZ_14D6C_25C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80016328,ZZ_16328);
ZZ_MARK(0x8001632C);
ZZ_MARK(0x80016330);
ZZ_MARK(0x80016334);
ZZ_MARK(0x80016338);
ZZ_MARK(0x8001633C);
ZZ_MARK(0x80016340);
ZZ_MARK(0x80016344);
ZZ_MARK(0x80016348);
ZZ_MARK(0x8001634C);
ZZ_MARK(0x80016350);
ZZ_MARK(0x80016354);
ZZ_MARK(0x80016358);
ZZ_MARK_TARGET(0x8001635C,ZZ_16328_34);
ZZ_MARK(0x80016360);
ZZ_MARK(0x80016364);
ZZ_MARK(0x80016368);
ZZ_MARK(0x8001636C);
ZZ_MARK(0x80016370);
ZZ_MARK_TARGET(0x80016374,ZZ_16328_4C);
ZZ_MARK(0x80016378);
ZZ_MARK(0x8001637C);
ZZ_MARK(0x80016380);
ZZ_MARK(0x80016384);
ZZ_MARK_TARGET(0x80016388,ZZ_16328_60);
ZZ_MARK(0x8001638C);
ZZ_MARK_TARGET(0x80016390,ZZ_16328_68);
ZZ_MARK(0x80016394);
ZZ_MARK(0x80016398);
ZZ_MARK(0x8001639C);
ZZ_MARK(0x800163A0);
ZZ_MARK(0x800163A4);
ZZ_MARK(0x800163A8);
ZZ_MARK(0x800163AC);
ZZ_MARK_TARGET(0x800163B0,ZZ_16328_88);
ZZ_MARK(0x800163B4);
ZZ_MARK(0x800163B8);
ZZ_MARK(0x800163BC);
ZZ_MARK(0x800163C0);
ZZ_MARK(0x800163C4);
ZZ_MARK(0x800163C8);
ZZ_MARK(0x800163CC);
ZZ_MARK_TARGET(0x800163D0,ZZ_16328_A8);
ZZ_MARK(0x800163D4);
ZZ_MARK_TARGET(0x800163D8,ZZ_16328_B0);
ZZ_MARK(0x800163DC);
ZZ_MARK(0x800163E0);
ZZ_MARK(0x800163E4);
ZZ_MARK_TARGET(0x800163E8,ZZ_16328_C0);
ZZ_MARK(0x800163EC);
ZZ_MARK_TARGET(0x800163F0,ZZ_16328_C8);
ZZ_MARK(0x800163F4);
ZZ_MARK(0x800163F8);
ZZ_MARK(0x800163FC);
ZZ_MARK(0x80016400);
ZZ_MARK_TARGET(0x80016404,ZZ_16328_DC);
ZZ_MARK(0x80016408);
ZZ_MARK(0x8001640C);
ZZ_MARK(0x80016410);
ZZ_MARK(0x80016414);
ZZ_MARK(0x80016418);
ZZ_MARK(0x8001641C);
ZZ_MARK(0x80016420);
ZZ_MARK(0x80016424);
ZZ_MARK(0x80016428);
