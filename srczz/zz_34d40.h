#ifdef ZZ_INCLUDE_CODE
ZZ_34D40:
	SP -= 24;
	A0 = (int32_t)A0 < (int32_t)A1;
	if (!A0)
	{
		EMU_Write32(SP + 16,RA); //+ 0x10
		ZZ_CLOCKCYCLES(4,0x80034D58);
		goto ZZ_34D40_18;
	}
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = R0;
	ZZ_CLOCKCYCLES(6,0x80034D64);
	goto ZZ_34D40_24;
ZZ_34D40_18:
	ZZ_JUMPREGISTER_BEGIN(A2);
	RA = 0x80034D60; //ZZ_34D40_20
	A0 = A3;
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (A2,80034D58)
	ZZ_JUMPREGISTER_END();
ZZ_34D40_20:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x80034D64);
ZZ_34D40_24:
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(4);
	ZZ_JUMPREGISTER(0x80035058,ZZ_34F00_158);
	ZZ_JUMPREGISTER(0x800358D8,ZZ_3578C_14C);
	ZZ_JUMPREGISTER(0x80035AF0,ZZ_3578C_364);
	ZZ_JUMPREGISTER(0x80035A64,ZZ_3578C_2D8);
	ZZ_JUMPREGISTER(0x800350A4,ZZ_34F00_1A4);
	ZZ_JUMPREGISTER(0x80035BF8,ZZ_3578C_46C);
	ZZ_JUMPREGISTER(0x80035C4C,ZZ_3578C_4C0);
	ZZ_JUMPREGISTER(0x8003525C,ZZ_34F00_35C);
	ZZ_JUMPREGISTER(0x8003530C,ZZ_34F00_40C);
	ZZ_JUMPREGISTER(0x80035CBC,ZZ_3578C_530);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80034D40,0x80034D58,ZZ_34D40);
ZZ_MARK_TARGET(0x80034D58,0x80034D60,ZZ_34D40_18);
ZZ_MARK_TARGET(0x80034D60,0x80034D64,ZZ_34D40_20);
ZZ_MARK_TARGET(0x80034D64,0x80034D74,ZZ_34D40_24);
