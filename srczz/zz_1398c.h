#ifdef ZZ_INCLUDE_CODE
ZZ_1398C:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = 0xF;
	A0 = 0x1;
	V1 = 0x80060000;
	V1 += 12952;
	EMU_Write32(SP + 20,RA); //+ 0x14
	ZZ_CLOCKCYCLES(7,0x800139A8);
ZZ_1398C_1C:
	V0 = EMU_ReadS16(V1 + 4); //+ 0x4
	if (V0 == A0)
	{
		ZZ_CLOCKCYCLES(4,0x80013A3C);
		goto ZZ_1398C_B0;
	}
	S0 -= 1;
	if ((int32_t)S0 >= 0)
	{
		V1 -= 44;
		ZZ_CLOCKCYCLES(7,0x800139A8);
		goto ZZ_1398C_1C;
	}
	V1 -= 44;
	S0 = 0xF;
	A0 = 0x15;
	V1 = 0x294;
	ZZ_CLOCKCYCLES(10,0x800139D0);
ZZ_1398C_44:
	AT = 0x80060000;
	AT += V1;
	V0 = EMU_ReadS16(AT + 12296); //+ 0x3008
	if (V0 == A0)
	{
		ZZ_CLOCKCYCLES(6,0x80013A3C);
		goto ZZ_1398C_B0;
	}
	S0 -= 1;
	if ((int32_t)S0 >= 0)
	{
		V1 -= 44;
		ZZ_CLOCKCYCLES(9,0x800139D0);
		goto ZZ_1398C_44;
	}
	V1 -= 44;
	S0 = 0xF;
	A0 = 0x80060000;
	A0 += 12952;
	V1 = 0x294;
	ZZ_CLOCKCYCLES(13,0x80013A04);
ZZ_1398C_78:
	V0 = EMU_ReadU16(A0 + 4); //+ 0x4
	V0 -= 20;
	V0 = V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80013A44);
		goto ZZ_1398C_B8;
	}
	AT = 0x80060000;
	AT += V1;
	V0 = EMU_ReadS8(AT + 12307); //+ 0x3013
	if (V0)
	{
		A0 -= 44;
		ZZ_CLOCKCYCLES(12,0x80013A48);
		goto ZZ_1398C_BC;
	}
	A0 -= 44;
	RA = 0x80013A3C; //ZZ_1398C_B0
	A0 = S0;
	ZZ_CLOCKCYCLES(14,0x80013A6C);
	goto ZZ_13A6C;
ZZ_1398C_B0:
	V0 = S0;
	ZZ_CLOCKCYCLES(2,0x80013A58);
	goto ZZ_1398C_CC;
ZZ_1398C_B8:
	A0 -= 44;
	ZZ_CLOCKCYCLES(1,0x80013A48);
ZZ_1398C_BC:
	S0 -= 1;
	if ((int32_t)S0 >= 0)
	{
		V1 -= 44;
		ZZ_CLOCKCYCLES(3,0x80013A04);
		goto ZZ_1398C_78;
	}
	V1 -= 44;
	V0 = -12;
	ZZ_CLOCKCYCLES(4,0x80013A58);
ZZ_1398C_CC:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80012838,ZZ_126BC_17C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001398C,ZZ_1398C);
ZZ_MARK(0x80013990);
ZZ_MARK(0x80013994);
ZZ_MARK(0x80013998);
ZZ_MARK(0x8001399C);
ZZ_MARK(0x800139A0);
ZZ_MARK(0x800139A4);
ZZ_MARK_TARGET(0x800139A8,ZZ_1398C_1C);
ZZ_MARK(0x800139AC);
ZZ_MARK(0x800139B0);
ZZ_MARK(0x800139B4);
ZZ_MARK(0x800139B8);
ZZ_MARK(0x800139BC);
ZZ_MARK(0x800139C0);
ZZ_MARK(0x800139C4);
ZZ_MARK(0x800139C8);
ZZ_MARK(0x800139CC);
ZZ_MARK_TARGET(0x800139D0,ZZ_1398C_44);
ZZ_MARK(0x800139D4);
ZZ_MARK(0x800139D8);
ZZ_MARK(0x800139DC);
ZZ_MARK(0x800139E0);
ZZ_MARK(0x800139E4);
ZZ_MARK(0x800139E8);
ZZ_MARK(0x800139EC);
ZZ_MARK(0x800139F0);
ZZ_MARK(0x800139F4);
ZZ_MARK(0x800139F8);
ZZ_MARK(0x800139FC);
ZZ_MARK(0x80013A00);
ZZ_MARK_TARGET(0x80013A04,ZZ_1398C_78);
ZZ_MARK(0x80013A08);
ZZ_MARK(0x80013A0C);
ZZ_MARK(0x80013A10);
ZZ_MARK(0x80013A14);
ZZ_MARK(0x80013A18);
ZZ_MARK(0x80013A1C);
ZZ_MARK(0x80013A20);
ZZ_MARK(0x80013A24);
ZZ_MARK(0x80013A28);
ZZ_MARK(0x80013A2C);
ZZ_MARK(0x80013A30);
ZZ_MARK(0x80013A34);
ZZ_MARK(0x80013A38);
ZZ_MARK_TARGET(0x80013A3C,ZZ_1398C_B0);
ZZ_MARK(0x80013A40);
ZZ_MARK_TARGET(0x80013A44,ZZ_1398C_B8);
ZZ_MARK_TARGET(0x80013A48,ZZ_1398C_BC);
ZZ_MARK(0x80013A4C);
ZZ_MARK(0x80013A50);
ZZ_MARK(0x80013A54);
ZZ_MARK_TARGET(0x80013A58,ZZ_1398C_CC);
ZZ_MARK(0x80013A5C);
ZZ_MARK(0x80013A60);
ZZ_MARK(0x80013A64);
ZZ_MARK(0x80013A68);
