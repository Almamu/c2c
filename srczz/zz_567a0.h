#ifdef ZZ_INCLUDE_CODE
ZZ_567A0:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	EMU_Write32(SP + 20,RA); //+ 0x14
	RA = 0x800567B4; //ZZ_567A0_14
	S0 = A0;
	ZZ_CLOCKCYCLES(5,0x8004B468);
	goto ZZ_4B468;
ZZ_567A0_14:
	A0 = V0;
	V0 = S0 & 0x1000;
	if (!V0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(4,0x800567E0);
		goto ZZ_567A0_40;
	}
	V0 = 1;
	AT = 0x80060000;
	EMU_Write32(AT - 3468,V0); //+ 0xFFFFF274
	V0 = S0 & 0xFFF;
	AT = 0x80060000;
	EMU_Write32(AT - 3472,V0); //+ 0xFFFFF270
	ZZ_CLOCKCYCLES(11,0x800567F0);
	goto ZZ_567A0_50;
ZZ_567A0_40:
	AT = 0x80060000;
	EMU_Write32(AT - 3468,R0); //+ 0xFFFFF274
	AT = 0x80060000;
	EMU_Write32(AT - 3472,S0); //+ 0xFFFFF270
	ZZ_CLOCKCYCLES(4,0x800567F0);
ZZ_567A0_50:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 3472); //+ 0xFFFFF270
	V0 = (int32_t)V1 < 6;
	if (!V0)
	{
		V0 = V1 < 6;
		ZZ_CLOCKCYCLES(6,0x800568F0);
		goto ZZ_567A0_150;
	}
	V0 = V1 < 6;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(8,0x800568DC);
		goto ZZ_567A0_13C;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 4504); //+ 0x1198
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x800568B8,ZZ_567A0_118);
	ZZ_JUMPREGISTER(0x80056850,ZZ_567A0_B0);
	ZZ_JUMPREGISTER(0x8005688C,ZZ_567A0_EC);
	ZZ_JUMPREGISTER(0x80056878,ZZ_567A0_D8);
	ZZ_JUMPREGISTER(0x80056828,ZZ_567A0_88);
	ZZ_JUMPREGISTER(0x800568A0,ZZ_567A0_100);
	ZZ_JUMPREGISTER_END();
ZZ_567A0_88:
	V1 = 50;
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V1); //+ 0xFFFFB454
	V0 = 1;
	if (A0 == V0)
	{
		V0 = 5;
		ZZ_CLOCKCYCLES(6,0x80056868);
		goto ZZ_567A0_C8;
	}
	V0 = 5;
	AT = 0x80060000;
	EMU_Write32(AT - 3472,V1); //+ 0xFFFFF270
	ZZ_CLOCKCYCLES(10,0x800568F8);
	goto ZZ_567A0_158;
ZZ_567A0_B0:
	V0 = 60;
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V0); //+ 0xFFFFB454
	if (A0)
	{
		ZZ_CLOCKCYCLES(5,0x80056868);
		goto ZZ_567A0_C8;
	}
	V0 = 5;
	ZZ_CLOCKCYCLES(6,0x80056868);
ZZ_567A0_C8:
	AT = 0x80060000;
	EMU_Write32(AT - 3472,V0); //+ 0xFFFFF270
	ZZ_CLOCKCYCLES(4,0x800568F8);
	goto ZZ_567A0_158;
ZZ_567A0_D8:
	V0 = 120;
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V0); //+ 0xFFFFB454
	ZZ_CLOCKCYCLES(5,0x800568F8);
	goto ZZ_567A0_158;
ZZ_567A0_EC:
	V0 = 240;
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V0); //+ 0xFFFFB454
	ZZ_CLOCKCYCLES(5,0x800568F8);
	goto ZZ_567A0_158;
ZZ_567A0_100:
	if (!A0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(2,0x800568DC);
		goto ZZ_567A0_13C;
	}
	V0 = 1;
	if (A0 == V0)
	{
		V0 = 50;
		ZZ_CLOCKCYCLES(4,0x800568CC);
		goto ZZ_567A0_12C;
	}
	V0 = 50;
	V0 = 60;
	ZZ_CLOCKCYCLES(6,0x800568E0);
	goto ZZ_567A0_140;
ZZ_567A0_118:
	if (!A0)
	{
		V0 = 1;
		ZZ_CLOCKCYCLES(2,0x800568DC);
		goto ZZ_567A0_13C;
	}
	V0 = 1;
	if (A0 != V0)
	{
		V0 = 60;
		ZZ_CLOCKCYCLES(4,0x800568E0);
		goto ZZ_567A0_140;
	}
	V0 = 60;
	V0 = 50;
	ZZ_CLOCKCYCLES(5,0x800568CC);
ZZ_567A0_12C:
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V0); //+ 0xFFFFB454
	ZZ_CLOCKCYCLES(4,0x800568F8);
	goto ZZ_567A0_158;
ZZ_567A0_13C:
	V0 = 60;
	ZZ_CLOCKCYCLES(1,0x800568E0);
ZZ_567A0_140:
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V0); //+ 0xFFFFB454
	ZZ_CLOCKCYCLES(4,0x800568F8);
	goto ZZ_567A0_158;
ZZ_567A0_150:
	AT = 0x80070000;
	EMU_Write32(AT - 19372,V1); //+ 0xFFFFB454
	ZZ_CLOCKCYCLES(2,0x800568F8);
ZZ_567A0_158:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x8003404C,ZZ_34034_18);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800567A0,ZZ_567A0);
ZZ_MARK(0x800567A4);
ZZ_MARK(0x800567A8);
ZZ_MARK(0x800567AC);
ZZ_MARK(0x800567B0);
ZZ_MARK_TARGET(0x800567B4,ZZ_567A0_14);
ZZ_MARK(0x800567B8);
ZZ_MARK(0x800567BC);
ZZ_MARK(0x800567C0);
ZZ_MARK(0x800567C4);
ZZ_MARK(0x800567C8);
ZZ_MARK(0x800567CC);
ZZ_MARK(0x800567D0);
ZZ_MARK(0x800567D4);
ZZ_MARK(0x800567D8);
ZZ_MARK(0x800567DC);
ZZ_MARK_TARGET(0x800567E0,ZZ_567A0_40);
ZZ_MARK(0x800567E4);
ZZ_MARK(0x800567E8);
ZZ_MARK(0x800567EC);
ZZ_MARK_TARGET(0x800567F0,ZZ_567A0_50);
ZZ_MARK(0x800567F4);
ZZ_MARK(0x800567F8);
ZZ_MARK(0x800567FC);
ZZ_MARK(0x80056800);
ZZ_MARK(0x80056804);
ZZ_MARK(0x80056808);
ZZ_MARK(0x8005680C);
ZZ_MARK(0x80056810);
ZZ_MARK(0x80056814);
ZZ_MARK(0x80056818);
ZZ_MARK(0x8005681C);
ZZ_MARK(0x80056820);
ZZ_MARK(0x80056824);
ZZ_MARK_TARGET(0x80056828,ZZ_567A0_88);
ZZ_MARK(0x8005682C);
ZZ_MARK(0x80056830);
ZZ_MARK(0x80056834);
ZZ_MARK(0x80056838);
ZZ_MARK(0x8005683C);
ZZ_MARK(0x80056840);
ZZ_MARK(0x80056844);
ZZ_MARK(0x80056848);
ZZ_MARK(0x8005684C);
ZZ_MARK_TARGET(0x80056850,ZZ_567A0_B0);
ZZ_MARK(0x80056854);
ZZ_MARK(0x80056858);
ZZ_MARK(0x8005685C);
ZZ_MARK(0x80056860);
ZZ_MARK(0x80056864);
ZZ_MARK_TARGET(0x80056868,ZZ_567A0_C8);
ZZ_MARK(0x8005686C);
ZZ_MARK(0x80056870);
ZZ_MARK(0x80056874);
ZZ_MARK_TARGET(0x80056878,ZZ_567A0_D8);
ZZ_MARK(0x8005687C);
ZZ_MARK(0x80056880);
ZZ_MARK(0x80056884);
ZZ_MARK(0x80056888);
ZZ_MARK_TARGET(0x8005688C,ZZ_567A0_EC);
ZZ_MARK(0x80056890);
ZZ_MARK(0x80056894);
ZZ_MARK(0x80056898);
ZZ_MARK(0x8005689C);
ZZ_MARK_TARGET(0x800568A0,ZZ_567A0_100);
ZZ_MARK(0x800568A4);
ZZ_MARK(0x800568A8);
ZZ_MARK(0x800568AC);
ZZ_MARK(0x800568B0);
ZZ_MARK(0x800568B4);
ZZ_MARK_TARGET(0x800568B8,ZZ_567A0_118);
ZZ_MARK(0x800568BC);
ZZ_MARK(0x800568C0);
ZZ_MARK(0x800568C4);
ZZ_MARK(0x800568C8);
ZZ_MARK_TARGET(0x800568CC,ZZ_567A0_12C);
ZZ_MARK(0x800568D0);
ZZ_MARK(0x800568D4);
ZZ_MARK(0x800568D8);
ZZ_MARK_TARGET(0x800568DC,ZZ_567A0_13C);
ZZ_MARK_TARGET(0x800568E0,ZZ_567A0_140);
ZZ_MARK(0x800568E4);
ZZ_MARK(0x800568E8);
ZZ_MARK(0x800568EC);
ZZ_MARK_TARGET(0x800568F0,ZZ_567A0_150);
ZZ_MARK(0x800568F4);
ZZ_MARK_TARGET(0x800568F8,ZZ_567A0_158);
ZZ_MARK(0x800568FC);
ZZ_MARK(0x80056900);
ZZ_MARK(0x80056904);
ZZ_MARK(0x80056908);
