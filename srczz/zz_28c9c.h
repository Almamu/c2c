#ifdef ZZ_INCLUDE_CODE
ZZ_28C9C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	SP -= 120;
	EMU_Write32(SP + 112,S6); //+ 0x70
	S6 = A1;
	EMU_Write32(SP + 116,RA); //+ 0x74
	EMU_Write32(SP + 108,S5); //+ 0x6C
	EMU_Write32(SP + 104,S4); //+ 0x68
	EMU_Write32(SP + 100,S3); //+ 0x64
	EMU_Write32(SP + 96,S2); //+ 0x60
	EMU_Write32(SP + 92,S1); //+ 0x5C
	EMU_Write32(SP + 88,S0); //+ 0x58
	V1 = EMU_ReadU32(S6);
	A0 = EMU_ReadU32(S6 + 4); //+ 0x4
	A1 = EMU_ReadU32(S6 + 8); //+ 0x8
	EMU_Write32(SP + 32,V1); //+ 0x20
	EMU_Write32(SP + 36,A0); //+ 0x24
	EMU_Write32(SP + 40,A1); //+ 0x28
	S5 = R0;
	S4 = EMU_ReadU32(V0 + 16); //+ 0x10
	ZZ_CLOCKCYCLES(20,0x80028CEC);
ZZ_28C9C_50:
	V0 = EMU_ReadU32(S4 + 400); //+ 0x190
	if ((int32_t)V0 <= 0)
	{
		S3 = R0;
		ZZ_CLOCKCYCLES(5,0x80028D5C);
		goto ZZ_28C9C_C0;
	}
	S3 = R0;
	S2 = 0x194;
	S1 = S4;
	ZZ_CLOCKCYCLES(7,0x80028D08);
ZZ_28C9C_6C:
	V0 = EMU_ReadU32(S1 + 436); //+ 0x1B4
	V0 &= 0x4;
	if (!V0)
	{
		A0 = S4 + S2;
		ZZ_CLOCKCYCLES(5,0x80028D40);
		goto ZZ_28C9C_A4;
	}
	A0 = S4 + S2;
	A1 = 0x1;
	RA = 0x80028D28; //ZZ_28C9C_8C
	A2 = R0;
	ZZ_CLOCKCYCLES(8,0x80014364);
	goto ZZ_14364;
ZZ_28C9C_8C:
	S0 = V0;
	A0 = S0;
	RA = 0x80028D38; //ZZ_28C9C_9C
	A1 = S6;
	ZZ_CLOCKCYCLES(4,0x80031080);
	goto ZZ_31080;
ZZ_28C9C_9C:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x80028D70);
		goto ZZ_28C9C_D4;
	}
	ZZ_CLOCKCYCLES(2,0x80028D40);
ZZ_28C9C_A4:
	V0 = EMU_ReadU32(S4 + 400); //+ 0x190
	S2 += 4;
	S3 += 1;
	V0 = (int32_t)S3 < (int32_t)V0;
	if (V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(6,0x80028D08);
		goto ZZ_28C9C_6C;
	}
	S1 += 4;
	ZZ_CLOCKCYCLES(6,0x80028D58);
ZZ_28C9C_BC:
	V0 = EMU_ReadU32(S4 + 400); //+ 0x190
	ZZ_CLOCKCYCLES(1,0x80028D5C);
ZZ_28C9C_C0:
	if (S3 != V0)
	{
		ZZ_CLOCKCYCLES(3,0x80028D88);
		goto ZZ_28C9C_EC;
	}
	S5 = R0;
	ZZ_CLOCKCYCLES(5,0x80028D90);
	goto ZZ_28C9C_F4;
ZZ_28C9C_D4:
	A0 = EMU_ReadU32(S0 + 20); //+ 0x14
	A1 = S6;
	RA = 0x80028D80; //ZZ_28C9C_E4
	A2 = 0x9;
	ZZ_CLOCKCYCLES(4,0x8003DC98);
	goto ZZ_3DC98;
ZZ_28C9C_E4:
	S5 = V0;
	ZZ_CLOCKCYCLES(2,0x80028D58);
	goto ZZ_28C9C_BC;
ZZ_28C9C_EC:
	if (!S5)
	{
		ZZ_CLOCKCYCLES(2,0x80028CEC);
		goto ZZ_28C9C_50;
	}
	ZZ_CLOCKCYCLES(2,0x80028D90);
ZZ_28C9C_F4:
	A3 = 0x80070000;
	A3 -= 12796;
	A2 = EMU_ReadU32(A3);
	if ((int32_t)A2 <= 0)
	{
		S2 = 0xC4650000;
		ZZ_CLOCKCYCLES(6,0x80028E8C);
		goto ZZ_28C9C_1F0;
	}
	S2 = 0xC4650000;
	S2 |= 0x3601;
	V1 = EMU_ReadU32(SP + 32); //+ 0x20
	A0 = EMU_ReadU32(SP + 40); //+ 0x28
	A1 = EMU_ReadU32(SP + 36); //+ 0x24
	S3 = R0;
	S4 = R0;
	V0 = V1 - 20000;
	V1 += 20000;
	EMU_Write32(SP + 48,V0); //+ 0x30
	V0 = A0 - 20000;
	A0 += 20000;
	EMU_Write32(SP + 60,V1); //+ 0x3C
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 68,A0); //+ 0x44
	EMU_Write32(SP + 64,A1); //+ 0x40
	if ((int32_t)A2 <= 0)
	{
		EMU_Write32(SP + 52,A1); //+ 0x34
		ZZ_CLOCKCYCLES(23,0x80028E60);
		goto ZZ_28C9C_1C4;
	}
	EMU_Write32(SP + 52,A1); //+ 0x34
	S1 = A3 + 656;
	ZZ_CLOCKCYCLES(24,0x80028DF0);
ZZ_28C9C_154:
	A0 = EMU_ReadU32(S1);
	S0 = EMU_ReadU32(A0 + 4); //+ 0x4
	V0 = EMU_ReadU32(S0 + 172); //+ 0xAC
	V1 = 0x20000;
	V0 &= V1;
	if (!V0)
	{
		A1 = SP + 48;
		ZZ_CLOCKCYCLES(9,0x80028E48);
		goto ZZ_28C9C_1AC;
	}
	A1 = SP + 48;
	EMU_Write32(SP + 16,S2); //+ 0x10
	V0 = EMU_ReadU32(SP + 36); //+ 0x24
	A2 = 0x1;
	A3 = R0;
	EMU_Write32(SP + 24,R0); //+ 0x18
	RA = 0x80028E30; //ZZ_28C9C_194
	EMU_Write32(SP + 20,V0); //+ 0x14
	ZZ_CLOCKCYCLES(16,0x8002ABE4);
	goto ZZ_2ABE4;
ZZ_28C9C_194:
	V1 = 0xC4650000;
	V1 |= 0x3601;
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(4,0x80028E48);
		goto ZZ_28C9C_1AC;
	}
	S4 = S0;
	S2 = V0;
	ZZ_CLOCKCYCLES(6,0x80028E48);
ZZ_28C9C_1AC:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12796); //+ 0xFFFFCE04
	S3 += 1;
	V0 = (int32_t)S3 < (int32_t)V0;
	if (V0)
	{
		S1 += 4;
		ZZ_CLOCKCYCLES(6,0x80028DF0);
		goto ZZ_28C9C_154;
	}
	S1 += 4;
	ZZ_CLOCKCYCLES(6,0x80028E60);
ZZ_28C9C_1C4:
	if (!S4)
	{
		V0 = S5;
		ZZ_CLOCKCYCLES(2,0x80028E90);
		goto ZZ_28C9C_1F4;
	}
	V0 = S5;
	if (!S5)
	{
		ZZ_CLOCKCYCLES(4,0x80028E84);
		goto ZZ_28C9C_1E8;
	}
	V0 = EMU_ReadU32(S6 + 4); //+ 0x4
	V0 = (int32_t)S2 < (int32_t)V0;
	if (V0)
	{
		V0 = S5;
		ZZ_CLOCKCYCLES(9,0x80028E90);
		goto ZZ_28C9C_1F4;
	}
	V0 = S5;
	ZZ_CLOCKCYCLES(9,0x80028E84);
ZZ_28C9C_1E8:
	EMU_Write32(S6 + 4,S2); //+ 0x4
	S5 = S4;
	ZZ_CLOCKCYCLES(2,0x80028E8C);
ZZ_28C9C_1F0:
	V0 = S5;
	ZZ_CLOCKCYCLES(1,0x80028E90);
ZZ_28C9C_1F4:
	RA = EMU_ReadU32(SP + 116); //+ 0x74
	S6 = EMU_ReadU32(SP + 112); //+ 0x70
	S5 = EMU_ReadU32(SP + 108); //+ 0x6C
	S4 = EMU_ReadU32(SP + 104); //+ 0x68
	S3 = EMU_ReadU32(SP + 100); //+ 0x64
	S2 = EMU_ReadU32(SP + 96); //+ 0x60
	S1 = EMU_ReadU32(SP + 92); //+ 0x5C
	S0 = EMU_ReadU32(SP + 88); //+ 0x58
	SP += 120;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x80038B78,ZZ_38998_1E0);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80028C9C,ZZ_28C9C);
ZZ_MARK(0x80028CA0);
ZZ_MARK(0x80028CA4);
ZZ_MARK(0x80028CA8);
ZZ_MARK(0x80028CAC);
ZZ_MARK(0x80028CB0);
ZZ_MARK(0x80028CB4);
ZZ_MARK(0x80028CB8);
ZZ_MARK(0x80028CBC);
ZZ_MARK(0x80028CC0);
ZZ_MARK(0x80028CC4);
ZZ_MARK(0x80028CC8);
ZZ_MARK(0x80028CCC);
ZZ_MARK(0x80028CD0);
ZZ_MARK(0x80028CD4);
ZZ_MARK(0x80028CD8);
ZZ_MARK(0x80028CDC);
ZZ_MARK(0x80028CE0);
ZZ_MARK(0x80028CE4);
ZZ_MARK(0x80028CE8);
ZZ_MARK_TARGET(0x80028CEC,ZZ_28C9C_50);
ZZ_MARK(0x80028CF0);
ZZ_MARK(0x80028CF4);
ZZ_MARK(0x80028CF8);
ZZ_MARK(0x80028CFC);
ZZ_MARK(0x80028D00);
ZZ_MARK(0x80028D04);
ZZ_MARK_TARGET(0x80028D08,ZZ_28C9C_6C);
ZZ_MARK(0x80028D0C);
ZZ_MARK(0x80028D10);
ZZ_MARK(0x80028D14);
ZZ_MARK(0x80028D18);
ZZ_MARK(0x80028D1C);
ZZ_MARK(0x80028D20);
ZZ_MARK(0x80028D24);
ZZ_MARK_TARGET(0x80028D28,ZZ_28C9C_8C);
ZZ_MARK(0x80028D2C);
ZZ_MARK(0x80028D30);
ZZ_MARK(0x80028D34);
ZZ_MARK_TARGET(0x80028D38,ZZ_28C9C_9C);
ZZ_MARK(0x80028D3C);
ZZ_MARK_TARGET(0x80028D40,ZZ_28C9C_A4);
ZZ_MARK(0x80028D44);
ZZ_MARK(0x80028D48);
ZZ_MARK(0x80028D4C);
ZZ_MARK(0x80028D50);
ZZ_MARK(0x80028D54);
ZZ_MARK_TARGET(0x80028D58,ZZ_28C9C_BC);
ZZ_MARK_TARGET(0x80028D5C,ZZ_28C9C_C0);
ZZ_MARK(0x80028D60);
ZZ_MARK(0x80028D64);
ZZ_MARK(0x80028D68);
ZZ_MARK(0x80028D6C);
ZZ_MARK_TARGET(0x80028D70,ZZ_28C9C_D4);
ZZ_MARK(0x80028D74);
ZZ_MARK(0x80028D78);
ZZ_MARK(0x80028D7C);
ZZ_MARK_TARGET(0x80028D80,ZZ_28C9C_E4);
ZZ_MARK(0x80028D84);
ZZ_MARK_TARGET(0x80028D88,ZZ_28C9C_EC);
ZZ_MARK(0x80028D8C);
ZZ_MARK_TARGET(0x80028D90,ZZ_28C9C_F4);
ZZ_MARK(0x80028D94);
ZZ_MARK(0x80028D98);
ZZ_MARK(0x80028D9C);
ZZ_MARK(0x80028DA0);
ZZ_MARK(0x80028DA4);
ZZ_MARK(0x80028DA8);
ZZ_MARK(0x80028DAC);
ZZ_MARK(0x80028DB0);
ZZ_MARK(0x80028DB4);
ZZ_MARK(0x80028DB8);
ZZ_MARK(0x80028DBC);
ZZ_MARK(0x80028DC0);
ZZ_MARK(0x80028DC4);
ZZ_MARK(0x80028DC8);
ZZ_MARK(0x80028DCC);
ZZ_MARK(0x80028DD0);
ZZ_MARK(0x80028DD4);
ZZ_MARK(0x80028DD8);
ZZ_MARK(0x80028DDC);
ZZ_MARK(0x80028DE0);
ZZ_MARK(0x80028DE4);
ZZ_MARK(0x80028DE8);
ZZ_MARK(0x80028DEC);
ZZ_MARK_TARGET(0x80028DF0,ZZ_28C9C_154);
ZZ_MARK(0x80028DF4);
ZZ_MARK(0x80028DF8);
ZZ_MARK(0x80028DFC);
ZZ_MARK(0x80028E00);
ZZ_MARK(0x80028E04);
ZZ_MARK(0x80028E08);
ZZ_MARK(0x80028E0C);
ZZ_MARK(0x80028E10);
ZZ_MARK(0x80028E14);
ZZ_MARK(0x80028E18);
ZZ_MARK(0x80028E1C);
ZZ_MARK(0x80028E20);
ZZ_MARK(0x80028E24);
ZZ_MARK(0x80028E28);
ZZ_MARK(0x80028E2C);
ZZ_MARK_TARGET(0x80028E30,ZZ_28C9C_194);
ZZ_MARK(0x80028E34);
ZZ_MARK(0x80028E38);
ZZ_MARK(0x80028E3C);
ZZ_MARK(0x80028E40);
ZZ_MARK(0x80028E44);
ZZ_MARK_TARGET(0x80028E48,ZZ_28C9C_1AC);
ZZ_MARK(0x80028E4C);
ZZ_MARK(0x80028E50);
ZZ_MARK(0x80028E54);
ZZ_MARK(0x80028E58);
ZZ_MARK(0x80028E5C);
ZZ_MARK_TARGET(0x80028E60,ZZ_28C9C_1C4);
ZZ_MARK(0x80028E64);
ZZ_MARK(0x80028E68);
ZZ_MARK(0x80028E6C);
ZZ_MARK(0x80028E70);
ZZ_MARK(0x80028E74);
ZZ_MARK(0x80028E78);
ZZ_MARK(0x80028E7C);
ZZ_MARK(0x80028E80);
ZZ_MARK_TARGET(0x80028E84,ZZ_28C9C_1E8);
ZZ_MARK(0x80028E88);
ZZ_MARK_TARGET(0x80028E8C,ZZ_28C9C_1F0);
ZZ_MARK_TARGET(0x80028E90,ZZ_28C9C_1F4);
ZZ_MARK(0x80028E94);
ZZ_MARK(0x80028E98);
ZZ_MARK(0x80028E9C);
ZZ_MARK(0x80028EA0);
ZZ_MARK(0x80028EA4);
ZZ_MARK(0x80028EA8);
ZZ_MARK(0x80028EAC);
ZZ_MARK(0x80028EB0);
ZZ_MARK(0x80028EB4);
ZZ_MARK(0x80028EB8);
