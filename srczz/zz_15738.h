#ifdef ZZ_INCLUDE_CODE
ZZ_15738:
	SP -= 24;
	EMU_Write32(SP + 16,RA); //+ 0x10
	V0 = 0x3FF;
	V1 = 0x1F800000;
	V1 |= 0x3FF;
	ZZ_CLOCKCYCLES(5,0x8001574C);
ZZ_15738_14:
	EMU_Write8(V1,R0);
	V0 -= 1;
	if ((int32_t)V0 >= 0)
	{
		V1 -= 1;
		ZZ_CLOCKCYCLES(4,0x8001574C);
		goto ZZ_15738_14;
	}
	V1 -= 1;
	RA = 0x80015764; //ZZ_15738_2C
	A0 = 0x1;
	ZZ_CLOCKCYCLES(6,0x8004B450);
	goto ZZ_4B450;
ZZ_15738_2C:
	RA = 0x8001576C; //ZZ_15738_34
	ZZ_CLOCKCYCLES(2,0x8004EEC8);
	goto ZZ_4EEC8;
ZZ_15738_34:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 3012); //+ 0xFFFFF43C
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80015798);
		goto ZZ_15738_60;
	}
	RA = 0x80015788; //ZZ_15738_50
	ZZ_CLOCKCYCLES(7,0x8004A910);
	goto ZZ_4A910;
ZZ_15738_50:
	RA = 0x80015790; //ZZ_15738_58
	ZZ_CLOCKCYCLES(2,0x80046B1C);
	goto ZZ_46B1C;
ZZ_15738_58:
	RA = 0x80015798; //ZZ_15738_60
	A0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80046CF8);
	goto ZZ_46CF8;
ZZ_15738_60:
	RA = 0x800157A0; //ZZ_15738_68
	ZZ_CLOCKCYCLES(2,0x800161D4);
	goto ZZ_161D4;
ZZ_15738_68:
	RA = 0x800157A8; //ZZ_15738_70
	ZZ_CLOCKCYCLES(2,0x80031868);
	goto ZZ_31868;
ZZ_15738_70:
	AT = 0x80060000;
	EMU_Write32(AT + 30788,R0); //+ 0x7844
	A0 = 0x63960000;
	A0 |= 0x347F;
	V0 = 0x3;
	V1 = 0x80060000;
	V1 += 1012;
	ZZ_CLOCKCYCLES(7,0x800157C4);
ZZ_15738_8C:
	EMU_Write32(V1,A0);
	V0 -= 1;
	if ((int32_t)V0 >= 0)
	{
		V1 -= 4;
		ZZ_CLOCKCYCLES(4,0x800157C4);
		goto ZZ_15738_8C;
	}
	V1 -= 4;
	V1 = 0x63960000;
	V1 |= 0x347F;
	V0 = 0x294;
	ZZ_CLOCKCYCLES(7,0x800157E0);
ZZ_15738_A8:
	AT = 0x80060000;
	AT += V0;
	EMU_Write32(AT + 12316,V1); //+ 0x301C
	V0 -= 44;
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(6,0x800157E0);
		goto ZZ_15738_A8;
	}
	RA = 0x80015800; //ZZ_15738_C8
	A0 = 0x2;
	ZZ_CLOCKCYCLES(8,0x8001594C);
	goto ZZ_1594C;
ZZ_15738_C8:
	RA = 0x80015808; //ZZ_15738_D0
	ZZ_CLOCKCYCLES(2,0x800364A8);
	goto ZZ_364A8;
ZZ_15738_D0:
	RA = 0x80015810; //ZZ_15738_D8
	ZZ_CLOCKCYCLES(2,0x80049FB4);
	goto ZZ_49FB4;
ZZ_15738_D8:
	A0 = 0xF2000000;
	RA = 0x8001581C; //ZZ_15738_E4
	A0 |= 0x2;
	ZZ_CLOCKCYCLES(3,0x8004A16C);
	goto ZZ_4A16C;
ZZ_15738_E4:
	A0 = 0xF2000000;
	A0 |= 0x2;
	A1 = 0x2;
	A3 = 0x80040000;
	A3 -= 16096;
	RA = 0x80015838; //ZZ_15738_100
	A2 = 0x1000;
	ZZ_CLOCKCYCLES(7,0x80049F64);
	goto ZZ_49F64;
ZZ_15738_100:
	A0 = V0;
	EMU_Write32(GP + 608,A0); //+ 0x260
	RA = 0x80015848; //ZZ_15738_110
	ZZ_CLOCKCYCLES(4,0x80049F94);
	goto ZZ_49F94;
ZZ_15738_110:
	A0 = 0xF2000000;
	A0 |= 0x2;
	A1 = 0x1000;
	RA = 0x8001585C; //ZZ_15738_124
	A2 = 0x1000;
	ZZ_CLOCKCYCLES(5,0x8004A064);
	goto ZZ_4A064;
ZZ_15738_124:
	A0 = 0xF2000000;
	RA = 0x80015868; //ZZ_15738_130
	A0 |= 0x2;
	ZZ_CLOCKCYCLES(3,0x8004A138);
	goto ZZ_4A138;
ZZ_15738_130:
	RA = 0x80015870; //ZZ_15738_138
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_15738_138:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 3012); //+ 0xFFFFF43C
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8001588C);
		goto ZZ_15738_154;
	}
	RA = 0x8001588C; //ZZ_15738_154
	ZZ_CLOCKCYCLES(7,0x800319F8);
	goto ZZ_319F8;
ZZ_15738_154:
	RA = 0x80015894; //ZZ_15738_15C
	ZZ_CLOCKCYCLES(2,0x8004C1C4);
	goto ZZ_4C1C4;
ZZ_15738_15C:
	V0 = (int32_t)V0 < 3;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x800158A8);
		goto ZZ_15738_170;
	}
	V0 = 0x1000;
	ZZ_CLOCKCYCLES(5,0x800158AC);
	goto ZZ_15738_174;
ZZ_15738_170:
	V0 = 0x1016;
	ZZ_CLOCKCYCLES(1,0x800158AC);
ZZ_15738_174:
	AT = 0x80070000;
	EMU_Write32(AT - 12348,V0); //+ 0xFFFFCFC4
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	V0 = -255;
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 24;
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x800117E0,ZZ_117BC_24);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80015738,ZZ_15738);
ZZ_MARK(0x8001573C);
ZZ_MARK(0x80015740);
ZZ_MARK(0x80015744);
ZZ_MARK(0x80015748);
ZZ_MARK_TARGET(0x8001574C,ZZ_15738_14);
ZZ_MARK(0x80015750);
ZZ_MARK(0x80015754);
ZZ_MARK(0x80015758);
ZZ_MARK(0x8001575C);
ZZ_MARK(0x80015760);
ZZ_MARK_TARGET(0x80015764,ZZ_15738_2C);
ZZ_MARK(0x80015768);
ZZ_MARK_TARGET(0x8001576C,ZZ_15738_34);
ZZ_MARK(0x80015770);
ZZ_MARK(0x80015774);
ZZ_MARK(0x80015778);
ZZ_MARK(0x8001577C);
ZZ_MARK(0x80015780);
ZZ_MARK(0x80015784);
ZZ_MARK_TARGET(0x80015788,ZZ_15738_50);
ZZ_MARK(0x8001578C);
ZZ_MARK_TARGET(0x80015790,ZZ_15738_58);
ZZ_MARK(0x80015794);
ZZ_MARK_TARGET(0x80015798,ZZ_15738_60);
ZZ_MARK(0x8001579C);
ZZ_MARK_TARGET(0x800157A0,ZZ_15738_68);
ZZ_MARK(0x800157A4);
ZZ_MARK_TARGET(0x800157A8,ZZ_15738_70);
ZZ_MARK(0x800157AC);
ZZ_MARK(0x800157B0);
ZZ_MARK(0x800157B4);
ZZ_MARK(0x800157B8);
ZZ_MARK(0x800157BC);
ZZ_MARK(0x800157C0);
ZZ_MARK_TARGET(0x800157C4,ZZ_15738_8C);
ZZ_MARK(0x800157C8);
ZZ_MARK(0x800157CC);
ZZ_MARK(0x800157D0);
ZZ_MARK(0x800157D4);
ZZ_MARK(0x800157D8);
ZZ_MARK(0x800157DC);
ZZ_MARK_TARGET(0x800157E0,ZZ_15738_A8);
ZZ_MARK(0x800157E4);
ZZ_MARK(0x800157E8);
ZZ_MARK(0x800157EC);
ZZ_MARK(0x800157F0);
ZZ_MARK(0x800157F4);
ZZ_MARK(0x800157F8);
ZZ_MARK(0x800157FC);
ZZ_MARK_TARGET(0x80015800,ZZ_15738_C8);
ZZ_MARK(0x80015804);
ZZ_MARK_TARGET(0x80015808,ZZ_15738_D0);
ZZ_MARK(0x8001580C);
ZZ_MARK_TARGET(0x80015810,ZZ_15738_D8);
ZZ_MARK(0x80015814);
ZZ_MARK(0x80015818);
ZZ_MARK_TARGET(0x8001581C,ZZ_15738_E4);
ZZ_MARK(0x80015820);
ZZ_MARK(0x80015824);
ZZ_MARK(0x80015828);
ZZ_MARK(0x8001582C);
ZZ_MARK(0x80015830);
ZZ_MARK(0x80015834);
ZZ_MARK_TARGET(0x80015838,ZZ_15738_100);
ZZ_MARK(0x8001583C);
ZZ_MARK(0x80015840);
ZZ_MARK(0x80015844);
ZZ_MARK_TARGET(0x80015848,ZZ_15738_110);
ZZ_MARK(0x8001584C);
ZZ_MARK(0x80015850);
ZZ_MARK(0x80015854);
ZZ_MARK(0x80015858);
ZZ_MARK_TARGET(0x8001585C,ZZ_15738_124);
ZZ_MARK(0x80015860);
ZZ_MARK(0x80015864);
ZZ_MARK_TARGET(0x80015868,ZZ_15738_130);
ZZ_MARK(0x8001586C);
ZZ_MARK_TARGET(0x80015870,ZZ_15738_138);
ZZ_MARK(0x80015874);
ZZ_MARK(0x80015878);
ZZ_MARK(0x8001587C);
ZZ_MARK(0x80015880);
ZZ_MARK(0x80015884);
ZZ_MARK(0x80015888);
ZZ_MARK_TARGET(0x8001588C,ZZ_15738_154);
ZZ_MARK(0x80015890);
ZZ_MARK_TARGET(0x80015894,ZZ_15738_15C);
ZZ_MARK(0x80015898);
ZZ_MARK(0x8001589C);
ZZ_MARK(0x800158A0);
ZZ_MARK(0x800158A4);
ZZ_MARK_TARGET(0x800158A8,ZZ_15738_170);
ZZ_MARK_TARGET(0x800158AC,ZZ_15738_174);
ZZ_MARK(0x800158B0);
ZZ_MARK(0x800158B4);
ZZ_MARK(0x800158B8);
ZZ_MARK(0x800158BC);
ZZ_MARK(0x800158C0);
