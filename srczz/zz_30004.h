#ifdef ZZ_INCLUDE_CODE
ZZ_30004:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2448); //+ 0xFFFFF670
	SP -= 24;
	V1 = 0x2;
	EMU_Write32(SP + 16,RA); //+ 0x10
	AT = 0x80070000;
	EMU_Write32(AT - 12372,V1); //+ 0xFFFFCFAC
	A0 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 += 4240;
	AT = 0x80060000;
	EMU_Write32(AT - 2548,V0); //+ 0xFFFFF60C
	RA = 0x80030038; //ZZ_30004_34
	ZZ_CLOCKCYCLES(13,0x80031878);
	goto ZZ_31878;
ZZ_30004_34:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2448); //+ 0xFFFFF670
	A1 = 0x80060000;
	A1 = EMU_ReadU32(A1 + 14060); //+ 0x36EC
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 2524); //+ 0xFFFFF624
	V0 = EMU_ReadU32(V1 + 12); //+ 0xC
	AT = 0x80060000;
	EMU_Write32(AT + 3036,V0); //+ 0xBDC
	V0 = EMU_ReadU32(V1 + 4208); //+ 0x1070
	EMU_Write32(A1 + 12,V0); //+ 0xC
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	A0 = EMU_ReadU32(V1 + 4212); //+ 0x1074
	A1 = EMU_ReadU32(V1 + 4216); //+ 0x1078
	A2 = EMU_ReadU32(V1 + 4220); //+ 0x107C
	A3 = EMU_ReadU32(V1 + 4224); //+ 0x1080
	EMU_Write32(V0 + 48,A0); //+ 0x30
	EMU_Write32(V0 + 52,A1); //+ 0x34
	EMU_Write32(V0 + 56,A2); //+ 0x38
	EMU_Write32(V0 + 60,A3); //+ 0x3C
	A0 = EMU_ReadU32(V1 + 4228); //+ 0x1084
	A1 = EMU_ReadU32(V1 + 4232); //+ 0x1088
	EMU_Write32(V0 + 64,A0); //+ 0x40
	EMU_Write32(V0 + 68,A1); //+ 0x44
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 2448); //+ 0xFFFFF670
	V0 = -1;
	AT = 0x80070000;
	EMU_Write32(AT - 12516,V0); //+ 0xFFFFCF1C
	RA = 0x800300B8; //ZZ_30004_B4
	A0 += 16;
	ZZ_CLOCKCYCLES(32,0x8002F9D4);
	goto ZZ_2F9D4;
ZZ_30004_B4:
	AT = 0x80070000;
	EMU_Write32(AT - 12648,R0); //+ 0xFFFFCE98
	AT = 0x80070000;
	EMU_Write32(AT - 12664,R0); //+ 0xFFFFCE88
	RA = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80030150,ZZ_300D8_78);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80030004,0x80030038,ZZ_30004);
ZZ_MARK_TARGET(0x80030038,0x800300B8,ZZ_30004_34);
ZZ_MARK_TARGET(0x800300B8,0x800300D8,ZZ_30004_B4);
