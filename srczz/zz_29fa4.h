#ifdef ZZ_INCLUDE_CODE
ZZ_29FA4:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	SP -= 144;
	EMU_Write32(SP + 132,S7); //+ 0x84
	S7 = A0;
	EMU_Write32(SP + 136,FP); //+ 0x88
	FP = A1;
	EMU_Write32(SP + 120,S4); //+ 0x78
	S4 = A2;
	EMU_Write32(SP + 112,S2); //+ 0x70
	S2 = A3;
	V1 = 0x4000000;
	EMU_Write32(SP + 140,RA); //+ 0x8C
	EMU_Write32(SP + 128,S6); //+ 0x80
	EMU_Write32(SP + 124,S5); //+ 0x7C
	EMU_Write32(SP + 116,S3); //+ 0x74
	EMU_Write32(SP + 108,S1); //+ 0x6C
	V0 &= V1;
	if (!V0)
	{
		EMU_Write32(SP + 104,S0); //+ 0x68
		ZZ_CLOCKCYCLES(20,0x8002A238);
		goto ZZ_29FA4_294;
	}
	EMU_Write32(SP + 104,S0); //+ 0x68
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 11632); //+ 0x2D70
	V0 = 0x20000;
	V0 &= A0;
	if (!V0)
	{
		V0 = 0x40000;
		ZZ_CLOCKCYCLES(26,0x8002A238);
		goto ZZ_29FA4_294;
	}
	V0 = 0x40000;
	V0 &= A0;
	if (!V0)
	{
		V1 = 0x20000000;
		ZZ_CLOCKCYCLES(29,0x8002A02C);
		goto ZZ_29FA4_88;
	}
	V1 = 0x20000000;
	V0 = EMU_ReadU32(S7 + 256); //+ 0x100
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(34,0x8002A238);
		goto ZZ_29FA4_294;
	}
	ZZ_CLOCKCYCLES(34,0x8002A02C);
ZZ_29FA4_88:
	V0 = A0 & 0x200;
	if (!V0)
	{
		V1 = 0x20000000;
		ZZ_CLOCKCYCLES(3,0x8002A060);
		goto ZZ_29FA4_BC;
	}
	V1 = 0x20000000;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 2524); //+ 0xFFFFF624
	V0 = EMU_ReadU32(V0 + 256); //+ 0x100
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(11,0x8002A060);
		goto ZZ_29FA4_BC;
	}
	S1 = 0x1C2;
	ZZ_CLOCKCYCLES(13,0x8002A07C);
	goto ZZ_29FA4_D8;
ZZ_29FA4_BC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x40000;
	V0 &= V1;
	if (!V0)
	{
		S1 = 0x40;
		ZZ_CLOCKCYCLES(6,0x8002A07C);
		goto ZZ_29FA4_D8;
	}
	S1 = 0x40;
	S1 = 0x200;
	ZZ_CLOCKCYCLES(7,0x8002A07C);
ZZ_29FA4_D8:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 11632); //+ 0x2D70
	V1 = 0x80000;
	V0 &= V1;
	if (!V0)
	{
		A0 = S4;
		ZZ_CLOCKCYCLES(6,0x8002A140);
		goto ZZ_29FA4_19C;
	}
	A0 = S4;
	V0 = EMU_ReadU32(S2);
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V1 = LO;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,V0);
	T0 = LO;
	RA = 0x8002A0C4; //ZZ_29FA4_120
	A0 = V1 + T0;
	ZZ_CLOCKCYCLES(18,0x80041D10);
	goto ZZ_41D10;
ZZ_29FA4_120:
	S0 = V0;
	if (S0)
	{
		ZZ_CLOCKCYCLES(3,0x8002A0D4);
		goto ZZ_29FA4_130;
	}
	S0 = 0x1;
	ZZ_CLOCKCYCLES(4,0x8002A0D4);
ZZ_29FA4_130:
	V0 = EMU_ReadU32(S2);
	EMU_SDivide(V0,S0);
	if (S0)
	{
		ZZ_CLOCKCYCLES(5,0x8002A0EC);
		goto ZZ_29FA4_148;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(6,0x8002A0EC);
ZZ_29FA4_148:
	AT = -1;
	if (S0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002A104);
		goto ZZ_29FA4_160;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002A104);
		goto ZZ_29FA4_160;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002A104);
ZZ_29FA4_160:
	S5 = LO;
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	EMU_SDivide(V0,S0);
	if (S0)
	{
		ZZ_CLOCKCYCLES(6,0x8002A120);
		goto ZZ_29FA4_17C;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x8002A120);
ZZ_29FA4_17C:
	AT = -1;
	if (S0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002A138);
		goto ZZ_29FA4_194;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002A138);
		goto ZZ_29FA4_194;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002A138);
ZZ_29FA4_194:
	S6 = LO;
	A0 = S4;
	ZZ_CLOCKCYCLES(2,0x8002A140);
ZZ_29FA4_19C:
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 11632); //+ 0x2D70
	A1 = S2;
	A3 = S1;
	S3 = 0x40000;
	RA = 0x8002A15C; //ZZ_29FA4_1B8
	A2 &= S3;
	ZZ_CLOCKCYCLES(7,0x8002EB98);
	goto ZZ_2EB98;
ZZ_29FA4_1B8:
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 11632); //+ 0x2D70
	V0 = 0x80000;
	V0 &= A2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x8002A238);
		goto ZZ_29FA4_294;
	}
	A1 = EMU_ReadU32(S2);
	V0 = (int32_t)A1 >> 8;
	EMU_SMultiply(V0,S5);
	V0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V1 = LO;
	V0 = (int32_t)V0 >> 8;
	EMU_SMultiply(V0,S6);
	T0 = LO;
	V0 = V1 + T0;
	V1 = (int32_t)V0 >> 8;
	if ((int32_t)V1 >= 0)
	{
		V0 = (int32_t)V1 < (int32_t)S0;
		ZZ_CLOCKCYCLES(20,0x8002A1B4);
		goto ZZ_29FA4_210;
	}
	V0 = (int32_t)V1 < (int32_t)S0;
	V1 = R0;
	V0 = (int32_t)V1 < (int32_t)S0;
	ZZ_CLOCKCYCLES(22,0x8002A1B4);
ZZ_29FA4_210:
	if (!V0)
	{
		V1 = S0 - V1;
		ZZ_CLOCKCYCLES(2,0x8002A238);
		goto ZZ_29FA4_294;
	}
	V1 = S0 - V1;
	EMU_SMultiply(S5,V1);
	T0 = LO;
	V0 = EMU_ReadU32(S4);
	EMU_SMultiply(S6,V1);
	A0 = SP + 72;
	V0 += A1;
	EMU_Write32(SP + 72,V0); //+ 0x48
	V0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V1 = EMU_ReadU32(S2 + 8); //+ 0x8
	A2 &= S3;
	A3 = S1;
	A1 = SP + 88;
	EMU_Write32(SP + 88,T0); //+ 0x58
	V0 += V1;
	EMU_Write32(SP + 80,V0); //+ 0x50
	T2 = LO;
	RA = 0x8002A208; //ZZ_29FA4_264
	EMU_Write32(SP + 96,T2); //+ 0x60
	ZZ_CLOCKCYCLES(21,0x8002EB98);
	goto ZZ_2EB98;
ZZ_29FA4_264:
	V0 = EMU_ReadU32(SP + 72); //+ 0x48
	V1 = EMU_ReadU32(SP + 88); //+ 0x58
	A0 = EMU_ReadU32(S4);
	V0 += V1;
	V0 = V0 - A0;
	EMU_Write32(S2,V0);
	V0 = EMU_ReadU32(SP + 80); //+ 0x50
	V1 = EMU_ReadU32(SP + 96); //+ 0x60
	A0 = EMU_ReadU32(S4 + 8); //+ 0x8
	V0 += V1;
	V0 = V0 - A0;
	EMU_Write32(S2 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(12,0x8002A238);
ZZ_29FA4_294:
	EMU_Write32(FP + 4172,R0); //+ 0x104C
	A0 = EMU_ReadU32(S2);
	if ((int32_t)A0 < 0)
	{
		V0 = 0x51EB0000;
		ZZ_CLOCKCYCLES(5,0x8002A25C);
		goto ZZ_29FA4_2B8;
	}
	V0 = 0x51EB0000;
	V0 |= 0x851F;
	EMU_SMultiply(A0,V0);
	V0 = (int32_t)A0 >> 31;
	ZZ_CLOCKCYCLES(9,0x8002A270);
	goto ZZ_29FA4_2CC;
ZZ_29FA4_2B8:
	V1 = 0x51EB0000;
	V1 |= 0x851F;
	V0 = -A0;
	EMU_SMultiply(V0,V1);
	V0 = (int32_t)V0 >> 31;
	ZZ_CLOCKCYCLES(5,0x8002A270);
ZZ_29FA4_2CC:
	T1 = HI;
	V1 = (int32_t)T1 >> 13;
	A0 = EMU_ReadU32(S2 + 8); //+ 0x8
	if ((int32_t)A0 < 0)
	{
		A2 = V1 - V0;
		ZZ_CLOCKCYCLES(6,0x8002A29C);
		goto ZZ_29FA4_2F8;
	}
	A2 = V1 - V0;
	V0 = 0x51EB0000;
	V0 |= 0x851F;
	EMU_SMultiply(A0,V0);
	V0 = (int32_t)A0 >> 31;
	ZZ_CLOCKCYCLES(11,0x8002A2B0);
	goto ZZ_29FA4_30C;
ZZ_29FA4_2F8:
	V1 = 0x51EB0000;
	V1 |= 0x851F;
	V0 = -A0;
	EMU_SMultiply(V0,V1);
	V0 = (int32_t)V0 >> 31;
	ZZ_CLOCKCYCLES(5,0x8002A2B0);
ZZ_29FA4_30C:
	T1 = HI;
	V1 = (int32_t)T1 >> 13;
	A1 = V1 - V0;
	V0 = EMU_ReadU32(S2 + 4); //+ 0x4
	if ((int32_t)V0 < 0)
	{
		ZZ_CLOCKCYCLES(7,0x8002A2E0);
		goto ZZ_29FA4_33C;
	}
	V0 = (int32_t)V0 < 25601;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x8002A2F0);
		goto ZZ_29FA4_34C;
	}
	ZZ_CLOCKCYCLES(12,0x8002A338);
	goto ZZ_29FA4_394;
ZZ_29FA4_33C:
	V0 = -V0;
	V0 = (int32_t)V0 < 25601;
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x8002A338);
		goto ZZ_29FA4_394;
	}
	ZZ_CLOCKCYCLES(4,0x8002A2F0);
ZZ_29FA4_34C:
	A0 = EMU_ReadU32(S2 + 4); //+ 0x4
	if ((int32_t)A0 < 0)
	{
		V0 = 0x51EB0000;
		ZZ_CLOCKCYCLES(4,0x8002A318);
		goto ZZ_29FA4_374;
	}
	V0 = 0x51EB0000;
	V0 |= 0x851F;
	EMU_SMultiply(A0,V0);
	V0 = (int32_t)A0 >> 31;
	T1 = HI;
	V1 = (int32_t)T1 >> 13;
	ZZ_CLOCKCYCLES(10,0x8002A374);
	goto ZZ_29FA4_3D0;
ZZ_29FA4_374:
	V1 = 0x51EB0000;
	V1 |= 0x851F;
	V0 = -A0;
	EMU_SMultiply(V0,V1);
	V0 = (int32_t)V0 >> 31;
	T1 = HI;
	V1 = (int32_t)T1 >> 13;
	ZZ_CLOCKCYCLES(8,0x8002A374);
	goto ZZ_29FA4_3D0;
ZZ_29FA4_394:
	A0 = EMU_ReadU32(S2 + 4); //+ 0x4
	if ((int32_t)A0 < 0)
	{
		V0 = 0x51EB0000;
		ZZ_CLOCKCYCLES(4,0x8002A358);
		goto ZZ_29FA4_3B4;
	}
	V0 = 0x51EB0000;
	V0 |= 0x851F;
	EMU_SMultiply(A0,V0);
	V0 = (int32_t)A0 >> 31;
	ZZ_CLOCKCYCLES(8,0x8002A36C);
	goto ZZ_29FA4_3C8;
ZZ_29FA4_3B4:
	V1 = 0x51EB0000;
	V1 |= 0x851F;
	V0 = -A0;
	EMU_SMultiply(V0,V1);
	V0 = (int32_t)V0 >> 31;
	ZZ_CLOCKCYCLES(5,0x8002A36C);
ZZ_29FA4_3C8:
	T1 = HI;
	V1 = (int32_t)T1 >> 11;
	ZZ_CLOCKCYCLES(2,0x8002A374);
ZZ_29FA4_3D0:
	V1 = V1 - V0;
	S0 = A2;
	V0 = (int32_t)S0 < (int32_t)V1;
	if (!V0)
	{
		V0 = (int32_t)S0 < (int32_t)A1;
		ZZ_CLOCKCYCLES(5,0x8002A390);
		goto ZZ_29FA4_3EC;
	}
	V0 = (int32_t)S0 < (int32_t)A1;
	S0 = V1;
	V0 = (int32_t)S0 < (int32_t)A1;
	ZZ_CLOCKCYCLES(7,0x8002A390);
ZZ_29FA4_3EC:
	if (!V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(2,0x8002A3A0);
		goto ZZ_29FA4_3FC;
	}
	S0 += 1;
	S0 = A1;
	S0 += 1;
	ZZ_CLOCKCYCLES(4,0x8002A3A0);
ZZ_29FA4_3FC:
	A1 = 0x2;
	V0 = SP + 32;
	ZZ_CLOCKCYCLES(2,0x8002A3A8);
ZZ_29FA4_404:
	EMU_Write32(V0 + 32,R0); //+ 0x20
	A1 -= 1;
	if ((int32_t)A1 >= 0)
	{
		V0 -= 4;
		ZZ_CLOCKCYCLES(4,0x8002A3A8);
		goto ZZ_29FA4_404;
	}
	V0 -= 4;
	if ((int32_t)S0 <= 0)
	{
		S1 = 0x1;
		ZZ_CLOCKCYCLES(6,0x8002A498);
		goto ZZ_29FA4_4F4;
	}
	S1 = 0x1;
	S3 = SP + 24;
	A3 = R0;
	ZZ_CLOCKCYCLES(8,0x8002A3C8);
ZZ_29FA4_424:
	A1 = R0;
	A0 = S3;
	A2 = S2;
	V0 = S1 << 8;
	EMU_SDivide(V0,S0);
	if (S0)
	{
		ZZ_CLOCKCYCLES(7,0x8002A3E8);
		goto ZZ_29FA4_444;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(8,0x8002A3E8);
ZZ_29FA4_444:
	AT = -1;
	if (S0 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8002A400);
		goto ZZ_29FA4_45C;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8002A400);
		goto ZZ_29FA4_45C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8002A400);
ZZ_29FA4_45C:
	T0 = LO;
	ZZ_CLOCKCYCLES(1,0x8002A404);
ZZ_29FA4_460:
	V0 = EMU_ReadU32(A2);
	EMU_SMultiply(V0,T0);
	A2 += 4;
	V0 = EMU_ReadU32(A0 + 32); //+ 0x20
	A1 += 1;
	T1 = LO;
	V1 = (int32_t)T1 >> 8;
	V0 = V1 - V0;
	A3 |= V0;
	EMU_Write32(A0,V0);
	EMU_Write32(A0 + 32,V1); //+ 0x20
	V0 = (int32_t)A1 < 3;
	if (V0)
	{
		A0 += 4;
		ZZ_CLOCKCYCLES(15,0x8002A404);
		goto ZZ_29FA4_460;
	}
	A0 += 4;
	if (!A3)
	{
		V0 = SP + 40;
		ZZ_CLOCKCYCLES(17,0x8002A488);
		goto ZZ_29FA4_4E4;
	}
	V0 = SP + 40;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A0 = S7;
	A1 = FP;
	A2 = S4;
	RA = 0x8002A460; //ZZ_29FA4_4BC
	A3 = SP + 24;
	ZZ_CLOCKCYCLES(23,0x8002C404);
	goto ZZ_2C404;
ZZ_29FA4_4BC:
	A1 = R0;
	A0 = S4;
	V1 = S3;
	ZZ_CLOCKCYCLES(3,0x8002A46C);
ZZ_29FA4_4C8:
	V0 = EMU_ReadU32(V1 + 16); //+ 0x10
	V1 += 4;
	A1 += 1;
	EMU_Write32(A0,V0);
	V0 = (int32_t)A1 < 3;
	if (V0)
	{
		A0 += 4;
		ZZ_CLOCKCYCLES(7,0x8002A46C);
		goto ZZ_29FA4_4C8;
	}
	A0 += 4;
	ZZ_CLOCKCYCLES(7,0x8002A488);
ZZ_29FA4_4E4:
	S1 += 1;
	V0 = (int32_t)S0 < (int32_t)S1;
	if (!V0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(4,0x8002A3C8);
		goto ZZ_29FA4_424;
	}
	A3 = R0;
	ZZ_CLOCKCYCLES(4,0x8002A498);
ZZ_29FA4_4F4:
	RA = EMU_ReadU32(SP + 140); //+ 0x8C
	FP = EMU_ReadU32(SP + 136); //+ 0x88
	S7 = EMU_ReadU32(SP + 132); //+ 0x84
	S6 = EMU_ReadU32(SP + 128); //+ 0x80
	S5 = EMU_ReadU32(SP + 124); //+ 0x7C
	S4 = EMU_ReadU32(SP + 120); //+ 0x78
	S3 = EMU_ReadU32(SP + 116); //+ 0x74
	S2 = EMU_ReadU32(SP + 112); //+ 0x70
	S1 = EMU_ReadU32(SP + 108); //+ 0x6C
	S0 = EMU_ReadU32(SP + 104); //+ 0x68
	SP += 144;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(13);
	ZZ_JUMPREGISTER(0x80029CC0,ZZ_29AF8_1C8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80029FA4,ZZ_29FA4);
ZZ_MARK(0x80029FA8);
ZZ_MARK(0x80029FAC);
ZZ_MARK(0x80029FB0);
ZZ_MARK(0x80029FB4);
ZZ_MARK(0x80029FB8);
ZZ_MARK(0x80029FBC);
ZZ_MARK(0x80029FC0);
ZZ_MARK(0x80029FC4);
ZZ_MARK(0x80029FC8);
ZZ_MARK(0x80029FCC);
ZZ_MARK(0x80029FD0);
ZZ_MARK(0x80029FD4);
ZZ_MARK(0x80029FD8);
ZZ_MARK(0x80029FDC);
ZZ_MARK(0x80029FE0);
ZZ_MARK(0x80029FE4);
ZZ_MARK(0x80029FE8);
ZZ_MARK(0x80029FEC);
ZZ_MARK(0x80029FF0);
ZZ_MARK(0x80029FF4);
ZZ_MARK(0x80029FF8);
ZZ_MARK(0x80029FFC);
ZZ_MARK(0x8002A000);
ZZ_MARK(0x8002A004);
ZZ_MARK(0x8002A008);
ZZ_MARK(0x8002A00C);
ZZ_MARK(0x8002A010);
ZZ_MARK(0x8002A014);
ZZ_MARK(0x8002A018);
ZZ_MARK(0x8002A01C);
ZZ_MARK(0x8002A020);
ZZ_MARK(0x8002A024);
ZZ_MARK(0x8002A028);
ZZ_MARK_TARGET(0x8002A02C,ZZ_29FA4_88);
ZZ_MARK(0x8002A030);
ZZ_MARK(0x8002A034);
ZZ_MARK(0x8002A038);
ZZ_MARK(0x8002A03C);
ZZ_MARK(0x8002A040);
ZZ_MARK(0x8002A044);
ZZ_MARK(0x8002A048);
ZZ_MARK(0x8002A04C);
ZZ_MARK(0x8002A050);
ZZ_MARK(0x8002A054);
ZZ_MARK(0x8002A058);
ZZ_MARK(0x8002A05C);
ZZ_MARK_TARGET(0x8002A060,ZZ_29FA4_BC);
ZZ_MARK(0x8002A064);
ZZ_MARK(0x8002A068);
ZZ_MARK(0x8002A06C);
ZZ_MARK(0x8002A070);
ZZ_MARK(0x8002A074);
ZZ_MARK(0x8002A078);
ZZ_MARK_TARGET(0x8002A07C,ZZ_29FA4_D8);
ZZ_MARK(0x8002A080);
ZZ_MARK(0x8002A084);
ZZ_MARK(0x8002A088);
ZZ_MARK(0x8002A08C);
ZZ_MARK(0x8002A090);
ZZ_MARK(0x8002A094);
ZZ_MARK(0x8002A098);
ZZ_MARK(0x8002A09C);
ZZ_MARK(0x8002A0A0);
ZZ_MARK(0x8002A0A4);
ZZ_MARK(0x8002A0A8);
ZZ_MARK(0x8002A0AC);
ZZ_MARK(0x8002A0B0);
ZZ_MARK(0x8002A0B4);
ZZ_MARK(0x8002A0B8);
ZZ_MARK(0x8002A0BC);
ZZ_MARK(0x8002A0C0);
ZZ_MARK_TARGET(0x8002A0C4,ZZ_29FA4_120);
ZZ_MARK(0x8002A0C8);
ZZ_MARK(0x8002A0CC);
ZZ_MARK(0x8002A0D0);
ZZ_MARK_TARGET(0x8002A0D4,ZZ_29FA4_130);
ZZ_MARK(0x8002A0D8);
ZZ_MARK(0x8002A0DC);
ZZ_MARK(0x8002A0E0);
ZZ_MARK(0x8002A0E4);
ZZ_MARK(0x8002A0E8);
ZZ_MARK_TARGET(0x8002A0EC,ZZ_29FA4_148);
ZZ_MARK(0x8002A0F0);
ZZ_MARK(0x8002A0F4);
ZZ_MARK(0x8002A0F8);
ZZ_MARK(0x8002A0FC);
ZZ_MARK(0x8002A100);
ZZ_MARK_TARGET(0x8002A104,ZZ_29FA4_160);
ZZ_MARK(0x8002A108);
ZZ_MARK(0x8002A10C);
ZZ_MARK(0x8002A110);
ZZ_MARK(0x8002A114);
ZZ_MARK(0x8002A118);
ZZ_MARK(0x8002A11C);
ZZ_MARK_TARGET(0x8002A120,ZZ_29FA4_17C);
ZZ_MARK(0x8002A124);
ZZ_MARK(0x8002A128);
ZZ_MARK(0x8002A12C);
ZZ_MARK(0x8002A130);
ZZ_MARK(0x8002A134);
ZZ_MARK_TARGET(0x8002A138,ZZ_29FA4_194);
ZZ_MARK(0x8002A13C);
ZZ_MARK_TARGET(0x8002A140,ZZ_29FA4_19C);
ZZ_MARK(0x8002A144);
ZZ_MARK(0x8002A148);
ZZ_MARK(0x8002A14C);
ZZ_MARK(0x8002A150);
ZZ_MARK(0x8002A154);
ZZ_MARK(0x8002A158);
ZZ_MARK_TARGET(0x8002A15C,ZZ_29FA4_1B8);
ZZ_MARK(0x8002A160);
ZZ_MARK(0x8002A164);
ZZ_MARK(0x8002A168);
ZZ_MARK(0x8002A16C);
ZZ_MARK(0x8002A170);
ZZ_MARK(0x8002A174);
ZZ_MARK(0x8002A178);
ZZ_MARK(0x8002A17C);
ZZ_MARK(0x8002A180);
ZZ_MARK(0x8002A184);
ZZ_MARK(0x8002A188);
ZZ_MARK(0x8002A18C);
ZZ_MARK(0x8002A190);
ZZ_MARK(0x8002A194);
ZZ_MARK(0x8002A198);
ZZ_MARK(0x8002A19C);
ZZ_MARK(0x8002A1A0);
ZZ_MARK(0x8002A1A4);
ZZ_MARK(0x8002A1A8);
ZZ_MARK(0x8002A1AC);
ZZ_MARK(0x8002A1B0);
ZZ_MARK_TARGET(0x8002A1B4,ZZ_29FA4_210);
ZZ_MARK(0x8002A1B8);
ZZ_MARK(0x8002A1BC);
ZZ_MARK(0x8002A1C0);
ZZ_MARK(0x8002A1C4);
ZZ_MARK(0x8002A1C8);
ZZ_MARK(0x8002A1CC);
ZZ_MARK(0x8002A1D0);
ZZ_MARK(0x8002A1D4);
ZZ_MARK(0x8002A1D8);
ZZ_MARK(0x8002A1DC);
ZZ_MARK(0x8002A1E0);
ZZ_MARK(0x8002A1E4);
ZZ_MARK(0x8002A1E8);
ZZ_MARK(0x8002A1EC);
ZZ_MARK(0x8002A1F0);
ZZ_MARK(0x8002A1F4);
ZZ_MARK(0x8002A1F8);
ZZ_MARK(0x8002A1FC);
ZZ_MARK(0x8002A200);
ZZ_MARK(0x8002A204);
ZZ_MARK_TARGET(0x8002A208,ZZ_29FA4_264);
ZZ_MARK(0x8002A20C);
ZZ_MARK(0x8002A210);
ZZ_MARK(0x8002A214);
ZZ_MARK(0x8002A218);
ZZ_MARK(0x8002A21C);
ZZ_MARK(0x8002A220);
ZZ_MARK(0x8002A224);
ZZ_MARK(0x8002A228);
ZZ_MARK(0x8002A22C);
ZZ_MARK(0x8002A230);
ZZ_MARK(0x8002A234);
ZZ_MARK_TARGET(0x8002A238,ZZ_29FA4_294);
ZZ_MARK(0x8002A23C);
ZZ_MARK(0x8002A240);
ZZ_MARK(0x8002A244);
ZZ_MARK(0x8002A248);
ZZ_MARK(0x8002A24C);
ZZ_MARK(0x8002A250);
ZZ_MARK(0x8002A254);
ZZ_MARK(0x8002A258);
ZZ_MARK_TARGET(0x8002A25C,ZZ_29FA4_2B8);
ZZ_MARK(0x8002A260);
ZZ_MARK(0x8002A264);
ZZ_MARK(0x8002A268);
ZZ_MARK(0x8002A26C);
ZZ_MARK_TARGET(0x8002A270,ZZ_29FA4_2CC);
ZZ_MARK(0x8002A274);
ZZ_MARK(0x8002A278);
ZZ_MARK(0x8002A27C);
ZZ_MARK(0x8002A280);
ZZ_MARK(0x8002A284);
ZZ_MARK(0x8002A288);
ZZ_MARK(0x8002A28C);
ZZ_MARK(0x8002A290);
ZZ_MARK(0x8002A294);
ZZ_MARK(0x8002A298);
ZZ_MARK_TARGET(0x8002A29C,ZZ_29FA4_2F8);
ZZ_MARK(0x8002A2A0);
ZZ_MARK(0x8002A2A4);
ZZ_MARK(0x8002A2A8);
ZZ_MARK(0x8002A2AC);
ZZ_MARK_TARGET(0x8002A2B0,ZZ_29FA4_30C);
ZZ_MARK(0x8002A2B4);
ZZ_MARK(0x8002A2B8);
ZZ_MARK(0x8002A2BC);
ZZ_MARK(0x8002A2C0);
ZZ_MARK(0x8002A2C4);
ZZ_MARK(0x8002A2C8);
ZZ_MARK(0x8002A2CC);
ZZ_MARK(0x8002A2D0);
ZZ_MARK(0x8002A2D4);
ZZ_MARK(0x8002A2D8);
ZZ_MARK(0x8002A2DC);
ZZ_MARK_TARGET(0x8002A2E0,ZZ_29FA4_33C);
ZZ_MARK(0x8002A2E4);
ZZ_MARK(0x8002A2E8);
ZZ_MARK(0x8002A2EC);
ZZ_MARK_TARGET(0x8002A2F0,ZZ_29FA4_34C);
ZZ_MARK(0x8002A2F4);
ZZ_MARK(0x8002A2F8);
ZZ_MARK(0x8002A2FC);
ZZ_MARK(0x8002A300);
ZZ_MARK(0x8002A304);
ZZ_MARK(0x8002A308);
ZZ_MARK(0x8002A30C);
ZZ_MARK(0x8002A310);
ZZ_MARK(0x8002A314);
ZZ_MARK_TARGET(0x8002A318,ZZ_29FA4_374);
ZZ_MARK(0x8002A31C);
ZZ_MARK(0x8002A320);
ZZ_MARK(0x8002A324);
ZZ_MARK(0x8002A328);
ZZ_MARK(0x8002A32C);
ZZ_MARK(0x8002A330);
ZZ_MARK(0x8002A334);
ZZ_MARK_TARGET(0x8002A338,ZZ_29FA4_394);
ZZ_MARK(0x8002A33C);
ZZ_MARK(0x8002A340);
ZZ_MARK(0x8002A344);
ZZ_MARK(0x8002A348);
ZZ_MARK(0x8002A34C);
ZZ_MARK(0x8002A350);
ZZ_MARK(0x8002A354);
ZZ_MARK_TARGET(0x8002A358,ZZ_29FA4_3B4);
ZZ_MARK(0x8002A35C);
ZZ_MARK(0x8002A360);
ZZ_MARK(0x8002A364);
ZZ_MARK(0x8002A368);
ZZ_MARK_TARGET(0x8002A36C,ZZ_29FA4_3C8);
ZZ_MARK(0x8002A370);
ZZ_MARK_TARGET(0x8002A374,ZZ_29FA4_3D0);
ZZ_MARK(0x8002A378);
ZZ_MARK(0x8002A37C);
ZZ_MARK(0x8002A380);
ZZ_MARK(0x8002A384);
ZZ_MARK(0x8002A388);
ZZ_MARK(0x8002A38C);
ZZ_MARK_TARGET(0x8002A390,ZZ_29FA4_3EC);
ZZ_MARK(0x8002A394);
ZZ_MARK(0x8002A398);
ZZ_MARK(0x8002A39C);
ZZ_MARK_TARGET(0x8002A3A0,ZZ_29FA4_3FC);
ZZ_MARK(0x8002A3A4);
ZZ_MARK_TARGET(0x8002A3A8,ZZ_29FA4_404);
ZZ_MARK(0x8002A3AC);
ZZ_MARK(0x8002A3B0);
ZZ_MARK(0x8002A3B4);
ZZ_MARK(0x8002A3B8);
ZZ_MARK(0x8002A3BC);
ZZ_MARK(0x8002A3C0);
ZZ_MARK(0x8002A3C4);
ZZ_MARK_TARGET(0x8002A3C8,ZZ_29FA4_424);
ZZ_MARK(0x8002A3CC);
ZZ_MARK(0x8002A3D0);
ZZ_MARK(0x8002A3D4);
ZZ_MARK(0x8002A3D8);
ZZ_MARK(0x8002A3DC);
ZZ_MARK(0x8002A3E0);
ZZ_MARK(0x8002A3E4);
ZZ_MARK_TARGET(0x8002A3E8,ZZ_29FA4_444);
ZZ_MARK(0x8002A3EC);
ZZ_MARK(0x8002A3F0);
ZZ_MARK(0x8002A3F4);
ZZ_MARK(0x8002A3F8);
ZZ_MARK(0x8002A3FC);
ZZ_MARK_TARGET(0x8002A400,ZZ_29FA4_45C);
ZZ_MARK_TARGET(0x8002A404,ZZ_29FA4_460);
ZZ_MARK(0x8002A408);
ZZ_MARK(0x8002A40C);
ZZ_MARK(0x8002A410);
ZZ_MARK(0x8002A414);
ZZ_MARK(0x8002A418);
ZZ_MARK(0x8002A41C);
ZZ_MARK(0x8002A420);
ZZ_MARK(0x8002A424);
ZZ_MARK(0x8002A428);
ZZ_MARK(0x8002A42C);
ZZ_MARK(0x8002A430);
ZZ_MARK(0x8002A434);
ZZ_MARK(0x8002A438);
ZZ_MARK(0x8002A43C);
ZZ_MARK(0x8002A440);
ZZ_MARK(0x8002A444);
ZZ_MARK(0x8002A448);
ZZ_MARK(0x8002A44C);
ZZ_MARK(0x8002A450);
ZZ_MARK(0x8002A454);
ZZ_MARK(0x8002A458);
ZZ_MARK(0x8002A45C);
ZZ_MARK_TARGET(0x8002A460,ZZ_29FA4_4BC);
ZZ_MARK(0x8002A464);
ZZ_MARK(0x8002A468);
ZZ_MARK_TARGET(0x8002A46C,ZZ_29FA4_4C8);
ZZ_MARK(0x8002A470);
ZZ_MARK(0x8002A474);
ZZ_MARK(0x8002A478);
ZZ_MARK(0x8002A47C);
ZZ_MARK(0x8002A480);
ZZ_MARK(0x8002A484);
ZZ_MARK_TARGET(0x8002A488,ZZ_29FA4_4E4);
ZZ_MARK(0x8002A48C);
ZZ_MARK(0x8002A490);
ZZ_MARK(0x8002A494);
ZZ_MARK_TARGET(0x8002A498,ZZ_29FA4_4F4);
ZZ_MARK(0x8002A49C);
ZZ_MARK(0x8002A4A0);
ZZ_MARK(0x8002A4A4);
ZZ_MARK(0x8002A4A8);
ZZ_MARK(0x8002A4AC);
ZZ_MARK(0x8002A4B0);
ZZ_MARK(0x8002A4B4);
ZZ_MARK(0x8002A4B8);
ZZ_MARK(0x8002A4BC);
ZZ_MARK(0x8002A4C0);
ZZ_MARK(0x8002A4C4);
ZZ_MARK(0x8002A4C8);
