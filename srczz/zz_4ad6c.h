#ifdef ZZ_INCLUDE_CODE
ZZ_4AD6C:
	SP -= 40;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A0;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A1;
	A1 = 0x80060000;
	A1 -= 12680;
	V0 = S1 << 2;
	A0 = V0 + A1;
	EMU_Write32(SP + 36,RA); //+ 0x24
	EMU_Write32(SP + 32,S4); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	EMU_Write32(SP + 16,S0); //+ 0x10
	S4 = EMU_ReadU32(A0);
	if (S2 == S4)
	{
		V0 = S4;
		ZZ_CLOCKCYCLES(17,0x8004AE9C);
		goto ZZ_4AD6C_130;
	}
	V0 = S4;
	V0 = EMU_ReadU16(A1 - 4); //+ 0xFFFFFFFC
	if (!V0)
	{
		V0 = S4;
		ZZ_CLOCKCYCLES(21,0x8004AE9C);
		goto ZZ_4AD6C_130;
	}
	V0 = S4;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8444); //+ 0xFFFFDF04
	V1 = EMU_ReadU16(V0);
	EMU_Write16(V0,R0);
	if (!S2)
	{
		S3 = V1 & 0xFFFF;
		ZZ_CLOCKCYCLES(28,0x8004ADFC);
		goto ZZ_4AD6C_90;
	}
	S3 = V1 & 0xFFFF;
	V1 = 1;
	V1 <<= S1;
	EMU_Write32(A0,S2);
	V0 = EMU_ReadU16(A1 + 44); //+ 0x2C
	S3 |= V1;
	V0 |= V1;
	EMU_Write16(A1 + 44,V0); //+ 0x2C
	ZZ_CLOCKCYCLES(36,0x8004AE24);
	goto ZZ_4AD6C_B8;
ZZ_4AD6C_90:
	V0 = 1;
	V0 <<= S1;
	V0 = ~V0;
	EMU_Write32(A0,R0);
	V1 = 0x80060000;
	V1 = EMU_ReadU16(V1 - 12636); //+ 0xFFFFCEA4
	S3 &= V0;
	V1 &= V0;
	AT = 0x80060000;
	EMU_Write16(AT - 12636,V1); //+ 0xFFFFCEA4
	ZZ_CLOCKCYCLES(10,0x8004AE24);
ZZ_4AD6C_B8:
	if (S1)
	{
		V0 = 4;
		ZZ_CLOCKCYCLES(2,0x8004AE48);
		goto ZZ_4AD6C_DC;
	}
	V0 = 4;
	S0 = S2 < 1;
	RA = 0x8004AE38; //ZZ_4AD6C_CC
	A0 = S0;
	ZZ_CLOCKCYCLES(5,0x8004A054);
	goto ZZ_4A054;
ZZ_4AD6C_CC:
	A0 = 3;
	RA = 0x8004AE44; //ZZ_4AD6C_D8
	A1 = S0;
	ZZ_CLOCKCYCLES(3,0x8004A900);
	goto ZZ_4A900;
ZZ_4AD6C_D8:
	V0 = 4;
	ZZ_CLOCKCYCLES(1,0x8004AE48);
ZZ_4AD6C_DC:
	if (S1 != V0)
	{
		V0 = 5;
		ZZ_CLOCKCYCLES(2,0x8004AE60);
		goto ZZ_4AD6C_F4;
	}
	V0 = 5;
	A0 = R0;
	RA = 0x8004AE5C; //ZZ_4AD6C_F0
	A1 = S2 < 1;
	ZZ_CLOCKCYCLES(5,0x8004A900);
	goto ZZ_4A900;
ZZ_4AD6C_F0:
	V0 = 5;
	ZZ_CLOCKCYCLES(1,0x8004AE60);
ZZ_4AD6C_F4:
	if (S1 != V0)
	{
		V0 = 6;
		ZZ_CLOCKCYCLES(2,0x8004AE78);
		goto ZZ_4AD6C_10C;
	}
	V0 = 6;
	A0 = 1;
	RA = 0x8004AE74; //ZZ_4AD6C_108
	A1 = S2 < 1;
	ZZ_CLOCKCYCLES(5,0x8004A900);
	goto ZZ_4A900;
ZZ_4AD6C_108:
	V0 = 6;
	ZZ_CLOCKCYCLES(1,0x8004AE78);
ZZ_4AD6C_10C:
	if (S1 != V0)
	{
		A0 = 2;
		ZZ_CLOCKCYCLES(2,0x8004AE88);
		goto ZZ_4AD6C_11C;
	}
	A0 = 2;
	RA = 0x8004AE88; //ZZ_4AD6C_11C
	A1 = S2 < 1;
	ZZ_CLOCKCYCLES(4,0x8004A900);
	goto ZZ_4A900;
ZZ_4AD6C_11C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8444); //+ 0xFFFFDF04
	EMU_Write16(V0,S3);
	V0 = S4;
	ZZ_CLOCKCYCLES(5,0x8004AE9C);
ZZ_4AD6C_130:
	RA = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(9);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004AD6C,0x8004ADFC,ZZ_4AD6C);
ZZ_MARK_TARGET(0x8004ADFC,0x8004AE24,ZZ_4AD6C_90);
ZZ_MARK_TARGET(0x8004AE24,0x8004AE38,ZZ_4AD6C_B8);
ZZ_MARK_TARGET(0x8004AE38,0x8004AE44,ZZ_4AD6C_CC);
ZZ_MARK_TARGET(0x8004AE44,0x8004AE48,ZZ_4AD6C_D8);
ZZ_MARK_TARGET(0x8004AE48,0x8004AE5C,ZZ_4AD6C_DC);
ZZ_MARK_TARGET(0x8004AE5C,0x8004AE60,ZZ_4AD6C_F0);
ZZ_MARK_TARGET(0x8004AE60,0x8004AE74,ZZ_4AD6C_F4);
ZZ_MARK_TARGET(0x8004AE74,0x8004AE78,ZZ_4AD6C_108);
ZZ_MARK_TARGET(0x8004AE78,0x8004AE88,ZZ_4AD6C_10C);
ZZ_MARK_TARGET(0x8004AE88,0x8004AE9C,ZZ_4AD6C_11C);
ZZ_MARK_TARGET(0x8004AE9C,0x8004AEC0,ZZ_4AD6C_130);
