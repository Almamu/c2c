#ifdef ZZ_INCLUDE_CODE
ZZ_34D74:
	SP -= 24;
	EMU_Write32(SP + 16,S0); //+ 0x10
	EMU_Write32(SP + 20,RA); //+ 0x14
	RA = 0x80034D88; //ZZ_34D74_14
	S0 = A0;
	ZZ_CLOCKCYCLES(5,0x80035DD8);
	goto ZZ_35DD8;
ZZ_34D74_14:
	if (!V0)
	{
		A0 = 0x2;
		ZZ_CLOCKCYCLES(2,0x80034DEC);
		goto ZZ_34D74_78;
	}
	A0 = 0x2;
	V0 = EMU_ReadU32(GP + 232); //+ 0xE8
	RA = 0x80034D9C; //ZZ_34D74_28
	EMU_Write32(V0 + 8,R0); //+ 0x8
	ZZ_CLOCKCYCLES(5,0x800363C8);
	goto ZZ_363C8;
ZZ_34D74_28:
	RA = 0x80034DA4; //ZZ_34D74_30
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x80036410);
	goto ZZ_36410;
ZZ_34D74_30:
	V1 = EMU_ReadU32(S0 + 4); //+ 0x4
	A0 = EMU_ReadU32(GP + 232); //+ 0xE8
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 2;
	A0 += V0;
	V0 = EMU_ReadU32(A0 + 40); //+ 0x28
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x80034DEC);
		goto ZZ_34D74_78;
	}
	RA = 0x80034DDC; //ZZ_34D74_68
	A0 = 0x80;
	ZZ_CLOCKCYCLES(14,0x800363C8);
	goto ZZ_363C8;
ZZ_34D74_68:
	RA = 0x80034DE4; //ZZ_34D74_70
	ZZ_CLOCKCYCLES(2,0x80036B58);
	goto ZZ_36B58;
ZZ_34D74_70:
	RA = 0x80034DEC; //ZZ_34D74_78
	ZZ_CLOCKCYCLES(2,0x80036AE8);
	goto ZZ_36AE8;
ZZ_34D74_78:
	A0 = EMU_ReadU32(S0);
	RA = 0x80034DF8; //ZZ_34D74_84
	ZZ_CLOCKCYCLES(3,0x80036270);
	goto ZZ_36270;
ZZ_34D74_84:
	RA = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(5);
	ZZ_JUMPREGISTER(0x80035110,ZZ_34F00_210);
	ZZ_JUMPREGISTER(0x80035358,ZZ_34F00_458);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80034D74,0x80034D88,ZZ_34D74);
ZZ_MARK_TARGET(0x80034D88,0x80034D9C,ZZ_34D74_14);
ZZ_MARK_TARGET(0x80034D9C,0x80034DA4,ZZ_34D74_28);
ZZ_MARK_TARGET(0x80034DA4,0x80034DDC,ZZ_34D74_30);
ZZ_MARK_TARGET(0x80034DDC,0x80034DE4,ZZ_34D74_68);
ZZ_MARK_TARGET(0x80034DE4,0x80034DEC,ZZ_34D74_70);
ZZ_MARK_TARGET(0x80034DEC,0x80034DF8,ZZ_34D74_78);
ZZ_MARK_TARGET(0x80034DF8,0x80034E0C,ZZ_34D74_84);
