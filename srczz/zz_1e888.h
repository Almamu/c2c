#ifdef ZZ_INCLUDE_CODE
ZZ_1E888:
	SP -= 40;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A1;
	EMU_Write32(SP + 24,S2); //+ 0x18
	S2 = A0 & 0xFFF;
	EMU_SDivide(S2,S1);
	if (S1)
	{
		ZZ_CLOCKCYCLES(8,0x8001E8AC);
		goto ZZ_1E888_24;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(9,0x8001E8AC);
ZZ_1E888_24:
	AT = -1;
	if (S1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001E8C4);
		goto ZZ_1E888_3C;
	}
	AT = 0x80000000;
	if (S2 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001E8C4);
		goto ZZ_1E888_3C;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001E8C4);
ZZ_1E888_3C:
	A0 = HI;
	A0 <<= 11;
	EMU_SDivide(A0,S1);
	if (S1)
	{
		ZZ_CLOCKCYCLES(6,0x8001E8E0);
		goto ZZ_1E888_58;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(7,0x8001E8E0);
ZZ_1E888_58:
	AT = -1;
	if (S1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001E8F8);
		goto ZZ_1E888_70;
	}
	AT = 0x80000000;
	if (A0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001E8F8);
		goto ZZ_1E888_70;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001E8F8);
ZZ_1E888_70:
	A0 = LO;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A2;
	EMU_Write32(SP + 32,RA); //+ 0x20
	EMU_Write32(SP + 28,S3); //+ 0x1C
	V0 = 0xFFFF;
	V0 = (int32_t)V0 < (int32_t)S1;
	S3 = V0 << 1;
	RA = 0x8001E920; //ZZ_1E888_98
	A0 -= 1024;
	ZZ_CLOCKCYCLES(10,0x8003D584);
	goto ZZ_3D584;
ZZ_1E888_98:
	EMU_SMultiply(V0,S0);
	A3 = LO;
	V1 = (int32_t)A3 >> 12;
	V0 = (int32_t)V1 < 4096;
	if (!V0)
	{
		V0 = (int32_t)V1 < -4096;
		ZZ_CLOCKCYCLES(6,0x8001E948);
		goto ZZ_1E888_C0;
	}
	V0 = (int32_t)V1 < -4096;
	if (V0)
	{
		A0 = -4096;
		ZZ_CLOCKCYCLES(8,0x8001E94C);
		goto ZZ_1E888_C4;
	}
	A0 = -4096;
	A0 = V1;
	ZZ_CLOCKCYCLES(10,0x8001E94C);
	goto ZZ_1E888_C4;
ZZ_1E888_C0:
	A0 = 0x1000;
	ZZ_CLOCKCYCLES(1,0x8001E94C);
ZZ_1E888_C4:
	EMU_SDivide(S2,S1);
	if (S1)
	{
		ZZ_CLOCKCYCLES(3,0x8001E95C);
		goto ZZ_1E888_D4;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(4,0x8001E95C);
ZZ_1E888_D4:
	AT = -1;
	if (S1 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8001E974);
		goto ZZ_1E888_EC;
	}
	AT = 0x80000000;
	if (S2 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8001E974);
		goto ZZ_1E888_EC;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8001E974);
ZZ_1E888_EC:
	V1 = LO;
	V0 = A0 + 4096;
	V0 = (int32_t)V0 >> S3;
	EMU_SMultiply(V0,S1);
	T0 = LO;
	EMU_SMultiply(V1,S1);
	V0 = 0xD;
	V0 = V0 - S3;
	V1 = (int32_t)T0 >> V0;
	A0 = LO;
	V0 = A0 + V1;
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(21);
	ZZ_JUMPREGISTER(0x80015BF0,ZZ_15A04_1EC);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001E888,ZZ_1E888);
ZZ_MARK(0x8001E88C);
ZZ_MARK(0x8001E890);
ZZ_MARK(0x8001E894);
ZZ_MARK(0x8001E898);
ZZ_MARK(0x8001E89C);
ZZ_MARK(0x8001E8A0);
ZZ_MARK(0x8001E8A4);
ZZ_MARK(0x8001E8A8);
ZZ_MARK_TARGET(0x8001E8AC,ZZ_1E888_24);
ZZ_MARK(0x8001E8B0);
ZZ_MARK(0x8001E8B4);
ZZ_MARK(0x8001E8B8);
ZZ_MARK(0x8001E8BC);
ZZ_MARK(0x8001E8C0);
ZZ_MARK_TARGET(0x8001E8C4,ZZ_1E888_3C);
ZZ_MARK(0x8001E8C8);
ZZ_MARK(0x8001E8CC);
ZZ_MARK(0x8001E8D0);
ZZ_MARK(0x8001E8D4);
ZZ_MARK(0x8001E8D8);
ZZ_MARK(0x8001E8DC);
ZZ_MARK_TARGET(0x8001E8E0,ZZ_1E888_58);
ZZ_MARK(0x8001E8E4);
ZZ_MARK(0x8001E8E8);
ZZ_MARK(0x8001E8EC);
ZZ_MARK(0x8001E8F0);
ZZ_MARK(0x8001E8F4);
ZZ_MARK_TARGET(0x8001E8F8,ZZ_1E888_70);
ZZ_MARK(0x8001E8FC);
ZZ_MARK(0x8001E900);
ZZ_MARK(0x8001E904);
ZZ_MARK(0x8001E908);
ZZ_MARK(0x8001E90C);
ZZ_MARK(0x8001E910);
ZZ_MARK(0x8001E914);
ZZ_MARK(0x8001E918);
ZZ_MARK(0x8001E91C);
ZZ_MARK_TARGET(0x8001E920,ZZ_1E888_98);
ZZ_MARK(0x8001E924);
ZZ_MARK(0x8001E928);
ZZ_MARK(0x8001E92C);
ZZ_MARK(0x8001E930);
ZZ_MARK(0x8001E934);
ZZ_MARK(0x8001E938);
ZZ_MARK(0x8001E93C);
ZZ_MARK(0x8001E940);
ZZ_MARK(0x8001E944);
ZZ_MARK_TARGET(0x8001E948,ZZ_1E888_C0);
ZZ_MARK_TARGET(0x8001E94C,ZZ_1E888_C4);
ZZ_MARK(0x8001E950);
ZZ_MARK(0x8001E954);
ZZ_MARK(0x8001E958);
ZZ_MARK_TARGET(0x8001E95C,ZZ_1E888_D4);
ZZ_MARK(0x8001E960);
ZZ_MARK(0x8001E964);
ZZ_MARK(0x8001E968);
ZZ_MARK(0x8001E96C);
ZZ_MARK(0x8001E970);
ZZ_MARK_TARGET(0x8001E974,ZZ_1E888_EC);
ZZ_MARK(0x8001E978);
ZZ_MARK(0x8001E97C);
ZZ_MARK(0x8001E980);
ZZ_MARK(0x8001E984);
ZZ_MARK(0x8001E988);
ZZ_MARK(0x8001E98C);
ZZ_MARK(0x8001E990);
ZZ_MARK(0x8001E994);
ZZ_MARK(0x8001E998);
ZZ_MARK(0x8001E99C);
ZZ_MARK(0x8001E9A0);
ZZ_MARK(0x8001E9A4);
ZZ_MARK(0x8001E9A8);
ZZ_MARK(0x8001E9AC);
ZZ_MARK(0x8001E9B0);
ZZ_MARK(0x8001E9B4);
ZZ_MARK(0x8001E9B8);
ZZ_MARK(0x8001E9BC);
ZZ_MARK(0x8001E9C0);
ZZ_MARK(0x8001E9C4);
