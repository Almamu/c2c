#ifdef ZZ_INCLUDE_CODE
ZZ_565C8:
	SP -= 24;
	AT = 0x80070000;
	EMU_Write16(AT - 13092,A1); //+ 0xFFFFCCDC
	A1 <<= 16;
	A1 = (int32_t)A1 >> 16;
	AT = 0x80070000;
	EMU_Write16(AT - 13088,A2); //+ 0xFFFFCCE0
	if ((int32_t)A1 <= 0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(9,0x80056630);
		goto ZZ_565C8_68;
	}
	A3 = R0;
	V0 = A2 << 16;
	T0 = (int32_t)V0 >> 16;
	A2 = 0x80070000;
	A2 -= 15268;
	V1 = R0;
	ZZ_CLOCKCYCLES(14,0x80056600);
ZZ_565C8_38:
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 4;
	V0 += A0;
	EMU_Write32(A2,V0);
	A2 += 4;
	A3 += 1;
	V0 = (int32_t)A3 < (int32_t)A1;
	if (V0)
	{
		V1 += T0;
		ZZ_CLOCKCYCLES(12,0x80056600);
		goto ZZ_565C8_38;
	}
	V1 += T0;
	ZZ_CLOCKCYCLES(12,0x80056630);
ZZ_565C8_68:
	V0 = 0x80070000;
	V0 = EMU_ReadS16(V0 - 13092); //+ 0xFFFFCCDC
	if ((int32_t)V0 <= 0)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(5,0x80056794);
		goto ZZ_565C8_1CC;
	}
	A3 = R0;
	T0 = 127;
	T1 = 0x80070000;
	T1 -= 15268;
	ZZ_CLOCKCYCLES(8,0x80056650);
ZZ_565C8_88:
	V0 = 0x80070000;
	V0 = EMU_ReadS16(V0 - 13088); //+ 0xFFFFCCE0
	if ((int32_t)V0 <= 0)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(5,0x8005677C);
		goto ZZ_565C8_1B4;
	}
	A2 = R0;
	A1 = T1;
	A0 = R0;
	ZZ_CLOCKCYCLES(7,0x8005666C);
ZZ_565C8_A4:
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 152,R0); //+ 0x98
	V0 = EMU_ReadU32(A1);
	V1 = 255;
	V0 += A0;
	EMU_Write8(V0 + 34,V1); //+ 0x22
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write8(V0 + 35,R0); //+ 0x23
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 72,R0); //+ 0x48
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 74,R0); //+ 0x4A
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 156,R0); //+ 0x9C
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 160,R0); //+ 0xA0
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 76,R0); //+ 0x4C
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 172,R0); //+ 0xAC
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 168,R0); //+ 0xA8
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write32(V0 + 164,R0); //+ 0xA4
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 78,R0); //+ 0x4E
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 88,T0); //+ 0x58
	V0 = EMU_ReadU32(A1);
	V0 += A0;
	EMU_Write16(V0 + 90,T0); //+ 0x5A
	V0 = EMU_ReadU32(A1);
	A2 += 1;
	V0 += A0;
	EMU_Write16(V0 + 92,T0); //+ 0x5C
	V1 = EMU_ReadU32(A1);
	V0 = 0x80070000;
	V0 = EMU_ReadS16(V0 - 13088); //+ 0xFFFFCCE0
	V1 += A0;
	A0 += 176;
	V0 = (int32_t)A2 < (int32_t)V0;
	if (V0)
	{
		EMU_Write16(V1 + 94,T0); //+ 0x5E
		ZZ_CLOCKCYCLES(68,0x8005666C);
		goto ZZ_565C8_A4;
	}
	EMU_Write16(V1 + 94,T0); //+ 0x5E
	ZZ_CLOCKCYCLES(68,0x8005677C);
ZZ_565C8_1B4:
	V0 = 0x80070000;
	V0 = EMU_ReadS16(V0 - 13092); //+ 0xFFFFCCDC
	A3 += 1;
	V0 = (int32_t)A3 < (int32_t)V0;
	if (V0)
	{
		T1 += 4;
		ZZ_CLOCKCYCLES(6,0x80056650);
		goto ZZ_565C8_88;
	}
	T1 += 4;
	ZZ_CLOCKCYCLES(6,0x80056794);
ZZ_565C8_1CC:
	SP += 24;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x80032810,ZZ_327B4_5C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800565C8,ZZ_565C8);
ZZ_MARK(0x800565CC);
ZZ_MARK(0x800565D0);
ZZ_MARK(0x800565D4);
ZZ_MARK(0x800565D8);
ZZ_MARK(0x800565DC);
ZZ_MARK(0x800565E0);
ZZ_MARK(0x800565E4);
ZZ_MARK(0x800565E8);
ZZ_MARK(0x800565EC);
ZZ_MARK(0x800565F0);
ZZ_MARK(0x800565F4);
ZZ_MARK(0x800565F8);
ZZ_MARK(0x800565FC);
ZZ_MARK_TARGET(0x80056600,ZZ_565C8_38);
ZZ_MARK(0x80056604);
ZZ_MARK(0x80056608);
ZZ_MARK(0x8005660C);
ZZ_MARK(0x80056610);
ZZ_MARK(0x80056614);
ZZ_MARK(0x80056618);
ZZ_MARK(0x8005661C);
ZZ_MARK(0x80056620);
ZZ_MARK(0x80056624);
ZZ_MARK(0x80056628);
ZZ_MARK(0x8005662C);
ZZ_MARK_TARGET(0x80056630,ZZ_565C8_68);
ZZ_MARK(0x80056634);
ZZ_MARK(0x80056638);
ZZ_MARK(0x8005663C);
ZZ_MARK(0x80056640);
ZZ_MARK(0x80056644);
ZZ_MARK(0x80056648);
ZZ_MARK(0x8005664C);
ZZ_MARK_TARGET(0x80056650,ZZ_565C8_88);
ZZ_MARK(0x80056654);
ZZ_MARK(0x80056658);
ZZ_MARK(0x8005665C);
ZZ_MARK(0x80056660);
ZZ_MARK(0x80056664);
ZZ_MARK(0x80056668);
ZZ_MARK_TARGET(0x8005666C,ZZ_565C8_A4);
ZZ_MARK(0x80056670);
ZZ_MARK(0x80056674);
ZZ_MARK(0x80056678);
ZZ_MARK(0x8005667C);
ZZ_MARK(0x80056680);
ZZ_MARK(0x80056684);
ZZ_MARK(0x80056688);
ZZ_MARK(0x8005668C);
ZZ_MARK(0x80056690);
ZZ_MARK(0x80056694);
ZZ_MARK(0x80056698);
ZZ_MARK(0x8005669C);
ZZ_MARK(0x800566A0);
ZZ_MARK(0x800566A4);
ZZ_MARK(0x800566A8);
ZZ_MARK(0x800566AC);
ZZ_MARK(0x800566B0);
ZZ_MARK(0x800566B4);
ZZ_MARK(0x800566B8);
ZZ_MARK(0x800566BC);
ZZ_MARK(0x800566C0);
ZZ_MARK(0x800566C4);
ZZ_MARK(0x800566C8);
ZZ_MARK(0x800566CC);
ZZ_MARK(0x800566D0);
ZZ_MARK(0x800566D4);
ZZ_MARK(0x800566D8);
ZZ_MARK(0x800566DC);
ZZ_MARK(0x800566E0);
ZZ_MARK(0x800566E4);
ZZ_MARK(0x800566E8);
ZZ_MARK(0x800566EC);
ZZ_MARK(0x800566F0);
ZZ_MARK(0x800566F4);
ZZ_MARK(0x800566F8);
ZZ_MARK(0x800566FC);
ZZ_MARK(0x80056700);
ZZ_MARK(0x80056704);
ZZ_MARK(0x80056708);
ZZ_MARK(0x8005670C);
ZZ_MARK(0x80056710);
ZZ_MARK(0x80056714);
ZZ_MARK(0x80056718);
ZZ_MARK(0x8005671C);
ZZ_MARK(0x80056720);
ZZ_MARK(0x80056724);
ZZ_MARK(0x80056728);
ZZ_MARK(0x8005672C);
ZZ_MARK(0x80056730);
ZZ_MARK(0x80056734);
ZZ_MARK(0x80056738);
ZZ_MARK(0x8005673C);
ZZ_MARK(0x80056740);
ZZ_MARK(0x80056744);
ZZ_MARK(0x80056748);
ZZ_MARK(0x8005674C);
ZZ_MARK(0x80056750);
ZZ_MARK(0x80056754);
ZZ_MARK(0x80056758);
ZZ_MARK(0x8005675C);
ZZ_MARK(0x80056760);
ZZ_MARK(0x80056764);
ZZ_MARK(0x80056768);
ZZ_MARK(0x8005676C);
ZZ_MARK(0x80056770);
ZZ_MARK(0x80056774);
ZZ_MARK(0x80056778);
ZZ_MARK_TARGET(0x8005677C,ZZ_565C8_1B4);
ZZ_MARK(0x80056780);
ZZ_MARK(0x80056784);
ZZ_MARK(0x80056788);
ZZ_MARK(0x8005678C);
ZZ_MARK(0x80056790);
ZZ_MARK_TARGET(0x80056794,ZZ_565C8_1CC);
ZZ_MARK(0x80056798);
ZZ_MARK(0x8005679C);
