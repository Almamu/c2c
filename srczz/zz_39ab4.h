#ifdef ZZ_INCLUDE_CODE
ZZ_39AB4:
	SP -= 32;
	T0 = A0;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A1;
	EMU_Write32(SP + 20,S1); //+ 0x14
	V0 = S0 >> 22;
	A0 = V0 & 0x3;
	V0 = S0 >> 20;
	V1 = V0 & 0x3;
	V0 = A2 & 0x8;
	EMU_Write32(SP + 24,RA); //+ 0x18
	AT = 0x1F800000;
	EMU_Write32(AT + 72,A2); //+ 0x48
	if (V0)
	{
		S1 = A3;
		ZZ_CLOCKCYCLES(15,0x80039AF8);
		goto ZZ_39AB4_44;
	}
	S1 = A3;
	V0 = -14;
	ZZ_CLOCKCYCLES(17,0x80039C94);
	goto ZZ_39AB4_1E0;
ZZ_39AB4_44:
	V0 = 0x1;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x80039B24);
		goto ZZ_39AB4_70;
	}
	if (!V1)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(5,0x80039B1C);
		goto ZZ_39AB4_68;
	}
	V0 = 0x2;
	if (V1 == V0)
	{
		V0 = S0 >> 14;
		ZZ_CLOCKCYCLES(7,0x80039B60);
		goto ZZ_39AB4_AC;
	}
	V0 = S0 >> 14;
	ZZ_CLOCKCYCLES(9,0x80039B98);
	goto ZZ_39AB4_E4;
ZZ_39AB4_68:
	T1 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80039B98);
	goto ZZ_39AB4_E4;
ZZ_39AB4_70:
	V0 = S0 >> 14;
	V1 = V0 & 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80039B4C);
		goto ZZ_39AB4_98;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(T0 + 188); //+ 0xBC
	V0 -= 4;
	EMU_Write32(T0 + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(10,0x80039B54);
	goto ZZ_39AB4_A0;
ZZ_39AB4_98:
	V0 += 64;
	V0 += T0;
	ZZ_CLOCKCYCLES(2,0x80039B54);
ZZ_39AB4_A0:
	T1 = EMU_ReadU32(V0);
	ZZ_CLOCKCYCLES(3,0x80039B98);
	goto ZZ_39AB4_E4;
ZZ_39AB4_AC:
	V1 = V0 & 0x3F;
	V0 = 0x1F;
	if (V1 != V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(4,0x80039B84);
		goto ZZ_39AB4_D0;
	}
	V0 = V1 << 2;
	V0 = EMU_ReadU32(T0 + 188); //+ 0xBC
	V0 -= 4;
	EMU_Write32(T0 + 188,V0); //+ 0xBC
	ZZ_CLOCKCYCLES(9,0x80039B8C);
	goto ZZ_39AB4_D8;
ZZ_39AB4_D0:
	V0 += 64;
	V0 += T0;
	ZZ_CLOCKCYCLES(2,0x80039B8C);
ZZ_39AB4_D8:
	V0 = EMU_ReadU32(V0);
	T1 = V0 < 1;
	ZZ_CLOCKCYCLES(3,0x80039B98);
ZZ_39AB4_E4:
	if (!T1)
	{
		A2 |= 0x20;
		ZZ_CLOCKCYCLES(2,0x80039C60);
		goto ZZ_39AB4_1AC;
	}
	A2 |= 0x20;
	V0 = S0 >> 24;
	V0 ^= 0x3D;
	V0 = R0 < V0;
	EMU_Write32(S1 + 4,V0); //+ 0x4
	V0 = 0x1;
	AT = 0x1F800000;
	EMU_Write32(AT + 72,A2); //+ 0x48
	if (A0 == V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(11,0x80039BF0);
		goto ZZ_39AB4_13C;
	}
	V0 = 0x2;
	if (A0 != V0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(13,0x80039C94);
		goto ZZ_39AB4_1E0;
	}
	V0 = R0;
	A0 = T0;
	RA = 0x80039BD8; //ZZ_39AB4_124
	A1 = R0;
	ZZ_CLOCKCYCLES(16,0x8001C7C0);
	goto ZZ_1C7C0;
ZZ_39AB4_124:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (!V0)
	{
		V0 = 0xFF;
		ZZ_CLOCKCYCLES(4,0x80039C4C);
		goto ZZ_39AB4_198;
	}
	V0 = 0xFF;
	EMU_Write32(S1,V0);
	ZZ_CLOCKCYCLES(6,0x80039C58);
	goto ZZ_39AB4_1A4;
ZZ_39AB4_13C:
	V0 = S0 >> 10;
	A2 = V0 & 0xF;
	A0 = A2 - 1;
	if ((int32_t)A0 < 0)
	{
		V0 = A0 << 2;
		ZZ_CLOCKCYCLES(5,0x80039C2C);
		goto ZZ_39AB4_178;
	}
	V0 = A0 << 2;
	A1 = V0 + S1;
	ZZ_CLOCKCYCLES(6,0x80039C08);
ZZ_39AB4_154:
	V0 = EMU_ReadU32(T0 + 188); //+ 0xBC
	V1 = V0 - 4;
	EMU_Write32(T0 + 188,V1); //+ 0xBC
	V0 = EMU_ReadU32(V0 - 4); //+ 0xFFFFFFFC
	A0 -= 1;
	EMU_Write32(A1 + 12,V0); //+ 0xC
	if ((int32_t)A0 >= 0)
	{
		A1 -= 4;
		ZZ_CLOCKCYCLES(9,0x80039C08);
		goto ZZ_39AB4_154;
	}
	A1 -= 4;
	ZZ_CLOCKCYCLES(9,0x80039C2C);
ZZ_39AB4_178:
	EMU_Write32(S1 + 8,A2); //+ 0x8
	A0 = T0;
	RA = 0x80039C3C; //ZZ_39AB4_188
	A1 = R0;
	ZZ_CLOCKCYCLES(4,0x8001C7C0);
	goto ZZ_1C7C0;
ZZ_39AB4_188:
	V1 = V0;
	V0 = (int32_t)V1 < -254;
	if (V0)
	{
		V0 = S0 & 0x3FF;
		ZZ_CLOCKCYCLES(4,0x80039C54);
		goto ZZ_39AB4_1A0;
	}
	V0 = S0 & 0x3FF;
	ZZ_CLOCKCYCLES(4,0x80039C4C);
ZZ_39AB4_198:
	V0 = V1;
	ZZ_CLOCKCYCLES(2,0x80039C94);
	goto ZZ_39AB4_1E0;
ZZ_39AB4_1A0:
	EMU_Write32(S1,V0);
	ZZ_CLOCKCYCLES(1,0x80039C58);
ZZ_39AB4_1A4:
	V0 = -255;
	ZZ_CLOCKCYCLES(2,0x80039C94);
	goto ZZ_39AB4_1E0;
ZZ_39AB4_1AC:
	if (A0)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(2,0x80039C94);
		goto ZZ_39AB4_1E0;
	}
	V0 = R0;
	V1 = EMU_ReadU32(T0 + 192); //+ 0xC0
	A0 = EMU_ReadU32(T0 + 188); //+ 0xBC
	V0 = S0 << 22;
	V0 = (int32_t)V0 >> 20;
	V1 += V0;
	V0 = S0 >> 8;
	V0 &= 0x3C;
	A0 = A0 - V0;
	EMU_Write32(T0 + 192,V1); //+ 0xC0
	EMU_Write32(T0 + 188,A0); //+ 0xBC
	V0 = R0;
	ZZ_CLOCKCYCLES(13,0x80039C94);
ZZ_39AB4_1E0:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x8003B054,ZZ_3AC50_404);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80039AB4,ZZ_39AB4);
ZZ_MARK(0x80039AB8);
ZZ_MARK(0x80039ABC);
ZZ_MARK(0x80039AC0);
ZZ_MARK(0x80039AC4);
ZZ_MARK(0x80039AC8);
ZZ_MARK(0x80039ACC);
ZZ_MARK(0x80039AD0);
ZZ_MARK(0x80039AD4);
ZZ_MARK(0x80039AD8);
ZZ_MARK(0x80039ADC);
ZZ_MARK(0x80039AE0);
ZZ_MARK(0x80039AE4);
ZZ_MARK(0x80039AE8);
ZZ_MARK(0x80039AEC);
ZZ_MARK(0x80039AF0);
ZZ_MARK(0x80039AF4);
ZZ_MARK_TARGET(0x80039AF8,ZZ_39AB4_44);
ZZ_MARK(0x80039AFC);
ZZ_MARK(0x80039B00);
ZZ_MARK(0x80039B04);
ZZ_MARK(0x80039B08);
ZZ_MARK(0x80039B0C);
ZZ_MARK(0x80039B10);
ZZ_MARK(0x80039B14);
ZZ_MARK(0x80039B18);
ZZ_MARK_TARGET(0x80039B1C,ZZ_39AB4_68);
ZZ_MARK(0x80039B20);
ZZ_MARK_TARGET(0x80039B24,ZZ_39AB4_70);
ZZ_MARK(0x80039B28);
ZZ_MARK(0x80039B2C);
ZZ_MARK(0x80039B30);
ZZ_MARK(0x80039B34);
ZZ_MARK(0x80039B38);
ZZ_MARK(0x80039B3C);
ZZ_MARK(0x80039B40);
ZZ_MARK(0x80039B44);
ZZ_MARK(0x80039B48);
ZZ_MARK_TARGET(0x80039B4C,ZZ_39AB4_98);
ZZ_MARK(0x80039B50);
ZZ_MARK_TARGET(0x80039B54,ZZ_39AB4_A0);
ZZ_MARK(0x80039B58);
ZZ_MARK(0x80039B5C);
ZZ_MARK_TARGET(0x80039B60,ZZ_39AB4_AC);
ZZ_MARK(0x80039B64);
ZZ_MARK(0x80039B68);
ZZ_MARK(0x80039B6C);
ZZ_MARK(0x80039B70);
ZZ_MARK(0x80039B74);
ZZ_MARK(0x80039B78);
ZZ_MARK(0x80039B7C);
ZZ_MARK(0x80039B80);
ZZ_MARK_TARGET(0x80039B84,ZZ_39AB4_D0);
ZZ_MARK(0x80039B88);
ZZ_MARK_TARGET(0x80039B8C,ZZ_39AB4_D8);
ZZ_MARK(0x80039B90);
ZZ_MARK(0x80039B94);
ZZ_MARK_TARGET(0x80039B98,ZZ_39AB4_E4);
ZZ_MARK(0x80039B9C);
ZZ_MARK(0x80039BA0);
ZZ_MARK(0x80039BA4);
ZZ_MARK(0x80039BA8);
ZZ_MARK(0x80039BAC);
ZZ_MARK(0x80039BB0);
ZZ_MARK(0x80039BB4);
ZZ_MARK(0x80039BB8);
ZZ_MARK(0x80039BBC);
ZZ_MARK(0x80039BC0);
ZZ_MARK(0x80039BC4);
ZZ_MARK(0x80039BC8);
ZZ_MARK(0x80039BCC);
ZZ_MARK(0x80039BD0);
ZZ_MARK(0x80039BD4);
ZZ_MARK_TARGET(0x80039BD8,ZZ_39AB4_124);
ZZ_MARK(0x80039BDC);
ZZ_MARK(0x80039BE0);
ZZ_MARK(0x80039BE4);
ZZ_MARK(0x80039BE8);
ZZ_MARK(0x80039BEC);
ZZ_MARK_TARGET(0x80039BF0,ZZ_39AB4_13C);
ZZ_MARK(0x80039BF4);
ZZ_MARK(0x80039BF8);
ZZ_MARK(0x80039BFC);
ZZ_MARK(0x80039C00);
ZZ_MARK(0x80039C04);
ZZ_MARK_TARGET(0x80039C08,ZZ_39AB4_154);
ZZ_MARK(0x80039C0C);
ZZ_MARK(0x80039C10);
ZZ_MARK(0x80039C14);
ZZ_MARK(0x80039C18);
ZZ_MARK(0x80039C1C);
ZZ_MARK(0x80039C20);
ZZ_MARK(0x80039C24);
ZZ_MARK(0x80039C28);
ZZ_MARK_TARGET(0x80039C2C,ZZ_39AB4_178);
ZZ_MARK(0x80039C30);
ZZ_MARK(0x80039C34);
ZZ_MARK(0x80039C38);
ZZ_MARK_TARGET(0x80039C3C,ZZ_39AB4_188);
ZZ_MARK(0x80039C40);
ZZ_MARK(0x80039C44);
ZZ_MARK(0x80039C48);
ZZ_MARK_TARGET(0x80039C4C,ZZ_39AB4_198);
ZZ_MARK(0x80039C50);
ZZ_MARK_TARGET(0x80039C54,ZZ_39AB4_1A0);
ZZ_MARK_TARGET(0x80039C58,ZZ_39AB4_1A4);
ZZ_MARK(0x80039C5C);
ZZ_MARK_TARGET(0x80039C60,ZZ_39AB4_1AC);
ZZ_MARK(0x80039C64);
ZZ_MARK(0x80039C68);
ZZ_MARK(0x80039C6C);
ZZ_MARK(0x80039C70);
ZZ_MARK(0x80039C74);
ZZ_MARK(0x80039C78);
ZZ_MARK(0x80039C7C);
ZZ_MARK(0x80039C80);
ZZ_MARK(0x80039C84);
ZZ_MARK(0x80039C88);
ZZ_MARK(0x80039C8C);
ZZ_MARK(0x80039C90);
ZZ_MARK_TARGET(0x80039C94,ZZ_39AB4_1E0);
ZZ_MARK(0x80039C98);
ZZ_MARK(0x80039C9C);
ZZ_MARK(0x80039CA0);
ZZ_MARK(0x80039CA4);
ZZ_MARK(0x80039CA8);
