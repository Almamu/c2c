#ifdef ZZ_INCLUDE_CODE
ZZ_5A020:
	SP -= 48;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A3;
	EMU_Write32(SP + 32,S4); //+ 0x20
	S4 = R0;
	EMU_Write32(SP + 36,S5); //+ 0x24
	S5 = A0;
	EMU_Write32(SP + 40,S6); //+ 0x28
	S6 = A1;
	V1 = A0 & 0xFF;
	V1 <<= 2;
	A0 &= 0xFF00;
	A0 = (int32_t)A0 >> 8;
	V0 = A0 << 1;
	V0 += A0;
	V0 <<= 2;
	V0 = V0 - A0;
	V0 <<= 4;
	A1 <<= 16;
	A2 <<= 16;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = (int32_t)A2 >> 16;
	A0 = (int32_t)A1 >> 16;
	A1 = S0;
	EMU_Write32(SP + 44,RA); //+ 0x2C
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	AT = 0x80070000;
	AT += V1;
	V1 = EMU_ReadU32(AT - 15268); //+ 0xFFFFC45C
	S2 = EMU_ReadU16(SP + 64); //+ 0x40
	RA = 0x8005A0A4; //ZZ_5A020_84
	S1 = V1 + V0;
	ZZ_CLOCKCYCLES(33,0x8005A59C);
	goto ZZ_5A59C;
ZZ_5A020_84:
	AT = 0x80070000;
	EMU_Write16(AT - 26606,S5); //+ 0xFFFF9812
	if (S2)
	{
		V0 = S3 & 0xFFFF;
		ZZ_CLOCKCYCLES(4,0x8005A0B8);
		goto ZZ_5A020_98;
	}
	V0 = S3 & 0xFFFF;
	S2 = 1;
	ZZ_CLOCKCYCLES(5,0x8005A0B8);
ZZ_5A020_98:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8005A0C4);
		goto ZZ_5A020_A4;
	}
	S3 = 1;
	ZZ_CLOCKCYCLES(3,0x8005A0C4);
ZZ_5A020_A4:
	V0 = 0x80070000;
	V0 = EMU_ReadU8(V0 - 32136); //+ 0xFFFF8278
	V0 = (int32_t)S4 < (int32_t)V0;
	if (!V0)
	{
		T1 = R0;
		ZZ_CLOCKCYCLES(6,0x8005A56C);
		goto ZZ_5A020_54C;
	}
	T1 = R0;
	T5 = S0;
	S0 = T5 << 4;
	T4 = 0x2040000;
	T4 |= 0x811;
	T2 = 0x4100000;
	T2 |= 0x4105;
	T6 = 127;
	T3 = 0x40000;
	T3 |= 0x11;
	T7 = 0x80070000;
	T7 -= 26580;
	T8 = T7 + 2;
	V1 = T1 << 16;
	ZZ_CLOCKCYCLES(19,0x8005A110);
ZZ_5A020_F0:
	V1 = (int32_t)V1 >> 16;
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 = V0 - V1;
	A0 = V0 << 1;
	AT = 0x80060000;
	AT += A0;
	V1 = EMU_ReadS16(AT + 1204); //+ 0x4B4
	V0 = S5 << 16;
	V0 = (int32_t)V0 >> 16;
	if (V1 != V0)
	{
		V0 = T1 + 1;
		ZZ_CLOCKCYCLES(13,0x8005A54C);
		goto ZZ_5A020_52C;
	}
	V0 = T1 + 1;
	AT = 0x80060000;
	AT += A0;
	V0 = EMU_ReadS16(AT + 1208); //+ 0x4B8
	if (V0 != T5)
	{
		V0 = T1 + 1;
		ZZ_CLOCKCYCLES(19,0x8005A54C);
		goto ZZ_5A020_52C;
	}
	V0 = T1 + 1;
	AT = 0x80060000;
	AT += A0;
	V1 = EMU_ReadS16(AT + 1212); //+ 0x4BC
	V0 = S6 << 16;
	V0 = (int32_t)V0 >> 16;
	if (V1 != V0)
	{
		V0 = T1 + 1;
		ZZ_CLOCKCYCLES(26,0x8005A54C);
		goto ZZ_5A020_52C;
	}
	V0 = T1 + 1;
	V0 = EMU_ReadU8(S1 + 23); //+ 0x17
	V0 <<= 1;
	A0 = V0 + S1;
	V1 = EMU_ReadS16(A0 + 96); //+ 0x60
	V0 = S3 & 0xFFFF;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(34,0x8005A1A8);
		goto ZZ_5A020_188;
	}
	if (V1)
	{
		V0 = T1 << 16;
		ZZ_CLOCKCYCLES(36,0x8005A1AC);
		goto ZZ_5A020_18C;
	}
	V0 = T1 << 16;
	V0 = 1;
	EMU_Write16(A0 + 96,V0); //+ 0x60
	ZZ_CLOCKCYCLES(38,0x8005A1A8);
ZZ_5A020_188:
	V0 = T1 << 16;
	ZZ_CLOCKCYCLES(1,0x8005A1AC);
ZZ_5A020_18C:
	V0 = (int32_t)V0 >> 16;
	A3 = V0 << 3;
	A3 = A3 - V0;
	A3 <<= 2;
	A3 = A3 - V0;
	A3 <<= 1;
	AT = 0x80060000;
	AT += A3;
	V1 = EMU_ReadS16(AT + 1196); //+ 0x4AC
	V0 = S3 & 0xFFFF;
	EMU_SMultiply(V1,V0);
	V1 = LO;
	V0 = 0x81020000;
	V0 |= 0x409;
	EMU_SMultiply(V1,V0);
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32144); //+ 0xFFFF8270
	A1 = EMU_ReadU8(V0 + 24); //+ 0x18
	V0 = A1 << 14;
	V0 = V0 - A1;
	T0 = HI;
	A0 = T0 + V1;
	A0 = (int32_t)A0 >> 6;
	V1 = (int32_t)V1 >> 31;
	A0 = A0 - V1;
	EMU_SMultiply(A0,V0);
	A0 = LO;
	V0 = 0x82060000;
	V0 |= 0x1029;
	EMU_SMultiply(A0,V0);
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32152); //+ 0xFFFF8268
	V0 += S0;
	V0 = EMU_ReadU8(V0 + 1); //+ 0x1
	V1 = HI;
	V1 += A0;
	V1 = (int32_t)V1 >> 13;
	A0 = (int32_t)A0 >> 31;
	T0 = V1 - A0;
	EMU_SMultiply(T0,V0);
	AT = 0x80060000;
	AT += A3;
	A2 = EMU_ReadS16(AT + 1206); //+ 0x4B6
	AT = 0x80060000;
	AT += A3;
	V0 = EMU_ReadS16(AT + 1210); //+ 0x4BA
	A2 <<= 4;
	A2 += V0;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32140); //+ 0xFFFF8274
	A2 <<= 5;
	A2 += V0;
	V1 = LO;
	V0 = EMU_ReadU8(A2 + 2); //+ 0x2
	EMU_SMultiply(V1,V0);
	V0 = LO;
	V1 = 0x40C0000;
	V1 |= 0x2051;
	EMU_UMultiply(V0,V1);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	V0 = EMU_ReadU16(S1 + 88); //+ 0x58
	A0 = V1 >> 13;
	EMU_SMultiply(A0,V0);
	V0 = LO;
	V1 = EMU_ReadU16(S1 + 90); //+ 0x5A
	EMU_SMultiply(A0,V1);
	V1 = LO;
	EMU_UMultiply(V0,T4);
	A0 = HI;
	EMU_UMultiply(V1,T4);
	V0 = V0 - A0;
	V0 >>= 1;
	A0 += V0;
	T0 = A0 >> 6;
	A1 = HI;
	V1 = V1 - A1;
	V1 >>= 1;
	A1 += V1;
	V1 = EMU_ReadU8(A2 + 3); //+ 0x3
	V0 = V1 < 64;
	if (!V0)
	{
		A0 = A1 >> 6;
		ZZ_CLOCKCYCLES(95,0x8005A358);
		goto ZZ_5A020_338;
	}
	A0 = A1 >> 6;
	EMU_SMultiply(A0,V1);
	V0 = LO;
	EMU_UMultiply(V0,T2);
	A2 = T0;
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A1 = V1 >> 5;
	ZZ_CLOCKCYCLES(107,0x8005A388);
	goto ZZ_5A020_368;
ZZ_5A020_338:
	V0 = T6 - V1;
	EMU_SMultiply(T0,V0);
	V0 = LO;
	EMU_UMultiply(V0,T2);
	A1 = A0;
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 5;
	ZZ_CLOCKCYCLES(12,0x8005A388);
ZZ_5A020_368:
	V1 = T1 << 16;
	V1 = (int32_t)V1 >> 16;
	V0 = V1 << 3;
	V0 = V0 - V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 1;
	AT = 0x80060000;
	AT += V0;
	V0 = EMU_ReadS16(AT + 1208); //+ 0x4B8
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 32152); //+ 0xFFFF8268
	V0 <<= 4;
	V0 += V1;
	V1 = EMU_ReadU8(V0 + 4); //+ 0x4
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A1,V1);
		ZZ_CLOCKCYCLES(19,0x8005A3FC);
		goto ZZ_5A020_3DC;
	}
	EMU_SMultiply(A1,V1);
	V0 = LO;
	EMU_UMultiply(V0,T2);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A1 = V1 >> 5;
	ZZ_CLOCKCYCLES(29,0x8005A428);
	goto ZZ_5A020_408;
ZZ_5A020_3DC:
	V0 = T6 - V1;
	EMU_SMultiply(A2,V0);
	V0 = LO;
	EMU_UMultiply(V0,T2);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 5;
	ZZ_CLOCKCYCLES(11,0x8005A428);
ZZ_5A020_408:
	V1 = S2 & 0xFF;
	V0 = V1 < 64;
	if (!V0)
	{
		EMU_SMultiply(A1,V1);
		ZZ_CLOCKCYCLES(4,0x8005A460);
		goto ZZ_5A020_440;
	}
	EMU_SMultiply(A1,V1);
	V0 = LO;
	EMU_UMultiply(V0,T2);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A1 = V1 >> 5;
	ZZ_CLOCKCYCLES(14,0x8005A48C);
	goto ZZ_5A020_46C;
ZZ_5A020_440:
	V0 = T6 - V1;
	EMU_SMultiply(A2,V0);
	V0 = LO;
	EMU_UMultiply(V0,T2);
	V1 = HI;
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 5;
	ZZ_CLOCKCYCLES(11,0x8005A48C);
ZZ_5A020_46C:
	V1 = 0x80060000;
	V1 = EMU_ReadS16(V1 + 14048); //+ 0x36E0
	V0 = 1;
	if (V1 != V0)
	{
		V0 = A2 < A1;
		ZZ_CLOCKCYCLES(5,0x8005A4B4);
		goto ZZ_5A020_494;
	}
	V0 = A2 < A1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(7,0x8005A4B0);
		goto ZZ_5A020_490;
	}
	A2 = A1;
	ZZ_CLOCKCYCLES(9,0x8005A4B4);
	goto ZZ_5A020_494;
ZZ_5A020_490:
	A1 = A2;
	ZZ_CLOCKCYCLES(1,0x8005A4B4);
ZZ_5A020_494:
	EMU_SMultiply(A2,A2);
	V0 = LO;
	EMU_SMultiply(A1,A1);
	A0 = LO;
	EMU_UMultiply(V0,T3);
	V1 = HI;
	EMU_UMultiply(A0,T3);
	V0 = V0 - V1;
	V0 >>= 1;
	V1 += V0;
	A2 = V1 >> 13;
	A1 = HI;
	A0 = A0 - A1;
	A0 >>= 1;
	A1 += A0;
	A1 >>= 13;
	A0 = T1 << 16;
	A0 = (int32_t)A0 >> 16;
	V1 = A0 << 4;
	V0 = V1 + T7;
	V1 += T8;
	EMU_Write16(V0,A2);
	EMU_Write16(V1,A1);
	AT = 0x80060000;
	AT += A0;
	V0 = EMU_ReadU8(AT + 2508); //+ 0x9CC
	S4 += 1;
	V0 |= 0x3;
	AT = 0x80060000;
	AT += A0;
	EMU_Write8(AT + 2508,V0); //+ 0x9CC
	V0 = T1 + 1;
	ZZ_CLOCKCYCLES(38,0x8005A54C);
ZZ_5A020_52C:
	T1 = V0;
	V0 <<= 16;
	V1 = 0x80070000;
	V1 = EMU_ReadU8(V1 - 32136); //+ 0xFFFF8278
	V0 = (int32_t)V0 >> 16;
	V0 = (int32_t)V0 < (int32_t)V1;
	if (V0)
	{
		V1 = T1 << 16;
		ZZ_CLOCKCYCLES(8,0x8005A110);
		goto ZZ_5A020_F0;
	}
	V1 = T1 << 16;
	ZZ_CLOCKCYCLES(8,0x8005A56C);
ZZ_5A020_54C:
	V0 = S4;
	RA = EMU_ReadU32(SP + 44); //+ 0x2C
	S6 = EMU_ReadU32(SP + 40); //+ 0x28
	S5 = EMU_ReadU32(SP + 36); //+ 0x24
	S4 = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x800538BC,ZZ_53830_8C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8005A020,ZZ_5A020);
ZZ_MARK(0x8005A024);
ZZ_MARK(0x8005A028);
ZZ_MARK(0x8005A02C);
ZZ_MARK(0x8005A030);
ZZ_MARK(0x8005A034);
ZZ_MARK(0x8005A038);
ZZ_MARK(0x8005A03C);
ZZ_MARK(0x8005A040);
ZZ_MARK(0x8005A044);
ZZ_MARK(0x8005A048);
ZZ_MARK(0x8005A04C);
ZZ_MARK(0x8005A050);
ZZ_MARK(0x8005A054);
ZZ_MARK(0x8005A058);
ZZ_MARK(0x8005A05C);
ZZ_MARK(0x8005A060);
ZZ_MARK(0x8005A064);
ZZ_MARK(0x8005A068);
ZZ_MARK(0x8005A06C);
ZZ_MARK(0x8005A070);
ZZ_MARK(0x8005A074);
ZZ_MARK(0x8005A078);
ZZ_MARK(0x8005A07C);
ZZ_MARK(0x8005A080);
ZZ_MARK(0x8005A084);
ZZ_MARK(0x8005A088);
ZZ_MARK(0x8005A08C);
ZZ_MARK(0x8005A090);
ZZ_MARK(0x8005A094);
ZZ_MARK(0x8005A098);
ZZ_MARK(0x8005A09C);
ZZ_MARK(0x8005A0A0);
ZZ_MARK_TARGET(0x8005A0A4,ZZ_5A020_84);
ZZ_MARK(0x8005A0A8);
ZZ_MARK(0x8005A0AC);
ZZ_MARK(0x8005A0B0);
ZZ_MARK(0x8005A0B4);
ZZ_MARK_TARGET(0x8005A0B8,ZZ_5A020_98);
ZZ_MARK(0x8005A0BC);
ZZ_MARK(0x8005A0C0);
ZZ_MARK_TARGET(0x8005A0C4,ZZ_5A020_A4);
ZZ_MARK(0x8005A0C8);
ZZ_MARK(0x8005A0CC);
ZZ_MARK(0x8005A0D0);
ZZ_MARK(0x8005A0D4);
ZZ_MARK(0x8005A0D8);
ZZ_MARK(0x8005A0DC);
ZZ_MARK(0x8005A0E0);
ZZ_MARK(0x8005A0E4);
ZZ_MARK(0x8005A0E8);
ZZ_MARK(0x8005A0EC);
ZZ_MARK(0x8005A0F0);
ZZ_MARK(0x8005A0F4);
ZZ_MARK(0x8005A0F8);
ZZ_MARK(0x8005A0FC);
ZZ_MARK(0x8005A100);
ZZ_MARK(0x8005A104);
ZZ_MARK(0x8005A108);
ZZ_MARK(0x8005A10C);
ZZ_MARK_TARGET(0x8005A110,ZZ_5A020_F0);
ZZ_MARK(0x8005A114);
ZZ_MARK(0x8005A118);
ZZ_MARK(0x8005A11C);
ZZ_MARK(0x8005A120);
ZZ_MARK(0x8005A124);
ZZ_MARK(0x8005A128);
ZZ_MARK(0x8005A12C);
ZZ_MARK(0x8005A130);
ZZ_MARK(0x8005A134);
ZZ_MARK(0x8005A138);
ZZ_MARK(0x8005A13C);
ZZ_MARK(0x8005A140);
ZZ_MARK(0x8005A144);
ZZ_MARK(0x8005A148);
ZZ_MARK(0x8005A14C);
ZZ_MARK(0x8005A150);
ZZ_MARK(0x8005A154);
ZZ_MARK(0x8005A158);
ZZ_MARK(0x8005A15C);
ZZ_MARK(0x8005A160);
ZZ_MARK(0x8005A164);
ZZ_MARK(0x8005A168);
ZZ_MARK(0x8005A16C);
ZZ_MARK(0x8005A170);
ZZ_MARK(0x8005A174);
ZZ_MARK(0x8005A178);
ZZ_MARK(0x8005A17C);
ZZ_MARK(0x8005A180);
ZZ_MARK(0x8005A184);
ZZ_MARK(0x8005A188);
ZZ_MARK(0x8005A18C);
ZZ_MARK(0x8005A190);
ZZ_MARK(0x8005A194);
ZZ_MARK(0x8005A198);
ZZ_MARK(0x8005A19C);
ZZ_MARK(0x8005A1A0);
ZZ_MARK(0x8005A1A4);
ZZ_MARK_TARGET(0x8005A1A8,ZZ_5A020_188);
ZZ_MARK_TARGET(0x8005A1AC,ZZ_5A020_18C);
ZZ_MARK(0x8005A1B0);
ZZ_MARK(0x8005A1B4);
ZZ_MARK(0x8005A1B8);
ZZ_MARK(0x8005A1BC);
ZZ_MARK(0x8005A1C0);
ZZ_MARK(0x8005A1C4);
ZZ_MARK(0x8005A1C8);
ZZ_MARK(0x8005A1CC);
ZZ_MARK(0x8005A1D0);
ZZ_MARK(0x8005A1D4);
ZZ_MARK(0x8005A1D8);
ZZ_MARK(0x8005A1DC);
ZZ_MARK(0x8005A1E0);
ZZ_MARK(0x8005A1E4);
ZZ_MARK(0x8005A1E8);
ZZ_MARK(0x8005A1EC);
ZZ_MARK(0x8005A1F0);
ZZ_MARK(0x8005A1F4);
ZZ_MARK(0x8005A1F8);
ZZ_MARK(0x8005A1FC);
ZZ_MARK(0x8005A200);
ZZ_MARK(0x8005A204);
ZZ_MARK(0x8005A208);
ZZ_MARK(0x8005A20C);
ZZ_MARK(0x8005A210);
ZZ_MARK(0x8005A214);
ZZ_MARK(0x8005A218);
ZZ_MARK(0x8005A21C);
ZZ_MARK(0x8005A220);
ZZ_MARK(0x8005A224);
ZZ_MARK(0x8005A228);
ZZ_MARK(0x8005A22C);
ZZ_MARK(0x8005A230);
ZZ_MARK(0x8005A234);
ZZ_MARK(0x8005A238);
ZZ_MARK(0x8005A23C);
ZZ_MARK(0x8005A240);
ZZ_MARK(0x8005A244);
ZZ_MARK(0x8005A248);
ZZ_MARK(0x8005A24C);
ZZ_MARK(0x8005A250);
ZZ_MARK(0x8005A254);
ZZ_MARK(0x8005A258);
ZZ_MARK(0x8005A25C);
ZZ_MARK(0x8005A260);
ZZ_MARK(0x8005A264);
ZZ_MARK(0x8005A268);
ZZ_MARK(0x8005A26C);
ZZ_MARK(0x8005A270);
ZZ_MARK(0x8005A274);
ZZ_MARK(0x8005A278);
ZZ_MARK(0x8005A27C);
ZZ_MARK(0x8005A280);
ZZ_MARK(0x8005A284);
ZZ_MARK(0x8005A288);
ZZ_MARK(0x8005A28C);
ZZ_MARK(0x8005A290);
ZZ_MARK(0x8005A294);
ZZ_MARK(0x8005A298);
ZZ_MARK(0x8005A29C);
ZZ_MARK(0x8005A2A0);
ZZ_MARK(0x8005A2A4);
ZZ_MARK(0x8005A2A8);
ZZ_MARK(0x8005A2AC);
ZZ_MARK(0x8005A2B0);
ZZ_MARK(0x8005A2B4);
ZZ_MARK(0x8005A2B8);
ZZ_MARK(0x8005A2BC);
ZZ_MARK(0x8005A2C0);
ZZ_MARK(0x8005A2C4);
ZZ_MARK(0x8005A2C8);
ZZ_MARK(0x8005A2CC);
ZZ_MARK(0x8005A2D0);
ZZ_MARK(0x8005A2D4);
ZZ_MARK(0x8005A2D8);
ZZ_MARK(0x8005A2DC);
ZZ_MARK(0x8005A2E0);
ZZ_MARK(0x8005A2E4);
ZZ_MARK(0x8005A2E8);
ZZ_MARK(0x8005A2EC);
ZZ_MARK(0x8005A2F0);
ZZ_MARK(0x8005A2F4);
ZZ_MARK(0x8005A2F8);
ZZ_MARK(0x8005A2FC);
ZZ_MARK(0x8005A300);
ZZ_MARK(0x8005A304);
ZZ_MARK(0x8005A308);
ZZ_MARK(0x8005A30C);
ZZ_MARK(0x8005A310);
ZZ_MARK(0x8005A314);
ZZ_MARK(0x8005A318);
ZZ_MARK(0x8005A31C);
ZZ_MARK(0x8005A320);
ZZ_MARK(0x8005A324);
ZZ_MARK(0x8005A328);
ZZ_MARK(0x8005A32C);
ZZ_MARK(0x8005A330);
ZZ_MARK(0x8005A334);
ZZ_MARK(0x8005A338);
ZZ_MARK(0x8005A33C);
ZZ_MARK(0x8005A340);
ZZ_MARK(0x8005A344);
ZZ_MARK(0x8005A348);
ZZ_MARK(0x8005A34C);
ZZ_MARK(0x8005A350);
ZZ_MARK(0x8005A354);
ZZ_MARK_TARGET(0x8005A358,ZZ_5A020_338);
ZZ_MARK(0x8005A35C);
ZZ_MARK(0x8005A360);
ZZ_MARK(0x8005A364);
ZZ_MARK(0x8005A368);
ZZ_MARK(0x8005A36C);
ZZ_MARK(0x8005A370);
ZZ_MARK(0x8005A374);
ZZ_MARK(0x8005A378);
ZZ_MARK(0x8005A37C);
ZZ_MARK(0x8005A380);
ZZ_MARK(0x8005A384);
ZZ_MARK_TARGET(0x8005A388,ZZ_5A020_368);
ZZ_MARK(0x8005A38C);
ZZ_MARK(0x8005A390);
ZZ_MARK(0x8005A394);
ZZ_MARK(0x8005A398);
ZZ_MARK(0x8005A39C);
ZZ_MARK(0x8005A3A0);
ZZ_MARK(0x8005A3A4);
ZZ_MARK(0x8005A3A8);
ZZ_MARK(0x8005A3AC);
ZZ_MARK(0x8005A3B0);
ZZ_MARK(0x8005A3B4);
ZZ_MARK(0x8005A3B8);
ZZ_MARK(0x8005A3BC);
ZZ_MARK(0x8005A3C0);
ZZ_MARK(0x8005A3C4);
ZZ_MARK(0x8005A3C8);
ZZ_MARK(0x8005A3CC);
ZZ_MARK(0x8005A3D0);
ZZ_MARK(0x8005A3D4);
ZZ_MARK(0x8005A3D8);
ZZ_MARK(0x8005A3DC);
ZZ_MARK(0x8005A3E0);
ZZ_MARK(0x8005A3E4);
ZZ_MARK(0x8005A3E8);
ZZ_MARK(0x8005A3EC);
ZZ_MARK(0x8005A3F0);
ZZ_MARK(0x8005A3F4);
ZZ_MARK(0x8005A3F8);
ZZ_MARK_TARGET(0x8005A3FC,ZZ_5A020_3DC);
ZZ_MARK(0x8005A400);
ZZ_MARK(0x8005A404);
ZZ_MARK(0x8005A408);
ZZ_MARK(0x8005A40C);
ZZ_MARK(0x8005A410);
ZZ_MARK(0x8005A414);
ZZ_MARK(0x8005A418);
ZZ_MARK(0x8005A41C);
ZZ_MARK(0x8005A420);
ZZ_MARK(0x8005A424);
ZZ_MARK_TARGET(0x8005A428,ZZ_5A020_408);
ZZ_MARK(0x8005A42C);
ZZ_MARK(0x8005A430);
ZZ_MARK(0x8005A434);
ZZ_MARK(0x8005A438);
ZZ_MARK(0x8005A43C);
ZZ_MARK(0x8005A440);
ZZ_MARK(0x8005A444);
ZZ_MARK(0x8005A448);
ZZ_MARK(0x8005A44C);
ZZ_MARK(0x8005A450);
ZZ_MARK(0x8005A454);
ZZ_MARK(0x8005A458);
ZZ_MARK(0x8005A45C);
ZZ_MARK_TARGET(0x8005A460,ZZ_5A020_440);
ZZ_MARK(0x8005A464);
ZZ_MARK(0x8005A468);
ZZ_MARK(0x8005A46C);
ZZ_MARK(0x8005A470);
ZZ_MARK(0x8005A474);
ZZ_MARK(0x8005A478);
ZZ_MARK(0x8005A47C);
ZZ_MARK(0x8005A480);
ZZ_MARK(0x8005A484);
ZZ_MARK(0x8005A488);
ZZ_MARK_TARGET(0x8005A48C,ZZ_5A020_46C);
ZZ_MARK(0x8005A490);
ZZ_MARK(0x8005A494);
ZZ_MARK(0x8005A498);
ZZ_MARK(0x8005A49C);
ZZ_MARK(0x8005A4A0);
ZZ_MARK(0x8005A4A4);
ZZ_MARK(0x8005A4A8);
ZZ_MARK(0x8005A4AC);
ZZ_MARK_TARGET(0x8005A4B0,ZZ_5A020_490);
ZZ_MARK_TARGET(0x8005A4B4,ZZ_5A020_494);
ZZ_MARK(0x8005A4B8);
ZZ_MARK(0x8005A4BC);
ZZ_MARK(0x8005A4C0);
ZZ_MARK(0x8005A4C4);
ZZ_MARK(0x8005A4C8);
ZZ_MARK(0x8005A4CC);
ZZ_MARK(0x8005A4D0);
ZZ_MARK(0x8005A4D4);
ZZ_MARK(0x8005A4D8);
ZZ_MARK(0x8005A4DC);
ZZ_MARK(0x8005A4E0);
ZZ_MARK(0x8005A4E4);
ZZ_MARK(0x8005A4E8);
ZZ_MARK(0x8005A4EC);
ZZ_MARK(0x8005A4F0);
ZZ_MARK(0x8005A4F4);
ZZ_MARK(0x8005A4F8);
ZZ_MARK(0x8005A4FC);
ZZ_MARK(0x8005A500);
ZZ_MARK(0x8005A504);
ZZ_MARK(0x8005A508);
ZZ_MARK(0x8005A50C);
ZZ_MARK(0x8005A510);
ZZ_MARK(0x8005A514);
ZZ_MARK(0x8005A518);
ZZ_MARK(0x8005A51C);
ZZ_MARK(0x8005A520);
ZZ_MARK(0x8005A524);
ZZ_MARK(0x8005A528);
ZZ_MARK(0x8005A52C);
ZZ_MARK(0x8005A530);
ZZ_MARK(0x8005A534);
ZZ_MARK(0x8005A538);
ZZ_MARK(0x8005A53C);
ZZ_MARK(0x8005A540);
ZZ_MARK(0x8005A544);
ZZ_MARK(0x8005A548);
ZZ_MARK_TARGET(0x8005A54C,ZZ_5A020_52C);
ZZ_MARK(0x8005A550);
ZZ_MARK(0x8005A554);
ZZ_MARK(0x8005A558);
ZZ_MARK(0x8005A55C);
ZZ_MARK(0x8005A560);
ZZ_MARK(0x8005A564);
ZZ_MARK(0x8005A568);
ZZ_MARK_TARGET(0x8005A56C,ZZ_5A020_54C);
ZZ_MARK(0x8005A570);
ZZ_MARK(0x8005A574);
ZZ_MARK(0x8005A578);
ZZ_MARK(0x8005A57C);
ZZ_MARK(0x8005A580);
ZZ_MARK(0x8005A584);
ZZ_MARK(0x8005A588);
ZZ_MARK(0x8005A58C);
ZZ_MARK(0x8005A590);
ZZ_MARK(0x8005A594);
ZZ_MARK(0x8005A598);
