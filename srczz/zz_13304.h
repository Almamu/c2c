#ifdef ZZ_INCLUDE_CODE
ZZ_13304:
	SP -= 48;
	EMU_Write32(SP + 24,S0); //+ 0x18
	S0 = A0;
	EMU_Write32(SP + 32,S2); //+ 0x20
	S2 = A1;
	EMU_Write32(SP + 40,RA); //+ 0x28
	EMU_Write32(SP + 36,S3); //+ 0x24
	EMU_Write32(SP + 28,S1); //+ 0x1C
	ZZ_CLOCKCYCLES(8,0x80013324);
ZZ_13304_20:
	V0 = EMU_ReadU16(S0 + 4); //+ 0x4
	V0 -= 2;
	V0 <<= 16;
	V1 = (int32_t)V0 >> 16;
	V0 = V1 < 30;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(8,0x800137AC);
		goto ZZ_13304_4A8;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 312); //+ 0x138
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x800133AC,ZZ_13304_A8);
	ZZ_JUMPREGISTER(0x80013440,ZZ_13304_13C);
	ZZ_JUMPREGISTER(0x8001350C,ZZ_13304_208);
	ZZ_JUMPREGISTER(0x800137AC,ZZ_13304_4A8);
	ZZ_JUMPREGISTER(0x80013560,ZZ_13304_25C);
	ZZ_JUMPREGISTER(0x80013724,ZZ_13304_420);
	ZZ_JUMPREGISTER(0x8001335C,ZZ_13304_58);
	ZZ_JUMPREGISTER(0x800137A0,ZZ_13304_49C);
	ZZ_JUMPREGISTER_END();
ZZ_13304_58:
	V0 = EMU_ReadU32(S0 + 16); //+ 0x10
	V1 = EMU_ReadU16(V0);
	V0 = 0x8765;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(6,0x800137AC);
		goto ZZ_13304_4A8;
	}
	RA = 0x8001337C; //ZZ_13304_78
	A0 = S0;
	ZZ_CLOCKCYCLES(8,0x80013164);
	goto ZZ_13164;
ZZ_13304_78:
	V1 = -16;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(3,0x8001350C);
		goto ZZ_13304_208;
	}
	A0 = EMU_ReadU32(S0 + 20); //+ 0x14
	RA = 0x80013394; //ZZ_13304_90
	ZZ_CLOCKCYCLES(6,0x80011F1C);
	goto ZZ_11F1C;
ZZ_13304_90:
	A0 = 0x80010000;
	A0 += 208;
	RA = 0x800133A4; //ZZ_13304_A0
	A1 = V0;
	ZZ_CLOCKCYCLES(4,0x800494DC);
	goto ZZ_494DC;
ZZ_13304_A0:
	ZZ_CLOCKCYCLES(2,0x80013324);
	goto ZZ_13304_20;
ZZ_13304_A8:
	S3 = 0x80070000;
	S3 -= 32180;
	V0 = EMU_ReadU32(S3);
	if (V0)
	{
		S1 = -1;
		ZZ_CLOCKCYCLES(6,0x800137AC);
		goto ZZ_13304_4A8;
	}
	S1 = -1;
	if (S2 == S1)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(8,0x800133DC);
		goto ZZ_13304_D8;
	}
	A0 = S0;
	RA = 0x800133D4; //ZZ_13304_D0
	A1 = S2;
	ZZ_CLOCKCYCLES(10,0x800130FC);
	goto ZZ_130FC;
ZZ_13304_D0:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800137AC);
		goto ZZ_13304_4A8;
	}
	ZZ_CLOCKCYCLES(2,0x800133DC);
ZZ_13304_D8:
	V0 = EMU_ReadU32(S0 + 20); //+ 0x14
	V1 = EMU_ReadU32(GP + 40); //+ 0x28
	AT = 0x80070000;
	EMU_Write32(AT - 32168,V0); //+ 0xFFFF8258
	if (!V1)
	{
		A0 = 0x1;
		ZZ_CLOCKCYCLES(6,0x800134EC);
		goto ZZ_13304_1E8;
	}
	A0 = 0x1;
	RA = 0x800133FC; //ZZ_13304_F8
	A1 = R0;
	ZZ_CLOCKCYCLES(8,0x80046D78);
	goto ZZ_46D78;
ZZ_13304_F8:
	V1 = 0x2;
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(3,0x80013410);
		goto ZZ_13304_10C;
	}
	if (S2 == S1)
	{
		ZZ_CLOCKCYCLES(5,0x800137AC);
		goto ZZ_13304_4A8;
	}
	ZZ_CLOCKCYCLES(5,0x80013410);
ZZ_13304_10C:
	RA = 0x80013418; //ZZ_13304_114
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80013164);
	goto ZZ_13164;
ZZ_13304_114:
	S1 = V0;
	EMU_Write32(S3,S0);
	ZZ_CLOCKCYCLES(2,0x80013420);
ZZ_13304_11C:
	A1 = EMU_ReadU32(S0 + 28); //+ 0x1C
	RA = 0x8001342C; //ZZ_13304_128
	A0 = S1;
	ZZ_CLOCKCYCLES(3,0x80012FE8);
	goto ZZ_12FE8;
ZZ_13304_128:
	V0 = (int32_t)V0 < -254;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80013420);
		goto ZZ_13304_11C;
	}
	S0 = S1;
	ZZ_CLOCKCYCLES(5,0x80013324);
	goto ZZ_13304_20;
ZZ_13304_13C:
	V0 = EMU_ReadU32(GP + 40); //+ 0x28
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x800134EC);
		goto ZZ_13304_1E8;
	}
	S1 = 0x80070000;
	S1 -= 32180;
	V0 = EMU_ReadU32(S1);
	if (V0 != S0)
	{
		ZZ_CLOCKCYCLES(10,0x800134EC);
		goto ZZ_13304_1E8;
	}
	RA = 0x80013470; //ZZ_13304_16C
	A0 = R0;
	ZZ_CLOCKCYCLES(12,0x80012F94);
	goto ZZ_12F94;
ZZ_13304_16C:
	V1 = V0;
	V0 = 0x1;
	if (V1 != V0)
	{
		V0 = -16;
		ZZ_CLOCKCYCLES(4,0x800134C0);
		goto ZZ_13304_1BC;
	}
	V0 = -16;
	RA = 0x80013488; //ZZ_13304_184
	A0 = S0;
	ZZ_CLOCKCYCLES(6,0x80013164);
	goto ZZ_13164;
ZZ_13304_184:
	V1 = -16;
	if (V0 != V1)
	{
		ZZ_CLOCKCYCLES(3,0x800134B8);
		goto ZZ_13304_1B4;
	}
	A0 = EMU_ReadU32(S0 + 20); //+ 0x14
	RA = 0x800134A0; //ZZ_13304_19C
	ZZ_CLOCKCYCLES(6,0x80011F1C);
	goto ZZ_11F1C;
ZZ_13304_19C:
	A0 = 0x80010000;
	A0 += 240;
	RA = 0x800134B0; //ZZ_13304_1AC
	A1 = V0;
	ZZ_CLOCKCYCLES(4,0x800494DC);
	goto ZZ_494DC;
ZZ_13304_1AC:
	EMU_Write32(S1,R0);
	ZZ_CLOCKCYCLES(2,0x80013324);
	goto ZZ_13304_20;
ZZ_13304_1B4:
	EMU_Write32(S1,R0);
	ZZ_CLOCKCYCLES(2,0x8001350C);
	goto ZZ_13304_208;
ZZ_13304_1BC:
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(2,0x800137AC);
		goto ZZ_13304_4A8;
	}
	A0 = 0x80060000;
	A0 -= 2984;
	RA = 0x800134D8; //ZZ_13304_1D4
	ZZ_CLOCKCYCLES(6,0x800494DC);
	goto ZZ_494DC;
ZZ_13304_1D4:
	EMU_Write32(S1,R0);
	RA = 0x800134E4; //ZZ_13304_1E0
	A0 = S0;
	ZZ_CLOCKCYCLES(3,0x80013148);
	goto ZZ_13148;
ZZ_13304_1E0:
	ZZ_CLOCKCYCLES(2,0x80013324);
	goto ZZ_13304_20;
ZZ_13304_1E8:
	RA = 0x800134F4; //ZZ_13304_1F0
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x8001402C);
	goto ZZ_1402C;
ZZ_13304_1F0:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32184); //+ 0xFFFF8248
	AT = 0x80070000;
	EMU_Write32(AT - 32180,R0); //+ 0xFFFF824C
	V0 -= 1;
	ZZ_CLOCKCYCLES(6,0x80013790);
	goto ZZ_13304_48C;
ZZ_13304_208:
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU16(V0 + 2); //+ 0x2
	V0 = (int32_t)V1 < 5;
	if (!V0)
	{
		V0 = (int32_t)V1 < 3;
		ZZ_CLOCKCYCLES(7,0x80013538);
		goto ZZ_13304_234;
	}
	V0 = (int32_t)V1 < 3;
	if (V0)
	{
		V0 = 0xA;
		ZZ_CLOCKCYCLES(9,0x80013538);
		goto ZZ_13304_234;
	}
	V0 = 0xA;
	EMU_Write16(S0 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(11,0x80013560);
	goto ZZ_13304_25C;
ZZ_13304_234:
	A0 = EMU_ReadS16(S0 + 12); //+ 0xC
	RA = 0x80013544; //ZZ_13304_240
	ZZ_CLOCKCYCLES(3,0x800126BC);
	goto ZZ_126BC;
ZZ_13304_240:
	V1 = 0x80070000;
	V1 -= 32184;
	V0 = EMU_ReadU32(V1);
	V0 -= 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(7,0x800137AC);
	goto ZZ_13304_4A8;
ZZ_13304_25C:
	S1 = 0x80070000;
	S1 -= 32172;
	V0 = EMU_ReadU32(S1);
	if (V0)
	{
		ZZ_CLOCKCYCLES(6,0x800137AC);
		goto ZZ_13304_4A8;
	}
	RA = 0x80013580; //ZZ_13304_27C
	A0 = R0;
	ZZ_CLOCKCYCLES(8,0x800515C0);
	goto ZZ_515C0;
ZZ_13304_27C:
	if (!V0)
	{
		S2 = 0x4;
		ZZ_CLOCKCYCLES(2,0x800137AC);
		goto ZZ_13304_4A8;
	}
	S2 = 0x4;
	V0 = EMU_ReadU32(S0);
	A0 = EMU_ReadU16(V0 + 2); //+ 0x2
	if (A0 != S2)
	{
		A1 = -1;
		ZZ_CLOCKCYCLES(8,0x800135B4);
		goto ZZ_13304_2B0;
	}
	A1 = -1;
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	A1 = EMU_ReadU32(V0);
	ZZ_CLOCKCYCLES(13,0x800135B4);
ZZ_13304_2B0:
	RA = 0x800135BC; //ZZ_13304_2B8
	ZZ_CLOCKCYCLES(2,0x80013BEC);
	goto ZZ_13BEC;
ZZ_13304_2B8:
	V1 = V0;
	V0 = -12;
	if (V1 != V0)
	{
		A1 = 0xB;
		ZZ_CLOCKCYCLES(4,0x800135FC);
		goto ZZ_13304_2F8;
	}
	A1 = 0xB;
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU16(V0 + 2); //+ 0x2
	V0 = 0x5;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(10,0x800137AC);
		goto ZZ_13304_4A8;
	}
	RA = 0x800135EC; //ZZ_13304_2E8
	A0 = S0;
	ZZ_CLOCKCYCLES(12,0x8001402C);
	goto ZZ_1402C;
ZZ_13304_2E8:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32184); //+ 0xFFFF8248
	V0 -= 1;
	ZZ_CLOCKCYCLES(4,0x80013790);
	goto ZZ_13304_48C;
ZZ_13304_2F8:
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 = V0 - V1;
	V0 <<= 2;
	V1 = 0x80060000;
	V1 += 11852;
	V0 += V1;
	EMU_Write16(S0 + 4,A1); //+ 0x4
	EMU_Write32(S0 + 36,V0); //+ 0x24
	EMU_Write32(S1,S0);
	EMU_Write16(V0 + 4,A1); //+ 0x4
	V1 = EMU_ReadU32(S0 + 20); //+ 0x14
	A0 = EMU_ReadU32(V0 + 28); //+ 0x1C
	EMU_Write32(V0 + 20,V1); //+ 0x14
	V1 = EMU_ReadU32(S0 + 24); //+ 0x18
	EMU_Write8(V0 + 15,R0); //+ 0xF
	EMU_Write8(V0 + 14,R0); //+ 0xE
	RA = 0x8001364C; //ZZ_13304_348
	EMU_Write32(V0 + 24,V1); //+ 0x18
	ZZ_CLOCKCYCLES(20,0x80051530);
	goto ZZ_51530;
ZZ_13304_348:
	A0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU16(A0 + 2); //+ 0x2
	if (V1 == S2)
	{
		V0 = (int32_t)V1 < 5;
		ZZ_CLOCKCYCLES(6,0x80013690);
		goto ZZ_13304_38C;
	}
	V0 = (int32_t)V1 < 5;
	if (!V0)
	{
		V0 = 0x3;
		ZZ_CLOCKCYCLES(8,0x8001367C);
		goto ZZ_13304_378;
	}
	V0 = 0x3;
	if (V1 == V0)
	{
		A1 = 0x10000;
		ZZ_CLOCKCYCLES(10,0x8001371C);
		goto ZZ_13304_418;
	}
	A1 = 0x10000;
	ZZ_CLOCKCYCLES(12,0x80013724);
	goto ZZ_13304_420;
ZZ_13304_378:
	V0 = 0x5;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x800136AC);
		goto ZZ_13304_3A8;
	}
	ZZ_CLOCKCYCLES(5,0x80013724);
	goto ZZ_13304_420;
ZZ_13304_38C:
	V0 = EMU_ReadU32(A0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = EMU_ReadU32(V0 + 20); //+ 0x14
	A1 = EMU_ReadU32(V1 + 4); //+ 0x4
	ZZ_CLOCKCYCLES(7,0x8001371C);
	goto ZZ_13304_418;
ZZ_13304_3A8:
	V0 = EMU_ReadU32(A0 + 8); //+ 0x8
	if (!V0)
	{
		V1 = R0;
		ZZ_CLOCKCYCLES(4,0x80013724);
		goto ZZ_13304_420;
	}
	V1 = R0;
	A3 = EMU_ReadU32(S0 + 24); //+ 0x18
	A2 = V0;
	A1 = A0;
	ZZ_CLOCKCYCLES(7,0x800136C8);
ZZ_13304_3C4:
	A0 = EMU_ReadU32(A1 + 16); //+ 0x10
	V0 = EMU_ReadU32(A0 + 4); //+ 0x4
	if (V0 == A3)
	{
		S1 = V1 << 2;
		ZZ_CLOCKCYCLES(6,0x800136F8);
		goto ZZ_13304_3F4;
	}
	S1 = V1 << 2;
	V1 += 1;
	V0 = V1 < A2;
	if (V0)
	{
		A1 += 4;
		ZZ_CLOCKCYCLES(10,0x800136C8);
		goto ZZ_13304_3C4;
	}
	A1 += 4;
	ZZ_CLOCKCYCLES(12,0x80013724);
	goto ZZ_13304_420;
ZZ_13304_3F4:
	RA = 0x80013700; //ZZ_13304_3FC
	A1 = R0;
	ZZ_CLOCKCYCLES(2,0x800123BC);
	goto ZZ_123BC;
ZZ_13304_3FC:
	V1 = EMU_ReadU32(S0);
	V1 += S1;
	V1 = EMU_ReadU32(V1 + 16); //+ 0x10
	A0 = EMU_ReadU32(V1 + 16); //+ 0x10
	A1 = V0;
	ZZ_CLOCKCYCLES(7,0x8001371C);
ZZ_13304_418:
	RA = 0x80013724; //ZZ_13304_420
	ZZ_CLOCKCYCLES(2,0x800514D0);
	goto ZZ_514D0;
ZZ_13304_420:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32172); //+ 0xFFFF8254
	if (V0 != S0)
	{
		ZZ_CLOCKCYCLES(5,0x800137AC);
		goto ZZ_13304_4A8;
	}
	RA = 0x80013740; //ZZ_13304_43C
	A0 = R0;
	ZZ_CLOCKCYCLES(7,0x800515C0);
	goto ZZ_515C0;
ZZ_13304_43C:
	if (!V0)
	{
		ZZ_CLOCKCYCLES(2,0x800137AC);
		goto ZZ_13304_4A8;
	}
	V0 = EMU_ReadU32(S0);
	V1 = EMU_ReadU16(V0 + 2); //+ 0x2
	V0 = 0x5;
	if (V1 != V0)
	{
		V0 = 0x14;
		ZZ_CLOCKCYCLES(8,0x80013770);
		goto ZZ_13304_46C;
	}
	V0 = 0x14;
	V1 = EMU_ReadU32(S0 + 36); //+ 0x24
	EMU_Write16(S0 + 4,V0); //+ 0x4
	EMU_Write16(V1 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(12,0x8001377C);
	goto ZZ_13304_478;
ZZ_13304_46C:
	A0 = EMU_ReadS16(S0 + 12); //+ 0xC
	RA = 0x8001377C; //ZZ_13304_478
	ZZ_CLOCKCYCLES(3,0x800126BC);
	goto ZZ_126BC;
ZZ_13304_478:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 32184); //+ 0xFFFF8248
	AT = 0x80070000;
	EMU_Write32(AT - 32172,R0); //+ 0xFFFF8254
	V0 -= 1;
	ZZ_CLOCKCYCLES(5,0x80013790);
ZZ_13304_48C:
	AT = 0x80070000;
	EMU_Write32(AT - 32184,V0); //+ 0xFFFF8248
	ZZ_CLOCKCYCLES(4,0x800137AC);
	goto ZZ_13304_4A8;
ZZ_13304_49C:
	V0 = 0x1;
	EMU_Write16(S0 + 4,V0); //+ 0x4
	EMU_Write8(S0 + 15,R0); //+ 0xF
	ZZ_CLOCKCYCLES(3,0x800137AC);
ZZ_13304_4A8:
	RA = EMU_ReadU32(SP + 40); //+ 0x28
	S3 = EMU_ReadU32(SP + 36); //+ 0x24
	S2 = EMU_ReadU32(SP + 32); //+ 0x20
	S1 = EMU_ReadU32(SP + 28); //+ 0x1C
	S0 = EMU_ReadU32(SP + 24); //+ 0x18
	SP += 48;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80012E50,ZZ_12C88_1C8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80013304,0x80013324,ZZ_13304);
ZZ_MARK_TARGET(0x80013324,0x8001335C,ZZ_13304_20);
ZZ_MARK_TARGET(0x8001335C,0x8001337C,ZZ_13304_58);
ZZ_MARK_TARGET(0x8001337C,0x80013394,ZZ_13304_78);
ZZ_MARK_TARGET(0x80013394,0x800133A4,ZZ_13304_90);
ZZ_MARK_TARGET(0x800133A4,0x800133AC,ZZ_13304_A0);
ZZ_MARK_TARGET(0x800133AC,0x800133D4,ZZ_13304_A8);
ZZ_MARK_TARGET(0x800133D4,0x800133DC,ZZ_13304_D0);
ZZ_MARK_TARGET(0x800133DC,0x800133FC,ZZ_13304_D8);
ZZ_MARK_TARGET(0x800133FC,0x80013410,ZZ_13304_F8);
ZZ_MARK_TARGET(0x80013410,0x80013418,ZZ_13304_10C);
ZZ_MARK_TARGET(0x80013418,0x80013420,ZZ_13304_114);
ZZ_MARK_TARGET(0x80013420,0x8001342C,ZZ_13304_11C);
ZZ_MARK_TARGET(0x8001342C,0x80013440,ZZ_13304_128);
ZZ_MARK_TARGET(0x80013440,0x80013470,ZZ_13304_13C);
ZZ_MARK_TARGET(0x80013470,0x80013488,ZZ_13304_16C);
ZZ_MARK_TARGET(0x80013488,0x800134A0,ZZ_13304_184);
ZZ_MARK_TARGET(0x800134A0,0x800134B0,ZZ_13304_19C);
ZZ_MARK_TARGET(0x800134B0,0x800134B8,ZZ_13304_1AC);
ZZ_MARK_TARGET(0x800134B8,0x800134C0,ZZ_13304_1B4);
ZZ_MARK_TARGET(0x800134C0,0x800134D8,ZZ_13304_1BC);
ZZ_MARK_TARGET(0x800134D8,0x800134E4,ZZ_13304_1D4);
ZZ_MARK_TARGET(0x800134E4,0x800134EC,ZZ_13304_1E0);
ZZ_MARK_TARGET(0x800134EC,0x800134F4,ZZ_13304_1E8);
ZZ_MARK_TARGET(0x800134F4,0x8001350C,ZZ_13304_1F0);
ZZ_MARK_TARGET(0x8001350C,0x80013538,ZZ_13304_208);
ZZ_MARK_TARGET(0x80013538,0x80013544,ZZ_13304_234);
ZZ_MARK_TARGET(0x80013544,0x80013560,ZZ_13304_240);
ZZ_MARK_TARGET(0x80013560,0x80013580,ZZ_13304_25C);
ZZ_MARK_TARGET(0x80013580,0x800135B4,ZZ_13304_27C);
ZZ_MARK_TARGET(0x800135B4,0x800135BC,ZZ_13304_2B0);
ZZ_MARK_TARGET(0x800135BC,0x800135EC,ZZ_13304_2B8);
ZZ_MARK_TARGET(0x800135EC,0x800135FC,ZZ_13304_2E8);
ZZ_MARK_TARGET(0x800135FC,0x8001364C,ZZ_13304_2F8);
ZZ_MARK_TARGET(0x8001364C,0x8001367C,ZZ_13304_348);
ZZ_MARK_TARGET(0x8001367C,0x80013690,ZZ_13304_378);
ZZ_MARK_TARGET(0x80013690,0x800136AC,ZZ_13304_38C);
ZZ_MARK_TARGET(0x800136AC,0x800136C8,ZZ_13304_3A8);
ZZ_MARK_TARGET(0x800136C8,0x800136F8,ZZ_13304_3C4);
ZZ_MARK_TARGET(0x800136F8,0x80013700,ZZ_13304_3F4);
ZZ_MARK_TARGET(0x80013700,0x8001371C,ZZ_13304_3FC);
ZZ_MARK_TARGET(0x8001371C,0x80013724,ZZ_13304_418);
ZZ_MARK_TARGET(0x80013724,0x80013740,ZZ_13304_420);
ZZ_MARK_TARGET(0x80013740,0x80013770,ZZ_13304_43C);
ZZ_MARK_TARGET(0x80013770,0x8001377C,ZZ_13304_46C);
ZZ_MARK_TARGET(0x8001377C,0x80013790,ZZ_13304_478);
ZZ_MARK_TARGET(0x80013790,0x800137A0,ZZ_13304_48C);
ZZ_MARK_TARGET(0x800137A0,0x800137AC,ZZ_13304_49C);
ZZ_MARK_TARGET(0x800137AC,0x800137CC,ZZ_13304_4A8);
