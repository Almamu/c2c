#ifdef ZZ_INCLUDE_CODE
ZZ_244DC:
	SP -= 32;
	EMU_Write32(SP + 24,RA); //+ 0x18
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 16,S0); //+ 0x10
	V1 = EMU_ReadU32(A0 + 12); //+ 0xC
	S0 = EMU_ReadU32(A0 + 8); //+ 0x8
	V0 = 0x2;
	if (V1 != V0)
	{
		S1 = A2;
		ZZ_CLOCKCYCLES(9,0x80024538);
		goto ZZ_244DC_5C;
	}
	S1 = A2;
	S0 += A1;
	A0 = EMU_ReadU32(A0 + 4); //+ 0x4
	A1 = 0x4B;
	A2 = R0;
	RA = 0x80024518; //ZZ_244DC_3C
	A3 = 0x2;
	ZZ_CLOCKCYCLES(15,0x800325CC);
	goto ZZ_325CC;
ZZ_244DC_3C:
	V0 -= 1;
	V0 <<= 8;
	V1 = S0 - V0;
	if ((int32_t)V1 <= 0)
	{
		ZZ_CLOCKCYCLES(5,0x8002454C);
		goto ZZ_244DC_70;
	}
	EMU_Write32(S1,V0);
	V0 = V1;
	ZZ_CLOCKCYCLES(8,0x80024554);
	goto ZZ_244DC_78;
ZZ_244DC_5C:
	S0 = S0 - A1;
	if ((int32_t)S0 >= 0)
	{
		V0 = -S0;
		ZZ_CLOCKCYCLES(3,0x8002454C);
		goto ZZ_244DC_70;
	}
	V0 = -S0;
	EMU_Write32(S1,R0);
	ZZ_CLOCKCYCLES(5,0x80024554);
	goto ZZ_244DC_78;
ZZ_244DC_70:
	EMU_Write32(S1,S0);
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x80024554);
ZZ_244DC_78:
	RA = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 32;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(6);
	ZZ_JUMPREGISTER(0x80022BF8,ZZ_22AD4_124);
	ZZ_JUMPREGISTER(0x80022C60,ZZ_22AD4_18C);
	ZZ_JUMPREGISTER(0x8002238C,ZZ_221A8_1E4);
	ZZ_JUMPREGISTER(0x800223C4,ZZ_221A8_21C);
	ZZ_JUMPREGISTER(0x80021FC4,ZZ_21C64_360);
	ZZ_JUMPREGISTER(0x80021FFC,ZZ_21C64_398);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800244DC,0x80024518,ZZ_244DC);
ZZ_MARK_TARGET(0x80024518,0x80024538,ZZ_244DC_3C);
ZZ_MARK_TARGET(0x80024538,0x8002454C,ZZ_244DC_5C);
ZZ_MARK_TARGET(0x8002454C,0x80024554,ZZ_244DC_70);
ZZ_MARK_TARGET(0x80024554,0x8002456C,ZZ_244DC_78);
