#ifdef ZZ_INCLUDE_CODE
ZZ_4D91C:
	if (A0)
	{
		SP -= 16;
		ZZ_CLOCKCYCLES(2,0x8004D92C);
		goto ZZ_4D91C_10;
	}
	SP -= 16;
	V0 = R0;
	ZZ_CLOCKCYCLES(4,0x8004D994);
	goto ZZ_4D91C_78;
ZZ_4D91C_10:
	A1 = EMU_ReadU8(A0);
	A1 >>= 3;
	EMU_Write32(SP,A1);
	A2 = EMU_ReadS16(A0 + 4); //+ 0x4
	A2 = -A2;
	A2 &= 0xFF;
	A2 = (int32_t)A2 >> 3;
	EMU_Write32(SP + 8,A2); //+ 0x8
	V0 = EMU_ReadU8(A0 + 2); //+ 0x2
	A1 <<= 10;
	V0 >>= 3;
	EMU_Write32(SP + 4,V0); //+ 0x4
	V0 <<= 15;
	V1 = EMU_ReadS16(A0 + 6); //+ 0x6
	A0 = 0xE2000000;
	A1 |= A0;
	V0 |= A1;
	V1 = -V1;
	V1 &= 0xFF;
	V1 = (int32_t)V1 >> 3;
	A0 = V1 << 5;
	V0 |= A0;
	V0 |= A2;
	EMU_Write32(SP + 12,V1); //+ 0xC
	ZZ_CLOCKCYCLES(26,0x8004D994);
ZZ_4D91C_78:
	SP += 16;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(3);
	ZZ_JUMPREGISTER(0x8004D4F0,ZZ_4D458_98);
	ZZ_JUMPREGISTER(0x8004D224,ZZ_4D1E8_3C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004D91C,ZZ_4D91C);
ZZ_MARK(0x8004D920);
ZZ_MARK(0x8004D924);
ZZ_MARK(0x8004D928);
ZZ_MARK_TARGET(0x8004D92C,ZZ_4D91C_10);
ZZ_MARK(0x8004D930);
ZZ_MARK(0x8004D934);
ZZ_MARK(0x8004D938);
ZZ_MARK(0x8004D93C);
ZZ_MARK(0x8004D940);
ZZ_MARK(0x8004D944);
ZZ_MARK(0x8004D948);
ZZ_MARK(0x8004D94C);
ZZ_MARK(0x8004D950);
ZZ_MARK(0x8004D954);
ZZ_MARK(0x8004D958);
ZZ_MARK(0x8004D95C);
ZZ_MARK(0x8004D960);
ZZ_MARK(0x8004D964);
ZZ_MARK(0x8004D968);
ZZ_MARK(0x8004D96C);
ZZ_MARK(0x8004D970);
ZZ_MARK(0x8004D974);
ZZ_MARK(0x8004D978);
ZZ_MARK(0x8004D97C);
ZZ_MARK(0x8004D980);
ZZ_MARK(0x8004D984);
ZZ_MARK(0x8004D988);
ZZ_MARK(0x8004D98C);
ZZ_MARK(0x8004D990);
ZZ_MARK_TARGET(0x8004D994,ZZ_4D91C_78);
ZZ_MARK(0x8004D998);
ZZ_MARK(0x8004D99C);
