#ifdef ZZ_INCLUDE_CODE
ZZ_3DC98:
	AT = 0x1F800000;
	EMU_Write32(AT,S0);
	EMU_Write32(AT + 4,S1); //+ 0x4
	EMU_Write32(AT + 8,S2); //+ 0x8
	EMU_Write32(AT + 12,S3); //+ 0xC
	EMU_Write32(AT + 16,S4); //+ 0x10
	S1 = EMU_ReadU32(A1);
	S2 = EMU_ReadU32(A1 + 4); //+ 0x4
	S3 = EMU_ReadU32(A1 + 8); //+ 0x8
	T0 = EMU_ReadU32(A0);
	T1 = EMU_ReadU32(A0 + 4); //+ 0x4
	T2 = EMU_ReadU32(A0 + 8); //+ 0x8
	T3 = EMU_ReadU32(A0 + 12); //+ 0xC
	T4 = EMU_ReadU32(A0 + 16); //+ 0x10
	T5 = EMU_ReadU32(A0 + 20); //+ 0x14
	A3 = EMU_ReadU16(A0 + 28); //+ 0x1C
	AT = EMU_ReadU16(A0 + 30); //+ 0x1E
	V0 = EMU_ReadU16(A0 + 32); //+ 0x20
	V1 = EMU_ReadU16(A0 + 34); //+ 0x22
	T0 <<= 8;
	T1 <<= 8;
	T2 <<= 8;
	T3 <<= 8;
	T4 <<= 8;
	T5 <<= 8;
	T0 = T0 - S1;
	T1 = T1 - S2;
	T2 = T2 - S3;
	S4 = R0;
	ZZ_CLOCKCYCLES(29,0x8003DD0C);
ZZ_3DC98_74:
	if (!A3)
	{
		T7 = A3 & 0x1;
		ZZ_CLOCKCYCLES(2,0x8003DDDC);
		goto ZZ_3DC98_144;
	}
	T7 = A3 & 0x1;
	if (T7)
	{
		T6 = (int32_t)S4 < (int32_t)AT;
		ZZ_CLOCKCYCLES(4,0x8003DD8C);
		goto ZZ_3DC98_F4;
	}
	T6 = (int32_t)S4 < (int32_t)AT;
	T7 = (int32_t)S4 < (int32_t)V0;
	S0 = (int32_t)S4 < (int32_t)V1;
	T3 >>= T6;
	T4 >>= T7;
	T5 >>= S0;
	S1 = T0 + T3;
	S1 = (int32_t)S1 < (int32_t)R0;
	S2 = T1 + T4;
	S2 = (int32_t)S2 < (int32_t)R0;
	S3 = T2 + T5;
	S3 = (int32_t)S3 < (int32_t)R0;
	T7 = S1 << T7;
	T7 <<= S0;
	T6 = S2 << S0;
	T7 += T6;
	T6 = T7 + S3;
	if (!S1)
	{
		T6 <<= 1;
		ZZ_CLOCKCYCLES(22,0x8003DD68);
		goto ZZ_3DC98_D0;
	}
	T6 <<= 1;
	T0 += T3;
	ZZ_CLOCKCYCLES(23,0x8003DD68);
ZZ_3DC98_D0:
	if (!S2)
	{
		A3 += A0;
		ZZ_CLOCKCYCLES(2,0x8003DD74);
		goto ZZ_3DC98_DC;
	}
	A3 += A0;
	T1 += T4;
	ZZ_CLOCKCYCLES(3,0x8003DD74);
ZZ_3DC98_DC:
	if (!S3)
	{
		A3 += T6;
		ZZ_CLOCKCYCLES(2,0x8003DD80);
		goto ZZ_3DC98_E8;
	}
	A3 += T6;
	T2 += T5;
	ZZ_CLOCKCYCLES(3,0x8003DD80);
ZZ_3DC98_E8:
	A3 = EMU_ReadU16(A3);
	S4 += 1;
	ZZ_CLOCKCYCLES(3,0x8003DD0C);
	goto ZZ_3DC98_74;
ZZ_3DC98_F4:
	T6 = A3 & 0xE;
	T7 = A2 & 0x8;
	if (!T7)
	{
		T7 = 0x6;
		ZZ_CLOCKCYCLES(4,0x8003DDA8);
		goto ZZ_3DC98_110;
	}
	T7 = 0x6;
	if (T7 == T6)
	{
		T7 = 0x8;
		ZZ_CLOCKCYCLES(6,0x8003DDDC);
		goto ZZ_3DC98_144;
	}
	T7 = 0x8;
	if (T7 == T6)
	{
		T7 = A2 & 0x1;
		ZZ_CLOCKCYCLES(8,0x8003DDDC);
		goto ZZ_3DC98_144;
	}
	ZZ_CLOCKCYCLES(7,0x8003DDA8);
ZZ_3DC98_110:
	T7 = A2 & 0x1;
	if (!T7)
	{
		V0 = A3;
		ZZ_CLOCKCYCLES(3,0x8003DDC8);
		goto ZZ_3DC98_130;
	}
	V0 = A3;
	T6 = EMU_ReadU32(A1 + 4); //+ 0x4
	T7 = T1 + T4;
	T7 += T6;
	EMU_Write32(A1 + 4,T7); //+ 0x4
	ZZ_CLOCKCYCLES(8,0x8003DE0C);
	goto ZZ_3DC98_174;
ZZ_3DC98_130:
	T6 = EMU_ReadU32(A1 + 8); //+ 0x8
	T7 = T2 - 1;
	T7 += T6;
	EMU_Write32(A1 + 8,T7); //+ 0x8
	ZZ_CLOCKCYCLES(5,0x8003DE0C);
	goto ZZ_3DC98_174;
ZZ_3DC98_144:
	T7 = A2 & 0x1;
	if (!T7)
	{
		V0 = R0;
		ZZ_CLOCKCYCLES(3,0x8003DDFC);
		goto ZZ_3DC98_164;
	}
	V0 = R0;
	T6 = EMU_ReadU32(A1 + 4); //+ 0x4
	T7 = T1 - 1;
	T7 += T6;
	EMU_Write32(A1 + 4,T7); //+ 0x4
	ZZ_CLOCKCYCLES(8,0x8003DE0C);
	goto ZZ_3DC98_174;
ZZ_3DC98_164:
	T6 = EMU_ReadU32(A1 + 8); //+ 0x8
	T7 = T2 - 1;
	T7 += T6;
	EMU_Write32(A1 + 8,T7); //+ 0x8
	ZZ_CLOCKCYCLES(4,0x8003DE0C);
ZZ_3DC98_174:
	AT = 0x1F800000;
	S0 = EMU_ReadU32(AT);
	S1 = EMU_ReadU32(AT + 4); //+ 0x4
	S2 = EMU_ReadU32(AT + 8); //+ 0x8
	S3 = EMU_ReadU32(AT + 12); //+ 0xC
	S4 = EMU_ReadU32(AT + 16); //+ 0x10
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x80028D80,ZZ_28C9C_E4);
	ZZ_JUMPREGISTER(0x80029040,ZZ_28EBC_184);
	ZZ_JUMPREGISTER(0x8002941C,ZZ_29254_1C8);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003DC98,0x8003DD0C,ZZ_3DC98);
ZZ_MARK_TARGET(0x8003DD0C,0x8003DD68,ZZ_3DC98_74);
ZZ_MARK_TARGET(0x8003DD68,0x8003DD74,ZZ_3DC98_D0);
ZZ_MARK_TARGET(0x8003DD74,0x8003DD80,ZZ_3DC98_DC);
ZZ_MARK_TARGET(0x8003DD80,0x8003DD8C,ZZ_3DC98_E8);
ZZ_MARK_TARGET(0x8003DD8C,0x8003DDA8,ZZ_3DC98_F4);
ZZ_MARK_TARGET(0x8003DDA8,0x8003DDC8,ZZ_3DC98_110);
ZZ_MARK_TARGET(0x8003DDC8,0x8003DDDC,ZZ_3DC98_130);
ZZ_MARK_TARGET(0x8003DDDC,0x8003DDFC,ZZ_3DC98_144);
ZZ_MARK_TARGET(0x8003DDFC,0x8003DE0C,ZZ_3DC98_164);
ZZ_MARK_TARGET(0x8003DE0C,0x8003DE2C,ZZ_3DC98_174);
