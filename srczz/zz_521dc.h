#ifdef ZZ_INCLUDE_CODE
ZZ_521DC:
	SP -= 8;
	A0 &= 0xFFFF;
	A0 <<= 7;
	A1 &= 0xFFFF;
	A0 += A1;
	A2 &= 0xFFFF;
	A2 <<= 7;
	A3 &= 0xFFFF;
	A2 += A3;
	A2 = A2 - A0;
	if ((int32_t)A2 >= 0)
	{
		A1 = A2;
		ZZ_CLOCKCYCLES(12,0x80052210);
		goto ZZ_521DC_34;
	}
	A1 = A2;
	A1 = -A2;
	ZZ_CLOCKCYCLES(13,0x80052210);
ZZ_521DC_34:
	V0 = 0x2AAA0000;
	V0 |= 0xAAAB;
	EMU_SMultiply(A1,V0);
	V0 = (int32_t)A1 >> 31;
	T1 = HI;
	V1 = (int32_t)T1 >> 8;
	V1 = V1 - V0;
	A0 = V1;
	V0 = A0 << 1;
	V0 += A0;
	V0 <<= 9;
	if ((int32_t)A2 < 0)
	{
		V1 = A1 - V0;
		ZZ_CLOCKCYCLES(13,0x80052250);
		goto ZZ_521DC_74;
	}
	V1 = A1 - V0;
	V0 = 4096;
	V0 <<= A0;
	ZZ_CLOCKCYCLES(16,0x80052268);
	goto ZZ_521DC_8C;
ZZ_521DC_74:
	if (!V1)
	{
		V0 = 1536;
		ZZ_CLOCKCYCLES(2,0x80052260);
		goto ZZ_521DC_84;
	}
	V0 = 1536;
	A0 += 1;
	V1 = V0 - V1;
	ZZ_CLOCKCYCLES(4,0x80052260);
ZZ_521DC_84:
	V0 = 4096;
	V0 = (int32_t)V0 >> A0;
	ZZ_CLOCKCYCLES(2,0x80052268);
ZZ_521DC_8C:
	A2 = V0 & 0xFFFF;
	A0 = 4155;
	EMU_SMultiply(A2,A0);
	A3 = A2 << 12;
	A1 = R0;
	if ((int32_t)V1 >= 0)
	{
		V0 = V1;
		ZZ_CLOCKCYCLES(7,0x80052288);
		goto ZZ_521DC_AC;
	}
	V0 = V1;
	V0 = -V0;
	ZZ_CLOCKCYCLES(8,0x80052288);
ZZ_521DC_AC:
	V1 = V0 >> 5;
	T0 = V0 & 0x1F;
	T1 = LO;
	if (!V1)
	{
		EMU_Write32(SP,T1);
		ZZ_CLOCKCYCLES(5,0x800522D8);
		goto ZZ_521DC_FC;
	}
	EMU_Write32(SP,T1);
	EMU_SMultiply(A2,A0);
	ZZ_CLOCKCYCLES(6,0x800522A0);
ZZ_521DC_C4:
	V0 = A0 << 6;
	V0 += A0;
	V0 <<= 4;
	V0 = V0 - A0;
	V0 <<= 2;
	A3 = LO;
	A0 = V0 - A0;
	A0 >>= 12;
	EMU_SMultiply(A2,A0);
	A1 += 1;
	V0 = (int32_t)A1 < (int32_t)V1;
	T1 = LO;
	if (V0)
	{
		EMU_Write32(SP,T1);
		ZZ_CLOCKCYCLES(14,0x800522A0);
		goto ZZ_521DC_C4;
	}
	EMU_Write32(SP,T1);
	ZZ_CLOCKCYCLES(14,0x800522D8);
ZZ_521DC_FC:
	T1 = EMU_ReadU32(SP);
	V0 = T1 - A3;
	V0 >>= 5;
	EMU_SMultiply(V0,T0);
	T1 = LO;
	V0 = A3 + T1;
	V1 = V0 >> 12;
	V0 = V1 < 16384;
	if (V0)
	{
		V0 = V1 & 0xFFFF;
		ZZ_CLOCKCYCLES(11,0x8005230C);
		goto ZZ_521DC_130;
	}
	V0 = V1 & 0xFFFF;
	V1 = 16383;
	V0 = V1 & 0xFFFF;
	ZZ_CLOCKCYCLES(13,0x8005230C);
ZZ_521DC_130:
	ZZ_JUMPREGISTER_BEGIN(RA);
	SP += 8;
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x80051C14,ZZ_51B50_C4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800521DC,0x80052210,ZZ_521DC);
ZZ_MARK_TARGET(0x80052210,0x80052250,ZZ_521DC_34);
ZZ_MARK_TARGET(0x80052250,0x80052260,ZZ_521DC_74);
ZZ_MARK_TARGET(0x80052260,0x80052268,ZZ_521DC_84);
ZZ_MARK_TARGET(0x80052268,0x80052288,ZZ_521DC_8C);
ZZ_MARK_TARGET(0x80052288,0x800522A0,ZZ_521DC_AC);
ZZ_MARK_TARGET(0x800522A0,0x800522D8,ZZ_521DC_C4);
ZZ_MARK_TARGET(0x800522D8,0x8005230C,ZZ_521DC_FC);
ZZ_MARK_TARGET(0x8005230C,0x80052314,ZZ_521DC_130);
