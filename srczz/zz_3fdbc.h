#ifdef ZZ_INCLUDE_CODE
ZZ_3FDBC:
	A0 = EMU_ReadU32(V1 + 300); //+ 0x12C
	if ((int32_t)T9 < 0)
	{
		T8 = EMU_ReadU32(V1 + 304); //+ 0x130
		ZZ_CLOCKCYCLES(3,0x8003FDE0);
		goto ZZ_3FDBC_24;
	}
	T8 = EMU_ReadU32(V1 + 304); //+ 0x130
	T5 >>= A0;
	T6 >>= A0;
	T7 >>= A0;
	T5 &= T8;
	T6 &= T8;
	T7 &= T8;
	ZZ_CLOCKCYCLES(9,0x8003FDE0);
ZZ_3FDBC_24:
	ZZ_JUMPREGISTER_BEGIN(S3);
	ZZ_CLOCKCYCLES_JR(2);
	// UNIMPLEMENTED INDIRECT JUMP (S3,8003FDE0)
	// PC IS 8003FDE0
	ZZ_JUMPREGISTER_END();
ZZ_3FDBC_60:
	V0 = GTE_GetRegister(GTE_DREG_SZ1);
	T8 = GTE_GetRegister(GTE_DREG_SZ2);
	T9 = GTE_GetRegister(GTE_DREG_SZ3);
	if ((int32_t)V0 <= 0)
	{
		V0 += T8;
		ZZ_CLOCKCYCLES(5,0x8003FFA4);
		goto ZZ_3FDBC_1E8;
	}
	V0 += T8;
	if ((int32_t)T8 <= 0)
	{
		V0 += T9;
		ZZ_CLOCKCYCLES(7,0x8003FFA4);
		goto ZZ_3FDBC_1E8;
	}
	V0 += T9;
	GTE_NormalClip();
	if ((int32_t)T9 <= 0)
	{
		V0 >>= 5;
		ZZ_CLOCKCYCLES(10,0x8003FFA4);
		goto ZZ_3FDBC_1E8;
	}
	V0 >>= 5;
	A3 = EMU_ReadU32(V1 + 236); //+ 0xEC
	T8 = EMU_ReadU32(V1 + 240); //+ 0xF0
	A1 = A3 & 0xFFFF;
	V0 = T8 - V0;
	T9 = T0 << 2;
	T8 = GTE_GetRegister(GTE_DREG_MAC0);
	T9 ^= A3;
	if (!T8)
	{
		T9 ^= T8;
		ZZ_CLOCKCYCLES(19,0x8003FFA4);
		goto ZZ_3FDBC_1E8;
	}
	T9 ^= T8;
	T8 = T0 << 3;
	if ((int32_t)T8 >= 0)
	{
		ZZ_CLOCKCYCLES(22,0x8003FE7C);
		goto ZZ_3FDBC_C0;
	}
	if ((int32_t)T9 <= 0)
	{
		ZZ_CLOCKCYCLES(24,0x8003FFA4);
		goto ZZ_3FDBC_1E8;
	}
	ZZ_CLOCKCYCLES(24,0x8003FE7C);
ZZ_3FDBC_C0:
	GTE_SetRegister(GTE_DREG_RGB0,T5);
	GTE_SetRegister(GTE_DREG_RGB1,T6);
	GTE_SetRegister(GTE_DREG_RGB2,T7);
	GTE_SetRegister(GTE_DREG_IR0,A1);
	T9 = T0 << 7;
	if ((int32_t)T9 < 0)
	{
		A0 = EMU_ReadU32(V1 + 112); //+ 0x70
		ZZ_CLOCKCYCLES(7,0x8003FEA4);
		goto ZZ_3FDBC_E8;
	}
	A0 = EMU_ReadU32(V1 + 112); //+ 0x70
	if (!A1)
	{
		ZZ_CLOCKCYCLES(9,0x8003FEA4);
		goto ZZ_3FDBC_E8;
	}
	GTE_DepthCueTriple();
	ZZ_CLOCKCYCLES(10,0x8003FEA4);
ZZ_3FDBC_E8:
	if ((int32_t)V0 >= 0)
	{
		V0 <<= 2;
		ZZ_CLOCKCYCLES(2,0x8003FEB0);
		goto ZZ_3FDBC_F4;
	}
	V0 <<= 2;
	V0 = 0;
	ZZ_CLOCKCYCLES(3,0x8003FEB0);
ZZ_3FDBC_F4:
	T8 = EMU_CheckedAdd(V0,-8188);
	if ((int32_t)T8 <= 0)
	{
		V0 += FP;
		ZZ_CLOCKCYCLES(3,0x8003FEC0);
		goto ZZ_3FDBC_104;
	}
	V0 += FP;
	V0 = EMU_CheckedAdd(FP,8188);
	ZZ_CLOCKCYCLES(4,0x8003FEC0);
ZZ_3FDBC_104:
	if (A2)
	{
		T8 = 0x32000000;
		ZZ_CLOCKCYCLES(2,0x8003FF34);
		goto ZZ_3FDBC_178;
	}
	T8 = 0x32000000;
	EMU_Write32(S7 + 8,GTE_GetRegister(GTE_DREG_SXY0)); //+ 0x8
	EMU_Write32(S7 + 16,GTE_GetRegister(GTE_DREG_SXY1)); //+ 0x10
	EMU_Write32(S7 + 24,GTE_GetRegister(GTE_DREG_SXY2)); //+ 0x18
	T9 = GTE_GetRegister(GTE_DREG_RGB0);
	EMU_Write32(S7 + 12,GTE_GetRegister(GTE_DREG_RGB1)); //+ 0xC
	EMU_Write32(S7 + 20,GTE_GetRegister(GTE_DREG_RGB2)); //+ 0x14
	T8 |= T9;
	EMU_Write32(S7 + 4,T8); //+ 0x4
	T8 = EMU_ReadU32(V0 + 24); //+ 0x18
	T9 = 0x6000000;
	T8 |= T9;
	EMU_Write32(S7,T8);
	A1 = S7 << 8;
	S7 = EMU_CheckedAdd(S7,28);
	A1 >>= 8;
	T9 = 0xE1000000;
	T9 |= 0xA20;
	EMU_Write32(S7 + 4,T9); //+ 0x4
	EMU_Write32(S7 + 8,R0); //+ 0x8
	T9 = 0x2000000;
	T9 |= A1;
	EMU_Write32(S7,T9);
	A1 = S7 << 8;
	A1 >>= 8;
	EMU_Write32(V0 + 24,A1); //+ 0x18
	ZZ_JUMPREGISTER_BEGIN(RA);
	S7 = EMU_CheckedAdd(S7,12);
	ZZ_CLOCKCYCLES_JR(29);
	ZZ_JUMPREGISTER(0x8003FBFC,ZZ_3F834_3C8);
	ZZ_JUMPREGISTER(0x8003F934,ZZ_3F834_100);
	ZZ_JUMPREGISTER(0x8003FA3C,ZZ_3F834_208);
	ZZ_JUMPREGISTER(0x8003FB44,ZZ_3F834_310);
	ZZ_JUMPREGISTER(0x8003F970,ZZ_3F834_13C);
	ZZ_JUMPREGISTER(0x8003FA78,ZZ_3F834_244);
	ZZ_JUMPREGISTER(0x8003FB80,ZZ_3F834_34C);
	ZZ_JUMPREGISTER(0x8003F9B0,ZZ_3F834_17C);
	ZZ_JUMPREGISTER(0x8003FAB8,ZZ_3F834_284);
	ZZ_JUMPREGISTER(0x8003FBC0,ZZ_3F834_38C);
	ZZ_JUMPREGISTER_END();
ZZ_3FDBC_178:
	T9 = EMU_ReadU32(A0 - 8); //+ 0xFFFFFFF8
	T8 = 0x600000;
	T8 = ~(T8 | T8);
	T9 &= T8;
	T8 = 0x200000;
	T9 |= T8;
	T8 = EMU_ReadU32(A0 - 12); //+ 0xFFFFFFF4
	A0 = EMU_ReadU32(A0 - 4); //+ 0xFFFFFFFC
	EMU_Write32(S7 + 8,GTE_GetRegister(GTE_DREG_SXY0)); //+ 0x8
	EMU_Write32(S7 + 20,GTE_GetRegister(GTE_DREG_SXY1)); //+ 0x14
	EMU_Write32(S7 + 32,GTE_GetRegister(GTE_DREG_SXY2)); //+ 0x20
	EMU_Write32(S7 + 12,T8); //+ 0xC
	EMU_Write32(S7 + 24,T9); //+ 0x18
	EMU_Write32(S7 + 36,A0); //+ 0x24
	A0 = GTE_GetRegister(GTE_DREG_RGB0);
	T8 = 0x36000000;
	T8 |= A0;
	EMU_Write32(S7 + 4,T8); //+ 0x4
	EMU_Write32(S7 + 16,GTE_GetRegister(GTE_DREG_RGB1)); //+ 0x10
	EMU_Write32(S7 + 28,GTE_GetRegister(GTE_DREG_RGB2)); //+ 0x1C
	T9 = 0x9000000;
	T8 = EMU_ReadU32(V0 + 24); //+ 0x18
	A1 = S7 << 8;
	T8 |= T9;
	EMU_Write32(S7,T8);
	A1 >>= 8;
	EMU_Write32(V0 + 24,A1); //+ 0x18
	S7 += 40;
	ZZ_CLOCKCYCLES(28,0x8003FFA4);
ZZ_3FDBC_1E8:
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(2);
	ZZ_JUMPREGISTER(0x8003FBFC,ZZ_3F834_3C8);
	ZZ_JUMPREGISTER(0x8003F934,ZZ_3F834_100);
	ZZ_JUMPREGISTER(0x8003FA3C,ZZ_3F834_208);
	ZZ_JUMPREGISTER(0x8003FB44,ZZ_3F834_310);
	ZZ_JUMPREGISTER(0x8003F970,ZZ_3F834_13C);
	ZZ_JUMPREGISTER(0x8003FA78,ZZ_3F834_244);
	ZZ_JUMPREGISTER(0x8003FB80,ZZ_3F834_34C);
	ZZ_JUMPREGISTER(0x8003F9B0,ZZ_3F834_17C);
	ZZ_JUMPREGISTER(0x8003FAB8,ZZ_3F834_284);
	ZZ_JUMPREGISTER(0x8003FBC0,ZZ_3F834_38C);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8003FDBC,0x8003FDE0,ZZ_3FDBC);
ZZ_MARK_TARGET(0x8003FDE0,0x8003FDE8,ZZ_3FDBC_24);
ZZ_MARK_TARGET(0x8003FE1C,0x8003FE7C,ZZ_3FDBC_60);
ZZ_MARK_TARGET(0x8003FE7C,0x8003FEA4,ZZ_3FDBC_C0);
ZZ_MARK_TARGET(0x8003FEA4,0x8003FEB0,ZZ_3FDBC_E8);
ZZ_MARK_TARGET(0x8003FEB0,0x8003FEC0,ZZ_3FDBC_F4);
ZZ_MARK_TARGET(0x8003FEC0,0x8003FF34,ZZ_3FDBC_104);
ZZ_MARK_TARGET(0x8003FF34,0x8003FFA4,ZZ_3FDBC_178);
ZZ_MARK_TARGET(0x8003FFA4,0x8003FFAC,ZZ_3FDBC_1E8);
