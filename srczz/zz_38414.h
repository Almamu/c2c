#ifdef ZZ_INCLUDE_CODE
ZZ_38414:
	SP -= 136;
	EMU_Write32(SP + 112,S0); //+ 0x70
	S0 = A0;
	EMU_Write32(SP + 120,S2); //+ 0x78
	S2 = A1;
	V1 = S2 >> 12;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += 96;
	EMU_Write32(SP + 124,S3); //+ 0x7C
	S3 = S0 + V0;
	A0 = S2 & 0xFFF;
	A1 = A0;
	V1 = S2 & 0xE00;
	V0 = 0xE00;
	EMU_Write32(SP + 128,RA); //+ 0x80
	if (V1 != V0)
	{
		EMU_Write32(SP + 116,S1); //+ 0x74
		ZZ_CLOCKCYCLES(20,0x80038498);
		goto ZZ_38414_84;
	}
	EMU_Write32(SP + 116,S1); //+ 0x74
	V0 = 0xE1F;
	if (A0 != V0)
	{
		V0 = S2 & 0x1FF;
		ZZ_CLOCKCYCLES(23,0x80038488);
		goto ZZ_38414_74;
	}
	V0 = S2 & 0x1FF;
	V0 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 -= 4;
	S1 = V0;
	EMU_Write32(S0 + 188,S1); //+ 0xBC
	ZZ_CLOCKCYCLES(29,0x800384A4);
	goto ZZ_38414_90;
ZZ_38414_74:
	V0 <<= 2;
	V0 += 64;
	S1 = S0 + V0;
	ZZ_CLOCKCYCLES(4,0x800384A4);
	goto ZZ_38414_90;
ZZ_38414_84:
	RA = 0x800384A0; //ZZ_38414_8C
	A0 = S0;
	ZZ_CLOCKCYCLES(2,0x80036FA4);
	goto ZZ_36FA4;
ZZ_38414_8C:
	S1 = V0;
	ZZ_CLOCKCYCLES(1,0x800384A4);
ZZ_38414_90:
	V0 = S2 >> 18;
	V1 = V0 & 0x7;
	V0 = V1 < 8;
	if (!V0)
	{
		V0 = V1 << 2;
		ZZ_CLOCKCYCLES(5,0x80038978);
		goto ZZ_38414_564;
	}
	V0 = V1 << 2;
	AT = 0x80010000;
	AT += V0;
	V0 = EMU_ReadU32(AT + 2296); //+ 0x8F8
	ZZ_JUMPREGISTER_BEGIN(V0);
	ZZ_CLOCKCYCLES_JR(11);
	ZZ_JUMPREGISTER(0x800384D0,ZZ_38414_BC);
	ZZ_JUMPREGISTER(0x80038828,ZZ_38414_414);
	ZZ_JUMPREGISTER(0x80038534,ZZ_38414_120);
	ZZ_JUMPREGISTER(0x80038660,ZZ_38414_24C);
	ZZ_JUMPREGISTER(0x800385C8,ZZ_38414_1B4);
	ZZ_JUMPREGISTER(0x80038950,ZZ_38414_53C);
	ZZ_JUMPREGISTER_END();
ZZ_38414_BC:
	if (!S1)
	{
		ZZ_CLOCKCYCLES(2,0x80038978);
		goto ZZ_38414_564;
	}
	V0 = EMU_ReadU32(S0 + 240); //+ 0xF0
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80038978);
		goto ZZ_38414_564;
	}
	V0 = EMU_ReadU32(S3);
	V1 = EMU_ReadU32(S3 + 4); //+ 0x4
	A0 = EMU_ReadU32(S3 + 8); //+ 0x8
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,V1); //+ 0x1C
	EMU_Write32(SP + 32,A0); //+ 0x20
	A1 = EMU_ReadU32(S1);
	A0 = S0;
	RA = 0x80038510; //ZZ_38414_FC
	A2 = SP + 24;
	ZZ_CLOCKCYCLES(16,0x8001F29C);
	goto ZZ_1F29C;
ZZ_38414_FC:
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	EMU_Write32(S3,V0);
	EMU_Write32(S3 + 4,V1); //+ 0x4
	EMU_Write32(S3 + 8,A0); //+ 0x8
	V0 = EMU_ReadU32(S3 + 4); //+ 0x4
	EMU_Write32(S0 + 252,V0); //+ 0xFC
	ZZ_CLOCKCYCLES(9,0x80038978);
	goto ZZ_38414_564;
ZZ_38414_120:
	A0 = EMU_ReadU32(S0 + 148); //+ 0x94
	RA = 0x80038540; //ZZ_38414_12C
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(3,0x8003D584);
	goto ZZ_3D584;
ZZ_38414_12C:
	V1 = EMU_ReadU32(S1);
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,V1);
	T4 = LO;
	V0 = (int32_t)T4 >> 8;
	EMU_Write32(S3,V0);
	V0 = EMU_ReadU8(S0 + 288); //+ 0x120
	V0 -= 6;
	V0 = V0 < 2;
	if (V0)
	{
		ZZ_CLOCKCYCLES(12,0x80038598);
		goto ZZ_38414_184;
	}
	A0 = EMU_ReadU32(S0 + 148); //+ 0x94
	RA = 0x8003857C; //ZZ_38414_168
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(15,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_38414_168:
	V1 = EMU_ReadU32(S1);
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,V1);
	T4 = LO;
	V0 = (int32_t)T4 >> 8;
	EMU_Write32(S3 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(7,0x800385BC);
	goto ZZ_38414_1A8;
ZZ_38414_184:
	A0 = EMU_ReadU32(S0 + 148); //+ 0x94
	RA = 0x800385A4; //ZZ_38414_190
	A0 &= 0xFFF;
	ZZ_CLOCKCYCLES(3,0x8003D5F8);
	goto ZZ_3D5F8;
ZZ_38414_190:
	V1 = EMU_ReadU32(S1);
	V0 = (int32_t)V0 >> 4;
	EMU_SMultiply(V0,V1);
	T4 = LO;
	V0 = (int32_t)T4 >> 8;
	EMU_Write32(S3 + 4,V0); //+ 0x4
	ZZ_CLOCKCYCLES(6,0x800385BC);
ZZ_38414_1A8:
	V0 = EMU_ReadU32(S1);
	EMU_Write32(S0 + 260,V0); //+ 0x104
	ZZ_CLOCKCYCLES(3,0x80038978);
	goto ZZ_38414_564;
ZZ_38414_1B4:
	V0 = EMU_ReadU32(S1);
	EMU_Write32(SP + 48,V0); //+ 0x30
	V1 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 = V1 - 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	V0 = EMU_ReadU32(V1 - 4); //+ 0xFFFFFFFC
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V1 = EMU_ReadU32(S0 + 188); //+ 0xBC
	V0 = V1 - 4;
	EMU_Write32(S0 + 188,V0); //+ 0xBC
	V0 = EMU_ReadU32(V1 - 4); //+ 0xFFFFFFFC
	V1 = S2 >> 15;
	V1 &= 0x7;
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += 96;
	A0 = S0 + V0;
	V0 = S2 >> 18;
	V0 &= 0x7;
	V1 = 0x4;
	if (V0 != V1)
	{
		A3 = R0;
		ZZ_CLOCKCYCLES(28,0x80038644);
		goto ZZ_38414_230;
	}
	A3 = R0;
	A2 = S0 + 108;
	A3 = S0 + 120;
	ZZ_CLOCKCYCLES(31,0x80038648);
	goto ZZ_38414_234;
ZZ_38414_230:
	A2 = S0 + 144;
	ZZ_CLOCKCYCLES(1,0x80038648);
ZZ_38414_234:
	EMU_Write32(SP + 16,A0); //+ 0x10
	A0 = SP + 40;
	RA = 0x80038658; //ZZ_38414_244
	A1 = S3;
	ZZ_CLOCKCYCLES(4,0x8001EB2C);
	goto ZZ_1EB2C;
ZZ_38414_244:
	ZZ_CLOCKCYCLES(2,0x80038978);
	goto ZZ_38414_564;
ZZ_38414_24C:
	V0 = S2 >> 19;
	V0 &= 0x1C;
	V0 += S0;
	T0 = EMU_ReadU32(V0 + 64); //+ 0x40
	V0 = EMU_ReadU32(T0 + 232); //+ 0xE8
	if (!V0)
	{
		ZZ_CLOCKCYCLES(9,0x80038978);
		goto ZZ_38414_564;
	}
	V1 = EMU_ReadU8(V0);
	V0 = 0x1;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(13,0x80038978);
		goto ZZ_38414_564;
	}
	A2 = EMU_ReadU32(T0 + 8); //+ 0x8
	A1 = EMU_ReadU32(A2 + 32); //+ 0x20
	A0 = EMU_ReadU32(S1);
	V0 = EMU_ReadU32(A1 + 12); //+ 0xC
	A0 >>= 8;
	V1 = V0 << 2;
	V1 += V0;
	V1 <<= 3;
	V1 += 24;
	V1 += A1;
	V0 = A0 << 1;
	V0 += A0;
	A3 = V1 + V0;
	V0 = EMU_ReadU8(A3);
	V1 = EMU_ReadS16(A1);
	A2 = EMU_ReadU32(A2 + 36); //+ 0x24
	V0 <<= 2;
	V1 += V0;
	T1 = V1 << 8;
	EMU_Write32(SP + 56,T1); //+ 0x38
	V0 = EMU_ReadU8(A3 + 2); //+ 0x2
	V1 = EMU_ReadS16(A1 + 2); //+ 0x2
	V0 <<= 2;
	V1 += V0;
	T2 = V1 << 8;
	EMU_Write32(SP + 60,T2); //+ 0x3C
	V0 = EMU_ReadU8(A3 + 1); //+ 0x1
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	V0 <<= 2;
	V1 += V0;
	T3 = V1 << 8;
	if (A1 == A2)
	{
		EMU_Write32(SP + 64,T3); //+ 0x40
		ZZ_CLOCKCYCLES(47,0x800387B4);
		goto ZZ_38414_3A0;
	}
	EMU_Write32(SP + 64,T3); //+ 0x40
	V0 = EMU_ReadU32(A2 + 12); //+ 0xC
	A0 = EMU_ReadU32(S1);
	V1 = V0 << 2;
	V1 += V0;
	V1 <<= 3;
	V1 += 24;
	V1 += A2;
	A0 >>= 8;
	V0 = A0 << 1;
	V0 += A0;
	A3 = V1 + V0;
	V0 = EMU_ReadU8(A3);
	A0 = EMU_ReadS16(A2);
	V0 <<= 2;
	A0 += V0;
	A0 <<= 8;
	A0 += T1;
	EMU_Write32(SP + 56,A0); //+ 0x38
	V0 = EMU_ReadU8(A3 + 2); //+ 0x2
	V1 = EMU_ReadS16(A2 + 2); //+ 0x2
	V0 <<= 2;
	V1 += V0;
	V1 <<= 8;
	V1 += T2;
	EMU_Write32(SP + 60,V1); //+ 0x3C
	A1 = EMU_ReadU8(A3 + 1); //+ 0x1
	V0 = EMU_ReadU32(A2 + 4); //+ 0x4
	A0 = (int32_t)A0 >> 1;
	V1 = (int32_t)V1 >> 1;
	EMU_Write32(SP + 56,A0); //+ 0x38
	EMU_Write32(SP + 60,V1); //+ 0x3C
	A1 <<= 2;
	V0 += A1;
	V0 <<= 8;
	V0 += T3;
	EMU_Write32(SP + 64,V0); //+ 0x40
	V0 = (int32_t)V0 >> 1;
	EMU_Write32(SP + 64,V0); //+ 0x40
	ZZ_CLOCKCYCLES(85,0x800387B4);
ZZ_38414_3A0:
	V0 = S2 >> 18;
	V0 &= 0x7;
	V1 = 0x3;
	if (V0 != V1)
	{
		A0 = T0;
		ZZ_CLOCKCYCLES(5,0x80038814);
		goto ZZ_38414_400;
	}
	A0 = T0;
	A1 = 0x80010000;
	A1 += 2052;
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(A1 + 4); //+ 0x4
	A0 = EMU_ReadU32(A1 + 8); //+ 0x8
	EMU_Write32(SP + 72,V0); //+ 0x48
	EMU_Write32(SP + 76,V1); //+ 0x4C
	EMU_Write32(SP + 80,A0); //+ 0x50
	V0 = EMU_ReadU32(T0 + 8); //+ 0x8
	V0 = EMU_ReadU32(V0 + 40); //+ 0x28
	EMU_Write32(SP + 16,S3); //+ 0x10
	A3 = EMU_ReadU32(V0 + 16); //+ 0x10
	A0 = SP + 56;
	A1 = T0 + 96;
	RA = 0x8003880C; //ZZ_38414_3F8
	A2 = SP + 72;
	ZZ_CLOCKCYCLES(22,0x8001EB2C);
	goto ZZ_1EB2C;
ZZ_38414_3F8:
	ZZ_CLOCKCYCLES(2,0x80038978);
	goto ZZ_38414_564;
ZZ_38414_400:
	A1 = SP + 56;
	RA = 0x80038820; //ZZ_38414_40C
	A2 = S3;
	ZZ_CLOCKCYCLES(3,0x8001EC34);
	goto ZZ_1EC34;
ZZ_38414_40C:
	ZZ_CLOCKCYCLES(2,0x80038978);
	goto ZZ_38414_564;
ZZ_38414_414:
	A0 = S3;
	V1 = S2 >> 15;
	V1 &= 0x7;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 2;
	V0 += 96;
	S0 += V0;
	RA = 0x80038850; //ZZ_38414_43C
	A1 = S0;
	ZZ_CLOCKCYCLES(10,0x8001EFA8);
	goto ZZ_1EFA8;
ZZ_38414_43C:
	V1 = EMU_ReadU32(S1);
	if (!V1)
	{
		ZZ_CLOCKCYCLES(4,0x80038978);
		goto ZZ_38414_564;
	}
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	A2 = (int32_t)V0 >> 8;
	if (!A2)
	{
		A1 = V1 << 3;
		ZZ_CLOCKCYCLES(9,0x80038978);
		goto ZZ_38414_564;
	}
	A1 = V1 << 3;
	A1 += V1;
	A1 <<= 2;
	A1 = A1 - V1;
	A1 <<= 3;
	EMU_SDivide(A1,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(16,0x80038894);
		goto ZZ_38414_480;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(17,0x80038894);
ZZ_38414_480:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800388AC);
		goto ZZ_38414_498;
	}
	AT = 0x80000000;
	if (A1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800388AC);
		goto ZZ_38414_498;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800388AC);
ZZ_38414_498:
	A1 = LO;
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	V1 = V0 << 3;
	V1 += V0;
	V1 <<= 2;
	V1 = V1 - V0;
	V1 <<= 3;
	EMU_SDivide(V1,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(11,0x800388DC);
		goto ZZ_38414_4C8;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(12,0x800388DC);
ZZ_38414_4C8:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x800388F4);
		goto ZZ_38414_4E0;
	}
	AT = 0x80000000;
	if (V1 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x800388F4);
		goto ZZ_38414_4E0;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x800388F4);
ZZ_38414_4E0:
	V1 = LO;
	A0 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = A0 << 3;
	V0 += A0;
	V0 <<= 2;
	V0 = V0 - A0;
	V0 <<= 3;
	EMU_SDivide(V0,A2);
	if (A2)
	{
		ZZ_CLOCKCYCLES(11,0x80038924);
		goto ZZ_38414_510;
	}
	EMU_Break(7168);
	ZZ_CLOCKCYCLES(12,0x80038924);
ZZ_38414_510:
	AT = -1;
	if (A2 != AT)
	{
		AT = 0x80000000;
		ZZ_CLOCKCYCLES(3,0x8003893C);
		goto ZZ_38414_528;
	}
	AT = 0x80000000;
	if (V0 != AT)
	{
		ZZ_CLOCKCYCLES(5,0x8003893C);
		goto ZZ_38414_528;
	}
	EMU_Break(6144);
	ZZ_CLOCKCYCLES(6,0x8003893C);
ZZ_38414_528:
	V0 = LO;
	EMU_Write32(S1,A1);
	EMU_Write32(S1 + 4,V1); //+ 0x4
	EMU_Write32(S1 + 8,V0); //+ 0x8
	ZZ_CLOCKCYCLES(5,0x80038978);
	goto ZZ_38414_564;
ZZ_38414_53C:
	A0 = S3;
	V0 = S2 >> 15;
	V0 &= 0x7;
	A1 = V0 << 1;
	A1 += V0;
	A1 <<= 2;
	A1 += 96;
	A1 += S0;
	RA = 0x80038978; //ZZ_38414_564
	A2 = R0;
	ZZ_CLOCKCYCLES(10,0x8001EE74);
	goto ZZ_1EE74;
ZZ_38414_564:
	RA = EMU_ReadU32(SP + 128); //+ 0x80
	S3 = EMU_ReadU32(SP + 124); //+ 0x7C
	S2 = EMU_ReadU32(SP + 120); //+ 0x78
	S1 = EMU_ReadU32(SP + 116); //+ 0x74
	S0 = EMU_ReadU32(SP + 112); //+ 0x70
	SP += 136;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8003A26C,ZZ_3A234_38);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80038414,ZZ_38414);
ZZ_MARK(0x80038418);
ZZ_MARK(0x8003841C);
ZZ_MARK(0x80038420);
ZZ_MARK(0x80038424);
ZZ_MARK(0x80038428);
ZZ_MARK(0x8003842C);
ZZ_MARK(0x80038430);
ZZ_MARK(0x80038434);
ZZ_MARK(0x80038438);
ZZ_MARK(0x8003843C);
ZZ_MARK(0x80038440);
ZZ_MARK(0x80038444);
ZZ_MARK(0x80038448);
ZZ_MARK(0x8003844C);
ZZ_MARK(0x80038450);
ZZ_MARK(0x80038454);
ZZ_MARK(0x80038458);
ZZ_MARK(0x8003845C);
ZZ_MARK(0x80038460);
ZZ_MARK(0x80038464);
ZZ_MARK(0x80038468);
ZZ_MARK(0x8003846C);
ZZ_MARK(0x80038470);
ZZ_MARK(0x80038474);
ZZ_MARK(0x80038478);
ZZ_MARK(0x8003847C);
ZZ_MARK(0x80038480);
ZZ_MARK(0x80038484);
ZZ_MARK_TARGET(0x80038488,ZZ_38414_74);
ZZ_MARK(0x8003848C);
ZZ_MARK(0x80038490);
ZZ_MARK(0x80038494);
ZZ_MARK_TARGET(0x80038498,ZZ_38414_84);
ZZ_MARK(0x8003849C);
ZZ_MARK_TARGET(0x800384A0,ZZ_38414_8C);
ZZ_MARK_TARGET(0x800384A4,ZZ_38414_90);
ZZ_MARK(0x800384A8);
ZZ_MARK(0x800384AC);
ZZ_MARK(0x800384B0);
ZZ_MARK(0x800384B4);
ZZ_MARK(0x800384B8);
ZZ_MARK(0x800384BC);
ZZ_MARK(0x800384C0);
ZZ_MARK(0x800384C4);
ZZ_MARK(0x800384C8);
ZZ_MARK(0x800384CC);
ZZ_MARK_TARGET(0x800384D0,ZZ_38414_BC);
ZZ_MARK(0x800384D4);
ZZ_MARK(0x800384D8);
ZZ_MARK(0x800384DC);
ZZ_MARK(0x800384E0);
ZZ_MARK(0x800384E4);
ZZ_MARK(0x800384E8);
ZZ_MARK(0x800384EC);
ZZ_MARK(0x800384F0);
ZZ_MARK(0x800384F4);
ZZ_MARK(0x800384F8);
ZZ_MARK(0x800384FC);
ZZ_MARK(0x80038500);
ZZ_MARK(0x80038504);
ZZ_MARK(0x80038508);
ZZ_MARK(0x8003850C);
ZZ_MARK_TARGET(0x80038510,ZZ_38414_FC);
ZZ_MARK(0x80038514);
ZZ_MARK(0x80038518);
ZZ_MARK(0x8003851C);
ZZ_MARK(0x80038520);
ZZ_MARK(0x80038524);
ZZ_MARK(0x80038528);
ZZ_MARK(0x8003852C);
ZZ_MARK(0x80038530);
ZZ_MARK_TARGET(0x80038534,ZZ_38414_120);
ZZ_MARK(0x80038538);
ZZ_MARK(0x8003853C);
ZZ_MARK_TARGET(0x80038540,ZZ_38414_12C);
ZZ_MARK(0x80038544);
ZZ_MARK(0x80038548);
ZZ_MARK(0x8003854C);
ZZ_MARK(0x80038550);
ZZ_MARK(0x80038554);
ZZ_MARK(0x80038558);
ZZ_MARK(0x8003855C);
ZZ_MARK(0x80038560);
ZZ_MARK(0x80038564);
ZZ_MARK(0x80038568);
ZZ_MARK(0x8003856C);
ZZ_MARK(0x80038570);
ZZ_MARK(0x80038574);
ZZ_MARK(0x80038578);
ZZ_MARK_TARGET(0x8003857C,ZZ_38414_168);
ZZ_MARK(0x80038580);
ZZ_MARK(0x80038584);
ZZ_MARK(0x80038588);
ZZ_MARK(0x8003858C);
ZZ_MARK(0x80038590);
ZZ_MARK(0x80038594);
ZZ_MARK_TARGET(0x80038598,ZZ_38414_184);
ZZ_MARK(0x8003859C);
ZZ_MARK(0x800385A0);
ZZ_MARK_TARGET(0x800385A4,ZZ_38414_190);
ZZ_MARK(0x800385A8);
ZZ_MARK(0x800385AC);
ZZ_MARK(0x800385B0);
ZZ_MARK(0x800385B4);
ZZ_MARK(0x800385B8);
ZZ_MARK_TARGET(0x800385BC,ZZ_38414_1A8);
ZZ_MARK(0x800385C0);
ZZ_MARK(0x800385C4);
ZZ_MARK_TARGET(0x800385C8,ZZ_38414_1B4);
ZZ_MARK(0x800385CC);
ZZ_MARK(0x800385D0);
ZZ_MARK(0x800385D4);
ZZ_MARK(0x800385D8);
ZZ_MARK(0x800385DC);
ZZ_MARK(0x800385E0);
ZZ_MARK(0x800385E4);
ZZ_MARK(0x800385E8);
ZZ_MARK(0x800385EC);
ZZ_MARK(0x800385F0);
ZZ_MARK(0x800385F4);
ZZ_MARK(0x800385F8);
ZZ_MARK(0x800385FC);
ZZ_MARK(0x80038600);
ZZ_MARK(0x80038604);
ZZ_MARK(0x80038608);
ZZ_MARK(0x8003860C);
ZZ_MARK(0x80038610);
ZZ_MARK(0x80038614);
ZZ_MARK(0x80038618);
ZZ_MARK(0x8003861C);
ZZ_MARK(0x80038620);
ZZ_MARK(0x80038624);
ZZ_MARK(0x80038628);
ZZ_MARK(0x8003862C);
ZZ_MARK(0x80038630);
ZZ_MARK(0x80038634);
ZZ_MARK(0x80038638);
ZZ_MARK(0x8003863C);
ZZ_MARK(0x80038640);
ZZ_MARK_TARGET(0x80038644,ZZ_38414_230);
ZZ_MARK_TARGET(0x80038648,ZZ_38414_234);
ZZ_MARK(0x8003864C);
ZZ_MARK(0x80038650);
ZZ_MARK(0x80038654);
ZZ_MARK_TARGET(0x80038658,ZZ_38414_244);
ZZ_MARK(0x8003865C);
ZZ_MARK_TARGET(0x80038660,ZZ_38414_24C);
ZZ_MARK(0x80038664);
ZZ_MARK(0x80038668);
ZZ_MARK(0x8003866C);
ZZ_MARK(0x80038670);
ZZ_MARK(0x80038674);
ZZ_MARK(0x80038678);
ZZ_MARK(0x8003867C);
ZZ_MARK(0x80038680);
ZZ_MARK(0x80038684);
ZZ_MARK(0x80038688);
ZZ_MARK(0x8003868C);
ZZ_MARK(0x80038690);
ZZ_MARK(0x80038694);
ZZ_MARK(0x80038698);
ZZ_MARK(0x8003869C);
ZZ_MARK(0x800386A0);
ZZ_MARK(0x800386A4);
ZZ_MARK(0x800386A8);
ZZ_MARK(0x800386AC);
ZZ_MARK(0x800386B0);
ZZ_MARK(0x800386B4);
ZZ_MARK(0x800386B8);
ZZ_MARK(0x800386BC);
ZZ_MARK(0x800386C0);
ZZ_MARK(0x800386C4);
ZZ_MARK(0x800386C8);
ZZ_MARK(0x800386CC);
ZZ_MARK(0x800386D0);
ZZ_MARK(0x800386D4);
ZZ_MARK(0x800386D8);
ZZ_MARK(0x800386DC);
ZZ_MARK(0x800386E0);
ZZ_MARK(0x800386E4);
ZZ_MARK(0x800386E8);
ZZ_MARK(0x800386EC);
ZZ_MARK(0x800386F0);
ZZ_MARK(0x800386F4);
ZZ_MARK(0x800386F8);
ZZ_MARK(0x800386FC);
ZZ_MARK(0x80038700);
ZZ_MARK(0x80038704);
ZZ_MARK(0x80038708);
ZZ_MARK(0x8003870C);
ZZ_MARK(0x80038710);
ZZ_MARK(0x80038714);
ZZ_MARK(0x80038718);
ZZ_MARK(0x8003871C);
ZZ_MARK(0x80038720);
ZZ_MARK(0x80038724);
ZZ_MARK(0x80038728);
ZZ_MARK(0x8003872C);
ZZ_MARK(0x80038730);
ZZ_MARK(0x80038734);
ZZ_MARK(0x80038738);
ZZ_MARK(0x8003873C);
ZZ_MARK(0x80038740);
ZZ_MARK(0x80038744);
ZZ_MARK(0x80038748);
ZZ_MARK(0x8003874C);
ZZ_MARK(0x80038750);
ZZ_MARK(0x80038754);
ZZ_MARK(0x80038758);
ZZ_MARK(0x8003875C);
ZZ_MARK(0x80038760);
ZZ_MARK(0x80038764);
ZZ_MARK(0x80038768);
ZZ_MARK(0x8003876C);
ZZ_MARK(0x80038770);
ZZ_MARK(0x80038774);
ZZ_MARK(0x80038778);
ZZ_MARK(0x8003877C);
ZZ_MARK(0x80038780);
ZZ_MARK(0x80038784);
ZZ_MARK(0x80038788);
ZZ_MARK(0x8003878C);
ZZ_MARK(0x80038790);
ZZ_MARK(0x80038794);
ZZ_MARK(0x80038798);
ZZ_MARK(0x8003879C);
ZZ_MARK(0x800387A0);
ZZ_MARK(0x800387A4);
ZZ_MARK(0x800387A8);
ZZ_MARK(0x800387AC);
ZZ_MARK(0x800387B0);
ZZ_MARK_TARGET(0x800387B4,ZZ_38414_3A0);
ZZ_MARK(0x800387B8);
ZZ_MARK(0x800387BC);
ZZ_MARK(0x800387C0);
ZZ_MARK(0x800387C4);
ZZ_MARK(0x800387C8);
ZZ_MARK(0x800387CC);
ZZ_MARK(0x800387D0);
ZZ_MARK(0x800387D4);
ZZ_MARK(0x800387D8);
ZZ_MARK(0x800387DC);
ZZ_MARK(0x800387E0);
ZZ_MARK(0x800387E4);
ZZ_MARK(0x800387E8);
ZZ_MARK(0x800387EC);
ZZ_MARK(0x800387F0);
ZZ_MARK(0x800387F4);
ZZ_MARK(0x800387F8);
ZZ_MARK(0x800387FC);
ZZ_MARK(0x80038800);
ZZ_MARK(0x80038804);
ZZ_MARK(0x80038808);
ZZ_MARK_TARGET(0x8003880C,ZZ_38414_3F8);
ZZ_MARK(0x80038810);
ZZ_MARK_TARGET(0x80038814,ZZ_38414_400);
ZZ_MARK(0x80038818);
ZZ_MARK(0x8003881C);
ZZ_MARK_TARGET(0x80038820,ZZ_38414_40C);
ZZ_MARK(0x80038824);
ZZ_MARK_TARGET(0x80038828,ZZ_38414_414);
ZZ_MARK(0x8003882C);
ZZ_MARK(0x80038830);
ZZ_MARK(0x80038834);
ZZ_MARK(0x80038838);
ZZ_MARK(0x8003883C);
ZZ_MARK(0x80038840);
ZZ_MARK(0x80038844);
ZZ_MARK(0x80038848);
ZZ_MARK(0x8003884C);
ZZ_MARK_TARGET(0x80038850,ZZ_38414_43C);
ZZ_MARK(0x80038854);
ZZ_MARK(0x80038858);
ZZ_MARK(0x8003885C);
ZZ_MARK(0x80038860);
ZZ_MARK(0x80038864);
ZZ_MARK(0x80038868);
ZZ_MARK(0x8003886C);
ZZ_MARK(0x80038870);
ZZ_MARK(0x80038874);
ZZ_MARK(0x80038878);
ZZ_MARK(0x8003887C);
ZZ_MARK(0x80038880);
ZZ_MARK(0x80038884);
ZZ_MARK(0x80038888);
ZZ_MARK(0x8003888C);
ZZ_MARK(0x80038890);
ZZ_MARK_TARGET(0x80038894,ZZ_38414_480);
ZZ_MARK(0x80038898);
ZZ_MARK(0x8003889C);
ZZ_MARK(0x800388A0);
ZZ_MARK(0x800388A4);
ZZ_MARK(0x800388A8);
ZZ_MARK_TARGET(0x800388AC,ZZ_38414_498);
ZZ_MARK(0x800388B0);
ZZ_MARK(0x800388B4);
ZZ_MARK(0x800388B8);
ZZ_MARK(0x800388BC);
ZZ_MARK(0x800388C0);
ZZ_MARK(0x800388C4);
ZZ_MARK(0x800388C8);
ZZ_MARK(0x800388CC);
ZZ_MARK(0x800388D0);
ZZ_MARK(0x800388D4);
ZZ_MARK(0x800388D8);
ZZ_MARK_TARGET(0x800388DC,ZZ_38414_4C8);
ZZ_MARK(0x800388E0);
ZZ_MARK(0x800388E4);
ZZ_MARK(0x800388E8);
ZZ_MARK(0x800388EC);
ZZ_MARK(0x800388F0);
ZZ_MARK_TARGET(0x800388F4,ZZ_38414_4E0);
ZZ_MARK(0x800388F8);
ZZ_MARK(0x800388FC);
ZZ_MARK(0x80038900);
ZZ_MARK(0x80038904);
ZZ_MARK(0x80038908);
ZZ_MARK(0x8003890C);
ZZ_MARK(0x80038910);
ZZ_MARK(0x80038914);
ZZ_MARK(0x80038918);
ZZ_MARK(0x8003891C);
ZZ_MARK(0x80038920);
ZZ_MARK_TARGET(0x80038924,ZZ_38414_510);
ZZ_MARK(0x80038928);
ZZ_MARK(0x8003892C);
ZZ_MARK(0x80038930);
ZZ_MARK(0x80038934);
ZZ_MARK(0x80038938);
ZZ_MARK_TARGET(0x8003893C,ZZ_38414_528);
ZZ_MARK(0x80038940);
ZZ_MARK(0x80038944);
ZZ_MARK(0x80038948);
ZZ_MARK(0x8003894C);
ZZ_MARK_TARGET(0x80038950,ZZ_38414_53C);
ZZ_MARK(0x80038954);
ZZ_MARK(0x80038958);
ZZ_MARK(0x8003895C);
ZZ_MARK(0x80038960);
ZZ_MARK(0x80038964);
ZZ_MARK(0x80038968);
ZZ_MARK(0x8003896C);
ZZ_MARK(0x80038970);
ZZ_MARK(0x80038974);
ZZ_MARK_TARGET(0x80038978,ZZ_38414_564);
ZZ_MARK(0x8003897C);
ZZ_MARK(0x80038980);
ZZ_MARK(0x80038984);
ZZ_MARK(0x80038988);
ZZ_MARK(0x8003898C);
ZZ_MARK(0x80038990);
ZZ_MARK(0x80038994);
