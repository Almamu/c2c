#ifdef ZZ_INCLUDE_CODE
ZZ_29AF8:
	SP -= 88;
	EMU_Write32(SP + 64,S0); //+ 0x40
	S0 = A0;
	EMU_Write32(SP + 68,S1); //+ 0x44
	S1 = A1;
	EMU_Write32(SP + 76,S3); //+ 0x4C
	S3 = A2;
	EMU_Write32(SP + 80,RA); //+ 0x50
	if (S0)
	{
		EMU_Write32(SP + 72,S2); //+ 0x48
		ZZ_CLOCKCYCLES(10,0x80029B2C);
		goto ZZ_29AF8_34;
	}
	EMU_Write32(SP + 72,S2); //+ 0x48
	EMU_Write32(GP + 340,R0); //+ 0x154
	ZZ_CLOCKCYCLES(13,0x80029F84);
	goto ZZ_29AF8_48C;
ZZ_29AF8_34:
	V0 = EMU_ReadU32(S0 + 8); //+ 0x8
	EMU_Write32(V0 + 72,R0); //+ 0x48
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30772); //+ 0x7834
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = 0x1D;
	if (V1 == V0)
	{
		V0 = V1 < 30;
		ZZ_CLOCKCYCLES(10,0x80029B80);
		goto ZZ_29AF8_88;
	}
	V0 = V1 < 30;
	if (!V0)
	{
		V0 = 0x17;
		ZZ_CLOCKCYCLES(12,0x80029B6C);
		goto ZZ_29AF8_74;
	}
	V0 = 0x17;
	if (V1 == V0)
	{
		V0 = 0xF424;
		ZZ_CLOCKCYCLES(14,0x80029B80);
		goto ZZ_29AF8_88;
	}
	V0 = 0xF424;
	ZZ_CLOCKCYCLES(16,0x80029BA0);
	goto ZZ_29AF8_A8;
ZZ_29AF8_74:
	V0 = 0x22;
	if (V1 == V0)
	{
		V0 = 0x25;
		ZZ_CLOCKCYCLES(3,0x80029B80);
		goto ZZ_29AF8_88;
	}
	V0 = 0x25;
	if (V1 != V0)
	{
		V0 = 0xF424;
		ZZ_CLOCKCYCLES(5,0x80029BA0);
		goto ZZ_29AF8_A8;
	}
	V0 = 0xF424;
	ZZ_CLOCKCYCLES(5,0x80029B80);
ZZ_29AF8_88:
	V0 = EMU_ReadU32(S0 + 256); //+ 0x100
	V1 = 0x20000000;
	V0 &= V1;
	if (!V0)
	{
		V0 = 0x20000;
		ZZ_CLOCKCYCLES(5,0x80029B9C);
		goto ZZ_29AF8_A4;
	}
	V0 = 0x20000;
	V0 |= 0x7AC4;
	ZZ_CLOCKCYCLES(7,0x80029BA0);
	goto ZZ_29AF8_A8;
ZZ_29AF8_A4:
	V0 = 0xF424;
	ZZ_CLOCKCYCLES(1,0x80029BA0);
ZZ_29AF8_A8:
	EMU_Write32(GP + 136,V0); //+ 0x88
	V0 = EMU_ReadU32(S0 + 96); //+ 0x60
	V1 = EMU_ReadU32(GP + 340); //+ 0x154
	EMU_Write32(SP + 24,V0); //+ 0x18
	V0 = EMU_ReadU32(S0 + 100); //+ 0x64
	EMU_Write32(SP + 28,V0); //+ 0x1C
	V0 = EMU_ReadU32(S0 + 104); //+ 0x68
	EMU_Write32(SP + 32,V0); //+ 0x20
	V0 = EMU_ReadU32(S1);
	EMU_Write32(SP + 40,V0); //+ 0x28
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	EMU_Write32(SP + 44,V0); //+ 0x2C
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	S2 = S0 + 96;
	if (!V1)
	{
		EMU_Write32(SP + 48,V0); //+ 0x30
		ZZ_CLOCKCYCLES(20,0x80029CAC);
		goto ZZ_29AF8_1B4;
	}
	EMU_Write32(SP + 48,V0); //+ 0x30
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 2248); //+ 0xFFFFF738
	V1 = EMU_ReadU32(S1);
	V0 = A0 - V1;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)V0 < 10;
		ZZ_CLOCKCYCLES(27,0x80029C1C);
		goto ZZ_29AF8_124;
	}
	V0 = (int32_t)V0 < 10;
	if (V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(29,0x80029C2C);
		goto ZZ_29AF8_134;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(31,0x80029CB0);
	goto ZZ_29AF8_1B8;
ZZ_29AF8_124:
	V0 = V1 - A0;
	V0 = (int32_t)V0 < 10;
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x80029CB0);
		goto ZZ_29AF8_1B8;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80029C2C);
ZZ_29AF8_134:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 2244); //+ 0xFFFFF73C
	V1 = EMU_ReadU32(S1 + 4); //+ 0x4
	V0 = A0 - V1;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)V0 < 10;
		ZZ_CLOCKCYCLES(7,0x80029C58);
		goto ZZ_29AF8_160;
	}
	V0 = (int32_t)V0 < 10;
	if (V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(9,0x80029C68);
		goto ZZ_29AF8_170;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(11,0x80029CB0);
	goto ZZ_29AF8_1B8;
ZZ_29AF8_160:
	V0 = V1 - A0;
	V0 = (int32_t)V0 < 10;
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x80029CB0);
		goto ZZ_29AF8_1B8;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80029C68);
ZZ_29AF8_170:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 2240); //+ 0xFFFFF740
	V1 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = A0 - V1;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)V0 < 10;
		ZZ_CLOCKCYCLES(7,0x80029C94);
		goto ZZ_29AF8_19C;
	}
	V0 = (int32_t)V0 < 10;
	if (V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(9,0x80029CA4);
		goto ZZ_29AF8_1AC;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(11,0x80029CB0);
	goto ZZ_29AF8_1B8;
ZZ_29AF8_19C:
	V0 = V1 - A0;
	V0 = (int32_t)V0 < 10;
	if (!V0)
	{
		A0 = S0;
		ZZ_CLOCKCYCLES(4,0x80029CB0);
		goto ZZ_29AF8_1B8;
	}
	A0 = S0;
	ZZ_CLOCKCYCLES(4,0x80029CA4);
ZZ_29AF8_1AC:
	EMU_Write32(SP + 48,R0); //+ 0x30
	EMU_Write32(SP + 40,R0); //+ 0x28
	ZZ_CLOCKCYCLES(2,0x80029CAC);
ZZ_29AF8_1B4:
	A0 = S0;
	ZZ_CLOCKCYCLES(1,0x80029CB0);
ZZ_29AF8_1B8:
	A1 = S3;
	A2 = SP + 24;
	RA = 0x80029CC0; //ZZ_29AF8_1C8
	A3 = SP + 40;
	ZZ_CLOCKCYCLES(4,0x80029FA4);
	goto ZZ_29FA4;
ZZ_29AF8_1C8:
	V0 = EMU_ReadU32(GP + 340); //+ 0x154
	if (V0)
	{
		ZZ_CLOCKCYCLES(4,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	V0 = EMU_ReadU32(S1);
	if (V0)
	{
		ZZ_CLOCKCYCLES(8,0x80029CF0);
		goto ZZ_29AF8_1F8;
	}
	V0 = EMU_ReadU32(S1 + 8); //+ 0x8
	if (!V0)
	{
		ZZ_CLOCKCYCLES(12,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(12,0x80029CF0);
ZZ_29AF8_1F8:
	A0 = EMU_ReadU32(S2);
	V1 = EMU_ReadU32(SP + 24); //+ 0x18
	V0 = A0 - V1;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)V0 < 2;
		ZZ_CLOCKCYCLES(6,0x80029D18);
		goto ZZ_29AF8_220;
	}
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(10,0x80029D28);
	goto ZZ_29AF8_230;
ZZ_29AF8_220:
	V0 = V1 - A0;
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(4,0x80029D28);
ZZ_29AF8_230:
	A0 = EMU_ReadU32(S2 + 4); //+ 0x4
	V1 = EMU_ReadU32(SP + 28); //+ 0x1C
	V0 = A0 - V1;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)V0 < 2;
		ZZ_CLOCKCYCLES(6,0x80029D50);
		goto ZZ_29AF8_258;
	}
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(10,0x80029D60);
	goto ZZ_29AF8_268;
ZZ_29AF8_258:
	V0 = V1 - A0;
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(4,0x80029D60);
ZZ_29AF8_268:
	A0 = EMU_ReadU32(S2 + 8); //+ 0x8
	V1 = EMU_ReadU32(SP + 32); //+ 0x20
	V0 = A0 - V1;
	if ((int32_t)V0 < 0)
	{
		V0 = (int32_t)V0 < 2;
		ZZ_CLOCKCYCLES(6,0x80029D88);
		goto ZZ_29AF8_290;
	}
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(10,0x80029D98);
	goto ZZ_29AF8_2A0;
ZZ_29AF8_290:
	V0 = V1 - A0;
	V0 = (int32_t)V0 < 2;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80029DCC);
		goto ZZ_29AF8_2D4;
	}
	ZZ_CLOCKCYCLES(4,0x80029D98);
ZZ_29AF8_2A0:
	V0 = EMU_ReadU32(S1);
	AT = 0x80060000;
	EMU_Write32(AT - 2248,V0); //+ 0xFFFFF738
	V0 = EMU_ReadU32(S1 + 4); //+ 0x4
	AT = 0x80060000;
	EMU_Write32(AT - 2244,V0); //+ 0xFFFFF73C
	V1 = EMU_ReadU32(S1 + 8); //+ 0x8
	V0 = 0x1;
	EMU_Write32(GP + 340,V0); //+ 0x154
	AT = 0x80060000;
	EMU_Write32(AT - 2240,V1); //+ 0xFFFFF740
	ZZ_CLOCKCYCLES(13,0x80029DD0);
	goto ZZ_29AF8_2D8;
ZZ_29AF8_2D4:
	EMU_Write32(GP + 340,R0); //+ 0x154
	ZZ_CLOCKCYCLES(1,0x80029DD0);
ZZ_29AF8_2D8:
	V0 = EMU_ReadU32(SP + 24); //+ 0x18
	EMU_Write32(S2,V0);
	V0 = EMU_ReadU32(SP + 28); //+ 0x1C
	EMU_Write32(S2 + 4,V0); //+ 0x4
	V0 = EMU_ReadU32(SP + 32); //+ 0x20
	EMU_Write32(S2 + 8,V0); //+ 0x8
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V0 &= 0x400;
	if (!V0)
	{
		V0 = 0x30000;
		ZZ_CLOCKCYCLES(14,0x80029F84);
		goto ZZ_29AF8_48C;
	}
	V0 = 0x30000;
	A0 = EMU_ReadU32(S0 + 284); //+ 0x11C
	V0 |= 0xFFFF;
	V0 = V0 < A0;
	if (!V0)
	{
		V1 = 0x40000;
		ZZ_CLOCKCYCLES(19,0x80029E68);
		goto ZZ_29AF8_370;
	}
	V1 = 0x40000;
	V1 |= 0x24;
	V0 = V1 < A0;
	if (!V0)
	{
		V0 = A0 - V1;
		ZZ_CLOCKCYCLES(23,0x80029E3C);
		goto ZZ_29AF8_344;
	}
	V0 = A0 - V1;
	V0 <<= 8;
	EMU_Write32(SP + 56,V0); //+ 0x38
	A0 = 0x100;
	ZZ_CLOCKCYCLES(27,0x80029E58);
	goto ZZ_29AF8_360;
ZZ_29AF8_344:
	V1 = 0xFFFB0000;
	V1 |= 0xFFE3;
	V1 += A0;
	V0 = 0x100;
	V0 <<= V1;
	EMU_Write32(SP + 56,V0); //+ 0x38
	A0 = R0;
	ZZ_CLOCKCYCLES(7,0x80029E58);
ZZ_29AF8_360:
	RA = 0x80029E60; //ZZ_29AF8_368
	A1 = SP + 56;
	ZZ_CLOCKCYCLES(2,0x80026250);
	goto ZZ_26250;
ZZ_29AF8_368:
	ZZ_CLOCKCYCLES(2,0x80029F84);
	goto ZZ_29AF8_48C;
ZZ_29AF8_370:
	V1 = EMU_ReadU32(S0 + 284); //+ 0x11C
	V0 = 0x6400;
	EMU_Write32(SP + 60,V0); //+ 0x3C
	V0 = 0x3000;
	if (V1 == V0)
	{
		V0 = V1 < 12289;
		ZZ_CLOCKCYCLES(6,0x80029F48);
		goto ZZ_29AF8_450;
	}
	V0 = V1 < 12289;
	if (!V0)
	{
		V0 = 0x900;
		ZZ_CLOCKCYCLES(8,0x80029EA0);
		goto ZZ_29AF8_3A8;
	}
	V0 = 0x900;
	if (V1 == V0)
	{
		V0 = 0x1F00;
		ZZ_CLOCKCYCLES(10,0x80029F2C);
		goto ZZ_29AF8_434;
	}
	V0 = 0x1F00;
	if (V1 == V0)
	{
		V0 = SP + 60;
		ZZ_CLOCKCYCLES(12,0x80029EBC);
		goto ZZ_29AF8_3C4;
	}
	V0 = SP + 60;
	ZZ_CLOCKCYCLES(14,0x80029F6C);
	goto ZZ_29AF8_474;
ZZ_29AF8_3A8:
	V0 = 0x3100;
	if (V1 == V0)
	{
		V0 = 0x4200;
		ZZ_CLOCKCYCLES(3,0x80029F48);
		goto ZZ_29AF8_450;
	}
	V0 = 0x4200;
	if (V1 == V0)
	{
		A0 = 0xFFFE0000;
		ZZ_CLOCKCYCLES(5,0x80029EF8);
		goto ZZ_29AF8_400;
	}
	A0 = 0xFFFE0000;
	V0 = SP + 60;
	ZZ_CLOCKCYCLES(7,0x80029F6C);
	goto ZZ_29AF8_474;
ZZ_29AF8_3C4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30772); //+ 0x7834
	V1 = EMU_ReadU32(V0 + 8); //+ 0x8
	V0 = 0x23;
	if (V1 == V0)
	{
		V0 = 0xD;
		ZZ_CLOCKCYCLES(7,0x80029EE0);
		goto ZZ_29AF8_3E8;
	}
	V0 = 0xD;
	if (V1 != V0)
	{
		V0 = SP + 60;
		ZZ_CLOCKCYCLES(9,0x80029F6C);
		goto ZZ_29AF8_474;
	}
	V0 = SP + 60;
	ZZ_CLOCKCYCLES(9,0x80029EE0);
ZZ_29AF8_3E8:
	V0 = EMU_ReadU32(S3 + 4160); //+ 0x1040
	if (V0)
	{
		V0 = SP + 60;
		ZZ_CLOCKCYCLES(4,0x80029F84);
		goto ZZ_29AF8_48C;
	}
	V0 = SP + 60;
	ZZ_CLOCKCYCLES(6,0x80029F6C);
	goto ZZ_29AF8_474;
ZZ_29AF8_400:
	A1 = 0x80070000;
	A1 -= 12320;
	V0 = EMU_ReadU32(A1);
	V1 = EMU_ReadU32(S0 + 100); //+ 0x64
	A0 |= 0x7000;
	V0 += A0;
	V1 = (int32_t)V1 < (int32_t)V0;
	if (!V1)
	{
		V0 = 0x2100;
		ZZ_CLOCKCYCLES(9,0x80029F84);
		goto ZZ_29AF8_48C;
	}
	V0 = 0x2100;
	EMU_Write32(S0 + 284,V0); //+ 0x11C
	V0 = EMU_ReadU32(A1);
	EMU_Write32(SP + 60,V0); //+ 0x3C
	ZZ_CLOCKCYCLES(13,0x80029F68);
	goto ZZ_29AF8_470;
ZZ_29AF8_434:
	V0 = EMU_ReadU32(S0 + 168); //+ 0xA8
	V0 &= 0x1;
	if (V0)
	{
		V0 = SP + 60;
		ZZ_CLOCKCYCLES(5,0x80029F84);
		goto ZZ_29AF8_48C;
	}
	V0 = SP + 60;
	ZZ_CLOCKCYCLES(7,0x80029F6C);
	goto ZZ_29AF8_474;
ZZ_29AF8_450:
	EMU_Write32(SP + 16,R0); //+ 0x10
	A1 = EMU_ReadU32(S0 + 284); //+ 0x11C
	A0 = R0;
	A2 = R0;
	RA = 0x80029F60; //ZZ_29AF8_468
	A3 = R0;
	ZZ_CLOCKCYCLES(6,0x8001D360);
	goto ZZ_1D360;
ZZ_29AF8_468:
	ZZ_CLOCKCYCLES(2,0x80029F84);
	goto ZZ_29AF8_48C;
ZZ_29AF8_470:
	V0 = SP + 60;
	ZZ_CLOCKCYCLES(1,0x80029F6C);
ZZ_29AF8_474:
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 = EMU_ReadU32(S0 + 284); //+ 0x11C
	A0 = R0;
	A1 = S0;
	RA = 0x80029F84; //ZZ_29AF8_48C
	A3 = 0x1;
	ZZ_CLOCKCYCLES(6,0x8001CD48);
	goto ZZ_1CD48;
ZZ_29AF8_48C:
	RA = EMU_ReadU32(SP + 80); //+ 0x50
	S3 = EMU_ReadU32(SP + 76); //+ 0x4C
	S2 = EMU_ReadU32(SP + 72); //+ 0x48
	S1 = EMU_ReadU32(SP + 68); //+ 0x44
	S0 = EMU_ReadU32(SP + 64); //+ 0x40
	SP += 88;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8002F610,ZZ_2F53C_D4);
	ZZ_JUMPREGISTER(0x8001E164,ZZ_1D860_904);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x80029AF8,ZZ_29AF8);
ZZ_MARK(0x80029AFC);
ZZ_MARK(0x80029B00);
ZZ_MARK(0x80029B04);
ZZ_MARK(0x80029B08);
ZZ_MARK(0x80029B0C);
ZZ_MARK(0x80029B10);
ZZ_MARK(0x80029B14);
ZZ_MARK(0x80029B18);
ZZ_MARK(0x80029B1C);
ZZ_MARK(0x80029B20);
ZZ_MARK(0x80029B24);
ZZ_MARK(0x80029B28);
ZZ_MARK_TARGET(0x80029B2C,ZZ_29AF8_34);
ZZ_MARK(0x80029B30);
ZZ_MARK(0x80029B34);
ZZ_MARK(0x80029B38);
ZZ_MARK(0x80029B3C);
ZZ_MARK(0x80029B40);
ZZ_MARK(0x80029B44);
ZZ_MARK(0x80029B48);
ZZ_MARK(0x80029B4C);
ZZ_MARK(0x80029B50);
ZZ_MARK(0x80029B54);
ZZ_MARK(0x80029B58);
ZZ_MARK(0x80029B5C);
ZZ_MARK(0x80029B60);
ZZ_MARK(0x80029B64);
ZZ_MARK(0x80029B68);
ZZ_MARK_TARGET(0x80029B6C,ZZ_29AF8_74);
ZZ_MARK(0x80029B70);
ZZ_MARK(0x80029B74);
ZZ_MARK(0x80029B78);
ZZ_MARK(0x80029B7C);
ZZ_MARK_TARGET(0x80029B80,ZZ_29AF8_88);
ZZ_MARK(0x80029B84);
ZZ_MARK(0x80029B88);
ZZ_MARK(0x80029B8C);
ZZ_MARK(0x80029B90);
ZZ_MARK(0x80029B94);
ZZ_MARK(0x80029B98);
ZZ_MARK_TARGET(0x80029B9C,ZZ_29AF8_A4);
ZZ_MARK_TARGET(0x80029BA0,ZZ_29AF8_A8);
ZZ_MARK(0x80029BA4);
ZZ_MARK(0x80029BA8);
ZZ_MARK(0x80029BAC);
ZZ_MARK(0x80029BB0);
ZZ_MARK(0x80029BB4);
ZZ_MARK(0x80029BB8);
ZZ_MARK(0x80029BBC);
ZZ_MARK(0x80029BC0);
ZZ_MARK(0x80029BC4);
ZZ_MARK(0x80029BC8);
ZZ_MARK(0x80029BCC);
ZZ_MARK(0x80029BD0);
ZZ_MARK(0x80029BD4);
ZZ_MARK(0x80029BD8);
ZZ_MARK(0x80029BDC);
ZZ_MARK(0x80029BE0);
ZZ_MARK(0x80029BE4);
ZZ_MARK(0x80029BE8);
ZZ_MARK(0x80029BEC);
ZZ_MARK(0x80029BF0);
ZZ_MARK(0x80029BF4);
ZZ_MARK(0x80029BF8);
ZZ_MARK(0x80029BFC);
ZZ_MARK(0x80029C00);
ZZ_MARK(0x80029C04);
ZZ_MARK(0x80029C08);
ZZ_MARK(0x80029C0C);
ZZ_MARK(0x80029C10);
ZZ_MARK(0x80029C14);
ZZ_MARK(0x80029C18);
ZZ_MARK_TARGET(0x80029C1C,ZZ_29AF8_124);
ZZ_MARK(0x80029C20);
ZZ_MARK(0x80029C24);
ZZ_MARK(0x80029C28);
ZZ_MARK_TARGET(0x80029C2C,ZZ_29AF8_134);
ZZ_MARK(0x80029C30);
ZZ_MARK(0x80029C34);
ZZ_MARK(0x80029C38);
ZZ_MARK(0x80029C3C);
ZZ_MARK(0x80029C40);
ZZ_MARK(0x80029C44);
ZZ_MARK(0x80029C48);
ZZ_MARK(0x80029C4C);
ZZ_MARK(0x80029C50);
ZZ_MARK(0x80029C54);
ZZ_MARK_TARGET(0x80029C58,ZZ_29AF8_160);
ZZ_MARK(0x80029C5C);
ZZ_MARK(0x80029C60);
ZZ_MARK(0x80029C64);
ZZ_MARK_TARGET(0x80029C68,ZZ_29AF8_170);
ZZ_MARK(0x80029C6C);
ZZ_MARK(0x80029C70);
ZZ_MARK(0x80029C74);
ZZ_MARK(0x80029C78);
ZZ_MARK(0x80029C7C);
ZZ_MARK(0x80029C80);
ZZ_MARK(0x80029C84);
ZZ_MARK(0x80029C88);
ZZ_MARK(0x80029C8C);
ZZ_MARK(0x80029C90);
ZZ_MARK_TARGET(0x80029C94,ZZ_29AF8_19C);
ZZ_MARK(0x80029C98);
ZZ_MARK(0x80029C9C);
ZZ_MARK(0x80029CA0);
ZZ_MARK_TARGET(0x80029CA4,ZZ_29AF8_1AC);
ZZ_MARK(0x80029CA8);
ZZ_MARK_TARGET(0x80029CAC,ZZ_29AF8_1B4);
ZZ_MARK_TARGET(0x80029CB0,ZZ_29AF8_1B8);
ZZ_MARK(0x80029CB4);
ZZ_MARK(0x80029CB8);
ZZ_MARK(0x80029CBC);
ZZ_MARK_TARGET(0x80029CC0,ZZ_29AF8_1C8);
ZZ_MARK(0x80029CC4);
ZZ_MARK(0x80029CC8);
ZZ_MARK(0x80029CCC);
ZZ_MARK(0x80029CD0);
ZZ_MARK(0x80029CD4);
ZZ_MARK(0x80029CD8);
ZZ_MARK(0x80029CDC);
ZZ_MARK(0x80029CE0);
ZZ_MARK(0x80029CE4);
ZZ_MARK(0x80029CE8);
ZZ_MARK(0x80029CEC);
ZZ_MARK_TARGET(0x80029CF0,ZZ_29AF8_1F8);
ZZ_MARK(0x80029CF4);
ZZ_MARK(0x80029CF8);
ZZ_MARK(0x80029CFC);
ZZ_MARK(0x80029D00);
ZZ_MARK(0x80029D04);
ZZ_MARK(0x80029D08);
ZZ_MARK(0x80029D0C);
ZZ_MARK(0x80029D10);
ZZ_MARK(0x80029D14);
ZZ_MARK_TARGET(0x80029D18,ZZ_29AF8_220);
ZZ_MARK(0x80029D1C);
ZZ_MARK(0x80029D20);
ZZ_MARK(0x80029D24);
ZZ_MARK_TARGET(0x80029D28,ZZ_29AF8_230);
ZZ_MARK(0x80029D2C);
ZZ_MARK(0x80029D30);
ZZ_MARK(0x80029D34);
ZZ_MARK(0x80029D38);
ZZ_MARK(0x80029D3C);
ZZ_MARK(0x80029D40);
ZZ_MARK(0x80029D44);
ZZ_MARK(0x80029D48);
ZZ_MARK(0x80029D4C);
ZZ_MARK_TARGET(0x80029D50,ZZ_29AF8_258);
ZZ_MARK(0x80029D54);
ZZ_MARK(0x80029D58);
ZZ_MARK(0x80029D5C);
ZZ_MARK_TARGET(0x80029D60,ZZ_29AF8_268);
ZZ_MARK(0x80029D64);
ZZ_MARK(0x80029D68);
ZZ_MARK(0x80029D6C);
ZZ_MARK(0x80029D70);
ZZ_MARK(0x80029D74);
ZZ_MARK(0x80029D78);
ZZ_MARK(0x80029D7C);
ZZ_MARK(0x80029D80);
ZZ_MARK(0x80029D84);
ZZ_MARK_TARGET(0x80029D88,ZZ_29AF8_290);
ZZ_MARK(0x80029D8C);
ZZ_MARK(0x80029D90);
ZZ_MARK(0x80029D94);
ZZ_MARK_TARGET(0x80029D98,ZZ_29AF8_2A0);
ZZ_MARK(0x80029D9C);
ZZ_MARK(0x80029DA0);
ZZ_MARK(0x80029DA4);
ZZ_MARK(0x80029DA8);
ZZ_MARK(0x80029DAC);
ZZ_MARK(0x80029DB0);
ZZ_MARK(0x80029DB4);
ZZ_MARK(0x80029DB8);
ZZ_MARK(0x80029DBC);
ZZ_MARK(0x80029DC0);
ZZ_MARK(0x80029DC4);
ZZ_MARK(0x80029DC8);
ZZ_MARK_TARGET(0x80029DCC,ZZ_29AF8_2D4);
ZZ_MARK_TARGET(0x80029DD0,ZZ_29AF8_2D8);
ZZ_MARK(0x80029DD4);
ZZ_MARK(0x80029DD8);
ZZ_MARK(0x80029DDC);
ZZ_MARK(0x80029DE0);
ZZ_MARK(0x80029DE4);
ZZ_MARK(0x80029DE8);
ZZ_MARK(0x80029DEC);
ZZ_MARK(0x80029DF0);
ZZ_MARK(0x80029DF4);
ZZ_MARK(0x80029DF8);
ZZ_MARK(0x80029DFC);
ZZ_MARK(0x80029E00);
ZZ_MARK(0x80029E04);
ZZ_MARK(0x80029E08);
ZZ_MARK(0x80029E0C);
ZZ_MARK(0x80029E10);
ZZ_MARK(0x80029E14);
ZZ_MARK(0x80029E18);
ZZ_MARK(0x80029E1C);
ZZ_MARK(0x80029E20);
ZZ_MARK(0x80029E24);
ZZ_MARK(0x80029E28);
ZZ_MARK(0x80029E2C);
ZZ_MARK(0x80029E30);
ZZ_MARK(0x80029E34);
ZZ_MARK(0x80029E38);
ZZ_MARK_TARGET(0x80029E3C,ZZ_29AF8_344);
ZZ_MARK(0x80029E40);
ZZ_MARK(0x80029E44);
ZZ_MARK(0x80029E48);
ZZ_MARK(0x80029E4C);
ZZ_MARK(0x80029E50);
ZZ_MARK(0x80029E54);
ZZ_MARK_TARGET(0x80029E58,ZZ_29AF8_360);
ZZ_MARK(0x80029E5C);
ZZ_MARK_TARGET(0x80029E60,ZZ_29AF8_368);
ZZ_MARK(0x80029E64);
ZZ_MARK_TARGET(0x80029E68,ZZ_29AF8_370);
ZZ_MARK(0x80029E6C);
ZZ_MARK(0x80029E70);
ZZ_MARK(0x80029E74);
ZZ_MARK(0x80029E78);
ZZ_MARK(0x80029E7C);
ZZ_MARK(0x80029E80);
ZZ_MARK(0x80029E84);
ZZ_MARK(0x80029E88);
ZZ_MARK(0x80029E8C);
ZZ_MARK(0x80029E90);
ZZ_MARK(0x80029E94);
ZZ_MARK(0x80029E98);
ZZ_MARK(0x80029E9C);
ZZ_MARK_TARGET(0x80029EA0,ZZ_29AF8_3A8);
ZZ_MARK(0x80029EA4);
ZZ_MARK(0x80029EA8);
ZZ_MARK(0x80029EAC);
ZZ_MARK(0x80029EB0);
ZZ_MARK(0x80029EB4);
ZZ_MARK(0x80029EB8);
ZZ_MARK_TARGET(0x80029EBC,ZZ_29AF8_3C4);
ZZ_MARK(0x80029EC0);
ZZ_MARK(0x80029EC4);
ZZ_MARK(0x80029EC8);
ZZ_MARK(0x80029ECC);
ZZ_MARK(0x80029ED0);
ZZ_MARK(0x80029ED4);
ZZ_MARK(0x80029ED8);
ZZ_MARK(0x80029EDC);
ZZ_MARK_TARGET(0x80029EE0,ZZ_29AF8_3E8);
ZZ_MARK(0x80029EE4);
ZZ_MARK(0x80029EE8);
ZZ_MARK(0x80029EEC);
ZZ_MARK(0x80029EF0);
ZZ_MARK(0x80029EF4);
ZZ_MARK_TARGET(0x80029EF8,ZZ_29AF8_400);
ZZ_MARK(0x80029EFC);
ZZ_MARK(0x80029F00);
ZZ_MARK(0x80029F04);
ZZ_MARK(0x80029F08);
ZZ_MARK(0x80029F0C);
ZZ_MARK(0x80029F10);
ZZ_MARK(0x80029F14);
ZZ_MARK(0x80029F18);
ZZ_MARK(0x80029F1C);
ZZ_MARK(0x80029F20);
ZZ_MARK(0x80029F24);
ZZ_MARK(0x80029F28);
ZZ_MARK_TARGET(0x80029F2C,ZZ_29AF8_434);
ZZ_MARK(0x80029F30);
ZZ_MARK(0x80029F34);
ZZ_MARK(0x80029F38);
ZZ_MARK(0x80029F3C);
ZZ_MARK(0x80029F40);
ZZ_MARK(0x80029F44);
ZZ_MARK_TARGET(0x80029F48,ZZ_29AF8_450);
ZZ_MARK(0x80029F4C);
ZZ_MARK(0x80029F50);
ZZ_MARK(0x80029F54);
ZZ_MARK(0x80029F58);
ZZ_MARK(0x80029F5C);
ZZ_MARK_TARGET(0x80029F60,ZZ_29AF8_468);
ZZ_MARK(0x80029F64);
ZZ_MARK_TARGET(0x80029F68,ZZ_29AF8_470);
ZZ_MARK_TARGET(0x80029F6C,ZZ_29AF8_474);
ZZ_MARK(0x80029F70);
ZZ_MARK(0x80029F74);
ZZ_MARK(0x80029F78);
ZZ_MARK(0x80029F7C);
ZZ_MARK(0x80029F80);
ZZ_MARK_TARGET(0x80029F84,ZZ_29AF8_48C);
ZZ_MARK(0x80029F88);
ZZ_MARK(0x80029F8C);
ZZ_MARK(0x80029F90);
ZZ_MARK(0x80029F94);
ZZ_MARK(0x80029F98);
ZZ_MARK(0x80029F9C);
ZZ_MARK(0x80029FA0);
