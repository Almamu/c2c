#ifdef ZZ_INCLUDE_CODE
ZZ_489AC:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 13012); //+ 0xFFFFCD2C
	A2 = 0x21020000;
	EMU_Write8(V0,R0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13000); //+ 0xFFFFCD38
	V0 = 128;
	EMU_Write8(V1,V0);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12960); //+ 0xFFFFCD60
	A2 |= 0x843;
	EMU_Write32(V0,A2);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12996); //+ 0xFFFFCD3C
	V0 = 4901;
	EMU_Write32(V1,V0);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12956); //+ 0xFFFFCD64
	V0 = EMU_ReadU32(V1);
	V0 |= 0x8000;
	EMU_Write32(V1,V0);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12952); //+ 0xFFFFCD68
	EMU_Write32(V0,A0);
	V0 = 0x10000;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 12948); //+ 0xFFFFCD6C
	A1 |= V0;
	EMU_Write32(V1,A1);
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 13012); //+ 0xFFFFCD2C
	V0 = EMU_ReadU8(V1);
	V0 &= 0x40;
	if (V0)
	{
		SP -= 8;
		ZZ_CLOCKCYCLES(40,0x80048A60);
		goto ZZ_489AC_B4;
	}
	SP -= 8;
	ZZ_CLOCKCYCLES(40,0x80048A4C);
ZZ_489AC_A0:
	V0 = EMU_ReadU8(V1);
	V0 &= 0x40;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x80048A4C);
		goto ZZ_489AC_A0;
	}
	ZZ_CLOCKCYCLES(5,0x80048A60);
ZZ_489AC_B4:
	V1 = 0x11400000;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12944); //+ 0xFFFFCD70
	V1 |= 0x100;
	EMU_Write32(V0,V1);
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 12944); //+ 0xFFFFCD70
	V0 = EMU_ReadU32(V0);
	EMU_Write32(SP,V0);
	V0 = R0;
	SP += 8;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(15);
	ZZ_JUMPREGISTER(0x800471E0,ZZ_471D0_10);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800489AC,0x80048A4C,ZZ_489AC);
ZZ_MARK_TARGET(0x80048A4C,0x80048A60,ZZ_489AC_A0);
ZZ_MARK_TARGET(0x80048A60,0x80048A9C,ZZ_489AC_B4);
