#ifdef ZZ_INCLUDE_CODE
ZZ_1B974:
	SP -= 168;
	T0 = 0x1;
	EMU_Write32(SP + 120,T0); //+ 0x78
	T0 = EMU_ReadU32(SP + 192); //+ 0xC0
	EMU_Write32(SP + 160,FP); //+ 0xA0
	FP = A0;
	EMU_Write32(SP + 128,S0); //+ 0x80
	S0 = A1;
	EMU_Write32(SP + 144,S4); //+ 0x90
	S4 = A3;
	EMU_Write32(SP + 136,S2); //+ 0x88
	S2 = R0;
	EMU_Write32(SP + 164,RA); //+ 0xA4
	EMU_Write32(SP + 156,S7); //+ 0x9C
	EMU_Write32(SP + 152,S6); //+ 0x98
	EMU_Write32(SP + 148,S5); //+ 0x94
	EMU_Write32(SP + 140,S3); //+ 0x8C
	EMU_Write32(SP + 132,S1); //+ 0x84
	EMU_Write32(SP + 96,A2); //+ 0x60
	EMU_Write32(SP + 104,R0); //+ 0x68
	if (!T0)
	{
		EMU_Write32(SP + 112,R0); //+ 0x70
		ZZ_CLOCKCYCLES(22,0x8001BA00);
		goto ZZ_1B974_8C;
	}
	EMU_Write32(SP + 112,R0); //+ 0x70
	V1 = EMU_ReadU32(FP + 172); //+ 0xAC
	V0 = 0x4000000;
	V1 &= V0;
	if (!V1)
	{
		EMU_Write32(SP + 112,V1); //+ 0x70
		ZZ_CLOCKCYCLES(27,0x8001BA00);
		goto ZZ_1B974_8C;
	}
	EMU_Write32(SP + 112,V1); //+ 0x70
	V0 = 0xF0000;
	V0 |= 0x423F;
	V1 = 0xFFF00000;
	V1 |= 0xBDC1;
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 60,V0); //+ 0x3C
	EMU_Write32(SP + 68,V1); //+ 0x44
	EMU_Write32(SP + 72,V1); //+ 0x48
	ZZ_CLOCKCYCLES(35,0x8001BA00);
ZZ_1B974_8C:
	T0 = EMU_ReadU32(SP + 96); //+ 0x60
	EMU_Write32(SP + 32,T0); //+ 0x20
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		S1 = 0x190;
		ZZ_CLOCKCYCLES(7,0x8001BE04);
		goto ZZ_1B974_490;
	}
	S1 = 0x190;
	S7 = 0x7E;
	S6 = SP + 80;
	S5 = SP + 88;
	ZZ_CLOCKCYCLES(10,0x8001BA28);
ZZ_1B974_B4:
	S3 = 0x190;
	ZZ_CLOCKCYCLES(1,0x8001BA2C);
ZZ_1B974_B8:
	V0 = EMU_ReadU8(S0);
	if (V0 != S7)
	{
		ZZ_CLOCKCYCLES(4,0x8001BC74);
		goto ZZ_1B974_300;
	}
	ZZ_CLOCKCYCLES(4,0x8001BA3C);
ZZ_1B974_C8:
	S0 += 1;
	V1 = EMU_ReadU8(S0);
	V0 = 0x70;
	if (V1 == V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(5,0x8001BAE8);
		goto ZZ_1B974_174;
	}
	S0 += 1;
	V0 = (int32_t)V1 < 113;
	if (!V0)
	{
		V0 = 0x6C;
		ZZ_CLOCKCYCLES(8,0x8001BA98);
		goto ZZ_1B974_124;
	}
	V0 = 0x6C;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 109;
		ZZ_CLOCKCYCLES(10,0x8001BC28);
		goto ZZ_1B974_2B4;
	}
	V0 = (int32_t)V1 < 109;
	if (!V0)
	{
		V0 = 0x25;
		ZZ_CLOCKCYCLES(12,0x8001BA84);
		goto ZZ_1B974_110;
	}
	V0 = 0x25;
	if (V1 == V0)
	{
		V0 = 0x63;
		ZZ_CLOCKCYCLES(14,0x8001BC44);
		goto ZZ_1B974_2D0;
	}
	V0 = 0x63;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(16,0x8001BAC4);
		goto ZZ_1B974_150;
	}
	ZZ_CLOCKCYCLES(18,0x8001BC74);
	goto ZZ_1B974_300;
ZZ_1B974_110:
	V0 = 0x6E;
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(3,0x8001BC44);
		goto ZZ_1B974_2D0;
	}
	ZZ_CLOCKCYCLES(5,0x8001BC74);
	goto ZZ_1B974_300;
ZZ_1B974_124:
	V0 = 0x73;
	if (V1 == V0)
	{
		V0 = (int32_t)V1 < 115;
		ZZ_CLOCKCYCLES(3,0x8001BB30);
		goto ZZ_1B974_1BC;
	}
	V0 = (int32_t)V1 < 115;
	if (V0)
	{
		V0 = (int32_t)V1 < 122;
		ZZ_CLOCKCYCLES(5,0x8001BC74);
		goto ZZ_1B974_300;
	}
	V0 = (int32_t)V1 < 122;
	if (!V0)
	{
		V0 = (int32_t)V1 < 120;
		ZZ_CLOCKCYCLES(7,0x8001BC74);
		goto ZZ_1B974_300;
	}
	V0 = (int32_t)V1 < 120;
	if (V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(9,0x8001BC74);
		goto ZZ_1B974_300;
	}
	A1 = R0;
	ZZ_CLOCKCYCLES(11,0x8001BBA0);
	goto ZZ_1B974_22C;
ZZ_1B974_150:
	V0 = EMU_ReadU8(S0);
	S0 += 1;
	V1 = EMU_ReadU8(S0);
	V0 ^= 0x31;
	V0 = V0 < 1;
	if (V1 == S7)
	{
		EMU_Write32(SP + 120,V0); //+ 0x78
		ZZ_CLOCKCYCLES(7,0x8001BA3C);
		goto ZZ_1B974_C8;
	}
	EMU_Write32(SP + 120,V0); //+ 0x78
	ZZ_CLOCKCYCLES(9,0x8001BC74);
	goto ZZ_1B974_300;
ZZ_1B974_174:
	V0 = EMU_ReadU8(S0);
	V1 = EMU_ReadU32(FP + 188); //+ 0xBC
	V0 -= 46;
	V0 <<= 2;
	V1 = V1 - V0;
	V1 = EMU_ReadU32(V1);
	V0 = 0x1;
	if (V1 != V0)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(9,0x8001BB10);
		goto ZZ_1B974_19C;
	}
	S0 += 1;
	S0 += 1;
	ZZ_CLOCKCYCLES(10,0x8001BB10);
ZZ_1B974_19C:
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001BE04);
		goto ZZ_1B974_490;
	}
	if (V0 == S7)
	{
		ZZ_CLOCKCYCLES(6,0x8001BA3C);
		goto ZZ_1B974_C8;
	}
	ZZ_CLOCKCYCLES(8,0x8001BC74);
	goto ZZ_1B974_300;
ZZ_1B974_1BC:
	V1 = EMU_ReadU8(S0);
	S0 += 1;
	A0 = EMU_ReadU8(S0);
	A1 = R0;
	if (A0 == S7)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(6,0x8001BB68);
		goto ZZ_1B974_1F4;
	}
	S0 += 1;
	A2 = 0x7E;
	V0 = S6;
	ZZ_CLOCKCYCLES(8,0x8001BB50);
ZZ_1B974_1DC:
	EMU_Write8(V0,A0);
	A0 = EMU_ReadU8(S0);
	V0 += 1;
	A1 += 1;
	if (A0 != A2)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(6,0x8001BB50);
		goto ZZ_1B974_1DC;
	}
	S0 += 1;
	ZZ_CLOCKCYCLES(6,0x8001BB68);
ZZ_1B974_1F4:
	V0 = S6 + A1;
	EMU_Write8(V0,R0);
	V1 &= 0xFF;
	V0 = 0x78;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001BB90);
		goto ZZ_1B974_21C;
	}
	RA = 0x8001BB88; //ZZ_1B974_214
	A0 = S6;
	ZZ_CLOCKCYCLES(8,0x8004943C);
	goto ZZ_4943C;
ZZ_1B974_214:
	S1 = V0;
	ZZ_CLOCKCYCLES(2,0x8001BC10);
	goto ZZ_1B974_29C;
ZZ_1B974_21C:
	RA = 0x8001BB98; //ZZ_1B974_224
	A0 = S6;
	ZZ_CLOCKCYCLES(2,0x8004943C);
	goto ZZ_4943C;
ZZ_1B974_224:
	S3 = V0;
	ZZ_CLOCKCYCLES(2,0x8001BC10);
	goto ZZ_1B974_29C;
ZZ_1B974_22C:
	A0 = EMU_ReadU8(S0);
	V1 = EMU_ReadU8(S0 - 1); //+ 0xFFFFFFFF
	if (A0 == S7)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(4,0x8001BBD0);
		goto ZZ_1B974_25C;
	}
	S0 += 1;
	A2 = 0x7E;
	V0 = S5;
	ZZ_CLOCKCYCLES(6,0x8001BBB8);
ZZ_1B974_244:
	EMU_Write8(V0,A0);
	A0 = EMU_ReadU8(S0);
	V0 += 1;
	A1 += 1;
	if (A0 != A2)
	{
		S0 += 1;
		ZZ_CLOCKCYCLES(6,0x8001BBB8);
		goto ZZ_1B974_244;
	}
	S0 += 1;
	ZZ_CLOCKCYCLES(6,0x8001BBD0);
ZZ_1B974_25C:
	V0 = S5 + A1;
	EMU_Write8(V0,R0);
	V1 &= 0xFF;
	V0 = 0x78;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(6,0x8001BC04);
		goto ZZ_1B974_290;
	}
	RA = 0x8001BBF0; //ZZ_1B974_27C
	A0 = S5;
	ZZ_CLOCKCYCLES(8,0x8004943C);
	goto ZZ_4943C;
ZZ_1B974_27C:
	V1 = EMU_ReadU32(SP + 32); //+ 0x20
	V1 += V0;
	EMU_Write32(SP + 32,V1); //+ 0x20
	ZZ_CLOCKCYCLES(5,0x8001BC10);
	goto ZZ_1B974_29C;
ZZ_1B974_290:
	RA = 0x8001BC0C; //ZZ_1B974_298
	A0 = S5;
	ZZ_CLOCKCYCLES(2,0x8004943C);
	goto ZZ_4943C;
ZZ_1B974_298:
	S2 += V0;
	ZZ_CLOCKCYCLES(1,0x8001BC10);
ZZ_1B974_29C:
	V0 = EMU_ReadU8(S0);
	if (V0 == S7)
	{
		ZZ_CLOCKCYCLES(4,0x8001BA3C);
		goto ZZ_1B974_C8;
	}
	ZZ_CLOCKCYCLES(6,0x8001BC74);
	goto ZZ_1B974_300;
ZZ_1B974_2B4:
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001BE04);
		goto ZZ_1B974_490;
	}
	V0 = EMU_ReadS16(S4 + 26); //+ 0x1A
	ZZ_CLOCKCYCLES(7,0x8001BC60);
	goto ZZ_1B974_2EC;
ZZ_1B974_2D0:
	V0 = EMU_ReadU8(S0);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x8001BE04);
		goto ZZ_1B974_490;
	}
	T0 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = EMU_ReadS16(S4 + 26); //+ 0x1A
	EMU_Write32(SP + 32,T0); //+ 0x20
	ZZ_CLOCKCYCLES(7,0x8001BC60);
ZZ_1B974_2EC:
	T0 = EMU_ReadU32(SP + 188); //+ 0xBC
	V0 <<= T0;
	S2 = S2 - V0;
	ZZ_CLOCKCYCLES(5,0x8001BA2C);
	goto ZZ_1B974_B8;
ZZ_1B974_300:
	V1 = EMU_ReadU8(S0);
	V0 = 0xA;
	if (V1 != V0)
	{
		V0 = 0x26;
		ZZ_CLOCKCYCLES(4,0x8001BCA4);
		goto ZZ_1B974_330;
	}
	V0 = 0x26;
	T0 = EMU_ReadU32(SP + 96); //+ 0x60
	V0 = EMU_ReadS16(S4 + 26); //+ 0x1A
	EMU_Write32(SP + 32,T0); //+ 0x20
	T0 = EMU_ReadU32(SP + 188); //+ 0xBC
	V0 <<= T0;
	S2 = S2 - V0;
	ZZ_CLOCKCYCLES(12,0x8001BDF0);
	goto ZZ_1B974_47C;
ZZ_1B974_330:
	if (V1 == V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001BE04);
		goto ZZ_1B974_490;
	}
	T0 = EMU_ReadU32(SP + 188); //+ 0xBC
	A0 = EMU_ReadU32(SP + 32); //+ 0x20
	V0 = S1 << T0;
	A2 = A0 + V0;
	V0 = V1 << 2;
	V0 += V1;
	V0 <<= 2;
	V0 -= 632;
	S1 = S4 + V0;
	EMU_Write32(SP + 44,A2); //+ 0x2C
	V0 = EMU_ReadS16(S1 + 18); //+ 0x12
	V0 <<= T0;
	A3 = S2 + V0;
	V0 = S3 << T0;
	S3 = EMU_ReadU32(SP + 184); //+ 0xB8
	T0 = EMU_ReadU32(SP + 104); //+ 0x68
	A1 = A3 - V0;
	EMU_Write32(SP + 48,A3); //+ 0x30
	V0 = (int32_t)T0 < (int32_t)A2;
	if (!V0)
	{
		EMU_Write32(SP + 36,A1); //+ 0x24
		ZZ_CLOCKCYCLES(24,0x8001BD08);
		goto ZZ_1B974_394;
	}
	EMU_Write32(SP + 36,A1); //+ 0x24
	EMU_Write32(SP + 104,A2); //+ 0x68
	ZZ_CLOCKCYCLES(25,0x8001BD08);
ZZ_1B974_394:
	T0 = EMU_ReadU32(SP + 192); //+ 0xC0
	if (!T0)
	{
		ZZ_CLOCKCYCLES(4,0x8001BDD8);
		goto ZZ_1B974_464;
	}
	V0 = EMU_ReadU32(S1);
	if (!V0)
	{
		ZZ_CLOCKCYCLES(8,0x8001BDD8);
		goto ZZ_1B974_464;
	}
	T0 = EMU_ReadU32(SP + 112); //+ 0x70
	if (!T0)
	{
		ZZ_CLOCKCYCLES(12,0x8001BD9C);
		goto ZZ_1B974_428;
	}
	V1 = EMU_ReadU32(SP + 56); //+ 0x38
	V0 = (int32_t)A0 < (int32_t)V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(17,0x8001BD50);
		goto ZZ_1B974_3DC;
	}
	V1 = A0;
	ZZ_CLOCKCYCLES(18,0x8001BD50);
ZZ_1B974_3DC:
	A0 = EMU_ReadU32(SP + 60); //+ 0x3C
	V0 = (int32_t)A1 < (int32_t)A0;
	if (!V0)
	{
		EMU_Write32(SP + 56,V1); //+ 0x38
		ZZ_CLOCKCYCLES(5,0x8001BD68);
		goto ZZ_1B974_3F4;
	}
	EMU_Write32(SP + 56,V1); //+ 0x38
	A0 = A1;
	ZZ_CLOCKCYCLES(6,0x8001BD68);
ZZ_1B974_3F4:
	A1 = EMU_ReadU32(SP + 68); //+ 0x44
	V0 = (int32_t)A1 < (int32_t)A2;
	if (!V0)
	{
		EMU_Write32(SP + 60,A0); //+ 0x3C
		ZZ_CLOCKCYCLES(5,0x8001BD80);
		goto ZZ_1B974_40C;
	}
	EMU_Write32(SP + 60,A0); //+ 0x3C
	A1 = A2;
	ZZ_CLOCKCYCLES(6,0x8001BD80);
ZZ_1B974_40C:
	V1 = EMU_ReadU32(SP + 72); //+ 0x48
	V0 = (int32_t)V1 < (int32_t)A3;
	if (!V0)
	{
		EMU_Write32(SP + 68,A1); //+ 0x44
		ZZ_CLOCKCYCLES(5,0x8001BD98);
		goto ZZ_1B974_424;
	}
	EMU_Write32(SP + 68,A1); //+ 0x44
	V1 = A3;
	ZZ_CLOCKCYCLES(6,0x8001BD98);
ZZ_1B974_424:
	EMU_Write32(SP + 72,V1); //+ 0x48
	ZZ_CLOCKCYCLES(1,0x8001BD9C);
ZZ_1B974_428:
	A0 = S1 + 4;
	RA = 0x8001BDA8; //ZZ_1B974_434
	A1 = S4 + 4;
	ZZ_CLOCKCYCLES(3,0x80018598);
	goto ZZ_18598;
ZZ_1B974_434:
	A2 = EMU_ReadU32(FP + 280); //+ 0x118
	T0 = EMU_ReadU32(SP + 192); //+ 0xC0
	A0 = FP;
	EMU_Write32(SP + 20,T0); //+ 0x14
	T0 = EMU_ReadU32(SP + 120); //+ 0x78
	A1 = S1;
	A3 = S3;
	V0 = SP + 32;
	EMU_Write32(SP + 16,V0); //+ 0x10
	A2 |= 0x0;
	RA = 0x8001BDD8; //ZZ_1B974_464
	EMU_Write32(SP + 24,T0); //+ 0x18
	ZZ_CLOCKCYCLES(12,0x800187FC);
	goto ZZ_187FC;
ZZ_1B974_464:
	V0 = EMU_ReadS16(S1 + 16); //+ 0x10
	T0 = EMU_ReadU32(SP + 188); //+ 0xBC
	V1 = EMU_ReadU32(SP + 32); //+ 0x20
	V0 <<= T0;
	V1 += V0;
	EMU_Write32(SP + 32,V1); //+ 0x20
	ZZ_CLOCKCYCLES(6,0x8001BDF0);
ZZ_1B974_47C:
	S0 += 1;
	V0 = EMU_ReadU8(S0);
	if (V0)
	{
		S1 = 0x190;
		ZZ_CLOCKCYCLES(5,0x8001BA28);
		goto ZZ_1B974_B4;
	}
	S1 = 0x190;
	ZZ_CLOCKCYCLES(5,0x8001BE04);
ZZ_1B974_490:
	T0 = EMU_ReadU32(SP + 112); //+ 0x70
	if (!T0)
	{
		ZZ_CLOCKCYCLES(4,0x8001BE84);
		goto ZZ_1B974_510;
	}
	T0 = EMU_ReadU32(SP + 192); //+ 0xC0
	if (!T0)
	{
		S0 = S4 + 128;
		ZZ_CLOCKCYCLES(8,0x8001BE84);
		goto ZZ_1B974_510;
	}
	S0 = S4 + 128;
	V0 = EMU_ReadU32(S4 + 128); //+ 0x80
	if (!V0)
	{
		A0 = S4 + 132;
		ZZ_CLOCKCYCLES(12,0x8001BE84);
		goto ZZ_1B974_510;
	}
	A0 = S4 + 132;
	V0 = EMU_ReadU32(SP + 56); //+ 0x38
	A2 = EMU_ReadU32(SP + 60); //+ 0x3C
	V1 = EMU_ReadU32(SP + 68); //+ 0x44
	A3 = EMU_ReadU32(SP + 72); //+ 0x48
	A1 = S4 + 4;
	V0 -= 100;
	V1 += 100;
	EMU_Write32(SP + 56,V0); //+ 0x38
	EMU_Write32(SP + 60,A2); //+ 0x3C
	EMU_Write32(SP + 68,V1); //+ 0x44
	RA = 0x8001BE64; //ZZ_1B974_4F0
	EMU_Write32(SP + 72,A3); //+ 0x48
	ZZ_CLOCKCYCLES(24,0x80018598);
	goto ZZ_18598;
ZZ_1B974_4F0:
	A1 = EMU_ReadU32(FP + 280); //+ 0x118
	A2 = EMU_ReadU32(SP + 184); //+ 0xB8
	T0 = EMU_ReadU32(SP + 192); //+ 0xC0
	A0 = S0;
	A3 = SP + 56;
	A1 -= 10;
	RA = 0x8001BE84; //ZZ_1B974_510
	EMU_Write32(SP + 16,T0); //+ 0x10
	ZZ_CLOCKCYCLES(8,0x80018690);
	goto ZZ_18690;
ZZ_1B974_510:
	V0 = EMU_ReadU32(SP + 104); //+ 0x68
	RA = EMU_ReadU32(SP + 164); //+ 0xA4
	FP = EMU_ReadU32(SP + 160); //+ 0xA0
	S7 = EMU_ReadU32(SP + 156); //+ 0x9C
	S6 = EMU_ReadU32(SP + 152); //+ 0x98
	S5 = EMU_ReadU32(SP + 148); //+ 0x94
	S4 = EMU_ReadU32(SP + 144); //+ 0x90
	S3 = EMU_ReadU32(SP + 140); //+ 0x8C
	S2 = EMU_ReadU32(SP + 136); //+ 0x88
	S1 = EMU_ReadU32(SP + 132); //+ 0x84
	S0 = EMU_ReadU32(SP + 128); //+ 0x80
	SP += 168;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(14);
	ZZ_JUMPREGISTER(0x8001C0E0,ZZ_1BEBC_224);
	ZZ_JUMPREGISTER(0x8001C0A0,ZZ_1BEBC_1E4);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001B974,0x8001BA00,ZZ_1B974);
ZZ_MARK_TARGET(0x8001BA00,0x8001BA28,ZZ_1B974_8C);
ZZ_MARK_TARGET(0x8001BA28,0x8001BA2C,ZZ_1B974_B4);
ZZ_MARK_TARGET(0x8001BA2C,0x8001BA3C,ZZ_1B974_B8);
ZZ_MARK_TARGET(0x8001BA3C,0x8001BA84,ZZ_1B974_C8);
ZZ_MARK_TARGET(0x8001BA84,0x8001BA98,ZZ_1B974_110);
ZZ_MARK_TARGET(0x8001BA98,0x8001BAC4,ZZ_1B974_124);
ZZ_MARK_TARGET(0x8001BAC4,0x8001BAE8,ZZ_1B974_150);
ZZ_MARK_TARGET(0x8001BAE8,0x8001BB10,ZZ_1B974_174);
ZZ_MARK_TARGET(0x8001BB10,0x8001BB30,ZZ_1B974_19C);
ZZ_MARK_TARGET(0x8001BB30,0x8001BB50,ZZ_1B974_1BC);
ZZ_MARK_TARGET(0x8001BB50,0x8001BB68,ZZ_1B974_1DC);
ZZ_MARK_TARGET(0x8001BB68,0x8001BB88,ZZ_1B974_1F4);
ZZ_MARK_TARGET(0x8001BB88,0x8001BB90,ZZ_1B974_214);
ZZ_MARK_TARGET(0x8001BB90,0x8001BB98,ZZ_1B974_21C);
ZZ_MARK_TARGET(0x8001BB98,0x8001BBA0,ZZ_1B974_224);
ZZ_MARK_TARGET(0x8001BBA0,0x8001BBB8,ZZ_1B974_22C);
ZZ_MARK_TARGET(0x8001BBB8,0x8001BBD0,ZZ_1B974_244);
ZZ_MARK_TARGET(0x8001BBD0,0x8001BBF0,ZZ_1B974_25C);
ZZ_MARK_TARGET(0x8001BBF0,0x8001BC04,ZZ_1B974_27C);
ZZ_MARK_TARGET(0x8001BC04,0x8001BC0C,ZZ_1B974_290);
ZZ_MARK_TARGET(0x8001BC0C,0x8001BC10,ZZ_1B974_298);
ZZ_MARK_TARGET(0x8001BC10,0x8001BC28,ZZ_1B974_29C);
ZZ_MARK_TARGET(0x8001BC28,0x8001BC44,ZZ_1B974_2B4);
ZZ_MARK_TARGET(0x8001BC44,0x8001BC60,ZZ_1B974_2D0);
ZZ_MARK_TARGET(0x8001BC60,0x8001BC74,ZZ_1B974_2EC);
ZZ_MARK_TARGET(0x8001BC74,0x8001BCA4,ZZ_1B974_300);
ZZ_MARK_TARGET(0x8001BCA4,0x8001BD08,ZZ_1B974_330);
ZZ_MARK_TARGET(0x8001BD08,0x8001BD50,ZZ_1B974_394);
ZZ_MARK_TARGET(0x8001BD50,0x8001BD68,ZZ_1B974_3DC);
ZZ_MARK_TARGET(0x8001BD68,0x8001BD80,ZZ_1B974_3F4);
ZZ_MARK_TARGET(0x8001BD80,0x8001BD98,ZZ_1B974_40C);
ZZ_MARK_TARGET(0x8001BD98,0x8001BD9C,ZZ_1B974_424);
ZZ_MARK_TARGET(0x8001BD9C,0x8001BDA8,ZZ_1B974_428);
ZZ_MARK_TARGET(0x8001BDA8,0x8001BDD8,ZZ_1B974_434);
ZZ_MARK_TARGET(0x8001BDD8,0x8001BDF0,ZZ_1B974_464);
ZZ_MARK_TARGET(0x8001BDF0,0x8001BE04,ZZ_1B974_47C);
ZZ_MARK_TARGET(0x8001BE04,0x8001BE64,ZZ_1B974_490);
ZZ_MARK_TARGET(0x8001BE64,0x8001BE84,ZZ_1B974_4F0);
ZZ_MARK_TARGET(0x8001BE84,0x8001BEBC,ZZ_1B974_510);
