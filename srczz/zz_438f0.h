#ifdef ZZ_INCLUDE_CODE
ZZ_438F0:
	S2 = EMU_ReadU32(SP + 48); //+ 0x30
	S6 = EMU_ReadU32(SP + 52); //+ 0x34
	T0 = EMU_ReadU32(S2);
	T9 = EMU_CheckedAdd(V1,320);
	T8 = S6;
	ZZ_CLOCKCYCLES(6,0x80043918);
	goto ZZ_438F0_28;
ZZ_438F0_18:
	A0 = EMU_ReadU32(T8);
	T8 = EMU_CheckedAdd(T8,4);
	EMU_Write32(T9,A0);
	T9 = EMU_CheckedAdd(T9,4);
	ZZ_CLOCKCYCLES(4,0x80043918);
ZZ_438F0_28:
	if ((int32_t)T0 > 0)
	{
		T0 = EMU_CheckedAdd(T0,-1);
		ZZ_CLOCKCYCLES(2,0x80043908);
		goto ZZ_438F0_18;
	}
	T0 = EMU_CheckedAdd(T0,-1);
	S2 = EMU_CheckedAdd(S2,4);
	S1 = EMU_ReadU32(SP + 56); //+ 0x38
	S0 = EMU_ReadU32(SP + 60); //+ 0x3C
	GP = EMU_ReadU32(SP + 96); //+ 0x60
	T0 = EMU_ReadU32(S2);
	T8 = EMU_ReadU32(S5 + 20); //+ 0x14
	T9 = EMU_ReadU32(S4 + 20); //+ 0x14
	S2 = EMU_CheckedAdd(S2,4);
	S5 += T8;
	S4 += T9;
	T9 = EMU_CheckedAdd(T0,1);
	T4 = 0;
	T3 = 0;
	SP = 0;
	ZZ_JUMPREGISTER_BEGIN(RA);
	EMU_Write32(V1 + 272,R0); //+ 0x110
	ZZ_CLOCKCYCLES_JR(18);
	ZZ_JUMPREGISTER(0x8003F6D4,ZZ_3EFAC_728);
	ZZ_JUMPREGISTER(0x80041A7C,ZZ_41A1C_60);
	ZZ_JUMPREGISTER(0x8003F4B8,ZZ_3EFAC_50C);
	ZZ_JUMPREGISTER(0x8003F274,ZZ_3EFAC_2C8);
	ZZ_JUMPREGISTER(0x80041304,ZZ_40FAC_358);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800438F0,0x80043908,ZZ_438F0);
ZZ_MARK_TARGET(0x80043908,0x80043918,ZZ_438F0_18);
ZZ_MARK_TARGET(0x80043918,0x80043960,ZZ_438F0_28);
