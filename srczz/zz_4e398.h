#ifdef ZZ_INCLUDE_CODE
ZZ_4E398:
	SP -= 40;
	EMU_Write32(SP + 28,S3); //+ 0x1C
	S3 = A0;
	EMU_Write32(SP + 16,S0); //+ 0x10
	S0 = A1;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = A2;
	EMU_Write32(SP + 24,S2); //+ 0x18
	EMU_Write32(SP + 32,RA); //+ 0x20
	RA = 0x8004E3C4; //ZZ_4E398_2C
	S2 = A3;
	ZZ_CLOCKCYCLES(11,0x8004EC08);
	goto ZZ_4EC08;
ZZ_4E398_2C:
	ZZ_CLOCKCYCLES(2,0x8004E3E4);
	goto ZZ_4E398_4C;
ZZ_4E398_34:
	RA = 0x8004E3D4; //ZZ_4E398_3C
	ZZ_CLOCKCYCLES(2,0x8004EC3C);
	goto ZZ_4EC3C;
ZZ_4E398_3C:
	if (V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(2,0x8004E658);
		goto ZZ_4E398_2C0;
	}
	V0 = -1;
	RA = 0x8004E3E4; //ZZ_4E398_4C
	ZZ_CLOCKCYCLES(4,0x8004E678);
	goto ZZ_4E678;
ZZ_4E398_4C:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8008); //+ 0xFFFFE0B8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 += 1;
	V0 &= 0x3F;
	if (V0 == V1)
	{
		ZZ_CLOCKCYCLES(8,0x8004E3CC);
		goto ZZ_4E398_34;
	}
	RA = 0x8004E40C; //ZZ_4E398_74
	A0 = R0;
	ZZ_CLOCKCYCLES(10,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E398_74:
	V1 = 0x80060000;
	V1 = EMU_ReadU8(V1 - 8267); //+ 0xFFFFDFB5
	AT = 0x80060000;
	EMU_Write32(AT - 8000,V0); //+ 0xFFFFE0C0
	V0 = 1;
	AT = 0x80060000;
	EMU_Write32(AT - 8260,V0); //+ 0xFFFFDFBC
	if (!V1)
	{
		ZZ_CLOCKCYCLES(9,0x8004E480);
		goto ZZ_4E398_E8;
	}
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8004); //+ 0xFFFFE0BC
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(16,0x8004E4E0);
		goto ZZ_4E398_148;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8044); //+ 0xFFFFE094
	V0 = EMU_ReadU32(V0);
	V1 = 0x1000000;
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(24,0x8004E4E0);
		goto ZZ_4E398_148;
	}
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8256); //+ 0xFFFFDFC0
	if (V0)
	{
		ZZ_CLOCKCYCLES(29,0x8004E4E0);
		goto ZZ_4E398_148;
	}
	ZZ_CLOCKCYCLES(29,0x8004E480);
ZZ_4E398_E8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8056); //+ 0xFFFFE088
	A0 = 0x4000000;
	ZZ_CLOCKCYCLES(3,0x8004E48C);
ZZ_4E398_F4:
	V0 = EMU_ReadU32(V1);
	V0 &= A0;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(5,0x8004E48C);
		goto ZZ_4E398_F4;
	}
	A0 = S0;
	ZZ_JUMPREGISTER_BEGIN(S3);
	RA = 0x8004E4AC; //ZZ_4E398_114
	A1 = S2;
	ZZ_CLOCKCYCLES_JR(8);
	// UNIMPLEMENTED JUMP-TO-REGISTER-AND-LINK (S3,8004E4A4)
	ZZ_JUMPREGISTER_END();
ZZ_4E398_114:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 8000); //+ 0xFFFFE0C0
	V0 = 0x80060000;
	V0 -= 8024;
	EMU_Write32(V0,S3);
	AT = 0x80060000;
	EMU_Write32(AT - 8020,S0); //+ 0xFFFFE0AC
	AT = 0x80060000;
	EMU_Write32(AT - 8016,S2); //+ 0xFFFFE0B0
	RA = 0x8004E4D8; //ZZ_4E398_140
	ZZ_CLOCKCYCLES(11,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E398_140:
	V0 = R0;
	ZZ_CLOCKCYCLES(2,0x8004E658);
	goto ZZ_4E398_2C0;
ZZ_4E398_148:
	A1 = 0x80050000;
	A1 -= 6536;
	RA = 0x8004E4F0; //ZZ_4E398_158
	A0 = 2;
	ZZ_CLOCKCYCLES(4,0x8004A970);
	goto ZZ_4A970;
ZZ_4E398_158:
	if (!S1)
	{
		A2 = R0;
		ZZ_CLOCKCYCLES(2,0x8004E5A0);
		goto ZZ_4E398_208;
	}
	A2 = R0;
	T0 = 0x80070000;
	T0 -= 25504;
	A3 = S0;
	V0 = S1;
	ZZ_CLOCKCYCLES(6,0x8004E508);
ZZ_4E398_170:
	if ((int32_t)V0 >= 0)
	{
		ZZ_CLOCKCYCLES(2,0x8004E514);
		goto ZZ_4E398_17C;
	}
	V0 += 3;
	ZZ_CLOCKCYCLES(3,0x8004E514);
ZZ_4E398_17C:
	V0 = (int32_t)V0 >> 2;
	V0 = (int32_t)A2 < (int32_t)V0;
	if (!V0)
	{
		A0 = A2 << 2;
		ZZ_CLOCKCYCLES(4,0x8004E558);
		goto ZZ_4E398_1C0;
	}
	A0 = A2 << 2;
	A1 = EMU_ReadU32(A3);
	A3 += 4;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	A2 += 1;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	V0 += T0;
	A0 += V0;
	EMU_Write32(A0,A1);
	V0 = S1;
	ZZ_CLOCKCYCLES(17,0x8004E508);
	goto ZZ_4E398_170;
ZZ_4E398_1C0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8008); //+ 0xFFFFE0B8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	A0 = V0 << 1;
	A0 += V0;
	A0 <<= 5;
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	V1 = 0x80070000;
	V1 -= 25504;
	V0 += V1;
	AT = 0x80070000;
	AT += A0;
	EMU_Write32(AT - 25512,V0); //+ 0xFFFF9C58
	ZZ_CLOCKCYCLES(18,0x8004E5C4);
	goto ZZ_4E398_22C;
ZZ_4E398_208:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	EMU_Write32(AT - 25512,S0); //+ 0xFFFF9C58
	ZZ_CLOCKCYCLES(9,0x8004E5C4);
ZZ_4E398_22C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	EMU_Write32(AT - 25508,S2); //+ 0xFFFF9C5C
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8008); //+ 0xFFFFE0B8
	V0 = V1 << 1;
	V0 += V1;
	V0 <<= 5;
	AT = 0x80070000;
	AT += V0;
	EMU_Write32(AT - 25516,S3); //+ 0xFFFF9C54
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8008); //+ 0xFFFFE0B8
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 8000); //+ 0xFFFFE0C0
	V0 += 1;
	V0 &= 0x3F;
	AT = 0x80060000;
	EMU_Write32(AT - 8008,V0); //+ 0xFFFFE0B8
	RA = 0x8004E634; //ZZ_4E398_29C
	ZZ_CLOCKCYCLES(28,0x8004AA8C);
	goto ZZ_4AA8C;
ZZ_4E398_29C:
	RA = 0x8004E63C; //ZZ_4E398_2A4
	ZZ_CLOCKCYCLES(2,0x8004E678);
	goto ZZ_4E678;
ZZ_4E398_2A4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 - 8008); //+ 0xFFFFE0B8
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 8004); //+ 0xFFFFE0BC
	V0 = V0 - V1;
	V0 &= 0x3F;
	ZZ_CLOCKCYCLES(7,0x8004E658);
ZZ_4E398_2C0:
	RA = EMU_ReadU32(SP + 32); //+ 0x20
	S3 = EMU_ReadU32(SP + 28); //+ 0x1C
	S2 = EMU_ReadU32(SP + 24); //+ 0x18
	S1 = EMU_ReadU32(SP + 20); //+ 0x14
	S0 = EMU_ReadU32(SP + 16); //+ 0x10
	SP += 40;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(8);
	ZZ_JUMPREGISTER(0x8004E388,ZZ_4E374_14);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8004E398,ZZ_4E398);
ZZ_MARK(0x8004E39C);
ZZ_MARK(0x8004E3A0);
ZZ_MARK(0x8004E3A4);
ZZ_MARK(0x8004E3A8);
ZZ_MARK(0x8004E3AC);
ZZ_MARK(0x8004E3B0);
ZZ_MARK(0x8004E3B4);
ZZ_MARK(0x8004E3B8);
ZZ_MARK(0x8004E3BC);
ZZ_MARK(0x8004E3C0);
ZZ_MARK_TARGET(0x8004E3C4,ZZ_4E398_2C);
ZZ_MARK(0x8004E3C8);
ZZ_MARK_TARGET(0x8004E3CC,ZZ_4E398_34);
ZZ_MARK(0x8004E3D0);
ZZ_MARK_TARGET(0x8004E3D4,ZZ_4E398_3C);
ZZ_MARK(0x8004E3D8);
ZZ_MARK(0x8004E3DC);
ZZ_MARK(0x8004E3E0);
ZZ_MARK_TARGET(0x8004E3E4,ZZ_4E398_4C);
ZZ_MARK(0x8004E3E8);
ZZ_MARK(0x8004E3EC);
ZZ_MARK(0x8004E3F0);
ZZ_MARK(0x8004E3F4);
ZZ_MARK(0x8004E3F8);
ZZ_MARK(0x8004E3FC);
ZZ_MARK(0x8004E400);
ZZ_MARK(0x8004E404);
ZZ_MARK(0x8004E408);
ZZ_MARK_TARGET(0x8004E40C,ZZ_4E398_74);
ZZ_MARK(0x8004E410);
ZZ_MARK(0x8004E414);
ZZ_MARK(0x8004E418);
ZZ_MARK(0x8004E41C);
ZZ_MARK(0x8004E420);
ZZ_MARK(0x8004E424);
ZZ_MARK(0x8004E428);
ZZ_MARK(0x8004E42C);
ZZ_MARK(0x8004E430);
ZZ_MARK(0x8004E434);
ZZ_MARK(0x8004E438);
ZZ_MARK(0x8004E43C);
ZZ_MARK(0x8004E440);
ZZ_MARK(0x8004E444);
ZZ_MARK(0x8004E448);
ZZ_MARK(0x8004E44C);
ZZ_MARK(0x8004E450);
ZZ_MARK(0x8004E454);
ZZ_MARK(0x8004E458);
ZZ_MARK(0x8004E45C);
ZZ_MARK(0x8004E460);
ZZ_MARK(0x8004E464);
ZZ_MARK(0x8004E468);
ZZ_MARK(0x8004E46C);
ZZ_MARK(0x8004E470);
ZZ_MARK(0x8004E474);
ZZ_MARK(0x8004E478);
ZZ_MARK(0x8004E47C);
ZZ_MARK_TARGET(0x8004E480,ZZ_4E398_E8);
ZZ_MARK(0x8004E484);
ZZ_MARK(0x8004E488);
ZZ_MARK_TARGET(0x8004E48C,ZZ_4E398_F4);
ZZ_MARK(0x8004E490);
ZZ_MARK(0x8004E494);
ZZ_MARK(0x8004E498);
ZZ_MARK(0x8004E49C);
ZZ_MARK(0x8004E4A0);
ZZ_MARK(0x8004E4A4);
ZZ_MARK(0x8004E4A8);
ZZ_MARK_TARGET(0x8004E4AC,ZZ_4E398_114);
ZZ_MARK(0x8004E4B0);
ZZ_MARK(0x8004E4B4);
ZZ_MARK(0x8004E4B8);
ZZ_MARK(0x8004E4BC);
ZZ_MARK(0x8004E4C0);
ZZ_MARK(0x8004E4C4);
ZZ_MARK(0x8004E4C8);
ZZ_MARK(0x8004E4CC);
ZZ_MARK(0x8004E4D0);
ZZ_MARK(0x8004E4D4);
ZZ_MARK_TARGET(0x8004E4D8,ZZ_4E398_140);
ZZ_MARK(0x8004E4DC);
ZZ_MARK_TARGET(0x8004E4E0,ZZ_4E398_148);
ZZ_MARK(0x8004E4E4);
ZZ_MARK(0x8004E4E8);
ZZ_MARK(0x8004E4EC);
ZZ_MARK_TARGET(0x8004E4F0,ZZ_4E398_158);
ZZ_MARK(0x8004E4F4);
ZZ_MARK(0x8004E4F8);
ZZ_MARK(0x8004E4FC);
ZZ_MARK(0x8004E500);
ZZ_MARK(0x8004E504);
ZZ_MARK_TARGET(0x8004E508,ZZ_4E398_170);
ZZ_MARK(0x8004E50C);
ZZ_MARK(0x8004E510);
ZZ_MARK_TARGET(0x8004E514,ZZ_4E398_17C);
ZZ_MARK(0x8004E518);
ZZ_MARK(0x8004E51C);
ZZ_MARK(0x8004E520);
ZZ_MARK(0x8004E524);
ZZ_MARK(0x8004E528);
ZZ_MARK(0x8004E52C);
ZZ_MARK(0x8004E530);
ZZ_MARK(0x8004E534);
ZZ_MARK(0x8004E538);
ZZ_MARK(0x8004E53C);
ZZ_MARK(0x8004E540);
ZZ_MARK(0x8004E544);
ZZ_MARK(0x8004E548);
ZZ_MARK(0x8004E54C);
ZZ_MARK(0x8004E550);
ZZ_MARK(0x8004E554);
ZZ_MARK_TARGET(0x8004E558,ZZ_4E398_1C0);
ZZ_MARK(0x8004E55C);
ZZ_MARK(0x8004E560);
ZZ_MARK(0x8004E564);
ZZ_MARK(0x8004E568);
ZZ_MARK(0x8004E56C);
ZZ_MARK(0x8004E570);
ZZ_MARK(0x8004E574);
ZZ_MARK(0x8004E578);
ZZ_MARK(0x8004E57C);
ZZ_MARK(0x8004E580);
ZZ_MARK(0x8004E584);
ZZ_MARK(0x8004E588);
ZZ_MARK(0x8004E58C);
ZZ_MARK(0x8004E590);
ZZ_MARK(0x8004E594);
ZZ_MARK(0x8004E598);
ZZ_MARK(0x8004E59C);
ZZ_MARK_TARGET(0x8004E5A0,ZZ_4E398_208);
ZZ_MARK(0x8004E5A4);
ZZ_MARK(0x8004E5A8);
ZZ_MARK(0x8004E5AC);
ZZ_MARK(0x8004E5B0);
ZZ_MARK(0x8004E5B4);
ZZ_MARK(0x8004E5B8);
ZZ_MARK(0x8004E5BC);
ZZ_MARK(0x8004E5C0);
ZZ_MARK_TARGET(0x8004E5C4,ZZ_4E398_22C);
ZZ_MARK(0x8004E5C8);
ZZ_MARK(0x8004E5CC);
ZZ_MARK(0x8004E5D0);
ZZ_MARK(0x8004E5D4);
ZZ_MARK(0x8004E5D8);
ZZ_MARK(0x8004E5DC);
ZZ_MARK(0x8004E5E0);
ZZ_MARK(0x8004E5E4);
ZZ_MARK(0x8004E5E8);
ZZ_MARK(0x8004E5EC);
ZZ_MARK(0x8004E5F0);
ZZ_MARK(0x8004E5F4);
ZZ_MARK(0x8004E5F8);
ZZ_MARK(0x8004E5FC);
ZZ_MARK(0x8004E600);
ZZ_MARK(0x8004E604);
ZZ_MARK(0x8004E608);
ZZ_MARK(0x8004E60C);
ZZ_MARK(0x8004E610);
ZZ_MARK(0x8004E614);
ZZ_MARK(0x8004E618);
ZZ_MARK(0x8004E61C);
ZZ_MARK(0x8004E620);
ZZ_MARK(0x8004E624);
ZZ_MARK(0x8004E628);
ZZ_MARK(0x8004E62C);
ZZ_MARK(0x8004E630);
ZZ_MARK_TARGET(0x8004E634,ZZ_4E398_29C);
ZZ_MARK(0x8004E638);
ZZ_MARK_TARGET(0x8004E63C,ZZ_4E398_2A4);
ZZ_MARK(0x8004E640);
ZZ_MARK(0x8004E644);
ZZ_MARK(0x8004E648);
ZZ_MARK(0x8004E64C);
ZZ_MARK(0x8004E650);
ZZ_MARK(0x8004E654);
ZZ_MARK_TARGET(0x8004E658,ZZ_4E398_2C0);
ZZ_MARK(0x8004E65C);
ZZ_MARK(0x8004E660);
ZZ_MARK(0x8004E664);
ZZ_MARK(0x8004E668);
ZZ_MARK(0x8004E66C);
ZZ_MARK(0x8004E670);
ZZ_MARK(0x8004E674);
