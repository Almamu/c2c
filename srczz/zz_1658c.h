#ifdef ZZ_INCLUDE_CODE
ZZ_1658C:
	SP -= 72;
	V0 = 0x80070000;
	V0 -= 12408;
	EMU_Write32(SP + 64,RA); //+ 0x40
	EMU_Write32(SP + 60,S3); //+ 0x3C
	EMU_Write32(SP + 56,S2); //+ 0x38
	EMU_Write32(SP + 52,S1); //+ 0x34
	EMU_Write32(SP + 48,S0); //+ 0x30
	V1 = EMU_ReadU32(V0);
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 - 3048); //+ 0xFFFFF418
	V1 += 1;
	if (A0)
	{
		EMU_Write32(V0,V1);
		ZZ_CLOCKCYCLES(14,0x800165F4);
		goto ZZ_1658C_68;
	}
	EMU_Write32(V0,V1);
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= 0x1000;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(20,0x800165F4);
		goto ZZ_1658C_68;
	}
	V1 = 0x80060000;
	V1 += 3036;
	V0 = EMU_ReadU32(V1);
	V0 += 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(26,0x800165F4);
ZZ_1658C_68:
	S0 = 0x80070000;
	S0 -= 12368;
	V1 = EMU_ReadU32(S0);
	if (!V1)
	{
		ZZ_CLOCKCYCLES(6,0x800166A4);
		goto ZZ_1658C_118;
	}
	if ((int32_t)V1 <= 0)
	{
		V0 = (int32_t)V1 < -2;
		ZZ_CLOCKCYCLES(8,0x80016644);
		goto ZZ_1658C_B8;
	}
	V0 = (int32_t)V1 < -2;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12364); //+ 0xFFFFCFB4
	V0 = V1 - V0;
	if ((int32_t)V0 >= 0)
	{
		EMU_Write32(S0,V0);
		ZZ_CLOCKCYCLES(14,0x80016630);
		goto ZZ_1658C_A4;
	}
	EMU_Write32(S0,V0);
	EMU_Write32(S0,R0);
	ZZ_CLOCKCYCLES(15,0x80016630);
ZZ_1658C_A4:
	A0 = EMU_ReadU32(S0);
	RA = 0x8001663C; //ZZ_1658C_B0
	ZZ_CLOCKCYCLES(3,0x80016C38);
	goto ZZ_16C38;
ZZ_1658C_B0:
	ZZ_CLOCKCYCLES(2,0x800166A4);
	goto ZZ_1658C_118;
ZZ_1658C_B8:
	if (V0)
	{
		ZZ_CLOCKCYCLES(2,0x8001665C);
		goto ZZ_1658C_D0;
	}
	RA = 0x80016654; //ZZ_1658C_C8
	A0 = 0x100;
	ZZ_CLOCKCYCLES(4,0x80016C38);
	goto ZZ_16C38;
ZZ_1658C_C8:
	V0 = -1;
	ZZ_CLOCKCYCLES(2,0x800166A0);
	goto ZZ_1658C_114;
ZZ_1658C_D0:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12364); //+ 0xFFFFCFB4
	V0 += V1;
	A0 = V0 + 256;
	RA = 0x80016678; //ZZ_1658C_EC
	EMU_Write32(S0,V0);
	ZZ_CLOCKCYCLES(7,0x80016C38);
	goto ZZ_16C38;
ZZ_1658C_EC:
	V0 = EMU_ReadU32(S0);
	if (V0)
	{
		V1 = 0x400000;
		ZZ_CLOCKCYCLES(4,0x800166A4);
		goto ZZ_1658C_118;
	}
	V1 = 0x400000;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= V1;
	if (V0)
	{
		V0 = -2;
		ZZ_CLOCKCYCLES(10,0x800166A4);
		goto ZZ_1658C_118;
	}
	V0 = -2;
	ZZ_CLOCKCYCLES(10,0x800166A0);
ZZ_1658C_114:
	EMU_Write32(S0,V0);
	ZZ_CLOCKCYCLES(1,0x800166A4);
ZZ_1658C_118:
	S0 = 0x80070000;
	S0 -= 12500;
	A0 = EMU_ReadU32(S0);
	A1 = EMU_ReadU32(GP + 88); //+ 0x58
	RA = 0x800166BC; //ZZ_1658C_130
	ZZ_CLOCKCYCLES(6,0x80016D84);
	goto ZZ_16D84;
ZZ_1658C_130:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = EMU_ReadU32(S0);
	V0 &= 0x2000;
	EMU_Write32(GP + 88,V1); //+ 0x58
	if (!V0)
	{
		S0 = 0x1;
		ZZ_CLOCKCYCLES(7,0x800168C0);
		goto ZZ_1658C_334;
	}
	S0 = 0x1;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 2916); //+ 0xB64
	if (!V0)
	{
		S1 = R0;
		ZZ_CLOCKCYCLES(12,0x80016780);
		goto ZZ_1658C_1F4;
	}
	S1 = R0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	A1 = 0x1FA;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,R0); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x8001671C; //ZZ_1658C_190
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(24,0x80031DF4);
	goto ZZ_31DF4;
ZZ_1658C_190:
	V1 = V0;
	if (!V1)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(3,0x80016780);
		goto ZZ_1658C_1F4;
	}
	V0 = 0x2;
	S0 = EMU_ReadU32(V1);
	S1 = EMU_ReadU32(V1 + 4); //+ 0x4
	if (S0 != V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(7,0x8001680C);
		goto ZZ_1658C_280;
	}
	V0 = 0x1;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2928); //+ 0xB70
	A2 = 0x80060000;
	A2 = EMU_ReadU32(A2 + 2936); //+ 0xB78
	S3 = EMU_ReadU32(V1 + 8); //+ 0x8
	A1 = 0x1F9;
	A3 = R0;
	V0 = 0x3;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = SP + 40;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,V0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80016774; //ZZ_1658C_1E8
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(22,0x80031DF4);
	goto ZZ_31DF4;
ZZ_1658C_1E8:
	if (!V0)
	{
		S2 = R0;
		ZZ_CLOCKCYCLES(2,0x80016780);
		goto ZZ_1658C_1F4;
	}
	S2 = R0;
	S2 = EMU_ReadS16(V0);
	ZZ_CLOCKCYCLES(3,0x80016780);
ZZ_1658C_1F4:
	V0 = 0x2;
	if (S0 != V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(3,0x8001680C);
		goto ZZ_1658C_280;
	}
	V0 = 0x1;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2712); //+ 0xA98
	RA = 0x8001679C; //ZZ_1658C_210
	ZZ_CLOCKCYCLES(7,0x8003D584);
	goto ZZ_3D584;
ZZ_1658C_210:
	V1 = V0 << 2;
	V1 += V0;
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 2844); //+ 0xB1C
	V0 = V1 << 4;
	V1 += V0;
	V1 <<= 1;
	EMU_SMultiply(A0,V1);
	V0 = S2 - 128;
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12500); //+ 0xFFFFCF2C
	T0 = LO;
	V1 = (int32_t)T0 >> 20;
	if (!A0)
	{
		S2 = V1 - V0;
		ZZ_CLOCKCYCLES(15,0x800167EC);
		goto ZZ_1658C_260;
	}
	S2 = V1 - V0;
	V0 = A0 << 4;
	V0 = V0 - A0;
	V0 <<= 3;
	V0 = (int32_t)V0 >> 3;
	S2 = S2 - V0;
	ZZ_CLOCKCYCLES(20,0x800167EC);
ZZ_1658C_260:
	if ((int32_t)S2 >= 0)
	{
		V0 = (int32_t)S2 < 255;
		ZZ_CLOCKCYCLES(2,0x800167FC);
		goto ZZ_1658C_270;
	}
	V0 = (int32_t)S2 < 255;
	S1 = S3;
	ZZ_CLOCKCYCLES(4,0x80016804);
	goto ZZ_1658C_278;
ZZ_1658C_270:
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(2,0x8001680C);
		goto ZZ_1658C_280;
	}
	V0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x80016804);
ZZ_1658C_278:
	S0 = 0x1;
	V0 = 0x1;
	ZZ_CLOCKCYCLES(2,0x8001680C);
ZZ_1658C_280:
	if (S0 == V0)
	{
		A0 = R0;
		ZZ_CLOCKCYCLES(2,0x80016830);
		goto ZZ_1658C_2A4;
	}
	A0 = R0;
	V0 = (int32_t)S0 < 2;
	if (V0)
	{
		V0 = 0x2;
		ZZ_CLOCKCYCLES(5,0x800168C0);
		goto ZZ_1658C_334;
	}
	V0 = 0x2;
	if (S0 == V0)
	{
		A1 = R0;
		ZZ_CLOCKCYCLES(7,0x80016858);
		goto ZZ_1658C_2CC;
	}
	A1 = R0;
	ZZ_CLOCKCYCLES(9,0x800168C0);
	goto ZZ_1658C_334;
ZZ_1658C_2A4:
	A1 = R0;
	A2 = 0x200;
	A3 = 0x100;
	V0 = S1 & 0xFF;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = S1 >> 8;
	V0 &= 0xFF;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = S1 >> 16;
	ZZ_CLOCKCYCLES(10,0x800168B4);
	goto ZZ_1658C_328;
ZZ_1658C_2CC:
	A2 = 0x200;
	S0 = S2 + 1;
	A3 = S0;
	V0 = S1 & 0xFF;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = S1 >> 8;
	V0 &= 0xFF;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = S1 >> 16;
	V0 &= 0xFF;
	RA = 0x80016888; //ZZ_1658C_2FC
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(12,0x80016B90);
	goto ZZ_16B90;
ZZ_1658C_2FC:
	A0 = R0;
	A1 = S0;
	A2 = 0x200;
	A3 = 0xFF;
	A3 = A3 - S2;
	V0 = S3 & 0xFF;
	EMU_Write32(SP + 16,V0); //+ 0x10
	V0 = S3 >> 8;
	V0 &= 0xFF;
	EMU_Write32(SP + 20,V0); //+ 0x14
	V0 = S3 >> 16;
	ZZ_CLOCKCYCLES(11,0x800168B4);
ZZ_1658C_328:
	V0 &= 0xFF;
	RA = 0x800168C0; //ZZ_1658C_334
	EMU_Write32(SP + 24,V0); //+ 0x18
	ZZ_CLOCKCYCLES(3,0x80016B90);
	goto ZZ_16B90;
ZZ_1658C_334:
	RA = 0x800168C8; //ZZ_1658C_33C
	ZZ_CLOCKCYCLES(2,0x800337BC);
	goto ZZ_337BC;
ZZ_1658C_33C:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14060); //+ 0x36EC
	V0 = 0x80040000;
	V0 = EMU_ReadU32(V0 - 16068); //+ 0xFFFFC13C
	A0 = R0;
	RA = 0x800168E4; //ZZ_1658C_358
	EMU_Write32(V1 + 16,V0); //+ 0x10
	ZZ_CLOCKCYCLES(7,0x8004C2DC);
	goto ZZ_4C2DC;
ZZ_1658C_358:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12372); //+ 0xFFFFCFAC
	if (V0)
	{
		V0 = 0x14;
		ZZ_CLOCKCYCLES(5,0x80016924);
		goto ZZ_1658C_398;
	}
	V0 = 0x14;
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14060); //+ 0x36EC
	V1 = 0x80040000;
	V1 = EMU_ReadU32(V1 - 16068); //+ 0xFFFFC13C
	V0 = EMU_ReadU32(V0 + 12); //+ 0xC
	V1 = V1 - V0;
	AT = 0x80070000;
	EMU_Write32(AT - 12620,V1); //+ 0xFFFFCEB4
	ZZ_CLOCKCYCLES(16,0x8001692C);
	goto ZZ_1658C_3A0;
ZZ_1658C_398:
	AT = 0x80070000;
	EMU_Write32(AT - 12620,V0); //+ 0xFFFFCEB4
	ZZ_CLOCKCYCLES(2,0x8001692C);
ZZ_1658C_3A0:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 30788); //+ 0x7844
	if (V0)
	{
		ZZ_CLOCKCYCLES(5,0x80016968);
		goto ZZ_1658C_3DC;
	}
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14060); //+ 0x36EC
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14064); //+ 0x36F0
	AT = 0x80060000;
	EMU_Write32(AT + 14056,V1); //+ 0x36E8
	AT = 0x80060000;
	EMU_Write32(AT + 14060,V0); //+ 0x36EC
	AT = 0x80060000;
	EMU_Write32(AT + 14064,V1); //+ 0x36F0
	ZZ_CLOCKCYCLES(15,0x80016968);
ZZ_1658C_3DC:
	RA = 0x80016970; //ZZ_1658C_3E4
	A0 = R0;
	ZZ_CLOCKCYCLES(2,0x8004A71C);
	goto ZZ_4A71C;
ZZ_1658C_3E4:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14056); //+ 0x36E8
	V1 = 0x80040000;
	V1 = EMU_ReadU32(V1 - 16068); //+ 0xFFFFC13C
	V0 = EMU_ReadU32(V0 + 12); //+ 0xC
	V1 = V1 - V0;
	V1 = V1 < 30;
	if (!V1)
	{
		ZZ_CLOCKCYCLES(10,0x800169A0);
		goto ZZ_1658C_414;
	}
	RA = 0x800169A0; //ZZ_1658C_414
	A0 = R0;
	ZZ_CLOCKCYCLES(12,0x8004A71C);
	goto ZZ_4A71C;
ZZ_1658C_414:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V1 = 0x200000;
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(6,0x80016A14);
		goto ZZ_1658C_488;
	}
	V0 = EMU_ReadU32(GP + 92); //+ 0x5C
	if (V0)
	{
		V0 = 0x1;
		ZZ_CLOCKCYCLES(10,0x800169E8);
		goto ZZ_1658C_45C;
	}
	V0 = 0x1;
	RA = 0x800169D0; //ZZ_1658C_444
	ZZ_CLOCKCYCLES(12,0x80049FB4);
	goto ZZ_49FB4;
ZZ_1658C_444:
	A0 = 0xF2000000;
	RA = 0x800169DC; //ZZ_1658C_450
	A0 |= 0x2;
	ZZ_CLOCKCYCLES(3,0x8004A16C);
	goto ZZ_4A16C;
ZZ_1658C_450:
	RA = 0x800169E4; //ZZ_1658C_458
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_1658C_458:
	V0 = 0x1;
	ZZ_CLOCKCYCLES(1,0x800169E8);
ZZ_1658C_45C:
	EMU_Write32(GP + 92,V0); //+ 0x5C
	RA = 0x800169F4; //ZZ_1658C_468
	ZZ_CLOCKCYCLES(3,0x800348EC);
	goto ZZ_348EC;
ZZ_1658C_468:
	V0 = 0x80040000;
	V0 = EMU_ReadU32(V0 - 16068); //+ 0xFFFFC13C
	V0 += 40;
	AT = 0x80040000;
	EMU_Write32(AT - 16068,V0); //+ 0xFFFFC13C
	ZZ_CLOCKCYCLES(8,0x80016A44);
	goto ZZ_1658C_4B8;
ZZ_1658C_488:
	V0 = EMU_ReadU32(GP + 92); //+ 0x5C
	if (!V0)
	{
		ZZ_CLOCKCYCLES(4,0x80016A40);
		goto ZZ_1658C_4B4;
	}
	RA = 0x80016A2C; //ZZ_1658C_4A0
	ZZ_CLOCKCYCLES(6,0x80049FB4);
	goto ZZ_49FB4;
ZZ_1658C_4A0:
	A0 = 0xF2000000;
	RA = 0x80016A38; //ZZ_1658C_4AC
	A0 |= 0x2;
	ZZ_CLOCKCYCLES(3,0x8004A138);
	goto ZZ_4A138;
ZZ_1658C_4AC:
	RA = 0x80016A40; //ZZ_1658C_4B4
	ZZ_CLOCKCYCLES(2,0x80049FC4);
	goto ZZ_49FC4;
ZZ_1658C_4B4:
	EMU_Write32(GP + 92,R0); //+ 0x5C
	ZZ_CLOCKCYCLES(1,0x80016A44);
ZZ_1658C_4B8:
	RA = 0x80016A4C; //ZZ_1658C_4C0
	ZZ_CLOCKCYCLES(2,0x80049FB4);
	goto ZZ_49FB4;
ZZ_1658C_4C0:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12372); //+ 0xFFFFCFAC
	V0 = 0x2;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x80016A74);
		goto ZZ_1658C_4E8;
	}
	V0 = EMU_ReadU32(GP + 504); //+ 0x1F8
	V0 = EMU_ReadU32(V0);
	AT = 0x80040000;
	EMU_Write32(AT - 16068,V0); //+ 0xFFFFC13C
	ZZ_CLOCKCYCLES(10,0x80016A74);
ZZ_1658C_4E8:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14060); //+ 0x36EC
	V0 = 0x80040000;
	V0 = EMU_ReadU32(V0 - 16068); //+ 0xFFFFC13C
	RA = 0x80016A8C; //ZZ_1658C_500
	EMU_Write32(V1 + 12,V0); //+ 0xC
	ZZ_CLOCKCYCLES(6,0x80049FC4);
	goto ZZ_49FC4;
ZZ_1658C_500:
	V0 = 0x80060000;
	V0 = EMU_ReadU32(V0 + 14060); //+ 0x36EC
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14056); //+ 0x36E8
	V0 = EMU_ReadU32(V0 + 12); //+ 0xC
	A0 = EMU_ReadU32(V1 + 12); //+ 0xC
	RA = 0x80016AAC; //ZZ_1658C_520
	A0 = V0 - A0;
	ZZ_CLOCKCYCLES(8,0x80017028);
	goto ZZ_17028;
ZZ_1658C_520:
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14056); //+ 0x36E8
	EMU_Write32(V1 + 20,V0); //+ 0x14
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 14056); //+ 0x36E8
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12428); //+ 0xFFFFCF74
	EMU_Write16(V1 + 8224,V0); //+ 0x2020
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14056); //+ 0x36E8
	RA = 0x80016AE4; //ZZ_1658C_558
	A0 += 8216;
	ZZ_CLOCKCYCLES(14,0x8004CBA8);
	goto ZZ_4CBA8;
ZZ_1658C_558:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14060); //+ 0x36EC
	RA = 0x80016AF4; //ZZ_1658C_568
	A0 += 8236;
	ZZ_CLOCKCYCLES(4,0x8004C950);
	goto ZZ_4C950;
ZZ_1658C_568:
	V1 = 0x80060000;
	V1 += 30788;
	V0 = EMU_ReadU32(V1);
	if ((int32_t)V0 <= 0)
	{
		V0 -= 1;
		ZZ_CLOCKCYCLES(6,0x80016B10);
		goto ZZ_1658C_584;
	}
	V0 -= 1;
	EMU_Write32(V1,V0);
	ZZ_CLOCKCYCLES(7,0x80016B10);
ZZ_1658C_584:
	V0 = EMU_ReadU32(V1);
	if (V0)
	{
		V1 = 0x40000;
		ZZ_CLOCKCYCLES(4,0x80016B50);
		goto ZZ_1658C_5C4;
	}
	V1 = 0x40000;
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12756); //+ 0xFFFFCE2C
	V0 &= V1;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(10,0x80016B40);
		goto ZZ_1658C_5B4;
	}
	RA = 0x80016B40; //ZZ_1658C_5B4
	ZZ_CLOCKCYCLES(12,0x800272E0);
	goto ZZ_272E0;
ZZ_1658C_5B4:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14060); //+ 0x36EC
	RA = 0x80016B50; //ZZ_1658C_5C4
	A0 += 24;
	ZZ_CLOCKCYCLES(4,0x8004C8DC);
	goto ZZ_4C8DC;
ZZ_1658C_5C4:
	A0 = 0x80060000;
	A0 = EMU_ReadU32(A0 + 14064); //+ 0x36F0
	RA = 0x80016B60; //ZZ_1658C_5D4
	ZZ_CLOCKCYCLES(4,0x800164F4);
	goto ZZ_164F4;
ZZ_1658C_5D4:
	V0 = 0x80070000;
	V0 = EMU_ReadU32(V0 - 12776); //+ 0xFFFFCE18
	AT = 0x80070000;
	EMU_Write32(AT - 12756,V0); //+ 0xFFFFCE2C
	RA = EMU_ReadU32(SP + 64); //+ 0x40
	S3 = EMU_ReadU32(SP + 60); //+ 0x3C
	S2 = EMU_ReadU32(SP + 56); //+ 0x38
	S1 = EMU_ReadU32(SP + 52); //+ 0x34
	S0 = EMU_ReadU32(SP + 48); //+ 0x30
	SP += 72;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x8001658C,0x800165F4,ZZ_1658C);
ZZ_MARK_TARGET(0x800165F4,0x80016630,ZZ_1658C_68);
ZZ_MARK_TARGET(0x80016630,0x8001663C,ZZ_1658C_A4);
ZZ_MARK_TARGET(0x8001663C,0x80016644,ZZ_1658C_B0);
ZZ_MARK_TARGET(0x80016644,0x80016654,ZZ_1658C_B8);
ZZ_MARK_TARGET(0x80016654,0x8001665C,ZZ_1658C_C8);
ZZ_MARK_TARGET(0x8001665C,0x80016678,ZZ_1658C_D0);
ZZ_MARK_TARGET(0x80016678,0x800166A0,ZZ_1658C_EC);
ZZ_MARK_TARGET(0x800166A0,0x800166A4,ZZ_1658C_114);
ZZ_MARK_TARGET(0x800166A4,0x800166BC,ZZ_1658C_118);
ZZ_MARK_TARGET(0x800166BC,0x8001671C,ZZ_1658C_130);
ZZ_MARK_TARGET(0x8001671C,0x80016774,ZZ_1658C_190);
ZZ_MARK_TARGET(0x80016774,0x80016780,ZZ_1658C_1E8);
ZZ_MARK_TARGET(0x80016780,0x8001679C,ZZ_1658C_1F4);
ZZ_MARK_TARGET(0x8001679C,0x800167EC,ZZ_1658C_210);
ZZ_MARK_TARGET(0x800167EC,0x800167FC,ZZ_1658C_260);
ZZ_MARK_TARGET(0x800167FC,0x80016804,ZZ_1658C_270);
ZZ_MARK_TARGET(0x80016804,0x8001680C,ZZ_1658C_278);
ZZ_MARK_TARGET(0x8001680C,0x80016830,ZZ_1658C_280);
ZZ_MARK_TARGET(0x80016830,0x80016858,ZZ_1658C_2A4);
ZZ_MARK_TARGET(0x80016858,0x80016888,ZZ_1658C_2CC);
ZZ_MARK_TARGET(0x80016888,0x800168B4,ZZ_1658C_2FC);
ZZ_MARK_TARGET(0x800168B4,0x800168C0,ZZ_1658C_328);
ZZ_MARK_TARGET(0x800168C0,0x800168C8,ZZ_1658C_334);
ZZ_MARK_TARGET(0x800168C8,0x800168E4,ZZ_1658C_33C);
ZZ_MARK_TARGET(0x800168E4,0x80016924,ZZ_1658C_358);
ZZ_MARK_TARGET(0x80016924,0x8001692C,ZZ_1658C_398);
ZZ_MARK_TARGET(0x8001692C,0x80016968,ZZ_1658C_3A0);
ZZ_MARK_TARGET(0x80016968,0x80016970,ZZ_1658C_3DC);
ZZ_MARK_TARGET(0x80016970,0x800169A0,ZZ_1658C_3E4);
ZZ_MARK_TARGET(0x800169A0,0x800169D0,ZZ_1658C_414);
ZZ_MARK_TARGET(0x800169D0,0x800169DC,ZZ_1658C_444);
ZZ_MARK_TARGET(0x800169DC,0x800169E4,ZZ_1658C_450);
ZZ_MARK_TARGET(0x800169E4,0x800169E8,ZZ_1658C_458);
ZZ_MARK_TARGET(0x800169E8,0x800169F4,ZZ_1658C_45C);
ZZ_MARK_TARGET(0x800169F4,0x80016A14,ZZ_1658C_468);
ZZ_MARK_TARGET(0x80016A14,0x80016A2C,ZZ_1658C_488);
ZZ_MARK_TARGET(0x80016A2C,0x80016A38,ZZ_1658C_4A0);
ZZ_MARK_TARGET(0x80016A38,0x80016A40,ZZ_1658C_4AC);
ZZ_MARK_TARGET(0x80016A40,0x80016A44,ZZ_1658C_4B4);
ZZ_MARK_TARGET(0x80016A44,0x80016A4C,ZZ_1658C_4B8);
ZZ_MARK_TARGET(0x80016A4C,0x80016A74,ZZ_1658C_4C0);
ZZ_MARK_TARGET(0x80016A74,0x80016A8C,ZZ_1658C_4E8);
ZZ_MARK_TARGET(0x80016A8C,0x80016AAC,ZZ_1658C_500);
ZZ_MARK_TARGET(0x80016AAC,0x80016AE4,ZZ_1658C_520);
ZZ_MARK_TARGET(0x80016AE4,0x80016AF4,ZZ_1658C_558);
ZZ_MARK_TARGET(0x80016AF4,0x80016B10,ZZ_1658C_568);
ZZ_MARK_TARGET(0x80016B10,0x80016B40,ZZ_1658C_584);
ZZ_MARK_TARGET(0x80016B40,0x80016B50,ZZ_1658C_5B4);
ZZ_MARK_TARGET(0x80016B50,0x80016B60,ZZ_1658C_5C4);
ZZ_MARK_TARGET(0x80016B60,0x80016B90,ZZ_1658C_5D4);
