#ifdef ZZ_INCLUDE_CODE
ZZ_191D4:
	SP -= 96;
	EMU_Write32(SP + 80,S6); //+ 0x50
	S6 = A0;
	EMU_Write32(SP + 88,RA); //+ 0x58
	EMU_Write32(SP + 84,S7); //+ 0x54
	EMU_Write32(SP + 76,S5); //+ 0x4C
	EMU_Write32(SP + 72,S4); //+ 0x48
	EMU_Write32(SP + 68,S3); //+ 0x44
	EMU_Write32(SP + 64,S2); //+ 0x40
	EMU_Write32(SP + 60,S1); //+ 0x3C
	if (!S6)
	{
		EMU_Write32(SP + 56,S0); //+ 0x38
		ZZ_CLOCKCYCLES(12,0x800198F4);
		goto ZZ_191D4_720;
	}
	EMU_Write32(SP + 56,S0); //+ 0x38
	V1 = EMU_ReadU32(S6 + 8); //+ 0x8
	V0 = 0x7;
	if (V1 != V0)
	{
		S5 = R0;
		ZZ_CLOCKCYCLES(16,0x80019238);
		goto ZZ_191D4_64;
	}
	S5 = R0;
	V0 = EMU_ReadU32(S6 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 388); //+ 0x184
	V0 = EMU_ReadU32(V0 + 392); //+ 0x188
	V1 += A1;
	V1 += V0;
	V1 <<= 2;
	V1 += S6;
	S2 = EMU_ReadU32(V1 + 16); //+ 0x10
	ZZ_CLOCKCYCLES(25,0x80019238);
ZZ_191D4_64:
	A0 = S2;
	A1 = 0xA9;
	A2 = R0;
	A3 = R0;
	S0 = 0x2;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019260; //ZZ_191D4_8C
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(10,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_8C:
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(2,0x800192B4);
		goto ZZ_191D4_E0;
	}
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019284; //ZZ_191D4_B0
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(9,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_B0:
	if ((int32_t)V0 <= 0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(2,0x800192C4);
		goto ZZ_191D4_F0;
	}
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x800192A8; //ZZ_191D4_D4
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(9,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_D4:
	V0 = (int32_t)V0 < 5;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(3,0x800192C8);
		goto ZZ_191D4_F4;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(3,0x800192B4);
ZZ_191D4_E0:
	V0 = EMU_ReadU32(GP + 528); //+ 0x210
	if (V0)
	{
		V0 = -14;
		ZZ_CLOCKCYCLES(4,0x800198F8);
		goto ZZ_191D4_724;
	}
	V0 = -14;
	ZZ_CLOCKCYCLES(4,0x800192C4);
ZZ_191D4_F0:
	A0 = S2;
	ZZ_CLOCKCYCLES(1,0x800192C8);
ZZ_191D4_F4:
	A1 = 0xA9;
	A2 = R0;
	A3 = R0;
	S1 = 0x2;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S1); //+ 0x14
	RA = 0x800192E8; //ZZ_191D4_114
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(8,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_114:
	V1 = 0x22;
	if (V0 != V1)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(3,0x800193F4);
		goto ZZ_191D4_220;
	}
	A0 = S2;
	S0 = 0x80070000;
	S0 -= 12144;
	V0 = EMU_ReadU32(S0);
	if (!V0)
	{
		A1 = 0x4B;
		ZZ_CLOCKCYCLES(9,0x800193CC);
		goto ZZ_191D4_1F8;
	}
	A1 = 0x4B;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S1); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x8001932C; //ZZ_191D4_158
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(17,0x80031DF4);
	goto ZZ_31DF4;
ZZ_191D4_158:
	A0 = EMU_ReadU32(S0);
	A1 = 0x4B;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 20,S1); //+ 0x14
	S1 = V0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x80019358; //ZZ_191D4_184
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(11,0x80031DF4);
	goto ZZ_31DF4;
ZZ_191D4_184:
	V1 = EMU_ReadU32(S0);
	if (!V1)
	{
		S0 = V0;
		ZZ_CLOCKCYCLES(4,0x800193CC);
		goto ZZ_191D4_1F8;
	}
	S0 = V0;
	A0 = EMU_ReadS16(S1);
	A1 = EMU_ReadS16(S0);
	RA = 0x80019378; //ZZ_191D4_1A4
	ZZ_CLOCKCYCLES(8,0x80031974);
	goto ZZ_31974;
ZZ_191D4_1A4:
	V0 = (int32_t)V0 < 10;
	if (!V0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(3,0x800193D0);
		goto ZZ_191D4_1FC;
	}
	V0 = 0x10000;
	A0 = EMU_ReadS16(S1 + 4); //+ 0x4
	A1 = EMU_ReadS16(S0 + 4); //+ 0x4
	RA = 0x80019394; //ZZ_191D4_1C0
	ZZ_CLOCKCYCLES(7,0x80031974);
	goto ZZ_31974;
ZZ_191D4_1C0:
	V0 = (int32_t)V0 < 10;
	if (!V0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(3,0x800193D0);
		goto ZZ_191D4_1FC;
	}
	V0 = 0x10000;
	A1 = EMU_ReadS16(S0 + 2); //+ 0x2
	A0 = EMU_ReadS16(S1 + 2); //+ 0x2
	RA = 0x800193B0; //ZZ_191D4_1DC
	A1 += 100;
	ZZ_CLOCKCYCLES(7,0x80031974);
	goto ZZ_31974;
ZZ_191D4_1DC:
	V0 = (int32_t)V0 < 10;
	if (!V0)
	{
		V0 = 0x10000;
		ZZ_CLOCKCYCLES(3,0x800193D0);
		goto ZZ_191D4_1FC;
	}
	V0 = 0x10000;
	S5 = 0x80070000;
	S5 = EMU_ReadU32(S5 - 12152); //+ 0xFFFFD088
	ZZ_CLOCKCYCLES(7,0x800193E8);
	goto ZZ_191D4_214;
ZZ_191D4_1F8:
	V0 = 0x10000;
	ZZ_CLOCKCYCLES(1,0x800193D0);
ZZ_191D4_1FC:
	V0 |= 0x9000;
	S5 = R0;
	AT = 0x80070000;
	EMU_Write32(AT - 12148,V0); //+ 0xFFFFD08C
	AT = 0x80070000;
	EMU_Write32(AT - 12152,R0); //+ 0xFFFFD088
	ZZ_CLOCKCYCLES(6,0x800193E8);
ZZ_191D4_214:
	AT = 0x80070000;
	EMU_Write32(AT - 12144,S2); //+ 0xFFFFD090
	A0 = S2;
	ZZ_CLOCKCYCLES(3,0x800193F4);
ZZ_191D4_220:
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	S0 = 0x2;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019414; //ZZ_191D4_240
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(8,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_240:
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019434; //ZZ_191D4_260
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(8,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_260:
	V0 <<= 2;
	AT = 0x80070000;
	AT += V0;
	V0 = EMU_ReadU32(AT - 19364); //+ 0xFFFFB45C
	S1 = 0x80070000;
	S1 -= 19364;
	V0 &= 0x1;
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(9,0x800194B0);
		goto ZZ_191D4_2DC;
	}
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019474; //ZZ_191D4_2A0
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(16,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_2A0:
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019494; //ZZ_191D4_2C0
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(8,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_2C0:
	V0 <<= 2;
	V0 += S1;
	V0 = EMU_ReadU32(V0);
	V0 &= 0x2;
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(7,0x800194F8);
		goto ZZ_191D4_324;
	}
	A0 = S2;
	ZZ_CLOCKCYCLES(7,0x800194B0);
ZZ_191D4_2DC:
	A1 = 0xA9;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x800194CC; //ZZ_191D4_2F8
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(7,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_2F8:
	V1 = 0x22;
	if (V0 != V1)
	{
		V0 = -14;
		ZZ_CLOCKCYCLES(3,0x800198F8);
		goto ZZ_191D4_724;
	}
	V0 = -14;
	V0 = 0x80070000;
	V0 -= 12148;
	V1 = EMU_ReadU32(V0);
	A0 = 0x10000;
	A0 |= 0x9000;
	V1 += A0;
	EMU_Write32(V0,V1);
	ZZ_CLOCKCYCLES(11,0x800198F4);
	goto ZZ_191D4_720;
ZZ_191D4_324:
	A1 = 0xA9;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019514; //ZZ_191D4_340
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(7,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_340:
	if (!V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(2,0x80019568);
		goto ZZ_191D4_394;
	}
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x80019538; //ZZ_191D4_364
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(9,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_364:
	if ((int32_t)V0 <= 0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(2,0x80019580);
		goto ZZ_191D4_3AC;
	}
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S0); //+ 0x14
	RA = 0x8001955C; //ZZ_191D4_388
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(9,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_388:
	V0 = (int32_t)V0 < 5;
	if (!V0)
	{
		ZZ_CLOCKCYCLES(3,0x80019580);
		goto ZZ_191D4_3AC;
	}
	ZZ_CLOCKCYCLES(3,0x80019568);
ZZ_191D4_394:
	S1 = 0x80070000;
	S1 = EMU_ReadU32(S1 - 12888); //+ 0xFFFFCDA8
	EMU_Write32(GP + 528,S1); //+ 0x210
	S0 = 0x6;
	ZZ_CLOCKCYCLES(6,0x80019608);
	goto ZZ_191D4_434;
ZZ_191D4_3AC:
	V1 = 0x80070000;
	V1 = EMU_ReadU32(V1 - 12816); //+ 0xFFFFCDF0
	V0 = 0x2;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(5,0x800195A4);
		goto ZZ_191D4_3D0;
	}
	S1 = 0x80070000;
	S1 = EMU_ReadU32(S1 - 12812); //+ 0xFFFFCDF4
	ZZ_CLOCKCYCLES(9,0x800195AC);
	goto ZZ_191D4_3D8;
ZZ_191D4_3D0:
	S1 = 0x80070000;
	S1 = EMU_ReadU32(S1 - 12740); //+ 0xFFFFCE3C
	ZZ_CLOCKCYCLES(2,0x800195AC);
ZZ_191D4_3D8:
	if (S1)
	{
		S0 = 0x3;
		ZZ_CLOCKCYCLES(3,0x80019608);
		goto ZZ_191D4_434;
	}
	S0 = 0x3;
	S1 = R0;
	S0 = 0x80070000;
	S0 -= 12880;
	ZZ_CLOCKCYCLES(6,0x800195C4);
ZZ_191D4_3F0:
	A0 = S0;
	A1 = 0x80020000;
	A1 -= 28240;
	RA = 0x800195D8; //ZZ_191D4_404
	A2 = 0x80000;
	ZZ_CLOCKCYCLES(5,0x80018D08);
	goto ZZ_18D08;
ZZ_191D4_404:
	if (V0)
	{
		S1 += 1;
		ZZ_CLOCKCYCLES(2,0x800195F4);
		goto ZZ_191D4_420;
	}
	S1 += 1;
	V0 = (int32_t)S1 < 8;
	if (V0)
	{
		S0 += 8;
		ZZ_CLOCKCYCLES(5,0x800195C4);
		goto ZZ_191D4_3F0;
	}
	S0 += 8;
	V0 = -22;
	ZZ_CLOCKCYCLES(7,0x800198F8);
	goto ZZ_191D4_724;
ZZ_191D4_420:
	A0 = V0;
	RA = 0x80019600; //ZZ_191D4_42C
	A1 = R0;
	ZZ_CLOCKCYCLES(3,0x80019F40);
	goto ZZ_19F40;
ZZ_191D4_42C:
	ZZ_CLOCKCYCLES(2,0x80019580);
	goto ZZ_191D4_3AC;
ZZ_191D4_434:
	A0 = S1;
	A1 = S0 << 3;
	S7 = 0x80070000;
	S7 -= 12880;
	RA = 0x80019620; //ZZ_191D4_44C
	A1 += S7;
	ZZ_CLOCKCYCLES(6,0x80018AF0);
	goto ZZ_18AF0;
ZZ_191D4_44C:
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	V0 = 0x3;
	S4 = 0x2;
	EMU_Write32(S1 + 4,V0); //+ 0x4
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	RA = 0x8001964C; //ZZ_191D4_478
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(11,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_478:
	A0 = S1 + 32;
	A1 = R0;
	A2 = 0x20;
	V0 <<= 8;
	RA = 0x80019664; //ZZ_191D4_490
	EMU_Write32(S1 + 184,V0); //+ 0xB8
	ZZ_CLOCKCYCLES(6,0x800494CC);
	goto ZZ_494CC;
ZZ_191D4_490:
	A0 = S2;
	A1 = 0x4B;
	A2 = R0;
	A3 = 0x2;
	RA = 0x8001967C; //ZZ_191D4_4A8
	EMU_Write32(S1 + 240,S2); //+ 0xF0
	ZZ_CLOCKCYCLES(6,0x800325CC);
	goto ZZ_325CC;
ZZ_191D4_4A8:
	A0 = S2;
	A1 = 0xA4;
	A2 = R0;
	A3 = R0;
	V0 <<= 8;
	EMU_Write32(S1 + 248,V0); //+ 0xF8
	V0 = SP + 40;
	EMU_Write32(SP + 16,V0); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	EMU_Write32(SP + 24,R0); //+ 0x18
	EMU_Write32(SP + 28,R0); //+ 0x1C
	RA = 0x800196B0; //ZZ_191D4_4DC
	EMU_Write32(SP + 32,R0); //+ 0x20
	ZZ_CLOCKCYCLES(13,0x80031DF4);
	goto ZZ_31DF4;
ZZ_191D4_4DC:
	S3 = V0;
	if (S3)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(3,0x800196C0);
		goto ZZ_191D4_4EC;
	}
	A0 = S2;
	EMU_Write32(SP + 40,R0); //+ 0x28
	ZZ_CLOCKCYCLES(4,0x800196C0);
ZZ_191D4_4EC:
	A1 = 0xA9;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	RA = 0x800196DC; //ZZ_191D4_508
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(7,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_508:
	A0 = S2;
	A1 = 0xAA;
	A2 = R0;
	A3 = R0;
	S0 = V0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	RA = 0x80019700; //ZZ_191D4_52C
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(9,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_52C:
	V1 = 0x1;
	EMU_Write32(SP + 16,S3); //+ 0x10
	EMU_Write32(SP + 20,V1); //+ 0x14
	A3 = EMU_ReadU32(SP + 40); //+ 0x28
	A0 = S1;
	A1 = S0;
	RA = 0x80019720; //ZZ_191D4_54C
	A2 = V0;
	ZZ_CLOCKCYCLES(8,0x80019AB4);
	goto ZZ_19AB4;
ZZ_191D4_54C:
	S0 = V0;
	V0 = (int32_t)S0 < -254;
	if (V0)
	{
		A0 = S2;
		ZZ_CLOCKCYCLES(4,0x80019744);
		goto ZZ_191D4_570;
	}
	A0 = S2;
	A0 = S1;
	RA = 0x8001973C; //ZZ_191D4_568
	A1 = S7 + 64;
	ZZ_CLOCKCYCLES(7,0x80018AF0);
	goto ZZ_18AF0;
ZZ_191D4_568:
	V0 = S0;
	ZZ_CLOCKCYCLES(2,0x800198F8);
	goto ZZ_191D4_724;
ZZ_191D4_570:
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	RA = 0x80019760; //ZZ_191D4_58C
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(7,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_58C:
	A0 = S2;
	A1 = 0x9F;
	A2 = R0;
	A3 = R0;
	V1 = 0x80070000;
	V1 -= 19364;
	S0 = V0 << 2;
	S0 += V1;
	EMU_Write32(SP + 16,R0); //+ 0x10
	EMU_Write32(SP + 20,S4); //+ 0x14
	RA = 0x80019790; //ZZ_191D4_5BC
	EMU_Write32(SP + 24,R0); //+ 0x18
	ZZ_CLOCKCYCLES(12,0x800324E0);
	goto ZZ_324E0;
ZZ_191D4_5BC:
	V0 = EMU_ReadU32(S0);
	A0 = S1;
	A1 = R0;
	A2 = S1 + 96;
	V0 |= 0x1;
	EMU_Write32(S0,V0);
	RA = 0x800197B0; //ZZ_191D4_5DC
	EMU_Write32(S1 + 24,S6); //+ 0x18
	ZZ_CLOCKCYCLES(8,0x8001F29C);
	goto ZZ_1F29C;
ZZ_191D4_5DC:
	V0 = EMU_ReadU32(GP + 528); //+ 0x210
	if (S1 != V0)
	{
		ZZ_CLOCKCYCLES(4,0x80019838);
		goto ZZ_191D4_664;
	}
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12268); //+ 0xFFFFD014
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 + 30772); //+ 0x7834
	V0 = A0 << 1;
	V0 += A0;
	V0 <<= 3;
	V1 += V0;
	V0 = EMU_ReadU32(V1 + 488); //+ 0x1E8
	A0 = EMU_ReadU32(V1 + 492); //+ 0x1EC
	A1 = EMU_ReadU32(V1 + 496); //+ 0x1F0
	EMU_Write32(S1 + 96,V0); //+ 0x60
	EMU_Write32(S1 + 100,A0); //+ 0x64
	EMU_Write32(S1 + 104,A1); //+ 0x68
	V0 = EMU_ReadU32(GP + 528); //+ 0x210
	if (S1 != V0)
	{
		V0 = -1;
		ZZ_CLOCKCYCLES(22,0x80019838);
		goto ZZ_191D4_664;
	}
	V0 = -1;
	V1 = 0x80060000;
	V1 = EMU_ReadU32(V1 - 2424); //+ 0xFFFFF688
	if (V1 != V0)
	{
		A0 = S1;
		ZZ_CLOCKCYCLES(27,0x80019838);
		goto ZZ_191D4_664;
	}
	A0 = S1;
	AT = 0x80070000;
	EMU_Write32(AT - 12516,V1); //+ 0xFFFFCF1C
	A1 = 0x80060000;
	A1 += 3056;
	A2 = 0x1;
	RA = 0x80019838; //ZZ_191D4_664
	A3 = R0;
	ZZ_CLOCKCYCLES(34,0x8002F658);
	goto ZZ_2F658;
ZZ_191D4_664:
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0 + 4); //+ 0x4
	V0 = 0x300;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x80019868);
		goto ZZ_191D4_694;
	}
	A1 = 0x80070000;
	A1 -= 12848;
	RA = 0x80019868; //ZZ_191D4_694
	A0 = S1;
	ZZ_CLOCKCYCLES(12,0x80018AF0);
	goto ZZ_18AF0;
ZZ_191D4_694:
	V0 = EMU_ReadU32(S1 + 12); //+ 0xC
	V0 = EMU_ReadU32(V0 + 16); //+ 0x10
	V1 = EMU_ReadU32(V0);
	V0 = 0x22;
	if (V1 != V0)
	{
		ZZ_CLOCKCYCLES(8,0x800198EC);
		goto ZZ_191D4_718;
	}
	if (!S3)
	{
		V1 = 0x80000;
		ZZ_CLOCKCYCLES(10,0x800198A4);
		goto ZZ_191D4_6D0;
	}
	V1 = 0x80000;
	V0 = EMU_ReadU32(S3 + 4); //+ 0x4
	V0 &= V1;
	if (V0)
	{
		ZZ_CLOCKCYCLES(15,0x800198E4);
		goto ZZ_191D4_710;
	}
	ZZ_CLOCKCYCLES(15,0x800198A4);
ZZ_191D4_6D0:
	if (!S5)
	{
		ZZ_CLOCKCYCLES(2,0x800198BC);
		goto ZZ_191D4_6E8;
	}
	EMU_Write32(S1 + 132,S5); //+ 0x84
	EMU_Write32(S1 + 136,R0); //+ 0x88
	EMU_Write32(S5 + 136,S1); //+ 0x88
	ZZ_CLOCKCYCLES(6,0x800198C4);
	goto ZZ_191D4_6F0;
ZZ_191D4_6E8:
	EMU_Write32(S1 + 132,R0); //+ 0x84
	EMU_Write32(S1 + 136,R0); //+ 0x88
	ZZ_CLOCKCYCLES(2,0x800198C4);
ZZ_191D4_6F0:
	V0 = EMU_ReadU32(S1 + 100); //+ 0x64
	A0 = 0x80070000;
	A0 = EMU_ReadU32(A0 - 12148); //+ 0xFFFFD08C
	V1 = 0x10000;
	V1 |= 0x9000;
	V0 += V1;
	V0 = V0 - A0;
	EMU_Write32(S1 + 100,V0); //+ 0x64
	ZZ_CLOCKCYCLES(8,0x800198E4);
ZZ_191D4_710:
	AT = 0x80070000;
	EMU_Write32(AT - 12152,S1); //+ 0xFFFFD088
	ZZ_CLOCKCYCLES(2,0x800198EC);
ZZ_191D4_718:
	V0 = S1;
	ZZ_CLOCKCYCLES(2,0x800198F8);
	goto ZZ_191D4_724;
ZZ_191D4_720:
	V0 = -14;
	ZZ_CLOCKCYCLES(1,0x800198F8);
ZZ_191D4_724:
	RA = EMU_ReadU32(SP + 88); //+ 0x58
	S7 = EMU_ReadU32(SP + 84); //+ 0x54
	S6 = EMU_ReadU32(SP + 80); //+ 0x50
	S5 = EMU_ReadU32(SP + 76); //+ 0x4C
	S4 = EMU_ReadU32(SP + 72); //+ 0x48
	S3 = EMU_ReadU32(SP + 68); //+ 0x44
	S2 = EMU_ReadU32(SP + 64); //+ 0x40
	S1 = EMU_ReadU32(SP + 60); //+ 0x3C
	S0 = EMU_ReadU32(SP + 56); //+ 0x38
	SP += 96;
	ZZ_JUMPREGISTER_BEGIN(RA);
	ZZ_CLOCKCYCLES_JR(12);
	ZZ_JUMPREGISTER(0x8001A484,ZZ_1A374_110);
	ZZ_JUMPREGISTER_END();
#endif
ZZ_MARK_TARGET(0x800191D4,ZZ_191D4);
ZZ_MARK(0x800191D8);
ZZ_MARK(0x800191DC);
ZZ_MARK(0x800191E0);
ZZ_MARK(0x800191E4);
ZZ_MARK(0x800191E8);
ZZ_MARK(0x800191EC);
ZZ_MARK(0x800191F0);
ZZ_MARK(0x800191F4);
ZZ_MARK(0x800191F8);
ZZ_MARK(0x800191FC);
ZZ_MARK(0x80019200);
ZZ_MARK(0x80019204);
ZZ_MARK(0x80019208);
ZZ_MARK(0x8001920C);
ZZ_MARK(0x80019210);
ZZ_MARK(0x80019214);
ZZ_MARK(0x80019218);
ZZ_MARK(0x8001921C);
ZZ_MARK(0x80019220);
ZZ_MARK(0x80019224);
ZZ_MARK(0x80019228);
ZZ_MARK(0x8001922C);
ZZ_MARK(0x80019230);
ZZ_MARK(0x80019234);
ZZ_MARK_TARGET(0x80019238,ZZ_191D4_64);
ZZ_MARK(0x8001923C);
ZZ_MARK(0x80019240);
ZZ_MARK(0x80019244);
ZZ_MARK(0x80019248);
ZZ_MARK(0x8001924C);
ZZ_MARK(0x80019250);
ZZ_MARK(0x80019254);
ZZ_MARK(0x80019258);
ZZ_MARK(0x8001925C);
ZZ_MARK_TARGET(0x80019260,ZZ_191D4_8C);
ZZ_MARK(0x80019264);
ZZ_MARK(0x80019268);
ZZ_MARK(0x8001926C);
ZZ_MARK(0x80019270);
ZZ_MARK(0x80019274);
ZZ_MARK(0x80019278);
ZZ_MARK(0x8001927C);
ZZ_MARK(0x80019280);
ZZ_MARK_TARGET(0x80019284,ZZ_191D4_B0);
ZZ_MARK(0x80019288);
ZZ_MARK(0x8001928C);
ZZ_MARK(0x80019290);
ZZ_MARK(0x80019294);
ZZ_MARK(0x80019298);
ZZ_MARK(0x8001929C);
ZZ_MARK(0x800192A0);
ZZ_MARK(0x800192A4);
ZZ_MARK_TARGET(0x800192A8,ZZ_191D4_D4);
ZZ_MARK(0x800192AC);
ZZ_MARK(0x800192B0);
ZZ_MARK_TARGET(0x800192B4,ZZ_191D4_E0);
ZZ_MARK(0x800192B8);
ZZ_MARK(0x800192BC);
ZZ_MARK(0x800192C0);
ZZ_MARK_TARGET(0x800192C4,ZZ_191D4_F0);
ZZ_MARK_TARGET(0x800192C8,ZZ_191D4_F4);
ZZ_MARK(0x800192CC);
ZZ_MARK(0x800192D0);
ZZ_MARK(0x800192D4);
ZZ_MARK(0x800192D8);
ZZ_MARK(0x800192DC);
ZZ_MARK(0x800192E0);
ZZ_MARK(0x800192E4);
ZZ_MARK_TARGET(0x800192E8,ZZ_191D4_114);
ZZ_MARK(0x800192EC);
ZZ_MARK(0x800192F0);
ZZ_MARK(0x800192F4);
ZZ_MARK(0x800192F8);
ZZ_MARK(0x800192FC);
ZZ_MARK(0x80019300);
ZZ_MARK(0x80019304);
ZZ_MARK(0x80019308);
ZZ_MARK(0x8001930C);
ZZ_MARK(0x80019310);
ZZ_MARK(0x80019314);
ZZ_MARK(0x80019318);
ZZ_MARK(0x8001931C);
ZZ_MARK(0x80019320);
ZZ_MARK(0x80019324);
ZZ_MARK(0x80019328);
ZZ_MARK_TARGET(0x8001932C,ZZ_191D4_158);
ZZ_MARK(0x80019330);
ZZ_MARK(0x80019334);
ZZ_MARK(0x80019338);
ZZ_MARK(0x8001933C);
ZZ_MARK(0x80019340);
ZZ_MARK(0x80019344);
ZZ_MARK(0x80019348);
ZZ_MARK(0x8001934C);
ZZ_MARK(0x80019350);
ZZ_MARK(0x80019354);
ZZ_MARK_TARGET(0x80019358,ZZ_191D4_184);
ZZ_MARK(0x8001935C);
ZZ_MARK(0x80019360);
ZZ_MARK(0x80019364);
ZZ_MARK(0x80019368);
ZZ_MARK(0x8001936C);
ZZ_MARK(0x80019370);
ZZ_MARK(0x80019374);
ZZ_MARK_TARGET(0x80019378,ZZ_191D4_1A4);
ZZ_MARK(0x8001937C);
ZZ_MARK(0x80019380);
ZZ_MARK(0x80019384);
ZZ_MARK(0x80019388);
ZZ_MARK(0x8001938C);
ZZ_MARK(0x80019390);
ZZ_MARK_TARGET(0x80019394,ZZ_191D4_1C0);
ZZ_MARK(0x80019398);
ZZ_MARK(0x8001939C);
ZZ_MARK(0x800193A0);
ZZ_MARK(0x800193A4);
ZZ_MARK(0x800193A8);
ZZ_MARK(0x800193AC);
ZZ_MARK_TARGET(0x800193B0,ZZ_191D4_1DC);
ZZ_MARK(0x800193B4);
ZZ_MARK(0x800193B8);
ZZ_MARK(0x800193BC);
ZZ_MARK(0x800193C0);
ZZ_MARK(0x800193C4);
ZZ_MARK(0x800193C8);
ZZ_MARK_TARGET(0x800193CC,ZZ_191D4_1F8);
ZZ_MARK_TARGET(0x800193D0,ZZ_191D4_1FC);
ZZ_MARK(0x800193D4);
ZZ_MARK(0x800193D8);
ZZ_MARK(0x800193DC);
ZZ_MARK(0x800193E0);
ZZ_MARK(0x800193E4);
ZZ_MARK_TARGET(0x800193E8,ZZ_191D4_214);
ZZ_MARK(0x800193EC);
ZZ_MARK(0x800193F0);
ZZ_MARK_TARGET(0x800193F4,ZZ_191D4_220);
ZZ_MARK(0x800193F8);
ZZ_MARK(0x800193FC);
ZZ_MARK(0x80019400);
ZZ_MARK(0x80019404);
ZZ_MARK(0x80019408);
ZZ_MARK(0x8001940C);
ZZ_MARK(0x80019410);
ZZ_MARK_TARGET(0x80019414,ZZ_191D4_240);
ZZ_MARK(0x80019418);
ZZ_MARK(0x8001941C);
ZZ_MARK(0x80019420);
ZZ_MARK(0x80019424);
ZZ_MARK(0x80019428);
ZZ_MARK(0x8001942C);
ZZ_MARK(0x80019430);
ZZ_MARK_TARGET(0x80019434,ZZ_191D4_260);
ZZ_MARK(0x80019438);
ZZ_MARK(0x8001943C);
ZZ_MARK(0x80019440);
ZZ_MARK(0x80019444);
ZZ_MARK(0x80019448);
ZZ_MARK(0x8001944C);
ZZ_MARK(0x80019450);
ZZ_MARK(0x80019454);
ZZ_MARK(0x80019458);
ZZ_MARK(0x8001945C);
ZZ_MARK(0x80019460);
ZZ_MARK(0x80019464);
ZZ_MARK(0x80019468);
ZZ_MARK(0x8001946C);
ZZ_MARK(0x80019470);
ZZ_MARK_TARGET(0x80019474,ZZ_191D4_2A0);
ZZ_MARK(0x80019478);
ZZ_MARK(0x8001947C);
ZZ_MARK(0x80019480);
ZZ_MARK(0x80019484);
ZZ_MARK(0x80019488);
ZZ_MARK(0x8001948C);
ZZ_MARK(0x80019490);
ZZ_MARK_TARGET(0x80019494,ZZ_191D4_2C0);
ZZ_MARK(0x80019498);
ZZ_MARK(0x8001949C);
ZZ_MARK(0x800194A0);
ZZ_MARK(0x800194A4);
ZZ_MARK(0x800194A8);
ZZ_MARK(0x800194AC);
ZZ_MARK_TARGET(0x800194B0,ZZ_191D4_2DC);
ZZ_MARK(0x800194B4);
ZZ_MARK(0x800194B8);
ZZ_MARK(0x800194BC);
ZZ_MARK(0x800194C0);
ZZ_MARK(0x800194C4);
ZZ_MARK(0x800194C8);
ZZ_MARK_TARGET(0x800194CC,ZZ_191D4_2F8);
ZZ_MARK(0x800194D0);
ZZ_MARK(0x800194D4);
ZZ_MARK(0x800194D8);
ZZ_MARK(0x800194DC);
ZZ_MARK(0x800194E0);
ZZ_MARK(0x800194E4);
ZZ_MARK(0x800194E8);
ZZ_MARK(0x800194EC);
ZZ_MARK(0x800194F0);
ZZ_MARK(0x800194F4);
ZZ_MARK_TARGET(0x800194F8,ZZ_191D4_324);
ZZ_MARK(0x800194FC);
ZZ_MARK(0x80019500);
ZZ_MARK(0x80019504);
ZZ_MARK(0x80019508);
ZZ_MARK(0x8001950C);
ZZ_MARK(0x80019510);
ZZ_MARK_TARGET(0x80019514,ZZ_191D4_340);
ZZ_MARK(0x80019518);
ZZ_MARK(0x8001951C);
ZZ_MARK(0x80019520);
ZZ_MARK(0x80019524);
ZZ_MARK(0x80019528);
ZZ_MARK(0x8001952C);
ZZ_MARK(0x80019530);
ZZ_MARK(0x80019534);
ZZ_MARK_TARGET(0x80019538,ZZ_191D4_364);
ZZ_MARK(0x8001953C);
ZZ_MARK(0x80019540);
ZZ_MARK(0x80019544);
ZZ_MARK(0x80019548);
ZZ_MARK(0x8001954C);
ZZ_MARK(0x80019550);
ZZ_MARK(0x80019554);
ZZ_MARK(0x80019558);
ZZ_MARK_TARGET(0x8001955C,ZZ_191D4_388);
ZZ_MARK(0x80019560);
ZZ_MARK(0x80019564);
ZZ_MARK_TARGET(0x80019568,ZZ_191D4_394);
ZZ_MARK(0x8001956C);
ZZ_MARK(0x80019570);
ZZ_MARK(0x80019574);
ZZ_MARK(0x80019578);
ZZ_MARK(0x8001957C);
ZZ_MARK_TARGET(0x80019580,ZZ_191D4_3AC);
ZZ_MARK(0x80019584);
ZZ_MARK(0x80019588);
ZZ_MARK(0x8001958C);
ZZ_MARK(0x80019590);
ZZ_MARK(0x80019594);
ZZ_MARK(0x80019598);
ZZ_MARK(0x8001959C);
ZZ_MARK(0x800195A0);
ZZ_MARK_TARGET(0x800195A4,ZZ_191D4_3D0);
ZZ_MARK(0x800195A8);
ZZ_MARK_TARGET(0x800195AC,ZZ_191D4_3D8);
ZZ_MARK(0x800195B0);
ZZ_MARK(0x800195B4);
ZZ_MARK(0x800195B8);
ZZ_MARK(0x800195BC);
ZZ_MARK(0x800195C0);
ZZ_MARK_TARGET(0x800195C4,ZZ_191D4_3F0);
ZZ_MARK(0x800195C8);
ZZ_MARK(0x800195CC);
ZZ_MARK(0x800195D0);
ZZ_MARK(0x800195D4);
ZZ_MARK_TARGET(0x800195D8,ZZ_191D4_404);
ZZ_MARK(0x800195DC);
ZZ_MARK(0x800195E0);
ZZ_MARK(0x800195E4);
ZZ_MARK(0x800195E8);
ZZ_MARK(0x800195EC);
ZZ_MARK(0x800195F0);
ZZ_MARK_TARGET(0x800195F4,ZZ_191D4_420);
ZZ_MARK(0x800195F8);
ZZ_MARK(0x800195FC);
ZZ_MARK_TARGET(0x80019600,ZZ_191D4_42C);
ZZ_MARK(0x80019604);
ZZ_MARK_TARGET(0x80019608,ZZ_191D4_434);
ZZ_MARK(0x8001960C);
ZZ_MARK(0x80019610);
ZZ_MARK(0x80019614);
ZZ_MARK(0x80019618);
ZZ_MARK(0x8001961C);
ZZ_MARK_TARGET(0x80019620,ZZ_191D4_44C);
ZZ_MARK(0x80019624);
ZZ_MARK(0x80019628);
ZZ_MARK(0x8001962C);
ZZ_MARK(0x80019630);
ZZ_MARK(0x80019634);
ZZ_MARK(0x80019638);
ZZ_MARK(0x8001963C);
ZZ_MARK(0x80019640);
ZZ_MARK(0x80019644);
ZZ_MARK(0x80019648);
ZZ_MARK_TARGET(0x8001964C,ZZ_191D4_478);
ZZ_MARK(0x80019650);
ZZ_MARK(0x80019654);
ZZ_MARK(0x80019658);
ZZ_MARK(0x8001965C);
ZZ_MARK(0x80019660);
ZZ_MARK_TARGET(0x80019664,ZZ_191D4_490);
ZZ_MARK(0x80019668);
ZZ_MARK(0x8001966C);
ZZ_MARK(0x80019670);
ZZ_MARK(0x80019674);
ZZ_MARK(0x80019678);
ZZ_MARK_TARGET(0x8001967C,ZZ_191D4_4A8);
ZZ_MARK(0x80019680);
ZZ_MARK(0x80019684);
ZZ_MARK(0x80019688);
ZZ_MARK(0x8001968C);
ZZ_MARK(0x80019690);
ZZ_MARK(0x80019694);
ZZ_MARK(0x80019698);
ZZ_MARK(0x8001969C);
ZZ_MARK(0x800196A0);
ZZ_MARK(0x800196A4);
ZZ_MARK(0x800196A8);
ZZ_MARK(0x800196AC);
ZZ_MARK_TARGET(0x800196B0,ZZ_191D4_4DC);
ZZ_MARK(0x800196B4);
ZZ_MARK(0x800196B8);
ZZ_MARK(0x800196BC);
ZZ_MARK_TARGET(0x800196C0,ZZ_191D4_4EC);
ZZ_MARK(0x800196C4);
ZZ_MARK(0x800196C8);
ZZ_MARK(0x800196CC);
ZZ_MARK(0x800196D0);
ZZ_MARK(0x800196D4);
ZZ_MARK(0x800196D8);
ZZ_MARK_TARGET(0x800196DC,ZZ_191D4_508);
ZZ_MARK(0x800196E0);
ZZ_MARK(0x800196E4);
ZZ_MARK(0x800196E8);
ZZ_MARK(0x800196EC);
ZZ_MARK(0x800196F0);
ZZ_MARK(0x800196F4);
ZZ_MARK(0x800196F8);
ZZ_MARK(0x800196FC);
ZZ_MARK_TARGET(0x80019700,ZZ_191D4_52C);
ZZ_MARK(0x80019704);
ZZ_MARK(0x80019708);
ZZ_MARK(0x8001970C);
ZZ_MARK(0x80019710);
ZZ_MARK(0x80019714);
ZZ_MARK(0x80019718);
ZZ_MARK(0x8001971C);
ZZ_MARK_TARGET(0x80019720,ZZ_191D4_54C);
ZZ_MARK(0x80019724);
ZZ_MARK(0x80019728);
ZZ_MARK(0x8001972C);
ZZ_MARK(0x80019730);
ZZ_MARK(0x80019734);
ZZ_MARK(0x80019738);
ZZ_MARK_TARGET(0x8001973C,ZZ_191D4_568);
ZZ_MARK(0x80019740);
ZZ_MARK_TARGET(0x80019744,ZZ_191D4_570);
ZZ_MARK(0x80019748);
ZZ_MARK(0x8001974C);
ZZ_MARK(0x80019750);
ZZ_MARK(0x80019754);
ZZ_MARK(0x80019758);
ZZ_MARK(0x8001975C);
ZZ_MARK_TARGET(0x80019760,ZZ_191D4_58C);
ZZ_MARK(0x80019764);
ZZ_MARK(0x80019768);
ZZ_MARK(0x8001976C);
ZZ_MARK(0x80019770);
ZZ_MARK(0x80019774);
ZZ_MARK(0x80019778);
ZZ_MARK(0x8001977C);
ZZ_MARK(0x80019780);
ZZ_MARK(0x80019784);
ZZ_MARK(0x80019788);
ZZ_MARK(0x8001978C);
ZZ_MARK_TARGET(0x80019790,ZZ_191D4_5BC);
ZZ_MARK(0x80019794);
ZZ_MARK(0x80019798);
ZZ_MARK(0x8001979C);
ZZ_MARK(0x800197A0);
ZZ_MARK(0x800197A4);
ZZ_MARK(0x800197A8);
ZZ_MARK(0x800197AC);
ZZ_MARK_TARGET(0x800197B0,ZZ_191D4_5DC);
ZZ_MARK(0x800197B4);
ZZ_MARK(0x800197B8);
ZZ_MARK(0x800197BC);
ZZ_MARK(0x800197C0);
ZZ_MARK(0x800197C4);
ZZ_MARK(0x800197C8);
ZZ_MARK(0x800197CC);
ZZ_MARK(0x800197D0);
ZZ_MARK(0x800197D4);
ZZ_MARK(0x800197D8);
ZZ_MARK(0x800197DC);
ZZ_MARK(0x800197E0);
ZZ_MARK(0x800197E4);
ZZ_MARK(0x800197E8);
ZZ_MARK(0x800197EC);
ZZ_MARK(0x800197F0);
ZZ_MARK(0x800197F4);
ZZ_MARK(0x800197F8);
ZZ_MARK(0x800197FC);
ZZ_MARK(0x80019800);
ZZ_MARK(0x80019804);
ZZ_MARK(0x80019808);
ZZ_MARK(0x8001980C);
ZZ_MARK(0x80019810);
ZZ_MARK(0x80019814);
ZZ_MARK(0x80019818);
ZZ_MARK(0x8001981C);
ZZ_MARK(0x80019820);
ZZ_MARK(0x80019824);
ZZ_MARK(0x80019828);
ZZ_MARK(0x8001982C);
ZZ_MARK(0x80019830);
ZZ_MARK(0x80019834);
ZZ_MARK_TARGET(0x80019838,ZZ_191D4_664);
ZZ_MARK(0x8001983C);
ZZ_MARK(0x80019840);
ZZ_MARK(0x80019844);
ZZ_MARK(0x80019848);
ZZ_MARK(0x8001984C);
ZZ_MARK(0x80019850);
ZZ_MARK(0x80019854);
ZZ_MARK(0x80019858);
ZZ_MARK(0x8001985C);
ZZ_MARK(0x80019860);
ZZ_MARK(0x80019864);
ZZ_MARK_TARGET(0x80019868,ZZ_191D4_694);
ZZ_MARK(0x8001986C);
ZZ_MARK(0x80019870);
ZZ_MARK(0x80019874);
ZZ_MARK(0x80019878);
ZZ_MARK(0x8001987C);
ZZ_MARK(0x80019880);
ZZ_MARK(0x80019884);
ZZ_MARK(0x80019888);
ZZ_MARK(0x8001988C);
ZZ_MARK(0x80019890);
ZZ_MARK(0x80019894);
ZZ_MARK(0x80019898);
ZZ_MARK(0x8001989C);
ZZ_MARK(0x800198A0);
ZZ_MARK_TARGET(0x800198A4,ZZ_191D4_6D0);
ZZ_MARK(0x800198A8);
ZZ_MARK(0x800198AC);
ZZ_MARK(0x800198B0);
ZZ_MARK(0x800198B4);
ZZ_MARK(0x800198B8);
ZZ_MARK_TARGET(0x800198BC,ZZ_191D4_6E8);
ZZ_MARK(0x800198C0);
ZZ_MARK_TARGET(0x800198C4,ZZ_191D4_6F0);
ZZ_MARK(0x800198C8);
ZZ_MARK(0x800198CC);
ZZ_MARK(0x800198D0);
ZZ_MARK(0x800198D4);
ZZ_MARK(0x800198D8);
ZZ_MARK(0x800198DC);
ZZ_MARK(0x800198E0);
ZZ_MARK_TARGET(0x800198E4,ZZ_191D4_710);
ZZ_MARK(0x800198E8);
ZZ_MARK_TARGET(0x800198EC,ZZ_191D4_718);
ZZ_MARK(0x800198F0);
ZZ_MARK_TARGET(0x800198F4,ZZ_191D4_720);
ZZ_MARK_TARGET(0x800198F8,ZZ_191D4_724);
ZZ_MARK(0x800198FC);
ZZ_MARK(0x80019900);
ZZ_MARK(0x80019904);
ZZ_MARK(0x80019908);
ZZ_MARK(0x8001990C);
ZZ_MARK(0x80019910);
ZZ_MARK(0x80019914);
ZZ_MARK(0x80019918);
ZZ_MARK(0x8001991C);
ZZ_MARK(0x80019920);
ZZ_MARK(0x80019924);
